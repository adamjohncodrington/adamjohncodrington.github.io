{"version":3,"sources":["resources/recipes sync /^/.//.*/.jpg$","resources/recipes/baked-beans.jpg","resources/recipes/banana-cake.jpg","resources/recipes/bang-bang-cauliflower.jpg","resources/recipes/blueberry-pancakes.jpg","resources/recipes/bolognese.jpg","resources/recipes/brownies.jpg","resources/recipes/carbonara.jpg","resources/recipes/crumble.jpg","resources/recipes/flapjacks.jpg","resources/recipes/kale-crispy.jpg","resources/recipes/lasagne.jpg","resources/recipes/mashed-potato.jpg","resources/recipes/piri-piri.jpg","resources/recipes/porridge.jpg","resources/recipes/potato-salad.jpg","resources/recipes/ratatouille.jpg","resources/recipes/rogan-josh.jpg","resources/recipes/shepherds-pie.jpg","resources/svg sync /^/.//.*/.svg$","resources/svg/artist.svg","resources/svg/book.svg","resources/svg/brain.svg","resources/svg/cake.svg","resources/svg/camera.svg","resources/svg/city.svg","resources/svg/flag.svg","resources/svg/map_pin.svg","resources/svg/masks.svg","resources/svg/microphone.svg","resources/svg/notepad.svg","resources/svg/palm_tree.svg","resources/svg/peace_sign.svg","resources/svg/people.svg","resources/svg/roller_coaster.svg","resources/svg/stadium.svg","resources/svg/stars.svg","resources/svg/tent.svg","resources/svg/theatre.svg","resources/svg/town_hall.svg","resources/svg/travel.svg","resources/svg/veg_bowl.svg","resources/svg/vinyl.svg","resources/travel sync /^/.//oslo_.*/.jpg$","resources/travel/oslo_1.jpg","resources/travel/oslo_2.jpg","resources/travel/oslo_3.jpg","resources/travel/oslo_4.jpg","resources/vinyl sync /^/.//.*/.jpg$","resources/vinyl/1975-the_a-brief-inquiry-into-online-relationships.jpg","resources/vinyl/adele_19.jpg","resources/vinyl/allie-x_super-sunset.jpg","resources/vinyl/amy-winehouse_back-to-black.jpg","resources/vinyl/arctic-monkeys_favourite-worst-nightmare.jpg","resources/vinyl/ariana-grande_thank-u-next.jpg","resources/vinyl/banks_goddess.jpg","resources/vinyl/banks_iii.jpg","resources/vinyl/ben-howard_every-kingdom.jpg","resources/vinyl/beyonce_lemonade.jpg","resources/vinyl/caribou_our-love.jpg","resources/vinyl/charli-xcx_how-im-feeling-now.jpg","resources/vinyl/dua-lipa_future-nostalgia.jpg","resources/vinyl/ellie-goulding_halcyon.jpg","resources/vinyl/fka-twigs_magdalene.jpg","resources/vinyl/florence-and-the-machine_lungs.jpg","resources/vinyl/george-fitzgerald_all-that-must-be.jpg","resources/vinyl/grimes_art-angels.jpg","resources/vinyl/haim_women-in-music-pt-iii.jpg","resources/vinyl/jon-hopkins_singularity.jpg","resources/vinyl/kate-nash_made-of-bricks.jpg","resources/vinyl/katy-perry_one-of-the-boys.jpg","resources/vinyl/kim-petras_clarity.jpg","resources/vinyl/lady-gaga_born-this-way.jpg","resources/vinyl/lana-del-rey_born-to-die.jpg","resources/vinyl/lane-8_rise.jpg","resources/vinyl/lany_malibu-nights.jpg","resources/vinyl/lennon-stella_three-two-one.jpg","resources/vinyl/leon_leon.jpg","resources/vinyl/lissie_catching-a-tiger.jpg","resources/vinyl/lorde_pure-heroine.jpg","resources/vinyl/marina_electra-heart.jpg","resources/vinyl/muna_about-u.jpg","resources/vinyl/natalia-kills_perfectionist.jpg","resources/vinyl/panic-at-the-disco_a-fever-you-cant-sweat-out.jpg","resources/vinyl/paramore_riot.jpg","resources/vinyl/pvris_all-we-know-of-heaven-all-we-need-of-hell.jpg","resources/vinyl/rihanna_rated-r.jpg","resources/vinyl/ryn-weaver_the-fool.jpg","resources/vinyl/sophie_oil-of-every-pearls-uninsides.jpg","resources/vinyl/sufjan-stevens_carrie-and-lowell.jpg","resources/vinyl/taylor-swift_1989.jpg","resources/vinyl/tourist_u.jpg","resources/vinyl/troye-sivan_bloom.jpg","primitives/Lists.ts","primitives/Flex.ts","styles/breakpoints.ts","styles/css.ts","styles/colors.ts","styles/font-sizes.ts","styles/GlobalStyle.ts","styles/theme.ts","primitives/Grid.ts","primitives/Headings.ts","primitives/RouterLink.ts","primitives/Link.ts","primitives/SquareImage.tsx","components/NavBar/index.tsx","utils/basic/moveTheSuffixToPrefix.ts","utils/basic/arrayToString.ts","@constants/actors.ts","@constants/diets.ts","@constants/festivals.ts","@constants/friends.ts","@constants/locations/argentina.ts","@constants/locations/austria.ts","@constants/locations/barbados.ts","@constants/locations/belgium.ts","@constants/locations/belize.ts","@constants/locations/brazil.ts","@constants/locations/canada.ts","@constants/locations/costa-rica.ts","@constants/locations/croatia.ts","@constants/locations/cuba.ts","@constants/locations/cyprus.ts","@constants/locations/czech-republic.ts","@constants/locations/denmark.ts","@constants/locations/ecuador.ts","@constants/locations/egypt.ts","@constants/locations/france.ts","@constants/locations/germany.ts","@constants/locations/greece.ts","@constants/locations/hungary.ts","@constants/locations/ireland.ts","@constants/locations/italy.ts","@constants/locations/laos.ts","@constants/locations/netherlands.ts","@constants/locations/norway.ts","@constants/locations/peru.ts","@constants/locations/poland.ts","@constants/locations/portugal.ts","@constants/locations/spain.ts","@constants/locations/sweden.ts","@constants/locations/thailand.ts","@constants/locations/uganda.ts","@constants/locations/united-arab-emirates.ts","@constants/locations/united-kingdom.ts","@constants/locations/united-states.ts","@constants/locations/zimbabwe.ts","@constants/locations/index.ts","@constants/locations/australia.ts","@constants/locations/bolivia.ts","@constants/locations/colombia.ts","@constants/locations/indonesia.ts","@constants/locations/japan.ts","@constants/locations/mexico.ts","@constants/locations/new-zealand.ts","@constants/locations/phillipines.ts","@constants/locations/tanzania.ts","@constants/measurements.ts","resources/recipes/index.ts","webpack:///./src/resources/svg/microphone.svg?4464","webpack:///./src/resources/svg/masks.svg?55d0","webpack:///./src/resources/svg/vinyl.svg?632a","webpack:///./src/resources/svg/travel.svg?d332","webpack:///./src/resources/svg/veg_bowl.svg?4cdc","resources/svg/index.ts","resources/travel/index.ts","resources/vinyl/index.ts","@constants/musicians/with-albums.ts","@constants/musicians/index.ts","@constants/music-venues.ts","@constants/ingredients/baking/flour.ts","@constants/ingredients/baking/sugar.ts","@constants/ingredients/baking/syrups.ts","@constants/ingredients/baking/index.ts","@constants/ingredients/carbs/pasta.ts","@constants/ingredients/carbs/rice.ts","@constants/ingredients/carbs/index.ts","@constants/ingredients/carbs/bread.ts","@constants/ingredients/dairy/milk.ts","@constants/ingredients/dairy/index.ts","@constants/ingredients/fruit/dried-fruit.ts","@constants/ingredients/fruit/fresh-fruit.ts","@constants/ingredients/fruit/frozen-fruit.ts","@constants/ingredients/fruit/juice.ts","@constants/ingredients/fruit/index.ts","@constants/ingredients/herbs/dried-herbs.ts","@constants/ingredients/herbs/fresh-herbs.ts","@constants/ingredients/herbs/index.ts","@constants/ingredients/protein/beans.ts","@constants/ingredients/protein/seitan.ts","@constants/ingredients/protein/index.ts","@constants/ingredients/seasoning/dried-seasoning.ts","@constants/ingredients/seasoning/oils.ts","@constants/unicode.ts","@constants/ingredients/seasoning/pastes.ts","@constants/ingredients/seasoning/salt.ts","@constants/ingredients/seasoning/sauces.ts","@constants/ingredients/seasoning/vinegars.ts","@constants/ingredients/seasoning/index.ts","@constants/ingredients/nuts-seeds/nuts.ts","@constants/ingredients/nuts-seeds/seeds.ts","@constants/ingredients/nuts-seeds/index.ts","@constants/ingredients/veg/canned-veg.ts","@constants/ingredients/veg/fresh-veg.ts","@constants/ingredients/veg/frozen-veg.ts","@constants/ingredients/veg/index.ts","@constants/ingredients/index.ts","@constants/page-sections.ts","@constants/plays.ts","@constants/theatre-venues.ts","@constants/ticket-types.ts","@constants/index.ts","utils/basic/dates-to-strings.ts","utils/basic/decimalToFractionString.ts","utils/basic/isInFuture.ts","utils/basic/numberToCurrencyString.ts","utils/recipe-costs/calculateIngredientCost.ts","utils/recipe-costs/convertIngredientQuantity.ts","utils/concatenateQuantityAndMeasurement.ts","utils/recipe-costs/calculateRecipeCost.ts","utils/recipe-costs/console-logs.ts","utils/useMediaQueries.ts","utils/generateIngredientListItem.ts","utils/getItemCounts.ts","utils/recipeMethodEntries.ts","utils/formatCountedListItems.ts","components/Disclosure/styles.ts","components/Disclosure/index.tsx","components/PageSectionHeader/styles.tsx","components/PageSectionHeader/index.tsx","components/CountedListItem/styles.tsx","components/CountedListItem/index.tsx","components/RoundedSymbol/index.tsx","components/styles.ts","components/EventCard/styles.tsx","components/EventCard/index.tsx","components/GigCard/index.tsx","utils/getCountdownText.ts","utils/daysToGo.ts","components/List/index.tsx","components/RecipeCard/factory.ts","components/RecipeCard/styles.ts","components/RecipeCard/index.tsx","utils/getIngredientsHeader.ts","components/TheatreCard/index.tsx","components/TravelCard/index.tsx","components/VinylCard/index.tsx","components/PageSectionPanel/styles.tsx","components/PageSectionPanel/index.tsx","components/PageSection/index.tsx","components/PageSectionsLayout/index.tsx","utils/basic/replaceSpacesWithDashes.ts","components/PageHeader/index.tsx","pages/gigs/data/gigs-2006.ts","pages/gigs/data/gigs-2007.ts","pages/gigs/data/gigs-2008.ts","pages/gigs/data/gigs-2009.ts","pages/gigs/data/gigs-2010.ts","pages/gigs/data/gigs-2011.ts","pages/gigs/data/gigs-2012.ts","pages/gigs/data/gigs-2013.ts","pages/gigs/data/gigs-2014.ts","pages/gigs/data/gigs-2015.ts","pages/gigs/data/gigs-2016.ts","pages/gigs/data/gigs-2017.ts","pages/gigs/data/gigs-2018.ts","pages/gigs/data/gigs-2019.ts","pages/gigs/data/gigs-2020.ts","pages/gigs/data/gigs-2021.ts","pages/gigs/data/index.ts","pages/gigs/factory/favourites.ts","pages/gigs/factory/musicians.ts","pages/gigs/factory/bucket-list.ts","pages/gigs/factory/friends.ts","pages/gigs/factory/festivals.ts","pages/gigs/factory/up-next.ts","pages/gigs/factory/page-count.ts","pages/gigs/factory/venues.ts","pages/gigs/factory/index.ts","pages/gigs/sections.ts","pages/gigs/index.ts","pages/recipes/data/mains/bolognese.ts","pages/recipes/data/mains/carbonara.ts","pages/recipes/data/mains/lasagne.ts","pages/recipes/data/mains/risotto.ts","pages/recipes/data/mains/rogan-josh.ts","pages/recipes/data/mains/shepherds-pie.ts","pages/recipes/data/mains/sweet-and-sour.ts","pages/recipes/data/sauces/pesto.ts","pages/recipes/data/sauces/piri-piri.ts","pages/recipes/data/sides/baked-beans.ts","pages/recipes/data/sides/bang-bang-cauliflower.ts","pages/recipes/data/sides/crispy-kale.ts","pages/recipes/data/sides/mashed-potato.ts","pages/recipes/data/sides/potato-salad.ts","pages/recipes/data/sides/ratatouille.ts","pages/recipes/data/sides/tofu-scramble.ts","pages/recipes/data/sweets/banana-cake.ts","pages/recipes/data/sweets/blueberry-pancakes.ts","pages/recipes/data/sweets/brownies.ts","pages/recipes/data/sweets/cookies.ts","pages/recipes/data/sweets/crumble.ts","pages/recipes/data/sweets/flapjacks.ts","pages/recipes/data/sweets/lemon-drizzle.ts","pages/recipes/data/sweets/porridge.ts","pages/recipes/data/sweets/scones.ts","pages/recipes/data/index.ts","pages/recipes/data/recipes-coming-soon.ts","pages/recipes/sections.ts","pages/recipes/index.ts","pages/theatre/data/theatre-2016.ts","pages/theatre/data/theatre-2017.ts","pages/theatre/data/theatre-2018.ts","pages/theatre/data/theatre-2019.ts","pages/theatre/data/theatre-2020.ts","pages/theatre/data/index.ts","pages/theatre/factory/actors.ts","pages/theatre/factory/friends.ts","pages/theatre/factory/favourites.ts","pages/theatre/factory/plays.ts","pages/theatre/factory/theatres.ts","pages/theatre/factory/up-next.ts","pages/theatre/factory/index.ts","pages/theatre/sections.ts","pages/theatre/index.ts","pages/travel/data/travel-1997.ts","pages/travel/data/travel-1998.ts","pages/travel/data/travel-1999.ts","pages/travel/data/travel-2000.ts","pages/travel/data/travel-2001.ts","pages/travel/data/travel-2002.ts","pages/travel/data/travel-2003.ts","pages/travel/data/travel-2004.ts","pages/travel/data/travel-2005.ts","pages/travel/data/travel-2006.ts","pages/travel/data/travel-2007.ts","pages/travel/data/travel-2008.ts","pages/travel/data/travel-2009.ts","pages/travel/data/travel-2010.ts","pages/travel/data/travel-2011.ts","pages/travel/data/travel-2012.ts","pages/travel/data/travel-2013.ts","pages/travel/data/travel-2014.ts","pages/travel/data/travel-2015.ts","pages/travel/data/travel-2016.ts","pages/travel/data/travel-2017.ts","pages/travel/data/travel-2018.ts","pages/travel/data/travel-2019.ts","pages/travel/data/travel-2020.ts","pages/travel/data/index.ts","pages/travel/factory/attractions.ts","pages/travel/factory/cities.ts","pages/travel/factory/countries.ts","pages/travel/factory/bucket-list.ts","pages/travel/factory/friends.ts","pages/travel/factory/islands.ts","pages/travel/factory/index.ts","pages/travel/sections.ts","pages/travel/index.ts","pages/vinyl/factory.ts","pages/index.ts","pages/vinyl/index.ts","pages/vinyl/sections.ts","app/index.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Ul","styled","ul","showBullets","css","Li","li","FlexRow","div","FlexColumn","FlexSpan","span","FlexRowGrow","FlexLiGrow","BREAKPOINTS","phoneSmall","maxWidth","maxHeight","phoneLarge","minWidth","minHeight","tablet","laptop","desktop","largeDesktop","FONT_SIZE_75_PERCENT","PSEUDO_ELEMENT_HEART","PSEUDO_ELEMENT_STAR","ZERO_MARGIN_AND_PADDING","GRID_COLUMN","CSS","GRID_COLUMN_EQUAL_WIDTHS","COLORS","PAGE_COLORS","GIGS","RECIPES","THEATRE","TRAVEL","VINYL","FONT_SIZES","fontFamily","CSS_GlobalStyle","GlobalStyle","createGlobalStyle","normalize","THEME_BREAKPOINTS","breakpoints","THEME_EVENT_CARD","eventCard","companySymbol","color","spaceBetweenSymbols","notFirstChild","margin","top","photo","size","THEME_NAV_BAR","navBar","background","icon","defaultHoverColor","hoverShrinkSize","padding","vertical","THEME_PAGE_SECTION","pageSection","borderRadius","boxShadow","rgba","count","left","header","bottom","horizontal","panelList","border","countedListItems","recipeCards","firstRecipeCard","lastRecipeCard","regularCards","lastRegularCard","transition","THEME_PAGE_LAYOUT","pageLayout","columnGap","all","THEME_ROUNDED_SYMBOL","roundedSymbol","fontSize","textColor","THEME","countedListItem","width","disclosure","pageHeader","recipeCard","dietSymbol","panel","children","portionCost","title","fontWeight","vinylCard","artwork","right","notLastChild","fadedOpacity","listItemGroupVerticalSpacing","scrollbarSize","GridColumnDiv","equalWidthColumns","H1","h1","H2","h2","H3","h3","RouterLink","Link","a","StyledImage","img","SquareImage","className","dataTest","imgSrc","data-test","src","StyledNav","nav","theme","StyledRouterLink","NavBar","pages","index","path","SvgIcon","key","to","moveTheSuffixToPrefix","string","slice","substring","length","arrayToString","stringArray","useAmpersandsForPair","item","join","ACTORS","ADAM_JAMES","name","ADI_CHUGH","AIMEE_LOU_WOOD","BENJAMIN_ALUWIHARE","CLAIRE_FOY","favourite","DAVID_MOORST","GWENDOLINE_CHRISITE","HAMMED_ANIMASHAUN","HATTY_JONES","JASON_WATKINS","JOHN_MCCREA","KATHERINE_PARKINSON","LAURIE_KYNASTON","LEE_INGLEBY","MATT_SMITH","MILLY_THOMAS","NINA_SOSANYA","OLIVER_CHRIS","PETER_MCPHERSON","SARA_BAREILLES","SIAN_CLIFFORD","SURANNE_JONES","TIMOTHEE_CHALAMET","DIETS","VEGAN","abbreviation","VEGETARIAN","FESTIVALS","AREA_10_NYE","BESTIVAL","festival","BRIGHTON_PRIDE","CHINGFEST","DECAYDANCE","DEFECTED_BRISTOL","FABRIC_NYE","GLASTONBURY","HOMOBLOC","KALEIDOSCOPE","LOVEBOX","MAD_COOL","MANCHESTER_PRIDE","MIGHTY_HOOPLA","NOTION_SUMMER_PARTY","ON_THE_RUN_II","PARKLIFE","TRANSMISSION","TRIBAL_SESSIONS","V_FESTIVAL","WAREHOUSE_PROJECT","FRIENDS","CFS","initials","JHC","AISHA_SAEED","ALEX_FAYE","ALICE_RODER","AMY_BAGNI","AMY_CALCUTT","ANNIE_BUTCHER","ASH_MORETON","BECKY_MILLS","BETH_OAKES","BETH_SHEARS","BETH_SPELLER","BLAINE_PEARSON","CAITY_DALBY","CAITLIN_MCCAIG","gigs","travel","CARMEN_DALGLISH","CAMERON_BLACKBURN","CHELSEA_CUNNINGHAM","CHLOE_WHITE","CHRISTELLE_MUTUNDA","COBY_BLACKBURN","COURTNEY_LAWSON","DAD","theatre","DARREN_TAYLOR","DAN_SPARROW","DOM_COYNE","ELLE_OLDROYD","ELINORE_GILLESPIE","ELISE_MORLEY","ELLIE_FORMAN","ELLIE_GURKIN","ELLIE_PEARCE","ELLIE_SPANOVIC","EMMA_CODRINGTON","FANNY_LINDQVIST","GEMMA_GILDERTHORP","GEORGE_LITTLEHALES","GRACE_HULME","HANNA_FROGNER","HARRIET_BOYLE","HARRIET_KESTERTON","HEATHER_CHILES","JAIMINI_POPAT","JAMIE_HALKET","JAZZ_THIND","JERRY_EDWARDS","JOE_EDWARDS","JESS_SMITH","JUNAID_KHAN","KATE_BOWMAR","KIERAN_SAWFORD","KIRSTEN_JACKSON","KYLE_HOUGH","LAURA_CAPECE_GALEOTA","LEAH_SLATER_RADWAY","LEWIS_STEADMAN","LINDSAY_ASPINALL","LINDSEY_SKELTON","LOUISE_BLACKBURN","LUKE_JONES","LUKE_STERN","MARIA_TAYLOR","MEGAN_BLACKBURN","MUM","NATALIE_LAMBERT","NAV_BHOGAL","OSCAR_MURRAY","PATRICIA_DIACONESCU","POOJA_DHIR","POPPY_SMITH","ROB_GALL","RYAN_MILLS","SAM_BERRIE","SARAH_WALKER","SARAH_WHITAKER","SIAN_RODWAY_SMITH","SIMAN_PONE","SONYA_PARDI","STEVE_RICHARDS","THOM_STEPHANAKIS","TOM_CHINDA_COUTTS","TONYA_FRANCE","ARGENTINA","excludeFromBucketList","cities","BUENOS_AIRES","capital","AUSTRIA","VIENNA","BARBADOS","island","attractions","HARRISONS_CAVE","BELGIUM","BRUGES","YPRES","BATTLEFIELDS","BELFRY_OF_BRUGES","BELIZE","BARRIER_REEF","highlight","BELIZE_CITY","islands","AMBERGRIS_CAYE","CAYE_CAULKER","BRAZIL","RIO_DE_JANEIRO","MODERN_ART_MUSEUM_RIO","foreignName","COPACABANA_BEACH","ROCINHA_FAVELA","CHRIST_THE_REDEEMER","SELARON_STEPS","HANG_GLIDING","PICO_DO_PAPAGAIO","englishName","ILHA_GRANDE","CANADA","NIAGARA_FALLS","COSTA_RICA","CORCOVADO","JAGUAR_RESCUE_CENTER","SAN_JOSE","towns","MONTEVERDE","PUERTO_VIEJO","CROATIA","DUBROVNIK","DUBROVNIK_CABLE_CAR","DUBROVNIK_WALLS","CUBA","HAVANA","VARADERO","CYPRUS","PAPHOS","PAPHOS_ARCHAEOLOGICAL_PARK","CZECH_REPUBLIC","PRAGUE","JOHN_LENNON_WALL","VYSEHRAD","DENMARK","COPENHAGEN","LOUISIANA_ART_MUSEUM","ECUADOR","BANOS","GUAYAQUIL","OTAVALO","QUITO","EQUATOR_MONUMENT","OTAVALO_MARKET","TORTOISE_PARK","PAILON_DEL_DIABLO","COTOPAXI","GALAPAGOS","EGYPT","CAIRO","SHARM_EL_SHEIKH","GIZA_PYRAMIDS_SPHINX","FRANCE","MONACO","NICE","PARIS","SACRE_COEUR","LOUVRE","ARC_DE_TRIOMPHE","AIR_SPACE_MUSEUM","SCIENCE_MUSEUM","EIFFEL_TOWER","NOTRE_DAME","DISNEYLAND_PARIS","themePark","PARC_ASTERIX","GERMANY","BERLIN","REICHSTAG","HOLOCAUST_MEMORIAL","BRANDENBURG_GATE","BERLIN_WALL","EAST_SIDE_GALLERY","GREECE","KOS","regions","HALKIDIKI","HUNGARY","BUDAPEST","PARLIAMENT_BUILDING","THERMAL_BATH_SZECHENYI","CITADELLA","IRELAND","ST_STEPHENS_GREEN_PARK","DUBLIN_PRISON","GUINNESS_STOREHOUSE","DUBLIN","ITALY","SICILY","FLORENCE","NAPLES","MILAN","ROME","VATICAN","CATANIA","VENICE","POMPEII","JESOLO","SORRENTO","ARCO_DELLA_PACE","SEMPIONE_PARK","MILAN_MALL","COLOSSEUM","TREVI_FOUNTAIN","VESUVIUS","ETNA","LAOS","LUANG_PRABANG","VIENTIANE","KUANG_SI_FALLS","ELEPHANT_VILLAGE","BUDDHA_PARK","NETHERLANDS","AMSTERDAM","GRONINGEN","STEDELIJK_MUSEUM","SEX_MUSEUM","GRONINGEN_MUSEUM","NORWAY","OSLO","HOVEDOYA","OSLO_FJORD_SAUNA","PERU","AREQUIPA","CUSCO","LIMA","HUARAZ","COLCA_CANYON","LAGUNA_69","JUNGLE_ZIPLINE","MACHU_PICCHU","HUACACHINA","HUASCARAN_PARK","MANU","RAINBOW_MOUNTAIN","MANCORA","PARACAS","villages","POLAND","KRAKOW","AUSCHWITZ_BIRKENAU","WIELICZKA_SALT_MINE","WIELICZKA","PORTUGAL","LISBON","PORTIMAO","PORTO","ZOOMARINE","OCENARIO_DE_LISBOA","FERRAGUDO","TAVIRA","VILAMOURA","SPAIN","BARCELONA","MADRID","VALENCIA","CIUTADELLA_PARK","PARK_GUELL","PARQUE_WARNER","SIAM_PARK","PORTAVENTURA","TENERIFE","IBIZA","MINORCA","LANZAROTE","SWEDEN","STOCKHOLM","THAILAND","BANGKOK","CHIANG_MAI","CHIANG_RAI","KOH_PHI_PHI","KOH_PHANGAN","KOH_TAO","WHITE_TEMPLE","MAYA_BAY","PAI_CANYON","TIGER_KINGDOM","GRAND_PALACE","SKY_BAR","KRABI","PAI","UGANDA","JINJA","RAFTING_NALUBALE","NILE_SOURCE","UAE","DUBAI","AQUAVENTURE","BURJ_KHALIFA","UK","insignificant","ALTON_TOWERS","BLACKPOOL_PLEASURE_BEACH","WINTER_WONDERLAND","THORPE_PARK","EDEN_PROJECT","TATE_BRITAIN","LONDON_EYE","RICHMOND_PARK","SHERWOOD_FOREST","CALKE_ABBEY","BATTERSEA_PARK","CRYSTAL_PALACE_PARK","QUEEN_ELIZABETH_OAKESLYMPIC_PARK","VICTORIA_PARK","GREENWICH_PARK","KEW_GARDENS","EPPING_FOREST","HAMPSTEAD_HEATH","V_A_MUSEUM","TATE_MODERN","NATURAL_HISTORY_MUSEUM","LAKE_DISTRICT","HADRIANS_WALL","ANGLESEY","BATH","BLACKPOOL","BRIGHTON","BRISTOL","BIRMINGHAM","CAMBRIDGE","COVENTRY","DERBY","EDINBURGH","HULL","LEEDS","LEICESTER","LINCOLN","LONDON","LIVERPOOL","MANCHESTER","NEWCASTLE","NORWICH","NOTTINGHAM","OXFORD","SHEFFIELD","WOLVERHAMPTON","YORK","CORNWALL","DONCASTER","HARROGATE","ILKLEY","MILTON_KEYNES","STRATFORD","MANSFIELD","NEWARK","NEWQUAY","PADSTOW","TENBY","SCARBOROUGH","KEY_WEST","USA","ALCATRAZ_PRISON","FISHERMANS_WHARF","FARMERS_MARKET","HOLLYWOOD_WALK_OF_FAME","WHITE_HOUSE","CAPITOL_BUILDING","WASHINGTON_MONUMENT","LINCOLN_MEMORIAL","TIMES_SQUARE","BROOKLYN_BRIDGE","WORLD_TRADE_CENTER","GOLDEN_GATE_BRIDGE","CENTRAL_PARK","VENICE_BEACH","DISNEYLAND_CALIFORNIA_ADVENTURE","DISNEY_MGM_STUDIOS","DISNEY_ANIMAL_KINGDOM","DISNEY_EPCOT","WET_N_WILD_ORLANDO","BLIZZARD_BEACH","DISNEY_MAGIC_KINGDOM","UNIVERSAL_STUDIOS_FLORIDA","UNIVERSALS_ISLANDS_OF_ADVENTURE","GRAND_CANYON","KNOTTS_BERRY_FARM","SEAWORLD_ORLANDO","BUSCH_GARDENS_WILLIAMSBURG","BUSCH_GARDENS_TAMPA","SIX_FLAGS_AMERICA","SIX_FLAGS_MAGIC_MOUNTAIN","SIX_FLAGS_NEW_ENGLAND","BOSTON_MASSACHUSETTS","LAS_VEGAS","VIRGINIA_BEACH","LOS_ANGELES","NEW_YORK_CITY","SAN_FRANCISCO","SPRINGFIELD_MASSACHUSETTS","WASHINGTON_DC","ALCATRAZ","MARTHAS_VINEYARD","CAPE_COD","FLORIDA_KEYS","ISLAMORADA","states","FLORIDA","NEW_YORK","MASSACHUSETTS","VIRGINIA","ZIMBABWE","VICTORIA_FALLS","COUNTRIES","AUSTRALIA","BOLIVIA","COLOMBIA","INDONESIA","JAPAN","MEXICO","NEW_ZEALAND","PHILLIPINES","TANZANIA","CITIES","ATTRACTIONS","ISLANDS","SAINSBURYS_SEASONING_COST","quantity","measurement","price","MEASUREMENTS","requireJpeg","require","PHOTOS_RECIPES","BAKED_BEANS","BANG_BANG_CAULIFLOWER","BANANA_CAKE","BOLOGNESE","BLUEBERRY_PANCAKES","BROWNIES","CARBONARA","CRUMBLE","FLAPJACKS","KALE_CRISPY","LASAGNE","MASHED_POTATO","PORRIDGE","POTATO_SALAD","PIRI_PIRI","RATATOUILLE","ROGAN_JOSH","SHEPHERDS_PIE","_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref","svgRef","props","x","y","viewBox","style","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","height","requireSvg","SVG_ICON_STRINGS","ARTIST","BOOK","BRAIN","CAKE","CAMERA","CITY","FLAG","MAP_PIN","NOTEPAD","PALM_TREE","PEACE_SIGN","PEOPLE","ROLLER_COASTER","STADIUM","STARS","TENT","TOWN_HALL","requireOsloJpeg","number","PHOTOS_TRAVEL","requireVinyl","artist","album","PHOTOS_VINYL","THE_1975","A_BRIEF_INQUIRY_INTO_ONLINE_RELATIONSHIPS","ADELE","ALLIE_X","SUPER_SUNSET","AMY_WINEHOUSE","BACK_TO_BLACK","ARCTIC_MONKEYS","FAVOURITE_WORST_NIGHTMARE","ARIANA_GRANDE","THANK_U_NEXT","BANKS","GODDESS","III","BEN_HOWARD","EVERY_KINGDOM","BEYONCE","LEMONADE","CARIBOU","OUR_LOVE","CHARLI_XCX","HOW_IM_FEELING_NOW","DUA_LIPA","FUTURE_NOSTALGIA","ELLIE_GOULDING","HALCYON","FKA_TWIGS","MAGDALENE","FLORENCE_AND_THE_MACHINE","LUNGS","GEORGE_FITZGERALD","ALL_THAT_MUST_BE","GRIMES","ART_ANGELS","HAIM","WOMEN_IN_MUSIC_PT_III","JON_HOPKINS","SINGULARITY","KATE_NASH","MADE_OF_BRICKS","KATY_PERRY","ONE_OF_THE_BOYS","KIM_PETRAS","CLARITY","LADY_GAGA","BORN_THIS_WAY","LANA_DEL_REY","BORN_TO_DIE","LANE_8","RISE","LANY","MALIBU_NIGHTS","LEON","LENNON_STELLA","THREE_TWO_ONE","LISSIE","CATCHING_A_TIGER","LORDE","PURE_HEROINE","MARINA","ELECTRA_HEART","MUNA","ABOUT_U","NATALIA_KILLS","PERFECTIONIST","PANIC_AT_THE_DISCO","A_FEVER_YOU_CANT_SWEAT_OUT","PARAMORE","RIOT","PVRIS","ALL_WE_KNOW_OF_HEAVEN_ALL_WE_NEED_OF_HELL","RIHANNA","RATED_R","RYN_WEAVER","THE_FOOL","SOPHIE","OIL_OF_EVERY_PEARLS_UNINSIDES","SUFJAN_STEVENS","CARRIE_AND_LOWELL","TAYLOR_SWIFT","TOURIST","U","TROYE_SIVAN","BLOOM","albums","appleMusicUrl","year","purchased","signed","noLongerExists","MUSICIANS","MUSICANS_WITH_ALBUMS","AURORA","ACADEMY_IS_THE","ALESSIA_CARA","ALEX_CHAPMAN","ALL_AMERICAN_REJECTS_THE","ALL_TIME_LOW","ALMA","AMOS_LEE","ANNA_OF_THE_NORTH","ANASTACIA","ANNE_MARIE","AQUILO","AUDITION_THE","BAAUER","BANANARAMA","BASTILLE","BAYNK","BEARS_DEN","BECKY_MILLS_HILL","BETSY","BETTY_WHO","BICEP","BILLIE_EILISH","BLACK_KIDS","B_O_B","BONDAX","BON_IVER","BONTAN","BORNS","BOYS_LIKE_GIRLS","BLONDE","BREACH","BRIGITTE_APHRODITE","BRITNEY_SPEARS","BROODS","BULOW","CAMILA_CABELLO","CARLY_RAE_JEPSEN","CARL_COX","CAROLINE_POLACHEK","CELESTE","CHARLI_ADAMS","CHARLOTTE_CHURCH","CHELSEA_CUNNINGHAM_CUTLER","CHEMICAL_BROTHERS_THE","CHERYL","CHLOE_WHITE_X_HALLE","CHRISTINE_AND_THE_QUEENS","CHRVCHES","CLAIRO","CLEAN_BANDIT","COBRA_STARSHIP","CODE_THE","CRUEL_YOUTH","CUTE_IS_WHAT_WE_AIM_FOR","CYRIL_HAHN","DANIEL_AVERY","DAUGHTER","DAVID_RODIGAN","DIPLO","DISCLOSURE","DIZZEE_RASCAL","DRUMS_THE","DUKE_DUMONT","DUSKY","DYLAN","EARTHEATER","EATS_EVERYTHING","ELDERBROOK","ELIZA_DOOLITTLE","ELLA_EYRE","EMAROSA","FALL_OUT_BOY","FLEETWOOD_MAC","FLIGHT_FACILITIES","FOREVER_THE_SICKEST_KIDS","FOURS","FOUR_TET","FOXES","FRANCES","FRANCIS_AND_THE_LIGHTS","FRANK_OCEAN","FREYA_RIDINGS","FRIDAY_NIGHT_BOYS_THE","FRIEND_WITHIN","GEORGE_EZRA","GEORGIA","G_FLIP","GLOWIE","GORGON_CITY","GRACEY","GREEN_VELVET","GROOVE_ARMADA","GRYFFIN","GYM_CLASS_HEROES","HALSEY","HANNAH_WANTS","HAUX","HEIDI","HEY_MONDAY","HOLLY_HUMBERSTONE","HORSE_MEAT_DISCO","INCOGNITO","JAMES_BAY","JAMES_BLAKE","JAMIE_JONES","JAMIE_T","JAMIE_XX","JAX_JONES","JAY_Z","JEREMY_ZUCKER","JESS_GLYNNE","JESSIE_WARE","JOE_GODDARD","JOHNNY_MARR","JONAS_BLUE","JONES","JORIS_VOORN","JORJA_SMITH","JOSH_BUTLER","JOY_ORBISON","JOSEF_SALVAT","JULIA_MICHAELS","JULIO_BASHMORE","JUSTIN_BIEBER","JUSTIN_MARTIN","KAH_LO","KANYE_WEST","KAYTRANADA","KESHA","KIASMOS","KIDNAP","KIDS_IN_GLASS_HOUSES","KILLERS_THE","KOLSCH","KYGO","LADY_STARLIGHT","LA_ROUX","LAUV","L_DEVINE","LELAND","LILY_ALLEN","LITTLE_COMETS","LITTLE_DRAGON","LONDON_GRAMMAR","LUCY_ROSE","LYKKE_LI","LYVES","MACEO_PLEX","MALLRAT","MAGGIE_ROGERS","MAINE_THE","MAJOR_LAZER","MARY_J_BLIGE","MARTIN_SOLVEIG","MELANIE_MARTINEZ","METRO_STATION","MICHAEL_KIWANUKA","MIDLAND","MIGUEL","MIKE_POSNER","MILEY_CYRUS","MISHA_B","M_0","MK","MNEK","MO","MURA_MASA","NAAZ","NAO","NASTY_CHERRY","NATASHA_BEDINGFIELD","NAVVY","NICKI_MINAJ","NOEL_GALLAGHERS_HIGH_FLYING_BIRDS","OH_ANNIE_OH","OKAYWILL","PALE_WAVES","PALOMA_FAITH","PAUL_WOOLFORD","PET_SHOP_BOYS","PHILIP_GEORGE","PRETENDERS","RAINBOW_KITTEN_SURPRISE","RALEIGH_RITCHIE","RALPH","REDLIGHT","RINA_SAWAYAMA","RITON","RIXTON","ROBINSON","ROBYN","ROMY","ROOSEVELT","ROUTE_94","RUDIMENTAL","RUFUS_DU_SOL","RYAN_BEATTY","SABRINA_CLAUDIO","SAINT_JHN","SAM_SMITH","SASHA_SLOAN","SBTRKT","SEEB","SEGA_BODEGA","SEINABO_SEY","SEVDALIZA","SIA","SIGRID","SISTER_SLEDGE","SKY_FERREIRA","SLIIMY","SOFI_TUKKER","SOAK","SONIKKU","SOPHIE_ELLIS_BEXTOR","SOUL_WAX","SMYTHS_THE","SPILL_CANVAS_THE","SKREAM","SUNDAY_GIRL","TENSNAKE","TEN_WALLS","TERROR_JR","TOM_ODELL","TORI_KELLY","TOVE_LO","TULISA","TWENTY_ONE_PILOTS","TWO_FEET","TYGA","VERITE","WE_THE_KINGS","WILL_YOUNG","XX_THE","YEARS_AND_YEARS","YOU_ME_AT_SIX","YOUSEF","ZARA_LARSSON","MUSIC_VENUES","ALEXANDRA_PALACE","ALEXANDRA_PALACE_THEATRE","BRIXTON_ACADEMY","BROCKWELL_PARK","CAMDEN_ASSEMBLY","CORSICA_STUDIOS","COURTYARD_THEATRE","DINGWALLS","GARAGE_THE","EARTH","EGG","ELECTRIC_BRIXTON","ELECTROWERKZ","FABRIC","FINSBURY_PARK","HAMMERSMITH_APOLLO","HEAVEN","HOXTON_HALL","HOXTON_SQUARE_BAR_AND_KITCHEN","ISLINGTON_ASSEMBLY_HALL","KENTISH_TOWN_FORUM","KOKO","LAFAYETTE","LAYLOW","LONDON_STADIUM","MINISTRY_OF_SOUND","MOTH_CLUB","OLD_BLUE_LAST","OMEARA","OSLO_HACKNEY","OVAL_SPACE","O2_THE","PRINTWORKS","QUEEN_OF_HOXTON","RIDGEWAY_PARK","ROUNDHOUSE","ROYAL_ALBERT_HALL","ROYAL_FESTIVAL_HALL","SCALA","SERVANT_JAZZ_QUARTERS","SHEPHERDS_BUSH_EMPIRE","ST_GILES_IN_THE_FIELD","TOTTENHAM_HOTSPUR_STADIUM","TWICKENHAM_STADIUM","TROXY","VILLAGE_UNDERGROUND","WEMBLEY_STADIUM","XOYO","ZIGFRID_VON_UNDERBELLY","ACADEMY_MANCHESTER","ACADEMY_2_MANCHESTER","ALBERT_HALL_MANCHESTER","APOLLO_MANCHESTER","ARENA_MANCHESTER","CASTLEFIELD_BOWL","DEAF_INSTITUTE","GORILLA","HEATON_PARK","MAYFIELD_DEPOT","RITZ_MANCHESTER","RUBY_LOUNGE","SANKEYS","STORE_STREET","BODEGA","ARENA_NOTTINGHAM","RESCUE_ROOMS","ROCK_CITY","TRENT_UNIVERSITY_NOTTINGHAM","ACADEMY_BIRMINGHAM","ACADEMY_2_BIRMINGHAM","ALEXANDRA_THEATRE","BARFLY_BIRMINGHAM","INSTITUTE_BIRMINGHAM","NEC_ARENA_BIRMINGHAM","NIA_ARENA_BIRMINGHAM","COCKPIT_LEEDS","DE_MONTFORT_HALL","ENGINE_SHED","IFEMA_MADRID","LULWORTH_ESTATE","MOTION","PRESTON_PARK","SCHWUZ","SHEFFIELD_ARENA","TRESOR","WESTON_PARK","WOLVERHAMPTON_CIVIC_HALL","WORTHY_FARM","FLOUR","CORNFLOUR","displayText","knownCost","FLOUR_PLAIN","FLOUR_SELF_RAISING","SUGAR","SUGAR_BROWN","SUGAR_BROWN_DARK","SUGAR_BROWN_LIGHT","SUGAR_CASTER_GOLDEN","SUGAR_DEMERARA","SUGAR_GRANULATED","SUGAR_ICING","SYRUPS","LEMON_EXTRACT","NECTAR_AGAVE","SYRUP_GOLDEN","VANILLA_EXTRACT","BAKING","BAKING_POWDER","BICARBONATE_OF_SODA","CHOCOLATE_DARK","COCOA_POWDER","OATS","PASTA","SPAGHETTI","PASTA_LASAGNE_SHEET_DRIED","RICE","RICE_BASMATI","RICE_BROWN","RICE_RISOTTO_ARBORIO","CARBS","BREAD_GARLIC","BREAD_SOURDOUGH","BREAD_SOURDOUGH_DARK","POPPADOMS","MILK","MILK_COCONUT_CANNED","MILK_ALMOND_UNSWEETENED","MILK_OATLY_BARISTA","DAIRY","BUTTER_VEGAN","CREAM_OAT","CHEESE_VEGAN_SLICE","FRUIT_DRIED","APRICOTS_DRIED","BLUEBERRIES_DRIED","CRANBERRIES_DRIED","RAISINS","FRUIT_FRESH","APPLE_BRAMLEY","BANANA","BLACKBERRIES_FRESH","BLUEBERRIES_FRESH","LEMON","LEMON_LARGE","LIME","PINEAPPLE","RASPBERRIES_FRESH","FRUIT_FROZEN","BLACKBERRIES_FROZEN","RASPBERRIES_FROZEN","JUICE","LEMON_JUICE","LEMON_JUICE_FRESH","LIME_JUICE_FRESH","FRUIT","HERBS_DRIED","BASIL_DRIED","HERBS_MIXED_DRIED","OREGANO_DRIED","ROSEMARY_DRIED","THYME_DRIED","HERBS_FRESH","BASIL_FRESH","payFullAmountAlways","CORIANDER_FRESH","PARSLEY_FRESH","SAGE_FRESH","HERBS","BEANS","BEANS_BAKED","BEANS_HARICOT","BEANS_KIDNEY","SEITAN","GLUTEN_WHEAT_VITAL","PROTEIN","CHICKPEAS","EGGS","LENTIL_RED_DRY","TOFU","DRIED_SEASONING","PAPRIKA","ONION_POWDER","GARLIC_GRANULES","PAPRIKA_SMOKED","TURMERIC_GROUND","ALLSPICE_GROUND","CHILLI_POWDER","CINNAMON_GROUND","CHILLI_CRUSHED_DRIED","NUTMEG_GROUND","YEAST_NUTRITIONAL","STOCK_POWDER_VEGAN","OILS","OIL_OLIVE","OIL_SUNFLOWER","UNICODE","PASTES","CURRY_PASTE_MADRAS","CURRY_PASTE_ROGAN_JOSH","TOMATO_PUREE","SALT","SALT_BLACK","SALT_TABLE","SALT_ROCK_FRESH","SAUCES","LIQUID_SMOKE","SOY_SAUCE","KETCHUP_TOMATO","MAYONNAISE","SRIRACHA","SWEET_CHILLI_SAUCE","VINEGARS","VINEGAR_BALSAMIC","VINEGAR_CIDER","VINEGAR_WHITE_WINE","SEASONING","PEPPER_BLACK_FRESH","PEPPER_BLACK_GROUND","WINE_RED","CHILLI_RED_FRESH","CHILLI_BIRD_EYE_FRESH","GINGER_FRESH","NUTMEG_FRESH","NUTS","NUTS_CASHEWS","NUTS_PINE","SEEDS","SEEDS_CHIA","SEEDS_POPPY","SEEDS_FLAX_GROUND","SEEDS_PUMPKIN","SEEDS_SESAME","SEEDS_SUNFLOWER","NUTS_AND_SEEDS","VEG_CANNED","TOMATO_CHOPPED","TOMATO_PASSATA","TOMATO_SUN_DRIED","VEG_FRESH","ASPARAGUS","AUBERGINE","BEANS_GREEN","BROCCOLI","BUTTERNUT_SQUASH","CARROT","CAULIFLOWER_REGULAR","CELERY_STICK","COURGETTE","GARLIC_CLOVE","KALE","LEEK","MUSHROOMS","MUSHROOMS_CHESTNUT","ONION_WHITE_MEDIUM","ONION_RED_MEDIUM","ONION_SPRING","PEPPER_RED","PEPPER_GREEN","PEPPER_ORANGE","PEPPER_MIXED","POTATO_MARIS_PIPER","POTATO_BAKING","POTATO_JERSEY_ROYAL","POTATO_SWEET","SPINACH","VEG_FROZEN","PETITS_POIS_FROZEN","VEGETABLES_MIXED_FROZEN","VEG","INGREDIENTS","WATER","WATER_BOILING","PAGE_SECTION_TITLES","PAGE_SECTION_PANEL_TYPES","PLAYS","AFTERGLOW","CONSENT","DUST","EVERYBODYS_TALKING_ABOUT_JAMIE","FERRYMAN_THE","FROZEN","HOME_IM_DARLING","INHERITANCE_THE","KINKY_BOOTS","LEAVE_TO_REMAIN","LOST_UNFOUND","MATILDA","MIDSUMMER_NIGHTS_DREAM","SON_THE","THAT_GIRL","UGLY_LIES_THE_BONE","UNCLE_VANYA","WAITRESS","WICKED","YOUNG_MARX","THEATRE_VENUES","ADELPHI","APOLLO","APOLLO_VICTORIA","BRIDGE","DUKE_OF_YORKS","GIELGUD","HAROLD_PINTER","LYRIC","NATIONAL","NOEL_COWARD","OLD_RED_LION","OLD_VIC","PLAYHOUSE","ROYAL_HAYMARKET","TRAFALGAR_STUDIOS","WATERLOO_EAST","WHITE_BEAR","ROYAL_SHAKESPEARE","TICKET_TYPES","DAYS_OF_THE_WEEK","MONTHS","dateToString","date","weekday","getDay","day","getDate","month","getMonth","getFullYear","datesToString","dates","errorText","alert","QUARTER","HALF","THREE_QUARTERS","isInFuture","valueOf","today","Date","setDate","yesterday","numberToCurrencyString","decimalPrecision","Math","round","toFixed","calculateIngredientCost","ingredient","convertIngredientQuantity","concatenateQuantityAndMeasurement","displayQuantity","parseInt","calculateRecipeCost","ingredients","totalRecipeCost","forEach","ingredientSection","recipeIngredient","ingredientCost","cost","consoleLogCostedIngredient","useMediaQueries","pageUses2Columns","useMediaQuery","generateIngredientListItem","optional","notes","quantityString","decimal","floor","decimalPoints","toString","decimalToFractionString","ingredientString","quantityMeasurementIngredientString","getItemCounts","data","gigCards","theatreCards","travelCards","actor","attraction","city","country","friend","musician","musicVenue","play","pastCount","futureCount","incremementPastOrFutureCount","company","headline","support","lineup","venue","rest","includes","subtitle","hidden","cast","recipeMethodEntries","FOLD_IN_FLOUR_MIX","LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN","MAKE_FLAX_EGG","bakeForAbout","minutes","skewer","wellRisen","continueToCookOutsideOven","defaultText","additionalText","preheatOven","degreesCelcius","bakingTray","ovenTemperature","transferToLoafTin","sunkenCentre","formatCountedListItems","isLeaderboard","filter","countInfoIrrelevant","sort","b","text","toLowerCase","localeCompare","isLeaderboardItem","PanelContainer","bodyHeight","ClickableDiv","Disclosure","Header","autoExpand","isStatic","onlyHeaderClickable","React","useState","panelIsVisible","switchPanelVisibility","panelContainerHeight","setPanelContainerHeight","Panel","getPanelContainerClass","element","getBoundingClientRect","onClick","PageSectionTitle","PageSectionHeaderContainer","PageSectionCount","PageSectionStarredCount","PageSectionHeader","starCount","useContext","ThemeContext","CountedListItemContainer","CountedListItemText","star","faded","CountedListItemPastCount","CountedListItemFutureCount","CountedListItem","showFutureCount","showPastCount","RoundedSymbol","CardTitleBold","CardSubtitleBold","EventCardNote","EventCardCountdown","EventCardMainContainer","EventCardDateText","EventCardCompanyContainer","EventCard","body","dateText","note","countdownText","photos","EventCardMain","EventCardCompany","EventCardWithCompany","GigCard","ticketType","daysToGo","getCountdownText","dateDifference","ceil","undefined","StyledLi","addPaddingTop","List","listItems","mapMethodToListItems","method","mapServeWithToListItems","serveWith","getServeWithListItem","lineOptions","output","mapIngredientsToListItems","ingredientsGroups","ingredientsWithPaddingFlags","ingredientsGroup","INDEX_HIGH","INDEX_LOW","push","RecipeCardTitle","RecipeCardPanel","RecipeCardCostsContainer","RecipeCardPortionCost","RecipeCardPhotoContainer","RecipeCard","makes","newRecipe","diet","image","totalCost","ingredientsHeader","defaultIngredientsHeader","quantitySpaceMeasurement","quantityAndMeasurement","getIngredientsHeader","RecipeCardHeader","TheatreCard","TravelCard","TITLE","SUBTITLE","VinylCardContainer","VinylCardLink","VinylCardArtwork","VinylCardTextContainer","VinylCard","href","CSS_COMMON","CSS_RECIPE_CARDS","CSS_COUNTED_LIST","CSS_REGULAR_CARDS","PageSectionPanelList","pageSectionPanelType","PageSectionPanel","vinylCards","hide","gigCard","theateCard","travelCard","PageSectionContainer","section","PageSection","staticAlways","staticIf2Columns","autoExpandAlways","autoExpandIf2Columns","PageSectionsLayout","pageSections","validPageSections","validPageSectionCount","pageSectionsCol1","pageSectionsCol2","pageSectionColumns","pageSectionColumn","stringWithSpaces","replace","PageHeaderContainer","PageHeaderCount","PageHeader","titleText","GIGS_2006","GIGS_2007","GIGS_2008","GIGS_2009","GIGS_2010","GIGS_2011","GIGS_2012","GIGS_2013","GIGS_2014","GIGS_2015","GIGS_2016","GIGS_2017","GIGS_2018","GIGS_2019","GIGS_2020","GIGS_2021","ALL","SPLIT_BY_YEAR","DATA","FAVOURITES","musicianHasFavouritedGig","favouritedGigCards","itemIsFavourited","musicians","values","musiciansCounted","MUSICIANS_LIST_ITEMS","musiciansForBucketList","BUCKET_LIST_ITEMS","FRIENDS_LIST_ITEMS","FESTIVALS_LIST_ITEMS","UP_NEXT","totalGigsPastAndPresent","totalFutureGigs","totalGigsSoFar","pageCount","VENUES_LIST_ITEMS","FACTORY","BUCKET_LIST","VENUES","SECTION_BUCKET_LIST","SECTION_FESTIVALS","SECTION_ARTISTS","SECTION_FRIENDS_GIGS","SECTION_UP_NEXT_GIGS","SECTION_VENUES_GIGS","SECTIONS_YEARS","sections","PAGE_GIGS","SvgMicrophone","RISOTTO","SWEET_AND_SOUR","PESTO","CRISPY_KALE","TOFU_SCRAMBLE","COOKIES","LEMON_DRIZZLE","CATEGORISED","recipes","MAINS","SIDES","SWEETS","COMING_SOON","SECTIONS_RECIPE_GROUPS","SECTION_COMING_SOON","PAGE_RECIPES","SvgVegBowl","THEATRE_2016","THEATRE_2017","THEATRE_2018","THEATRE_2019","THEATRE_2020","ACTORS_LIST_ITEMS","playIsFavourited","favouritedTheatreCards","theatreCard","PLAYS_LIST_ITEMS","THEATRE_VENUES_LIST_ITEMS","theatreTrip","SECTION_ACTORS","SECTION_FRIENDS_THEATRE","SECTION_PLAYS","SECTION_THEATRES","SECTION_UP_NEXT_THEATRE","PAGE_THEATRE","SvgTheatreMasks","TRAVEL_1997","TRAVEL_1998","TRAVEL_1999","TRAVEL_2000","TRAVEL_2001","TRAVEL_2002","TRAVEL_2003","TRAVEL_2004","TRAVEL_2005","notAbroad","TRAVEL_2006","TRAVEL_2007","TRAVEL_2008","TRAVEL_2009","TRAVEL_2010","TRAVEL_2011","TRAVEL_2012","TRAVEL_2013","TRAVEL_2014","TRAVEL_2015","TRAVEL_2016","TRAVEL_2017","TRAVEL_2018","TRAVEL_2019","TRAVEL_2020","themeParks","HIGHLIGHTS_LIST_ITEMS","THEME_PARKS_LIST_ITEMS","citiesCounted","CITIES_LIST_ITEMS","countries","countriesCounted","COUNTRIES_LIST_ITEMS","countriesNotVisited","citiesNotVisited","countriesForBucketList","citiesForBucketList","BUCKET_LIST_COUNTRIES","BUCKET_LIST_CITIES","islandsThatAreCountries","islandsThatAreNotCountries","ISLANDS_LIST_ITEMS","totalAbroadTripsSoFar","HIGHLIGHTS","THEME_PARKS","SECTION_BUCKET_LIST_TRAVEL","SECTION_CITIES","SECTION_COUNTRIES","SECTION_FRIENDS_TRAVEL","SECTION_HIGHLIGHTS","SECTION_ISLANDS","SECTION_THEME_PARKS","SECTION_UP_NEXT_TRAVEL","PAGE_TRAVEL","SvgTravel","vinyls","flat","WISH_LIST","vinyl","COLLECTION","PAGES","SvgVinyl","route","PageShell","main","App","from","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e0585b87.chunk.js","sourcesContent":["var map = {\n\t\"./baked-beans.jpg\": 42,\n\t\"./banana-cake.jpg\": 43,\n\t\"./bang-bang-cauliflower.jpg\": 44,\n\t\"./blueberry-pancakes.jpg\": 45,\n\t\"./bolognese.jpg\": 46,\n\t\"./brownies.jpg\": 47,\n\t\"./carbonara.jpg\": 48,\n\t\"./crumble.jpg\": 49,\n\t\"./flapjacks.jpg\": 50,\n\t\"./kale-crispy.jpg\": 51,\n\t\"./lasagne.jpg\": 52,\n\t\"./mashed-potato.jpg\": 53,\n\t\"./piri-piri.jpg\": 54,\n\t\"./porridge.jpg\": 55,\n\t\"./potato-salad.jpg\": 56,\n\t\"./ratatouille.jpg\": 57,\n\t\"./rogan-josh.jpg\": 58,\n\t\"./shepherds-pie.jpg\": 59\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 41;","module.exports = __webpack_public_path__ + \"static/media/baked-beans.b17978e3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banana-cake.ae9fd9b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bang-bang-cauliflower.4af35ae2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blueberry-pancakes.3c5e560b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bolognese.b9573028.jpg\";","module.exports = __webpack_public_path__ + \"static/media/brownies.84692604.jpg\";","module.exports = __webpack_public_path__ + \"static/media/carbonara.9848608a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crumble.263fe8b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flapjacks.0d5f26e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kale-crispy.b5419d7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lasagne.8d8fb594.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mashed-potato.5c438d68.jpg\";","module.exports = __webpack_public_path__ + \"static/media/piri-piri.42719ce5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/porridge.ae9582d1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/potato-salad.446dfdbb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ratatouille.971440f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rogan-josh.904346f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shepherds-pie.d49c0165.jpg\";","var map = {\n\t\"./artist.svg\": 61,\n\t\"./book.svg\": 62,\n\t\"./brain.svg\": 63,\n\t\"./cake.svg\": 64,\n\t\"./camera.svg\": 65,\n\t\"./city.svg\": 66,\n\t\"./flag.svg\": 67,\n\t\"./map_pin.svg\": 68,\n\t\"./masks.svg\": 69,\n\t\"./microphone.svg\": 70,\n\t\"./notepad.svg\": 71,\n\t\"./palm_tree.svg\": 72,\n\t\"./peace_sign.svg\": 73,\n\t\"./people.svg\": 74,\n\t\"./roller_coaster.svg\": 75,\n\t\"./stadium.svg\": 76,\n\t\"./stars.svg\": 77,\n\t\"./tent.svg\": 78,\n\t\"./theatre.svg\": 79,\n\t\"./town_hall.svg\": 80,\n\t\"./travel.svg\": 81,\n\t\"./veg_bowl.svg\": 82,\n\t\"./vinyl.svg\": 83\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 60;","module.exports = __webpack_public_path__ + \"static/media/artist.6b1569d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/book.a7bef01b.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.237ef4f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/cake.9b302a02.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.33f4f24c.svg\";","module.exports = __webpack_public_path__ + \"static/media/city.e57fc0ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/flag.b4a08446.svg\";","module.exports = __webpack_public_path__ + \"static/media/map_pin.71135c81.svg\";","module.exports = __webpack_public_path__ + \"static/media/masks.d8da85e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/microphone.45f98fc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/notepad.4eca818e.svg\";","module.exports = __webpack_public_path__ + \"static/media/palm_tree.4f07f732.svg\";","module.exports = __webpack_public_path__ + \"static/media/peace_sign.045db1fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/people.af13270c.svg\";","module.exports = __webpack_public_path__ + \"static/media/roller_coaster.6bcd9568.svg\";","module.exports = __webpack_public_path__ + \"static/media/stadium.5bff58bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/stars.86e33730.svg\";","module.exports = __webpack_public_path__ + \"static/media/tent.2c2dd363.svg\";","module.exports = __webpack_public_path__ + \"static/media/theatre.e5eaee16.svg\";","module.exports = __webpack_public_path__ + \"static/media/town_hall.c00cc7ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/travel.d9baea5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/veg_bowl.ee16e10a.svg\";","module.exports = __webpack_public_path__ + \"static/media/vinyl.69320bab.svg\";","var map = {\n\t\"./oslo_1.jpg\": 85,\n\t\"./oslo_2.jpg\": 86,\n\t\"./oslo_3.jpg\": 87,\n\t\"./oslo_4.jpg\": 88\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 84;","module.exports = __webpack_public_path__ + \"static/media/oslo_1.706d5d1a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/oslo_2.c99b715c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/oslo_3.4552776d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/oslo_4.fe2d268b.jpg\";","var map = {\n\t\"./1975-the_a-brief-inquiry-into-online-relationships.jpg\": 90,\n\t\"./adele_19.jpg\": 91,\n\t\"./allie-x_super-sunset.jpg\": 92,\n\t\"./amy-winehouse_back-to-black.jpg\": 93,\n\t\"./arctic-monkeys_favourite-worst-nightmare.jpg\": 94,\n\t\"./ariana-grande_thank-u-next.jpg\": 95,\n\t\"./banks_goddess.jpg\": 96,\n\t\"./banks_iii.jpg\": 97,\n\t\"./ben-howard_every-kingdom.jpg\": 98,\n\t\"./beyonce_lemonade.jpg\": 99,\n\t\"./caribou_our-love.jpg\": 100,\n\t\"./charli-xcx_how-im-feeling-now.jpg\": 101,\n\t\"./dua-lipa_future-nostalgia.jpg\": 102,\n\t\"./ellie-goulding_halcyon.jpg\": 103,\n\t\"./fka-twigs_magdalene.jpg\": 104,\n\t\"./florence-and-the-machine_lungs.jpg\": 105,\n\t\"./george-fitzgerald_all-that-must-be.jpg\": 106,\n\t\"./grimes_art-angels.jpg\": 107,\n\t\"./haim_women-in-music-pt-iii.jpg\": 108,\n\t\"./jon-hopkins_singularity.jpg\": 109,\n\t\"./kate-nash_made-of-bricks.jpg\": 110,\n\t\"./katy-perry_one-of-the-boys.jpg\": 111,\n\t\"./kim-petras_clarity.jpg\": 112,\n\t\"./lady-gaga_born-this-way.jpg\": 113,\n\t\"./lana-del-rey_born-to-die.jpg\": 114,\n\t\"./lane-8_rise.jpg\": 115,\n\t\"./lany_malibu-nights.jpg\": 116,\n\t\"./lennon-stella_three-two-one.jpg\": 117,\n\t\"./leon_leon.jpg\": 118,\n\t\"./lissie_catching-a-tiger.jpg\": 119,\n\t\"./lorde_pure-heroine.jpg\": 120,\n\t\"./marina_electra-heart.jpg\": 121,\n\t\"./muna_about-u.jpg\": 122,\n\t\"./natalia-kills_perfectionist.jpg\": 123,\n\t\"./panic-at-the-disco_a-fever-you-cant-sweat-out.jpg\": 124,\n\t\"./paramore_riot.jpg\": 125,\n\t\"./pvris_all-we-know-of-heaven-all-we-need-of-hell.jpg\": 126,\n\t\"./rihanna_rated-r.jpg\": 127,\n\t\"./ryn-weaver_the-fool.jpg\": 128,\n\t\"./sophie_oil-of-every-pearls-uninsides.jpg\": 129,\n\t\"./sufjan-stevens_carrie-and-lowell.jpg\": 130,\n\t\"./taylor-swift_1989.jpg\": 131,\n\t\"./tourist_u.jpg\": 132,\n\t\"./troye-sivan_bloom.jpg\": 133\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 89;","module.exports = __webpack_public_path__ + \"static/media/1975-the_a-brief-inquiry-into-online-relationships.450622e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/adele_19.e2cf5b85.jpg\";","module.exports = __webpack_public_path__ + \"static/media/allie-x_super-sunset.e4ba903d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amy-winehouse_back-to-black.ecf94e06.jpg\";","module.exports = __webpack_public_path__ + \"static/media/arctic-monkeys_favourite-worst-nightmare.58968a16.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ariana-grande_thank-u-next.da50a9a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banks_goddess.c710ccf4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banks_iii.b72779a4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ben-howard_every-kingdom.7c15634d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beyonce_lemonade.50a3a82a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/caribou_our-love.c6a86242.jpg\";","module.exports = __webpack_public_path__ + \"static/media/charli-xcx_how-im-feeling-now.189d54fe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dua-lipa_future-nostalgia.58a27cc6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ellie-goulding_halcyon.130bb708.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fka-twigs_magdalene.953f91d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/florence-and-the-machine_lungs.32d27476.jpg\";","module.exports = __webpack_public_path__ + \"static/media/george-fitzgerald_all-that-must-be.7b74b70d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/grimes_art-angels.d701ba28.jpg\";","module.exports = __webpack_public_path__ + \"static/media/haim_women-in-music-pt-iii.40870384.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jon-hopkins_singularity.9b297b88.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kate-nash_made-of-bricks.667a0a03.jpg\";","module.exports = __webpack_public_path__ + \"static/media/katy-perry_one-of-the-boys.b2413afa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kim-petras_clarity.d1fee18a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lady-gaga_born-this-way.557d8c6f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lana-del-rey_born-to-die.603d1f0a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lane-8_rise.9e86b3c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lany_malibu-nights.c0777d86.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lennon-stella_three-two-one.d69b662b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/leon_leon.c6cc0d11.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lissie_catching-a-tiger.08a934f8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lorde_pure-heroine.5fb4c008.jpg\";","module.exports = __webpack_public_path__ + \"static/media/marina_electra-heart.158a3826.jpg\";","module.exports = __webpack_public_path__ + \"static/media/muna_about-u.a9a59d8a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/natalia-kills_perfectionist.9a12b633.jpg\";","module.exports = __webpack_public_path__ + \"static/media/panic-at-the-disco_a-fever-you-cant-sweat-out.6809f186.jpg\";","module.exports = __webpack_public_path__ + \"static/media/paramore_riot.bb10da24.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pvris_all-we-know-of-heaven-all-we-need-of-hell.4a601a47.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rihanna_rated-r.00ea61a4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ryn-weaver_the-fool.bfb6310a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sophie_oil-of-every-pearls-uninsides.18bc11af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sufjan-stevens_carrie-and-lowell.e2842b0a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/taylor-swift_1989.68762a13.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tourist_u.43cf73ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/troye-sivan_bloom.fdadad49.jpg\";","import styled, { css } from \"styled-components\";\n\ninterface IUl {\n  showBullets?: boolean;\n}\n\nexport const Ul = styled.ul(\n  ({ showBullets }: IUl) => css`\n    margin: 0;\n    padding: 0;\n\n    ${showBullets\n      ? css`\n          list-style-type: square;\n          list-style-position: inside;\n        `\n      : css`\n          list-style-type: none;\n        `}\n  `\n);\n\nexport const Li = styled.li``;\n","import styled from \"styled-components\";\n\nimport { Li } from \"./Lists\";\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const FlexColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FlexSpan = styled.span`\n  display: flex;\n`;\n\nexport const FlexRowGrow = styled(FlexRow)`\n  flex: 1;\n`;\n\nexport const FlexSpanGrow = styled(FlexSpan)`\n  flex: 1;\n`;\n\nexport const FlexLiGrow = styled(Li)`\n  display: flex;\n  flex: 1;\n`;\n","interface IBreakpoint {\n  maxWidth?: PxValue;\n  minWidth?: PxValue;\n  maxHeight?: PxValue;\n  minHeight?: PxValue;\n}\n\ninterface IBreakpoints {\n  phoneSmall: IBreakpoint;\n  phoneLarge: IBreakpoint;\n  tablet: IBreakpoint;\n  laptop: IBreakpoint;\n  desktop: IBreakpoint;\n  largeDesktop: IBreakpoint;\n}\n\nexport const BREAKPOINTS: IBreakpoints = {\n  phoneSmall: { maxWidth: \"576px\", maxHeight: \"568px\" },\n  phoneLarge: {\n    minWidth: \"577px\",\n    maxWidth: \"767px\",\n    minHeight: \"569px\",\n    maxHeight: \"667px\"\n  },\n  tablet: { minWidth: \"768px\", maxWidth: \"980px\" },\n  laptop: { minWidth: \"981px\", maxWidth: \"1280px\", maxHeight: \"720px\" },\n  desktop: { minWidth: \"1281px\", maxWidth: \"1689px\", minHeight: \"721px\" },\n  largeDesktop: { minWidth: \"1690px\" }\n};\n","import { css } from \"styled-components\";\n\nconst FONT_SIZE_75_PERCENT = css`\n  font-size: 75%;\n`;\n\nconst PSEUDO_ELEMENT_HEART = css`\n  ::before {\n    content: \"♥ \";\n  }\n`;\n\nconst PSEUDO_ELEMENT_STAR = css`\n  ::before {\n    content: \"★ \";\n  }\n`;\n\nconst ZERO_MARGIN_AND_PADDING = css`\n  margin: 0;\n  padding: 0;\n`;\n\nconst GRID_COLUMN = css`\n  display: grid;\n  grid-auto-flow: column;\n`;\n\nconst GRID_COLUMN_EQUAL_WIDTHS = css`\n  ${GRID_COLUMN}\n  grid-auto-columns: 1fr;\n`;\n\nexport const CSS = {\n  FONT_SIZE_75_PERCENT,\n  GRID_COLUMN,\n  GRID_COLUMN_EQUAL_WIDTHS,\n  PSEUDO_ELEMENT_HEART,\n  PSEUDO_ELEMENT_STAR,\n  ZERO_MARGIN_AND_PADDING\n};\n","interface IColors {\n  black: ColorValue;\n  boulder: ColorValue;\n  gray: ColorValue;\n  gainsboro: ColorValue;\n  white: ColorValue;\n  avocado: ColorValue;\n  camarone: ColorValue;\n  surfCrest: ColorValue;\n  japaneseLaurel: ColorValue;\n  sprout: ColorValue;\n  eden: ColorValue;\n  turkishRose: ColorValue;\n  monaLisa: ColorValue;\n  mandy: ColorValue;\n  azalea: ColorValue;\n  amethystSmoke: ColorValue;\n  bouquet: ColorValue;\n  aliceBlue: ColorValue;\n  nepal: ColorValue;\n  sherpaBlue: ColorValue;\n  jetStream: ColorValue;\n  baliHai: ColorValue;\n  buddhaGold: ColorValue;\n  hillary: ColorValue;\n  champagne: ColorValue;\n  bisonHide: ColorValue;\n  sandyBrown: ColorValue;\n}\n\nexport const COLORS: IColors = {\n  // Grayscale\n  black: \"#000000\",\n  boulder: \"#777777\",\n  gray: \"#808080\",\n  gainsboro: \"#DCDCDC\",\n  white: \"#FFFFFF\",\n  // Greens\n  eden: \"#0E563E\",\n  avocado: \"#899A67\",\n  sprout: \"#B9D1A3\",\n  surfCrest: \"#CEE5CE\",\n  camarone: \"#006400\",\n  japaneseLaurel: \"#008000\",\n  // Pinks, purples, reds\n  azalea: \"#F6C5DB\",\n  turkishRose: \"#B86B77\",\n  monaLisa: \"#FF9999\",\n  mandy: \"#EE5162\",\n  amethystSmoke: \"#A186B0\",\n  bouquet: \"#BA8FA7\",\n  // Blues\n  sherpaBlue: \"#00594F\",\n  aliceBlue: \"#F0F8FF\",\n  nepal: \"#9CB0C3\",\n  baliHai: \"#86A3B0\",\n  jetStream: \"#BFD9D7\",\n  // Creams, yellows, oranges\n  hillary: \"#B0A186\",\n  champagne: \"#FAE9D5\",\n  bisonHide: \"#C0B7A7\",\n  buddhaGold: \"#CCA100\",\n  sandyBrown: \"#F2A652\"\n};\n\ninterface IPageColors {\n  GIGS: ColorValue;\n  RECIPES: ColorValue;\n  THEATRE: ColorValue;\n  TRAVEL: ColorValue;\n  VINYL: ColorValue;\n}\n\nexport const PAGE_COLORS: IPageColors = {\n  GIGS: COLORS.amethystSmoke,\n  RECIPES: COLORS.avocado,\n  THEATRE: COLORS.hillary,\n  TRAVEL: COLORS.baliHai,\n  VINYL: COLORS.turkishRose\n};\n","interface IFontSizes {\n  XxL: RemValue;\n  XL: RemValue;\n  L: RemValue;\n  M: RemValue;\n  S: RemValue;\n}\n\nexport const FONT_SIZES: IFontSizes = {\n  XxL: \"4.375rem\",\n  XL: \"2rem\",\n  L: \"1.5rem\",\n  M: \"1rem\",\n  S: \"0.75rem\"\n};\n","import { createGlobalStyle, css } from \"styled-components\";\nimport { normalize } from \"polished\";\n\nexport const fontFamily: string = \"-apple-system, Helvetica, sans-serif\";\nexport const scrollbarSize: PxValue = \"10px\";\n\nexport const CSS_scrollbar = css`\n  ::-webkit-scrollbar {\n    width: ${scrollbarSize};\n    height: ${scrollbarSize};\n  }\n\n  ::-webkit-scrollbar-track {\n    background: rgba(180, 178, 183, 0.3);\n    border: 1px solid rgba(180, 178, 183, 0.3);\n    border-radius: ${scrollbarSize};\n  }\n\n  ::-webkit-scrollbar-thumb {\n    cursor: pointer;\n    background: rgba(0, 0, 0, 0.3);\n    border: 1px solid rgba(180, 178, 183, 0.3);\n    border-radius: ${scrollbarSize};\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background: rgba(0, 0, 0, 0.5);\n    border-color: rgba(180, 178, 183, 0.5);\n  }\n`;\n\nconst CSS_GlobalStyle = css`\n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n\n  ::-webkit-scrollbar-corner {\n    background-color: transparent;\n  }\n\n  body {\n    font-family: ${fontFamily};\n\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n\n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Old versions of Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none; /* Non-prefixed version, currently supported by Chrome, Opera and Firefox */\n  }\n\n  body:before {\n    margin: 0;\n    content: \"\";\n    display: block;\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -10;\n    /* background: linear-gradient(white, lightGrey) no-repeat center center; */\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n  }\n`;\n\nexport const GlobalStyle = createGlobalStyle`\n  ${normalize()}\n  ${CSS_GlobalStyle}\n`;\n","import { rgba } from \"polished\";\n\nimport { BREAKPOINTS } from \"./breakpoints\";\nimport { COLORS } from \"./colors\";\nimport { fontFamily, scrollbarSize } from \"./GlobalStyle\";\n\nconst THEME_BREAKPOINTS: IThemeBreakpoints = {\n  breakpoints: BREAKPOINTS\n};\n\nconst THEME_COUNTED_LIST_ITEM: IThemeCountedListItem = {\n  countedListItem: { count: { margin: { left: \"5px\" }, width: \"20px\" } }\n};\n\nconst THEME_DISCLOSURE: IThemeDisclosure = {\n  disclosure: { transition: \"all 0.4s ease\" }\n};\n\nconst THEME_EVENT_CARD: IThemeEventCard = {\n  eventCard: {\n    companySymbol: { color: COLORS.boulder, spaceBetweenSymbols: \"5px\" },\n    notFirstChild: { margin: { top: \"5px\" } },\n    photo: { size: \"75px\" }\n  }\n};\n\nconst THEME_NAV_BAR: IThemeNavBar = {\n  navBar: {\n    background: COLORS.black,\n    icon: {\n      color: COLORS.white,\n      size: \"40px\",\n      defaultHoverColor: \"#aaa\",\n      hoverShrinkSize: \"0\"\n    },\n    padding: { vertical: \"10px\" }\n  }\n};\n\nconst THEME_PAGE_HEADER: IThemePageHeader = {\n  pageHeader: {\n    count: { padding: { all: \"12px 0 0 5px\" } },\n    margin: { bottom: \"25px\" }\n  }\n};\n\nconst THEME_PAGE_SECTION: IThemePageSection = {\n  pageSection: {\n    background: COLORS.gainsboro,\n    borderRadius: \"10px\",\n    boxShadow: `0 1px 2px ${rgba(COLORS.gray, 0.5)}`,\n    count: { margin: { left: \"5px\" } },\n    header: { padding: { vertical: \"12px\" } },\n    icon: { padding: { top: \"2px\" }, size: \"34px\" },\n    margin: { bottom: \"20px\" },\n    padding: { horizontal: \"12px\", bottom: \"5px\" },\n    panelList: {\n      border: { bottom: `1px solid ${COLORS.gray}` },\n      countedListItems: { padding: { vertical: \"5px\" } },\n      padding: { bottom: \"5px\" },\n      recipeCards: {\n        firstRecipeCard: { padding: { top: \"15px\" } },\n        lastRecipeCard: { padding: { bottom: \"20px\" } },\n        padding: { vertical: \"15px\" }\n      },\n      regularCards: {\n        lastRegularCard: { padding: { bottom: \"5px\" } },\n        padding: { vertical: \"10px\" }\n      }\n    },\n    transition: \"all 0.4s ease\"\n  }\n};\n\nconst pageLayoutHorizontalSpacing: PxValue = \"20px\";\nconst THEME_PAGE_LAYOUT: IThemePageLayout = {\n  pageLayout: {\n    columnGap: pageLayoutHorizontalSpacing,\n    padding: { all: `15px ${pageLayoutHorizontalSpacing} 25px` }\n  }\n};\n\nconst THEME_RECIPE_CARD: IThemeRecipeCard = {\n  recipeCard: {\n    dietSymbol: { margin: { top: \"4px\" } },\n    panel: {\n      children: { padding: { top: \"15px\" } },\n      padding: { top: \"5px\" }\n    },\n    photo: { size: \"300px\" },\n    portionCost: { margin: { top: \"3px\" } },\n    title: { fontWeight: \"300\" }\n  }\n};\n\nconst THEME_ROUNDED_SYMBOL: IThemeRoundedSymbol = {\n  roundedSymbol: {\n    borderRadius: \"25%\",\n    fontSize: \"75%\",\n    size: \"26px\",\n    textColor: COLORS.white\n  }\n};\n\nconst THEME_VINYL_CARD: IThemeVinylCard = {\n  vinylCard: {\n    artwork: { margin: { right: \"10px\" }, size: \"100px\" },\n    notLastChild: { margin: { bottom: \"5px\" } }\n  }\n};\n\nexport const THEME: ITheme = {\n  ...THEME_BREAKPOINTS,\n  ...THEME_COUNTED_LIST_ITEM,\n  ...THEME_DISCLOSURE,\n  ...THEME_EVENT_CARD,\n  ...THEME_NAV_BAR,\n  ...THEME_PAGE_HEADER,\n  ...THEME_PAGE_LAYOUT,\n  ...THEME_PAGE_SECTION,\n  ...THEME_ROUNDED_SYMBOL,\n  ...THEME_RECIPE_CARD,\n  ...THEME_VINYL_CARD,\n\n  fadedOpacity: 0.5,\n  fontFamily,\n  listItemGroupVerticalSpacing: \"10px\",\n  scrollbarSize\n};\n","import styled, { css } from \"styled-components\";\n\nimport { CSS } from \"styles\";\n\ninterface IGridColumnDiv {\n  columnGap?: PxValue;\n  equalWidthColumns: boolean;\n}\n\nexport const GridColumnDiv = styled.div(\n  ({ columnGap, equalWidthColumns = true }: IGridColumnDiv) => css`\n    ${equalWidthColumns ? CSS.GRID_COLUMN_EQUAL_WIDTHS : CSS.GRID_COLUMN}\n\n    ${columnGap &&\n    css`\n      column-gap: ${columnGap};\n    `}\n  `\n);\n","import styled from \"styled-components\";\n\nimport { FONT_SIZES, CSS } from \"styles\";\n\nexport const H1 = styled.h1`\n  ${CSS.ZERO_MARGIN_AND_PADDING}\n  font-size: ${FONT_SIZES.XxL};\n`;\n\nexport const H2 = styled.h2`\n  ${CSS.ZERO_MARGIN_AND_PADDING}\n  font-size: ${FONT_SIZES.XL};\n`;\n\nexport const H3 = styled.h3`\n  ${CSS.ZERO_MARGIN_AND_PADDING}\n  font-size: ${FONT_SIZES.L};\n`;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const RouterLink = styled(Link)`\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  text-decoration: none;\n`;\n","import styled from \"styled-components\";\n\nexport const Link = styled.a`\n  text-decoration: none;\n`;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\ninterface IStyledImage {\n  size: string;\n}\n\nconst StyledImage = styled.img(\n  ({ size }: IStyledImage) => css`\n    height: ${size};\n    width: ${size};\n    margin: 0;\n  `\n);\n\ninterface ISquareImage {\n  className?: string;\n  dataTest?: string;\n  imgSrc: string;\n  size: string;\n}\n\nexport const SquareImage = ({\n  className,\n  dataTest,\n  imgSrc,\n  size\n}: ISquareImage) => (\n  <StyledImage\n    className={className}\n    data-test={dataTest}\n    src={imgSrc}\n    size={size}\n  />\n);\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { USE_COLORS_IN_NAV_BAR } from \"config\";\nimport { RouterLink } from \"primitives\";\nimport { CSS } from \"styles\";\n\nconst StyledNav = styled.nav(\n  ({ theme: { navBar } }: IThemeProp) => css`\n    background: ${navBar.background};\n    padding: ${navBar.padding.vertical} 0;\n\n    ${CSS.GRID_COLUMN_EQUAL_WIDTHS}\n  `\n);\n\ninterface IStyledLink extends IThemeProp {\n  color?: ColorValue;\n}\n\nconst StyledRouterLink = styled(RouterLink)(\n  ({ color, theme: { navBar } }: IStyledLink) => css`\n    display: flex;\n    justify-content: center;\n\n    svg {\n      fill: ${navBar.icon.color};\n      width: ${navBar.icon.size};\n      height: ${navBar.icon.size};\n    }\n\n    :hover {\n      svg {\n        border: ${navBar.icon.hoverShrinkSize} solid transparent;\n        fill: ${(USE_COLORS_IN_NAV_BAR && color) ||\n        navBar.icon.defaultHoverColor};\n      }\n    }\n  `\n);\n\ninterface INavBar {\n  pages: Array<IPage>;\n}\n\nexport const NavBar: React.FC<INavBar> = ({ pages }) => (\n  <StyledNav>\n    {pages.map(({ path, SvgIcon, color }: IPage, index: number) => (\n      <StyledRouterLink key={index} to={path} color={color}>\n        <SvgIcon />\n      </StyledRouterLink>\n    ))}\n  </StyledNav>\n);\n","export const moveTheSuffixToPrefix = (string: string): string => {\n  const theSuffix = \", The\";\n\n  if (string.slice(-5) === theSuffix)\n    return `The ${string.substring(0, string.length - theSuffix.length)}`;\n\n  return string;\n};\n","import { moveTheSuffixToPrefix } from \"./moveTheSuffixToPrefix\";\n\ninterface IArrayToString {\n  stringArray: Array<string>;\n  useAmpersandsForPair?: boolean;\n}\n\nexport const arrayToString = ({\n  stringArray,\n  useAmpersandsForPair\n}: IArrayToString): string => {\n  stringArray.map((item: string): string => moveTheSuffixToPrefix(item));\n\n  if (useAmpersandsForPair && stringArray.length === 2)\n    return `${stringArray[0]} & ${stringArray[1]}`;\n\n  return stringArray.join(\", \");\n};\n","export const ACTORS: IActors = {\n  // A\n  ADAM_JAMES: { name: \"Adam James\" },\n  ADI_CHUGH: { name: \"Adi Chugh\" },\n  AIMEE_LOU_WOOD: { name: \"Aimee Lou Wood\" },\n  // B\n  BENJAMIN_ALUWIHARE: { name: \"Benjamin Aluwihare\" },\n  // C\n  CLAIRE_FOY: { name: \"Claire Foy\", favourite: true },\n  //\n  DAVID_MOORST: { name: \"David Moorst\" },\n  // G\n  GWENDOLINE_CHRISITE: { name: \"Gwendoline Christie\" },\n  // H\n  HAMMED_ANIMASHAUN: { name: \"Hammed Animashaun\" },\n  HATTY_JONES: { name: \"Hatty Jones\" },\n  // J\n  JASON_WATKINS: { name: \"Jason Watkins\" },\n  JOHN_MCCREA: { name: \"John McCrea\" },\n  // K\n  KATHERINE_PARKINSON: { name: \"Katherine Parkinson\", favourite: true },\n  // L\n  LAURIE_KYNASTON: { name: \"Laurie Kynaston\", favourite: true },\n  LEE_INGLEBY: { name: \"Lee Ingleby\" },\n  // M\n  MATT_SMITH: { name: \"Matt Smith\" },\n  MILLY_THOMAS: { name: \"Milly Thomas\" },\n  // N\n  NINA_SOSANYA: { name: \"Nina Sosanya\" },\n  // O\n  OLIVER_CHRIS: { name: \"Oliver Chris\" },\n  // P\n  PETER_MCPHERSON: { name: \"Peter McPherson\" },\n  // S\n  SARA_BAREILLES: { name: \"Sara Bareilles\" },\n  SIAN_CLIFFORD: { name: \"Sian Clifford\", favourite: true },\n  SURANNE_JONES: { name: \"Suranne Jones\", favourite: true },\n  // T\n  TIMOTHEE_CHALAMET: { name: \"Timothée Chalamet\", favourite: true }\n};\n","import { COLORS } from \"styles\";\n\ninterface IDiets {\n  VEGAN: IRecipeDiet;\n  VEGETARIAN: IRecipeDiet;\n}\n\nexport const DIETS: IDiets = {\n  VEGAN: { abbreviation: \"Ve\", color: COLORS.camarone },\n  VEGETARIAN: { abbreviation: \"V\", color: COLORS.japaneseLaurel }\n};\n","export const FESTIVALS: IFestivals = {\n  // A\n  AREA_10_NYE: { name: \"Area 10 NYE\" },\n  // B\n  BESTIVAL: { name: \"Bestival\", festival: true },\n  BRIGHTON_PRIDE: { name: \"Brighton Pride\", festival: true },\n  // C\n  CHINGFEST: { name: \"Chingfest\" },\n  // D\n  DECAYDANCE: { name: \"Decaydance\", festival: true },\n  DEFECTED_BRISTOL: { name: \"Defected In the House Day & Night Party\" },\n  // F\n  FABRIC_NYE: { name: \"Fabric NYE\" },\n  // G\n  GLASTONBURY: { name: \"Glastonbury\", festival: true, favourite: true },\n  // H\n  HOMOBLOC: { name: \"Homobloc\", festival: true },\n  // K\n  KALEIDOSCOPE: { name: \"Kaleidoscope\", festival: true },\n  // L\n  LOVEBOX: { name: \"Lovebox\", festival: true },\n  // M\n  MAD_COOL: { name: \"Mad Cool\", festival: true },\n  MANCHESTER_PRIDE: { name: \"Manchester Pride\", festival: true },\n  MIGHTY_HOOPLA: { name: \"Mighty Hoopla\", festival: true },\n  // N\n  NOTION_SUMMER_PARTY: { name: \"Notion Summer Party\" },\n  // O\n  ON_THE_RUN_II: { name: \"On the Run II\" },\n  // P\n  PARKLIFE: { name: \"Parklife\", festival: true },\n  // T\n  TRANSMISSION: { name: \"Transmission\", festival: true },\n  TRIBAL_SESSIONS: { name: \"Tribal Sessions\" },\n  // V\n  V_FESTIVAL: { name: \"V Festival\", festival: true },\n  // W\n  WAREHOUSE_PROJECT: {\n    name: \"Warehouse Project\",\n    festival: true,\n    favourite: true\n  }\n};\n","const GROUPS: IFriendGroups = {\n  CFS: { name: \"Colonel Frank Seely\", initials: \"CFS\" },\n  JHC: { name: \"JHC\", initials: \"JHC\" }\n};\n\nexport const FRIENDS: IFriends = {\n  ...GROUPS,\n  // A\n  AISHA_SAEED: { name: \"Aisha Saeed\", initials: \"AS\" },\n  ALEX_FAYE: { name: \"Alex-Faye Grundy\", initials: \"AG\" },\n  ALICE_RODER: { name: \"Alice Roder\", initials: \"AR\" },\n  AMY_BAGNI: { name: \"Amy Bagni\", initials: \"AB\" },\n  AMY_CALCUTT: { name: \"Amy Calcutt\", initials: \"AC\" },\n  ANNIE_BUTCHER: { name: \"Annie Butcher\", initials: \"AB\" },\n  ASH_MORETON: { name: \"Ash Moreton\", initials: \"AM\" },\n  // B\n  BECKY_MILLS: { name: \"Becky Mills\", initials: \"BM\" },\n  BETH_OAKES: { name: \"Beth Oakes\", initials: \"BO\" },\n  BETH_SHEARS: { name: \"Beth Shears\", initials: \"BS\" },\n  BETH_SPELLER: { name: \"Beth Speller\", initials: \"BS\" },\n  BLAINE_PEARSON: { name: \"Blaine Pearson\", initials: \"BP\" },\n  // C\n  CAITY_DALBY: { name: \"Caity Dalby\", initials: \"CD\" },\n  CAITLIN_MCCAIG: {\n    name: \"Caitlin McCaig\",\n    initials: \"CM\",\n    gigs: true,\n    travel: true\n  },\n  CARMEN_DALGLISH: { name: \"Carmen Dalglish\", initials: \"CD\", travel: true },\n  CAMERON_BLACKBURN: { name: \"Cameron Blackburn\", initials: \"CB\" },\n  CHELSEA_CUNNINGHAM: { name: \"Chelsea Cunningham\", initials: \"CC\" },\n  CHLOE_WHITE: { name: \"Chloé White\", initials: \"CW\" },\n  CHRISTELLE_MUTUNDA: { name: \"Christelle Mutunda\", initials: \"CM\" },\n  COBY_BLACKBURN: { name: \"Coby Blackburn\", initials: \"CB\" },\n  COURTNEY_LAWSON: { name: \"Courtney Lawson\", initials: \"CL\" },\n  // D\n  DAD: { name: \"Dad\", initials: \"D\", gigs: true, theatre: true, travel: true },\n  DARREN_TAYLOR: {\n    name: \"Darren Taylor\",\n    initials: \"DT\",\n    gigs: true,\n    theatre: true\n  },\n  DAN_SPARROW: {\n    name: \"Dan Sparrow\",\n    initials: \"DS\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  DOM_COYNE: { name: \"Dominic Coyne\", initials: \"DC\", theatre: true },\n  // E\n  ELLE_OLDROYD: { name: \"Elle Oldroyd\", initials: \"EO\" },\n  ELINORE_GILLESPIE: { name: \"Elinore Gillespie\", initials: \"EG\" },\n  ELISE_MORLEY: { name: \"Elise Morley\", initials: \"EM\" },\n  ELLIE_FORMAN: { name: \"Ellie Forman\", initials: \"EF\" },\n  ELLIE_GURKIN: { name: \"Ellie Gurkin\", initials: \"EG\", travel: true },\n  ELLIE_PEARCE: { name: \"Ellie Pearce\", initials: \"EP\" },\n  ELLIE_SPANOVIC: { name: \"Ellie Spanovic\", initials: \"ES\" },\n  EMMA_CODRINGTON: {\n    name: \"Emma Codrington\",\n    initials: \"EC\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  // F\n  FANNY_LINDQVIST: { name: \"Fanny Lindqvist\", initials: \"FL\" },\n  // G\n  GEMMA_GILDERTHORP: { name: \"Gemma Gilderthorp\", initials: \"GG\" },\n  GEORGE_LITTLEHALES: { name: \"George Littlehales\", initials: \"GL\" },\n  GRACE_HULME: { name: \"Grace Hulme\", initials: \"GH\", travel: true },\n  // H\n  HANNA_FROGNER: { name: \"Hanna Frogner\", initials: \"HF\" },\n  HARRIET_BOYLE: { name: \"Harriet Boyle\", initials: \"HB\" },\n  HARRIET_KESTERTON: { name: \"Harriet Kesterton\", initials: \"HK\" },\n  HEATHER_CHILES: { name: \"Heather Chiles\", initials: \"HC\" },\n  // J\n  JAIMINI_POPAT: { name: \"Jaimini Popat\", initials: \"JP\" },\n  JAMIE_HALKET: {\n    name: \"Jamie Halket\",\n    initials: \"JH\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  JAZZ_THIND: { name: \"Jasminder Thind\", initials: \"JT\" },\n  JERRY_EDWARDS: {\n    name: \"Jerry Edwards\",\n    initials: \"JE\",\n    gigs: true,\n    theatre: true\n  },\n  JOE_EDWARDS: { name: \"Joe Edwards\", initials: \"JE\", theatre: true },\n  JESS_SMITH: { name: \"Jess Smith\", initials: \"JS\" },\n  JUNAID_KHAN: { name: \"Junaid Khan\", initials: \"JK\" },\n  // K\n  KATE_BOWMAR: { name: \"Kate Bowmar\", initials: \"KB\" },\n  KIERAN_SAWFORD: { name: \"Kieran Sawford\", initials: \"KS\" },\n  KIRSTEN_JACKSON: { name: \"Kirsten Jackson\", initials: \"KJ\" },\n  KYLE_HOUGH: { name: \"Kyle Hough\", initials: \"KH\" },\n  // L\n  LAURA_CAPECE_GALEOTA: { name: \"Laura Capece-Galeota\", initials: \"LC\" },\n  LEAH_SLATER_RADWAY: { name: \"Leah Slater-Radway\", initials: \"LS\" },\n  LEWIS_STEADMAN: {\n    name: \"Lewis Steadman\",\n    initials: \"LS\",\n    gigs: true,\n    theatre: true\n  },\n  LINDSAY_ASPINALL: { name: \"Lindsay Aspinall\", initials: \"LA\" },\n  LINDSEY_SKELTON: { name: \"Lindsey Skelton\", initials: \"LS\" },\n  LOUISE_BLACKBURN: { name: \"Louise Blackburn\", initials: \"LB\" },\n  LUKE_JONES: { name: \"Luke Jones\", initials: \"LJ\" },\n  LUKE_STERN: { name: \"Luke Stern\", initials: \"LS\" },\n  // M\n  MARIA_TAYLOR: { name: \"Maria Taylor\", initials: \"MT\", theatre: true },\n  MEGAN_BLACKBURN: { name: \"Megan Blackburn\", initials: \"MB\", gigs: true },\n  MUM: { name: \"Mum\", initials: \"M\", gigs: true, theatre: true, travel: true },\n  // N\n  NATALIE_LAMBERT: { name: \"Natalie Lambert\", initials: \"NL\" },\n  NAV_BHOGAL: { name: \"Navneet Bhogal\", initials: \"NB\" },\n  // O\n  OSCAR_MURRAY: { name: \"Oscar Murray\", initials: \"OM\" },\n  // P\n  PATRICIA_DIACONESCU: { name: \"Patricia Diaconescu\", initials: \"PD\" },\n  POOJA_DHIR: { name: \"Pooja Dhir\", initials: \"PD\", travel: true },\n  POPPY_SMITH: { name: \"Poppy Smith\", initials: \"PS\" },\n  // R\n  ROB_GALL: { name: \"Robert Gall\", initials: \"RG\" },\n  RYAN_MILLS: { name: \"Ryan Mills\", initials: \"RM\", gigs: true, travel: true },\n  // S\n  SAM_BERRIE: { name: \"Sam Berrie\", initials: \"SB\" },\n  SARAH_WALKER: { name: \"Sarah Walker\", initials: \"SW\" },\n  SARAH_WHITAKER: { name: \"Sarah Whitaker\", initials: \"SW\" },\n  SIAN_RODWAY_SMITH: {\n    name: \"Sian Rodway-Smith\",\n    initials: \"SR\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  SIMAN_PONE: { name: \"Siman Pone\", initials: \"SP\" },\n  SONYA_PARDI: { name: \"Sonya Pardi\", initials: \"SP\", gigs: true },\n  STEVE_RICHARDS: { name: \"Steve Richards\", initials: \"SR\" },\n  // T\n  THOM_STEPHANAKIS: { name: \"Thom Stephanakis\", initials: \"TS\" },\n  TOM_CHINDA_COUTTS: {\n    name: \"Tom Chinda-Coutts\",\n    initials: \"TC\",\n    gigs: true,\n    travel: true\n  },\n  TONYA_FRANCE: {\n    name: \"Tonya France\",\n    initials: \"TF\",\n    gigs: true,\n    travel: true\n  }\n};\n","const cities: ICitiesArgentina = {\n  BUENOS_AIRES: { name: \"Buenos Aires\", capital: true }\n};\n\nexport const ARGENTINA: IArgentina = {\n  name: \"Argentina\",\n  excludeFromBucketList: true,\n  cities\n};\n","const cities: ICitiesAustria = { VIENNA: { name: \"Vienna\", capital: true } };\n\nexport const AUSTRIA: IAustria = {\n  name: \"Austria\",\n  excludeFromBucketList: true,\n  cities\n};\n","const attractions: IAttractionsBarbados = {\n  HARRISONS_CAVE: { name: \"Harrison's Cave\" }\n};\n\nexport const BARBADOS: IBarbados = {\n  name: \"Barbados\",\n  island: true,\n  attractions\n};\n","const cities: ICitiesBeligum = {\n  BRUGES: { name: \"Bruges\" },\n  YPRES: { name: \"Ypres\" }\n};\n\nconst attractions: IAttractionsBelgium = {\n  BATTLEFIELDS: { name: \"Battlefields\" },\n  BELFRY_OF_BRUGES: { name: \"Belfry of Bruges\" }\n};\n\nexport const BELGIUM: IBelgium = { name: \"Belgium\", cities, attractions };\n","const attractions: IAttractionsBelize = {\n  BARRIER_REEF: { name: \"Belize Barrier Reef\", highlight: true }\n};\n\nconst cities: ICitiesBelize = {\n  BELIZE_CITY: {\n    name: \"Belize City\",\n    capital: true,\n    excludeFromBucketList: true\n  }\n};\n\nconst islands: IIslandsBelize = {\n  AMBERGRIS_CAYE: { name: \"Ambergris Caye\" },\n  CAYE_CAULKER: { name: \"Caye Caulker\" }\n};\n\nexport const BELIZE: IBelize = { name: \"Belize\", attractions, cities, islands };\n","const cities: ICitiesBrazil = { RIO_DE_JANEIRO: { name: \"Rio de Janeiro\" } };\n\nconst attractions: IAttractionsBrazil = {\n  MODERN_ART_MUSEUM_RIO: {\n    name: \"Modern Art Museum Rio\",\n    foreignName: \"Museu de Arte Moderna do Rio de Janeiro\"\n  },\n  COPACABANA_BEACH: { name: \"Copacabana Beach\" },\n  ROCINHA_FAVELA: { name: \"Rocinha Favela\" },\n  CHRIST_THE_REDEEMER: { name: \"Cristo Redentor\" },\n  SELARON_STEPS: {\n    name: \"Selarón Steps\",\n    foreignName: \"Escadaria Selarón\"\n  },\n  HANG_GLIDING: { name: \"São Conrado Hang-Gliding\", highlight: true },\n  PICO_DO_PAPAGAIO: {\n    name: \"Pico do Papagaio\",\n    englishName: \"Parrot's Peak\",\n    foreignName: \"Pico do Papagaio\",\n    highlight: true\n  }\n};\n\nconst islands: IIslandsBrazil = { ILHA_GRANDE: { name: \"Ilha Grande\" } };\n\nexport const BRAZIL: IBrazil = {\n  name: \"Brazil\",\n  cities,\n  attractions,\n  islands\n};\n","const cities: ICitiesCanada = { NIAGARA_FALLS: { name: \"Niagara Falls\" } };\n\nconst attractions: IAttractionsCanada = {\n  NIAGARA_FALLS: { name: \"Niagara Falls\", highlight: true }\n};\n\nexport const CANADA: ICanada = { name: \"Canada\", cities, attractions };\n","const attractions: IAttractionsCostaRica = {\n  CORCOVADO: { name: \"Corcovado National Park\", highlight: true },\n  JAGUAR_RESCUE_CENTER: { name: \"Jaguar Rescue Center\" }\n};\n\nconst cities: ICitiesCostaRica = {\n  SAN_JOSE: { name: \"San Jose\", capital: true, excludeFromBucketList: true }\n};\n\nconst towns: ITownsCostaRica = {\n  MONTEVERDE: { name: \"Monteverde\" },\n  PUERTO_VIEJO: { name: \"Puerto Viejo\" }\n};\n\nexport const COSTA_RICA: ICostaRica = {\n  name: \"Costa Rica\",\n  attractions,\n  cities,\n  towns\n};\n","const cities: ICitiesCroatia = { DUBROVNIK: { name: \"Dubrovnik\" } };\n\nconst attractions: IAttractionsCroatia = {\n  DUBROVNIK_CABLE_CAR: { name: \"Dubrovnik Cable Car\" },\n  DUBROVNIK_WALLS: { name: \"Walls of Dubrovnik\", highlight: true }\n};\n\nexport const CROATIA: ICroatia = { name: \"Croatia\", cities, attractions };\n","const cities: ICitiesCuba = { HAVANA: { name: \"Havana\", capital: true } };\n\nconst towns: ITownsCuba = { VARADERO: { name: \"Varadero\" } };\n\nexport const CUBA: ICuba = { name: \"Cuba\", island: true, cities, towns };\n","const cities: ICitiesCyprus = { PAPHOS: { name: \"Paphos\" } };\n\nconst attractions: IAttractionsCyprus = {\n  PAPHOS_ARCHAEOLOGICAL_PARK: { name: \"Paphos Archaeological Park\" }\n};\n\nexport const CYPRUS: ICyprus = { name: \"Cyprus\", cities, attractions };\n","const cities: ICitiesCzechRepublic = {\n  PRAGUE: { name: \"Prague\", capital: true }\n};\n\nconst attractions: IAttractionsCzechRepublic = {\n  JOHN_LENNON_WALL: { name: \"John Lennon Wall\" },\n  VYSEHRAD: { name: \"Vyšehrad\" }\n};\n\nexport const CZECH_REPUBLIC: ICzechRepublic = {\n  name: \"Czech Republic\",\n  cities,\n  attractions\n};\n","const cities: ICitiesDenmark = { COPENHAGEN: { name: \"Copenhagen\" } };\n\nconst attractions: IAttractionsDenmark = {\n  LOUISIANA_ART_MUSEUM: { name: \"Louisiana Museum of Modern Art\" }\n};\n\nexport const DENMARK: IDenmark = {\n  name: \"Denmark\",\n  cities,\n  attractions\n};\n","const cities: ICitiesEcuador = {\n  BANOS: { name: \"Baños\" },\n  GUAYAQUIL: { name: \"Guayaquil\" },\n  OTAVALO: { name: \"Otavalo\" },\n  QUITO: { name: \"Quito\", capital: true }\n};\n\nconst attractions: IAttractionsEcuador = {\n  EQUATOR_MONUMENT: {\n    name: \"Equator Monument\",\n    foreignName: \"Ciudad Mitad del Mundo\"\n  },\n  OTAVALO_MARKET: { name: \"Otavalo Market\" },\n  TORTOISE_PARK: {\n    name: \"Giant Tortoise Reserve\",\n    foreignName: \"Reserva el Chato\"\n  },\n  PAILON_DEL_DIABLO: { name: \"Pailon del Diablo\", highlight: true },\n  COTOPAXI: { name: \"Cotopaxi Volcano\", highlight: true }\n};\n\nconst islands: IIslandsEcuador = {\n  GALAPAGOS: { name: \"Galápagos Islands\" }\n};\n\nexport const ECUADOR: IEcuador = {\n  name: \"Ecuador\",\n  cities,\n  attractions,\n  islands\n};\n","const cities: ICitiesEgypt = {\n  CAIRO: { name: \"Cairo\", capital: true },\n  SHARM_EL_SHEIKH: { name: \"Sharm El Sheikh\" }\n};\n\nconst attractions: IAttractionsEgypt = {\n  GIZA_PYRAMIDS_SPHINX: {\n    name: \"Giza Pyramids & Great Sphinx\",\n    highlight: true\n  }\n};\n\nexport const EGYPT: IEgypt = { name: \"Egypt\", cities, attractions };\n","const cities: ICitiesFrance = {\n  MONACO: { name: \"Monaco\" },\n  NICE: { name: \"Nice\" },\n  PARIS: { name: \"Paris\", capital: true }\n};\n\nconst attractions: IAttractionsFrance = {\n  SACRE_COEUR: { name: \"Sacré-Cœur\" },\n  LOUVRE: { name: \"Louvre\" },\n  ARC_DE_TRIOMPHE: { name: \"Arc de Triomphe\" },\n  AIR_SPACE_MUSEUM: { name: \"National Air and Space Museum of France\" },\n  SCIENCE_MUSEUM: { name: \"Paris Science Museum\" },\n  EIFFEL_TOWER: { name: \"Eiffel Tower\" },\n  NOTRE_DAME: { name: \"Notre-Dame de Paris\" },\n  DISNEYLAND_PARIS: { name: \"Disneyland Paris\", themePark: true },\n  PARC_ASTERIX: { name: \"Parc Astérix\", themePark: true }\n};\n\nexport const FRANCE: IFrance = { name: \"France\", cities, attractions };\n","const cities: ICitiesGermany = { BERLIN: { name: \"Berlin\", capital: true } };\n\nconst attractions: IAttractionsGermany = {\n  REICHSTAG: { name: \"Reichstag Building\" },\n  HOLOCAUST_MEMORIAL: { name: \"Holocaust Memorial\" },\n  BRANDENBURG_GATE: { name: \"Brandenburg Gate\" },\n  BERLIN_WALL: { name: \"Berlin Wall\" },\n  EAST_SIDE_GALLERY: { name: \"East Side Gallery\" }\n};\n\nexport const GERMANY: IGermany = { name: \"Germany\", cities, attractions };\n","const islands: IIslandsGreece = { KOS: { name: \"Kos\" } };\n\nconst regions: IRegionsGreece = { HALKIDIKI: { name: \"Halkidiki\" } };\n\nexport const GREECE: IGreece = { name: \"Greece\", islands, regions };\n","const cities: ICitiesHungary = {\n  BUDAPEST: { name: \"Budapest\", capital: true }\n};\n\nconst attractions: IAttractionsHungary = {\n  PARLIAMENT_BUILDING: { name: \"Hungarian Parliament Building\" },\n  THERMAL_BATH_SZECHENYI: { name: \"Széchenyi Thermal Bath\" },\n  CITADELLA: { name: \"Citadella\" }\n};\n\nexport const HUNGARY: IHungary = { name: \"Hungary\", cities, attractions };\n","const cities: ICitiesIreland = { DUBLIN: { name: \"Dublin\", capital: true } };\n\nconst attractions: IAttractionsIreland = {\n  ST_STEPHENS_GREEN_PARK: { name: \"St. Stephen's Green Park\" },\n  DUBLIN_PRISON: { name: \"Kilmainham Gaol\" },\n  GUINNESS_STOREHOUSE: { name: \"Guinness Storehouse\" }\n};\n\nexport const IRELAND: IIreland = {\n  name: \"Ireland\",\n  attractions,\n  cities\n};\n","const regions: IRegionsItaly = { SICILY: { name: \"Sicily\" } };\n\nconst cities: ICitiesItaly = {\n  FLORENCE: { name: \"Florence\" },\n  NAPLES: { name: \"Naples\" },\n  MILAN: { name: \"Milan\" },\n  ROME: { name: \"Rome\", capital: true },\n  VATICAN: { name: \"Vatican City\" },\n  CATANIA: { name: \"Catania\" },\n  VENICE: { name: \"Venice\" },\n  POMPEII: { name: \"Pompeii\" }\n};\n\nconst towns: ITownsItaly = {\n  JESOLO: { name: \"Jesolo\" },\n  SORRENTO: { name: \"Sorrento\" }\n};\n\nconst attractions: IAttractionsItaly = {\n  ARCO_DELLA_PACE: { name: \"Arco della Pace\" },\n  SEMPIONE_PARK: { name: \"Sempione Park\" },\n  MILAN_MALL: { name: \"Galleria Vittorio Emanuele II\" },\n  COLOSSEUM: { name: \"Colosseum\" },\n  TREVI_FOUNTAIN: { name: \"Trevi Fountain\" },\n  VESUVIUS: { name: \"Mount Vesuvius\" },\n  ETNA: { name: \"Mount Etna\" }\n};\n\nexport const ITALY: IItaly = {\n  name: \"Italy\",\n  regions,\n  cities,\n  towns,\n  attractions\n};\n","const cities: ICitiesLaos = {\n  LUANG_PRABANG: { name: \"Luang Prabang\" },\n  VIENTIANE: { name: \"Vientiane\", capital: true }\n};\n\nconst attractions: IAttractionsLaos = {\n  KUANG_SI_FALLS: { name: \"Kuang Si Falls\", highlight: true },\n  ELEPHANT_VILLAGE: { name: \"Elephant Village\" },\n  BUDDHA_PARK: { name: \"Buddha Park\" }\n};\n\nexport const LAOS: ILaos = { name: \"Laos\", cities, attractions };\n","const cities: ICitiesNetherlands = {\n  AMSTERDAM: { name: \"Amsterdam\", capital: true },\n  GRONINGEN: { name: \"Groningen\" }\n};\n\nconst attractions: IAttractionsNetherlands = {\n  STEDELIJK_MUSEUM: { name: \"Stedelijk Museum Amsterdam\" },\n  SEX_MUSEUM: { name: \"Venustempel Sex Museum\" },\n  GRONINGEN_MUSEUM: { name: \"Groninger Museum\" }\n};\n\nexport const NETHERLANDS: INetherlands = {\n  name: \"Netherlands\",\n  cities,\n  attractions\n};\n","const cities: ICitiesNorway = { OSLO: { name: \"Oslo\", capital: true } };\n\nconst islands: IIslandsNorway = { HOVEDOYA: { name: \"Hovedøya\" } };\n\nconst attractions: IAttractionsNorway = {\n  OSLO_FJORD_SAUNA: { name: \"Oslo Fjord Sauna\", highlight: true }\n};\n\nexport const NORWAY: INorway = { name: \"Norway\", cities, islands, attractions };\n","const cities: ICitiesPeru = {\n  AREQUIPA: { name: \"Arequipa\" },\n  CUSCO: { name: \"Cusco\" },\n  LIMA: { name: \"Lima\", capital: true },\n  HUARAZ: { name: \"Huaraz\" }\n};\n\nconst attractions: IAttractionsPeru = {\n  COLCA_CANYON: { name: \"Colca Canyon\" },\n  LAGUNA_69: { name: \"Laguna 69\", highlight: true },\n  JUNGLE_ZIPLINE: {\n    name: \"Santa Teresa Vertikal Zipline\",\n    highlight: true\n  },\n  MACHU_PICCHU: { name: \"Machu Picchu\", highlight: true },\n  HUACACHINA: { name: \"Huacachina Sand Dunes\", highlight: true },\n  HUASCARAN_PARK: { name: \"Huascaran National Park\" },\n  MANU: { name: \"Manú National Park\" },\n  RAINBOW_MOUNTAIN: { name: \"Rainbow Mountain\", highlight: true }\n};\n\nconst towns: ITownsPeru = {\n  MANCORA: { name: \"Mancora\" },\n  PARACAS: { name: \"Paracas\" }\n};\n\nconst villages: IVillagesPeru = { HUACACHINA: { name: \"Huacachina\" } };\n\nexport const PERU: IPeru = {\n  name: \"Peru\",\n  cities,\n  attractions,\n  towns,\n  villages\n};\n","const cities: ICitiesPoland = { KRAKOW: { name: \"Kraków\" } };\n\nconst attractions: IAttractionsPoland = {\n  AUSCHWITZ_BIRKENAU: { name: \"Auschwitz-Birkenau\", highlight: true },\n  WIELICZKA_SALT_MINE: { name: \"Wieliczka Salt Mine\" }\n};\n\nconst towns: ITownsPoland = { WIELICZKA: { name: \"Wieliczka\" } };\n\nexport const POLAND: IPoland = { name: \"Poland\", cities, attractions, towns };\n","const cities: ICitiesPortugal = {\n  LISBON: { name: \"Lisbon\", capital: true },\n  PORTIMAO: { name: \"Portimão\" },\n  PORTO: { name: \"Porto\" }\n};\n\nconst attractions: IAttractionsPortugal = {\n  ZOOMARINE: { name: \"Zoomarine Algarve\" },\n  OCENARIO_DE_LISBOA: {\n    name: \"Lisbon Oceanarium\",\n    foreignName: \"Oceanário de Lisboa\"\n  }\n};\n\nconst towns: ITownsPortugal = {\n  FERRAGUDO: { name: \"Ferragudo\" },\n  TAVIRA: { name: \"Tavira\" },\n  VILAMOURA: { name: \"Vilamoura\" }\n};\n\nexport const PORTUGAL: IPortugal = {\n  name: \"Portugal\",\n  cities,\n  attractions,\n  towns\n};\n","const cities: ICitiesSpain = {\n  BARCELONA: { name: \"Barcelona\" },\n  MADRID: { name: \"Madrid\", capital: true },\n  VALENCIA: { name: \"Valencia\" }\n};\n\nconst attractions: IAttractionsSpain = {\n  CIUTADELLA_PARK: { name: \"Ciutadella Park\" },\n  PARK_GUELL: { name: \"Park Güell\", highlight: true },\n  PARQUE_WARNER: { name: \"Parque Warner Madrid\", themePark: true },\n  SIAM_PARK: { name: \"Siam Park\", themePark: true },\n  PORTAVENTURA: { name: \"PortAventura\", themePark: true }\n};\n\nconst islands: IIslandsSpain = {\n  TENERIFE: { name: \"Tenerife\" },\n  IBIZA: { name: \"Ibiza\" },\n  MINORCA: { name: \"Minorca\" },\n  LANZAROTE: { name: \"Lanzarote\" }\n};\n\nexport const SPAIN: ISpain = { name: \"Spain\", cities, attractions, islands };\n","const cities: ICitiesSweden = {\n  STOCKHOLM: { name: \"Stockholm\", capital: true }\n};\n\nexport const SWEDEN: ISweden = {\n  name: \"Sweden\",\n  excludeFromBucketList: true,\n  cities\n};\n","const cities: ICitiesThailand = {\n  BANGKOK: { name: \"Bangkok\", capital: true },\n  CHIANG_MAI: { name: \"Chiang Mai\" },\n  CHIANG_RAI: { name: \"Chiang Rai\" }\n};\n\nconst islands: IIslandsThailand = {\n  KOH_PHI_PHI: { name: \"Koh Phi Phi\" },\n  KOH_PHANGAN: { name: \"Koh Phangan\" },\n  KOH_TAO: { name: \"Koh Tao\" }\n};\n\nconst attractions: IAttractionsThailand = {\n  WHITE_TEMPLE: { name: \"Wat Rong Khun\" },\n  MAYA_BAY: { name: \"Maya Bay\" },\n  PAI_CANYON: { name: \"Pai Canyon\", highlight: true },\n  TIGER_KINGDOM: { name: \"Tiger Kingdom\" },\n  GRAND_PALACE: { name: \"Grand Palace Bangkok\", highlight: true },\n  SKY_BAR: { name: \"Sky Bar Bangkok\" }\n};\n\nconst towns: ITownsThailand = {\n  KRABI: { name: \"Krabi\" },\n  PAI: { name: \"Pai\" }\n};\n\nexport const THAILAND: IThailand = {\n  name: \"Thailand\",\n  cities,\n  islands,\n  attractions,\n  towns\n};\n","const cities: ICitiesUganda = { JINJA: { name: \"Jinja\" } };\n\nconst attractions: IAttractionsUganda = {\n  RAFTING_NALUBALE: {\n    name: \"River Nile Nalubale Rafting\",\n    highlight: true\n  },\n  NILE_SOURCE: { name: \"Source of the Nile\" }\n};\n\nexport const UGANDA: IUganda = {\n  name: \"Uganda\",\n  cities,\n  attractions\n};\n","const cities: ICitiesUAE = { DUBAI: { name: \"Dubai\" } };\n\nconst attractions: IAttractionsUAE = {\n  AQUAVENTURE: { name: \"Aquaventure Waterpark\", themePark: true },\n  BURJ_KHALIFA: { name: \"Burj Khalifa\" }\n};\n\nexport const UAE: IUAE = { name: \"United Arab Emirates\", cities, attractions };\n","const attractions: IAttractionsUK = {\n  ALTON_TOWERS: { name: \"Alton Towers\", insignificant: true, themePark: true },\n  BLACKPOOL_PLEASURE_BEACH: {\n    name: \"Blackpool Pleasure Beach\",\n    insignificant: true,\n    themePark: true\n  },\n  WINTER_WONDERLAND: {\n    name: \"Winter Wonderland\",\n    insignificant: true,\n    themePark: true\n  },\n  THORPE_PARK: { name: \"Thorpe Park\", insignificant: true, themePark: true },\n  EDEN_PROJECT: { name: \"Eden Project\", insignificant: true },\n  TATE_BRITAIN: { name: \"Tate Britain\", insignificant: true },\n  LONDON_EYE: { name: \"London Eye\", insignificant: true },\n  RICHMOND_PARK: { name: \"Richmond Park\", insignificant: true },\n  SHERWOOD_FOREST: { name: \"Sherwood Forest\", insignificant: true },\n  CALKE_ABBEY: { name: \"Calke Abbey\", insignificant: true },\n  BATTERSEA_PARK: { name: \"Battersea Park\", insignificant: true },\n  CRYSTAL_PALACE_PARK: { name: \"Crystal Palace Park\", insignificant: true },\n  QUEEN_ELIZABETH_OAKESLYMPIC_PARK: {\n    name: \"Queen Elizabeth Olympic Park\",\n    insignificant: true\n  },\n  VICTORIA_PARK: { name: \"Victoria Park\", insignificant: true },\n  GREENWICH_PARK: { name: \"Greenwich Park\", insignificant: true },\n  KEW_GARDENS: { name: \"Kew Gardens\", insignificant: true },\n  EPPING_FOREST: { name: \"Epping Forest\", insignificant: true },\n  HAMPSTEAD_HEATH: { name: \"Hampstead Heath\", insignificant: true },\n  V_A_MUSEUM: { name: \"Victoria and Albert Museum\", insignificant: true },\n  SCIENCE_MUSEUM: { name: \"Science Museum\", insignificant: true },\n  TATE_MODERN: { name: \"Tate Modern\", insignificant: true },\n  NATURAL_HISTORY_MUSEUM: {\n    name: \"Natural History Museum London\",\n    insignificant: true\n  },\n  LAKE_DISTRICT: { name: \"Lake District\" },\n  HADRIANS_WALL: { name: \"Hadrian's Wall\", insignificant: true }\n};\n\nconst islands: IIslandsUK = {\n  ANGLESEY: { name: \"Anglesey\", insignificant: true }\n};\n\nconst cities: ICitiesUK = {\n  BATH: { name: \"Bath\", insignificant: true },\n  BLACKPOOL: { name: \"Blackpool\", insignificant: true },\n  BRIGHTON: { name: \"Brighton\", insignificant: true },\n  BRISTOL: { name: \"Bristol\", insignificant: true },\n  BIRMINGHAM: { name: \"Birmingham\", insignificant: true },\n  CAMBRIDGE: { name: \"Cambridge\", insignificant: true },\n  COVENTRY: { name: \"Coventry\", insignificant: true },\n  DERBY: { name: \"Derby\", insignificant: true },\n  EDINBURGH: { name: \"Edinburgh\" },\n  HULL: { name: \"Hull\", insignificant: true },\n  LEEDS: { name: \"Leeds\", insignificant: true },\n  LEICESTER: { name: \"Leicester\", insignificant: true },\n  LINCOLN: { name: \"Lincoln\", insignificant: true },\n  LONDON: { name: \"London\", capital: true, insignificant: true },\n  LIVERPOOL: { name: \"Liverpool\", insignificant: true },\n  MANCHESTER: { name: \"Manchester\", insignificant: true },\n  NEWCASTLE: { name: \"Newcastle\", insignificant: true },\n  NORWICH: { name: \"Norwich\", insignificant: true },\n  NOTTINGHAM: { name: \"Nottingham\", insignificant: true },\n  OXFORD: { name: \"Oxford\", insignificant: true },\n  SHEFFIELD: { name: \"Sheffield\", insignificant: true },\n  WOLVERHAMPTON: { name: \"Wolverhampton\", insignificant: true },\n  YORK: { name: \"York\", insignificant: true }\n};\n\nconst regions: IRegionsUK = { CORNWALL: { name: \"Cornwall\" } };\n\nconst towns: ITownsUK = {\n  DONCASTER: { name: \"Doncaster\", insignificant: true },\n  HARROGATE: { name: \"Harrogate\", insignificant: true },\n  ILKLEY: { name: \"Ilkley\", insignificant: true },\n  MILTON_KEYNES: { name: \"Milton Keynes\", insignificant: true },\n  STRATFORD: { name: \"Stratford-upon-Avon\", insignificant: true },\n  MANSFIELD: { name: \"Mansfield\", insignificant: true },\n  NEWARK: { name: \"Newark\", insignificant: true },\n  NEWQUAY: { name: \"Newquay\", insignificant: true },\n  PADSTOW: { name: \"Padstow\", insignificant: true },\n  TENBY: { name: \"Tenby\", insignificant: true },\n  SCARBOROUGH: { name: \"Scarborough\", insignificant: true }\n};\n\nexport const UK: IUK = {\n  name: \"United Kingdom\",\n  insignificant: true,\n  attractions,\n  islands,\n  cities,\n  regions,\n  towns\n};\n","const KEY_WEST: ILocation = { name: \"Key West\" };\n\nconst attractions: IAttractionsUSA = {\n  ALCATRAZ_PRISON: { name: \"Alcatraz Federal Penitentiary\", highlight: true },\n  FISHERMANS_WHARF: { name: \"Fisherman's Wharf\" },\n  FARMERS_MARKET: { name: \"Farmers Market\" },\n  HOLLYWOOD_WALK_OF_FAME: { name: \"Hollywood Walk of Fame\" },\n  WHITE_HOUSE: { name: \"White House\" },\n  CAPITOL_BUILDING: { name: \"Capitol Building\" },\n  WASHINGTON_MONUMENT: { name: \"Washington Monument\" },\n  LINCOLN_MEMORIAL: { name: \"Lincoln Memorial\" },\n  TIMES_SQUARE: { name: \"Times Square\" },\n  BROOKLYN_BRIDGE: { name: \"Brooklyn Bridge\" },\n  WORLD_TRADE_CENTER: { name: \"World Trade Center\" },\n  GOLDEN_GATE_BRIDGE: { name: \"Golden Gate Bridge\", highlight: true },\n  CENTRAL_PARK: { name: \"Central Park\", highlight: true },\n  VENICE_BEACH: { name: \"Venice Beach\" },\n  DISNEYLAND_CALIFORNIA_ADVENTURE: {\n    name: \"Disneyland California Adventure\",\n    themePark: true\n  },\n  DISNEY_MGM_STUDIOS: { name: \"Disney-MGM Studios\", themePark: true },\n  DISNEY_ANIMAL_KINGDOM: { name: \"Disney's Animal Kingdom\", themePark: true },\n  DISNEY_EPCOT: { name: \"Epcot\", themePark: true },\n  WET_N_WILD_ORLANDO: { name: \"Wet 'n Wild Orlando\", themePark: true },\n  BLIZZARD_BEACH: { name: \"Blizzard Beach Water Park\", themePark: true },\n  DISNEY_MAGIC_KINGDOM: { name: \"Magic Kingdom Park\", themePark: true },\n  UNIVERSAL_STUDIOS_FLORIDA: {\n    name: \"Universal Studios Florida\",\n    themePark: true\n  },\n  UNIVERSALS_ISLANDS_OF_ADVENTURE: {\n    name: \"Universal's Islands of Adventure\",\n    themePark: true\n  },\n  GRAND_CANYON: { name: \"Grand Canyon\", highlight: true },\n  KNOTTS_BERRY_FARM: { name: \"Knott's Berry Farm\", themePark: true },\n  SEAWORLD_ORLANDO: { name: \"SeaWorld Orlando\", themePark: true },\n  BUSCH_GARDENS_WILLIAMSBURG: {\n    name: \"Busch Gardens Williamsburg\",\n    themePark: true\n  },\n  BUSCH_GARDENS_TAMPA: { name: \"Busch Gardens Tampa\", themePark: true },\n  SIX_FLAGS_AMERICA: { name: \"Six Flags America\", themePark: true },\n  SIX_FLAGS_MAGIC_MOUNTAIN: {\n    name: \"Six Flags Magic Mountain\",\n    themePark: true\n  },\n  SIX_FLAGS_NEW_ENGLAND: { name: \"Six Flags New England\", themePark: true }\n};\n\nconst cities: ICitiesUSA = {\n  BOSTON_MASSACHUSETTS: { name: \"Boston\" },\n  KEY_WEST,\n  LAS_VEGAS: { name: \"Las Vegas\" },\n  VIRGINIA_BEACH: { name: \"Virginia Beach\" },\n  LOS_ANGELES: { name: \"Los Angeles\" },\n  NEW_YORK_CITY: { name: \"New York City\" },\n  SAN_FRANCISCO: { name: \"San Francisco\" },\n  SPRINGFIELD_MASSACHUSETTS: { name: \"Springfield\" },\n  WASHINGTON_DC: { name: \"Washington DC\", capital: true }\n};\n\nconst islands: IIslandsUSA = {\n  KEY_WEST,\n  ALCATRAZ: { name: \"Alcatraz\" },\n  MARTHAS_VINEYARD: { name: \"Martha's Vineyard\" }\n};\n\nconst regions: IRegionsUSA = {\n  CAPE_COD: { name: \"Cape Cod\" },\n  FLORIDA_KEYS: { name: \"Florida Keys\" },\n  ISLAMORADA: { name: \"Islamorada\" }\n};\n\nconst states: IStatesUSA = {\n  FLORIDA: { name: \"Florida\" },\n  NEW_YORK: { name: \"New York\" },\n  MASSACHUSETTS: { name: \"Massachusetts\" },\n  VIRGINIA: { name: \"Virginia\" }\n};\n\nexport const USA: IUSA = {\n  name: \"United States\",\n  attractions,\n  cities,\n  islands,\n  regions,\n  states\n};\n","const attractions: IAttractionsZimbabwe = {\n  VICTORIA_FALLS: { name: \"Victoria Falls\" }\n};\n\nexport const ZIMBABWE: IZimbabwe = {\n  name: \"Zimbabwe\",\n  excludeFromBucketList: true,\n  attractions\n};\n","import { ARGENTINA } from \"./argentina\";\nimport { AUSTRALIA } from \"./australia\";\nimport { AUSTRIA } from \"./austria\";\nimport { BARBADOS } from \"./barbados\";\nimport { BELGIUM } from \"./belgium\";\nimport { BELIZE } from \"./belize\";\nimport { BOLIVIA } from \"./bolivia\";\nimport { BRAZIL } from \"./brazil\";\nimport { CANADA } from \"./canada\";\nimport { COLOMBIA } from \"./colombia\";\nimport { COSTA_RICA } from \"./costa-rica\";\nimport { CROATIA } from \"./croatia\";\nimport { CUBA } from \"./cuba\";\nimport { CYPRUS } from \"./cyprus\";\nimport { CZECH_REPUBLIC } from \"./czech-republic\";\nimport { DENMARK } from \"./denmark\";\nimport { ECUADOR } from \"./ecuador\";\nimport { EGYPT } from \"./egypt\";\nimport { FRANCE } from \"./france\";\nimport { GERMANY } from \"./germany\";\nimport { GREECE } from \"./greece\";\nimport { HUNGARY } from \"./hungary\";\nimport { INDONESIA } from \"./indonesia\";\nimport { IRELAND } from \"./ireland\";\nimport { ITALY } from \"./italy\";\nimport { JAPAN } from \"./japan\";\nimport { LAOS } from \"./laos\";\nimport { MEXICO } from \"./mexico\";\nimport { NEW_ZEALAND } from \"./new-zealand\";\nimport { NETHERLANDS } from \"./netherlands\";\nimport { NORWAY } from \"./norway\";\nimport { PERU } from \"./peru\";\nimport { PHILLIPINES } from \"./phillipines\";\nimport { POLAND } from \"./poland\";\nimport { PORTUGAL } from \"./portugal\";\nimport { SPAIN } from \"./spain\";\nimport { SWEDEN } from \"./sweden\";\nimport { TANZANIA } from \"./tanzania\";\nimport { THAILAND } from \"./thailand\";\nimport { UGANDA } from \"./uganda\";\nimport { UAE } from \"./united-arab-emirates\";\nimport { UK } from \"./united-kingdom\";\nimport { USA } from \"./united-states\";\nimport { ZIMBABWE } from \"./zimbabwe\";\n\nexport const COUNTRIES: ICountries = {\n  ARGENTINA,\n  AUSTRALIA,\n  AUSTRIA,\n  BARBADOS,\n  BELGIUM,\n  BELIZE,\n  BOLIVIA,\n  BRAZIL,\n  CANADA,\n  COSTA_RICA,\n  COLOMBIA,\n  CUBA,\n  CROATIA,\n  CYPRUS,\n  CZECH_REPUBLIC,\n  DENMARK,\n  ECUADOR,\n  EGYPT,\n  FRANCE,\n  GERMANY,\n  GREECE,\n  HUNGARY,\n  INDONESIA,\n  IRELAND,\n  ITALY,\n  JAPAN,\n  LAOS,\n  MEXICO,\n  NEW_ZEALAND,\n  NETHERLANDS,\n  NORWAY,\n  PERU,\n  PHILLIPINES,\n  POLAND,\n  PORTUGAL,\n  SPAIN,\n  SWEDEN,\n  TANZANIA,\n  THAILAND,\n  UGANDA,\n  UAE,\n  UK,\n  USA,\n  ZIMBABWE\n};\n\nexport const CITIES: ICities = {\n  ...ARGENTINA.cities,\n  ...AUSTRIA.cities,\n  ...BELGIUM.cities,\n  ...BELIZE.cities,\n  ...BRAZIL.cities,\n  ...CANADA.cities,\n  ...COSTA_RICA.cities,\n  ...CUBA.cities,\n  ...CROATIA.cities,\n  ...CYPRUS.cities,\n  ...CZECH_REPUBLIC.cities,\n  ...DENMARK.cities,\n  ...ECUADOR.cities,\n  ...EGYPT.cities,\n  ...FRANCE.cities,\n  ...GERMANY.cities,\n  ...HUNGARY.cities,\n  ...IRELAND.cities,\n  ...ITALY.cities,\n  ...LAOS.cities,\n  ...NETHERLANDS.cities,\n  ...NORWAY.cities,\n  ...PERU.cities,\n  ...POLAND.cities,\n  ...PORTUGAL.cities,\n  ...SPAIN.cities,\n  ...SWEDEN.cities,\n  ...THAILAND.cities,\n  ...UGANDA.cities,\n  ...UAE.cities,\n  ...UK.cities,\n  ...USA.cities\n};\n\nexport const ATTRACTIONS: IAttractions = {\n  ...BARBADOS.attractions,\n  ...BELGIUM.attractions,\n  ...BELIZE.attractions,\n  ...BRAZIL.attractions,\n  ...CANADA.attractions,\n  ...COSTA_RICA.attractions,\n  ...CROATIA.attractions,\n  ...CYPRUS.attractions,\n  ...CZECH_REPUBLIC.attractions,\n  ...DENMARK.attractions,\n  ...ECUADOR.attractions,\n  ...EGYPT.attractions,\n  ...FRANCE.attractions,\n  ...GERMANY.attractions,\n  ...HUNGARY.attractions,\n  ...IRELAND.attractions,\n  ...ITALY.attractions,\n  ...LAOS.attractions,\n  ...NETHERLANDS.attractions,\n  ...NORWAY.attractions,\n  ...PERU.attractions,\n  ...POLAND.attractions,\n  ...PORTUGAL.attractions,\n  ...SPAIN.attractions,\n  ...THAILAND.attractions,\n  ...UGANDA.attractions,\n  ...UAE.attractions,\n  ...UK.attractions,\n  ...USA.attractions,\n  ...ZIMBABWE.attractions\n};\n\nexport const ISLANDS: IIslands = {\n  ...SPAIN.islands,\n  ...USA.islands,\n  ...BRAZIL.islands,\n  ...BELIZE.islands,\n  ...ECUADOR.islands,\n  ...NORWAY.islands,\n  ...GREECE.islands,\n  ...THAILAND.islands\n};\n","export const AUSTRALIA: IAustralia = { name: \"Australia\" };\n","export const BOLIVIA: IBolivia = { name: \"Bolivia\" };\n","export const COLOMBIA: IColombia = { name: \"Colombia\" };\n","export const INDONESIA: IIndonesia = { name: \"Indonesia\" };\n","export const JAPAN: IJapan = { name: \"Japan\" };\n","export const MEXICO: IMexico = { name: \"Mexico\" };\n","export const NEW_ZEALAND: INewZealand = { name: \"New Zealand\" };\n","export const PHILLIPINES: IPhillipines = { name: \"Phillipines\" };\n","export const TANZANIA: ITanzania = { name: \"Tanzania\" };\n","const TABLESPOON: string = \"tbsp\";\n\nexport const SAINSBURYS_SEASONING_COST: IIngredientCost = {\n  quantity: 6,\n  measurement: TABLESPOON,\n  price: 1\n};\n\nexport const MEASUREMENTS: IMeasurements = {\n  // WEIGHT\n  GRAM: \"g\",\n  KILOGRAM: \"kg\",\n\n  // SPOONS\n  TEASPOON: \"tsp\",\n  TABLESPOON,\n\n  // CAPACITY\n  MILLILITRE: \"ml\",\n  LITRE: \"L\",\n\n  // LENGTH\n  CENTIMETRE: \"cm\",\n\n  // COLLOQUIAL\n  CAN: \"can\",\n  SPRIG: \"sprig\",\n  SLICE: \"slice\",\n  JAR: \"jar\",\n  PORTION: \"portion\",\n  SERVING: \"serving\",\n  CHUNK: \"chunk\",\n  SEGMENT: \"segment\",\n  PANCAKE: \"pancake\"\n};\n","const requireJpeg = (photo: string): IImageSrc => require(`./${photo}.jpg`);\n\nexport const PHOTOS_RECIPES: IRecipePhotos = {\n  // B\n  BAKED_BEANS: requireJpeg(\"baked-beans\"),\n  BANG_BANG_CAULIFLOWER: requireJpeg(\"bang-bang-cauliflower\"),\n  BANANA_CAKE: requireJpeg(\"banana-cake\"),\n  BOLOGNESE: requireJpeg(\"bolognese\"),\n  BLUEBERRY_PANCAKES: requireJpeg(\"blueberry-pancakes\"),\n  BROWNIES: requireJpeg(\"brownies\"),\n  // C\n  CARBONARA: requireJpeg(\"carbonara\"),\n  CRUMBLE: requireJpeg(\"crumble\"),\n  // F\n  FLAPJACKS: requireJpeg(\"flapjacks\"),\n  // K\n  KALE_CRISPY: requireJpeg(\"kale-crispy\"),\n  // L\n  LASAGNE: requireJpeg(\"lasagne\"),\n  // M\n  MASHED_POTATO: requireJpeg(\"mashed-potato\"),\n  // P\n  PORRIDGE: requireJpeg(\"porridge\"),\n  POTATO_SALAD: requireJpeg(\"potato-salad\"),\n  PIRI_PIRI: requireJpeg(\"piri-piri\"),\n  // R\n  RATATOUILLE: requireJpeg(\"ratatouille\"),\n  ROGAN_JOSH: requireJpeg(\"rogan-josh\"),\n  // S\n  SHEPHERDS_PIE: requireJpeg(\"shepherds-pie\")\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M190.255,98.528l-51.959-51.959c0.068-1.23,0.192-2.458,0.352-3.681c0.081-0.618,0.175-1.235,0.279-1.85 c0.009-0.054,0.018-0.108,0.027-0.162c0.102-0.589,0.214-1.176,0.337-1.761c0.016-0.076,0.032-0.152,0.049-0.229 c0.124-0.576,0.257-1.15,0.401-1.722c0.019-0.075,0.039-0.15,0.059-0.225c0.149-0.579,0.306-1.156,0.477-1.73 c0.013-0.044,0.028-0.088,0.041-0.133c0.713-2.38,1.614-4.716,2.694-6.987c0.06-0.125,0.115-0.252,0.175-0.376 c0.197-0.405,0.406-0.805,0.615-1.205c0.123-0.237,0.244-0.474,0.371-0.709c0.192-0.354,0.394-0.705,0.595-1.056 c0.159-0.277,0.318-0.553,0.483-0.828c0.194-0.322,0.393-0.642,0.595-0.961c0.189-0.298,0.381-0.596,0.577-0.891 c0.196-0.296,0.396-0.59,0.599-0.882c0.22-0.316,0.445-0.628,0.673-0.94c0.197-0.27,0.394-0.539,0.598-0.806 c0.255-0.334,0.518-0.663,0.782-0.992c0.193-0.24,0.383-0.481,0.58-0.718c0.308-0.369,0.628-0.731,0.949-1.093 c0.169-0.191,0.333-0.385,0.506-0.574c0.501-0.548,1.014-1.088,1.544-1.618c2.407-2.407,5.001-4.513,7.735-6.318 c2.05-1.354,4.18-2.539,6.368-3.554c2.189-1.015,4.436-1.862,6.723-2.539c9.148-2.708,18.928-2.708,28.076,0 c2.287,0.677,4.535,1.523,6.723,2.539c2.188,1.015,4.318,2.2,6.368,3.554c2.734,1.805,5.328,3.911,7.735,6.318 c19.255,19.255,19.255,50.473,0,69.728c-0.53,0.53-1.071,1.043-1.618,1.544c-0.189,0.173-0.384,0.337-0.575,0.507 c-0.361,0.32-0.723,0.64-1.091,0.947c-0.237,0.198-0.479,0.388-0.719,0.582c-0.328,0.264-0.657,0.527-0.99,0.781 c-0.267,0.204-0.537,0.401-0.807,0.599c-0.311,0.227-0.623,0.452-0.938,0.671c-0.293,0.204-0.588,0.404-0.884,0.6 c-0.294,0.195-0.591,0.387-0.888,0.575c-0.32,0.203-0.641,0.403-0.965,0.598c-0.272,0.163-0.546,0.321-0.82,0.478 c-0.354,0.203-0.707,0.406-1.065,0.6c-0.23,0.125-0.464,0.243-0.696,0.364c-0.404,0.211-0.808,0.423-1.217,0.621 c-0.118,0.058-0.239,0.11-0.357,0.167c-2.28,1.086-4.626,1.99-7.016,2.706c-0.039,0.012-0.078,0.025-0.118,0.036 c-0.578,0.172-1.16,0.33-1.743,0.48c-0.07,0.018-0.14,0.037-0.21,0.055c-0.576,0.145-1.154,0.28-1.734,0.404 c-0.072,0.016-0.145,0.031-0.217,0.046c-0.588,0.123-1.178,0.237-1.77,0.339c-0.051,0.009-0.103,0.017-0.154,0.026 c-0.617,0.104-1.236,0.199-1.856,0.279l0,0C192.711,98.336,191.485,98.46,190.255,98.528z M227.105,175.256 c-8.722-8.723-20.318-13.526-32.653-13.526s-23.932,4.804-32.653,13.525l-71.41,71.41c-5.889,5.889-13.718,9.132-22.046,9.132 s-16.158-3.243-22.052-9.137l-0.548-0.547c-12.156-12.157-12.156-31.938,0-44.094l18.966-18.966l5.383,5.383 c1.455,1.455,3.376,2.196,5.305,2.196c1.644,0,3.293-0.538,4.666-1.63l99.979-79.512c-0.13-0.121-0.268-0.231-0.394-0.356 l-51.959-51.959c-0.152-0.152-0.284-0.319-0.428-0.476l-80.088,99.344c-2.405,2.983-2.174,7.301,0.536,10.011l6.392,6.391 l-18.966,18.966c-18.004,18.005-18.004,47.302,0.005,65.312l0.548,0.548c8.723,8.722,20.319,13.525,32.654,13.525 s23.932-4.804,32.653-13.525l71.41-71.41c5.889-5.889,13.718-9.132,22.046-9.132s16.157,3.243,22.047,9.133l19.862,19.861 c2.928,2.928,7.677,2.927,10.606-0.001c2.929-2.929,2.929-7.678-0.001-10.606L227.105,175.256z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgMicrophone = function SvgMicrophone(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 270.797 270.797\",\n    style: {\n      enableBackground: \"new 0 0 270.797 270.797\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgMicrophone, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/microphone.45f98fc5.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M298.578,691.737c0,0,8.931-2.279,23.699-7.195c-2.179-13.863-3.277-27.997-3.277-42.382V514.903 c-6.788-1.079-13.747-1.646-20.839-1.646c-31.059,0-59.603,10.752-82.127,28.729c-0.234-2.533-0.369-5.094-0.369-7.688 c0-45.561,36.935-82.496,82.496-82.496c7.2,0,14.182,0.927,20.839,2.66V259.419V196.52l53.45,33.156 c27.891,17.301,77.968,28.082,105.335,32.969c36.17,6.458,76.718,10.771,119.37,12.776V10.419 c-49.573,30.751-164.59,52.299-298.578,52.299S49.573,41.17,0,10.419v382.741C0,615.589,298.578,691.737,298.578,691.737z  M82.203,277.385c22.524,17.977,51.068,28.729,82.127,28.729c31.059,0,59.603-10.752,82.127-28.729 c0.234,2.533,0.369,5.094,0.369,7.688c0,45.561-36.935,82.496-82.496,82.496c-45.561,0-82.496-36.935-82.496-82.496 C81.834,282.479,81.969,279.918,82.203,277.385z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M597.155,310.467c-109.703-5.01-200.573-24.633-243.155-51.048v214.167v52.066v116.507c0,10.332,0.647,20.347,1.875,30.055 c25.221,199.284,296.702,268.523,296.702,268.523s298.578-76.147,298.578-298.577V259.419 c-49.573,30.751-164.59,52.299-298.578,52.299C633.682,311.718,615.165,311.289,597.155,310.467z M517.794,571.354 c-30.851,0.123-59.197,10.85-81.591,28.723c-0.234-2.533-0.369-5.094-0.369-7.688c0-45.561,36.935-82.496,82.496-82.496 c14.917,0,28.896,3.979,40.97,10.904c24.804,14.226,41.526,40.947,41.526,71.592c0,2.594-0.135,5.155-0.369,7.688 c-22.524-17.977-51.068-28.729-82.127-28.729C518.151,571.348,517.973,571.353,517.794,571.354z M652.161,774.494 c-45.561,0-82.496-36.935-82.496-82.496c0-2.594,0.135-5.155,0.369-7.688c22.524,17.977,51.068,28.729,82.127,28.729 c31.059,0,59.603-10.752,82.127-28.729c0.234,2.533,0.369,5.094,0.369,7.688C734.657,737.56,697.722,774.494,652.161,774.494z  M786.826,509.894c45.561,0,82.496,36.935,82.496,82.496c0,2.594-0.135,5.155-0.369,7.688 c-22.524-17.977-51.068-28.729-82.127-28.729c-31.059,0-59.603,10.752-82.127,28.729c-0.234-2.533-0.369-5.094-0.369-7.688 C704.33,546.828,741.264,509.894,786.826,509.894z\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgMasks = function SvgMasks(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 951.155 951.155\",\n    style: {\n      enableBackground: \"new 0 0 951.155 951.155\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgMasks, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/masks.d8da85e9.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M256,0C114.837,0,0,114.837,0,256s114.837,256,256,256s256-114.837,256-256S397.163,0,256,0z M416,245.333 c5.888,0,10.667,4.779,10.667,10.667c0,94.101-76.565,170.667-170.667,170.667c-5.888,0-10.667-4.779-10.667-10.667 c0-5.888,4.779-10.667,10.667-10.667c82.347,0,149.333-66.987,149.333-149.333C405.333,250.112,410.112,245.333,416,245.333z  M362.667,256c0-5.888,4.779-10.667,10.667-10.667c5.888,0,10.667,4.779,10.667,10.667c0,70.592-57.408,128-128,128 c-5.888,0-10.667-4.779-10.667-10.667c0-5.888,4.779-10.667,10.667-10.667C314.816,362.667,362.667,314.816,362.667,256z M64,256 c0,5.888-4.779,10.667-10.667,10.667S42.667,261.888,42.667,256c0-117.632,95.701-213.333,213.333-213.333 c5.888,0,10.667,4.779,10.667,10.667S261.888,64,256,64C150.144,64,64,150.144,64,256z M96,266.667 c-5.888,0-10.667-4.779-10.667-10.667c0-94.101,76.565-170.667,170.667-170.667c5.888,0,10.667,4.779,10.667,10.667 s-4.779,10.667-10.667,10.667c-82.347,0-149.333,66.987-149.333,149.333C106.667,261.888,101.888,266.667,96,266.667z  M149.333,256c0,5.888-4.779,10.667-10.667,10.667S128,261.888,128,256c0-70.592,57.408-128,128-128 c5.888,0,10.667,4.779,10.667,10.667s-4.779,10.667-10.667,10.667C197.184,149.333,149.333,197.184,149.333,256z M192,256 c0-35.285,28.715-64,64-64s64,28.715,64,64s-28.715,64-64,64S192,291.285,192,256z M256,469.333 c-5.888,0-10.667-4.779-10.667-10.667S250.112,448,256,448c105.856,0,192-86.144,192-192c0-5.888,4.779-10.667,10.667-10.667 s10.667,4.779,10.667,10.667C469.333,373.632,373.632,469.333,256,469.333z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M277.333,256c0-11.776-9.557-21.333-21.333-21.333s-21.333,9.557-21.333,21.333s9.557,21.333,21.333,21.333 S277.333,267.776,277.333,256z\"\n}))));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgVinyl = function SvgVinyl(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgVinyl, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/vinyl.69320bab.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M49.489,63.315c-7.588,1.247-14.005,3.058-18.782,5.137c-1.689,0.736-3.24,2.933-3.389,4.771 c-0.096,1.211-0.146,2.438-0.146,3.673c0,1.234,0.051,2.461,0.146,3.672c0.148,1.837,1.7,4.035,3.389,4.77 c4.777,2.082,11.191,3.891,18.782,5.139c1.817,0.298,3.162-0.993,3.035-2.829c-0.244-3.567-0.372-7.173-0.372-10.75 c0-3.578,0.128-7.186,0.372-10.75C52.651,64.309,51.307,63.019,49.489,63.315z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M56.12,119.195c1.72,0.666,2.56-0.281,1.938-2.016c-1.849-5.16-3.274-11.252-4.262-17.786 c-0.273-1.822-1.936-3.487-3.76-3.761c-6.533-0.988-12.625-2.415-17.786-4.264c-1.734-0.62-2.683,0.221-2.017,1.939 C34.836,105.159,44.273,114.597,56.12,119.195z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M64.096,35.069c-2.082,4.779-3.892,11.19-5.138,18.781c-0.3,1.819,0.988,3.163,2.826,3.036 c3.567-0.246,7.174-0.372,10.752-0.372c3.579,0,7.183,0.126,10.749,0.372c1.838,0.127,3.127-1.217,2.828-3.036 c-1.246-7.587-3.058-14.002-5.136-18.781c-0.736-1.688-2.933-3.239-4.771-3.389c-1.21-0.099-2.437-0.146-3.671-0.146 c-1.237,0-2.462,0.05-3.674,0.146C67.027,31.831,64.831,33.382,64.096,35.069z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M56.12,34.598c-11.847,4.601-21.284,14.038-25.886,25.889c-0.664,1.718,0.282,2.558,2.017,1.938 c5.161-1.851,11.253-3.274,17.785-4.262c1.823-0.275,3.487-1.94,3.761-3.762c0.988-6.534,2.413-12.626,4.262-17.786 C58.682,34.88,57.84,33.933,56.12,34.598z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M91.27,54.4c0.273,1.821,1.938,3.486,3.761,3.762c6.532,0.987,12.625,2.411,17.785,4.259 c1.735,0.622,2.685-0.22,2.016-1.938c-4.601-11.849-14.036-21.286-25.888-25.887c-1.717-0.665-2.557,0.283-1.938,2.017 C88.857,41.774,90.282,47.867,91.27,54.4z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M117.75,73.226c-0.147-1.838-1.702-4.036-3.39-4.771c-4.777-2.081-11.194-3.889-18.782-5.135 c-1.816-0.3-3.161,0.989-3.035,2.828c0.245,3.565,0.371,7.174,0.371,10.75c0,3.578-0.126,7.186-0.371,10.753 c-0.126,1.838,1.219,3.128,3.035,2.827c7.588-1.246,14.005-3.058,18.782-5.137c1.691-0.735,3.241-2.937,3.39-4.771 c0.101-1.213,0.146-2.438,0.146-3.675C117.895,75.662,117.845,74.434,117.75,73.226z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M87.911,76.896c0-3.931-0.146-7.723-0.421-11.35c-0.137-1.836-1.771-3.471-3.606-3.607 c-3.627-0.272-7.416-0.421-11.351-0.421c-3.929,0-7.722,0.147-11.348,0.421c-1.837,0.138-3.472,1.771-3.61,3.607 c-0.272,3.626-0.421,7.419-0.421,11.35c0,3.93,0.148,7.723,0.421,11.35c0.14,1.835,1.773,3.475,3.61,3.609 c3.625,0.271,7.418,0.421,11.348,0.421s7.724-0.149,11.351-0.421c1.836-0.141,3.471-1.774,3.606-3.609 C87.766,84.619,87.911,80.827,87.911,76.896z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M112.817,91.37c-5.16,1.853-11.252,3.276-17.786,4.264c-1.822,0.272-3.486,1.938-3.761,3.761 c-0.988,6.531-2.413,12.626-4.261,17.786c-0.622,1.733,0.219,2.685,1.936,2.016c11.852-4.601,21.289-14.037,25.889-25.886 C115.5,91.59,114.552,90.75,112.817,91.37z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M83.283,96.905c-3.565,0.245-7.173,0.373-10.754,0.373c-3.577,0-7.179-0.128-10.748-0.373 c-1.837-0.126-3.127,1.219-2.827,3.036c1.248,7.59,3.058,14.004,5.136,18.782c0.735,1.689,2.934,3.24,4.77,3.389 c1.211,0.1,2.436,0.147,3.674,0.147c1.234,0,2.46-0.053,3.67-0.147c1.839-0.147,4.035-1.699,4.771-3.389 c2.082-4.778,3.891-11.192,5.138-18.782C86.409,98.123,85.12,96.779,83.283,96.905z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M37.556,22.22c0.357,0.273,0.657,0.167,0.823,0.05c-0.12,0.153-0.328,0.455-0.644,1.005c0,0-1.123,1.688-0.75,2.253 l0.007,0.01c0.378,0.573,2.365,0.203,2.365,0.203c0.628-0.075,0.987-0.147,1.181-0.195c-0.177,0.107-0.392,0.34-0.281,0.772 l1.011,3.391c0.016,0.051,0.037,0.096,0.057,0.14l2.663-2.288l0.218-2.881c0.016-0.221,0.062-0.494,0.062-0.494 s0.531-0.362,0.697-0.437l9.396-5.774l4.911,14.228c0.134,0.38,0.488,0.478,0.795,0.216l2.581-2.21 c0.307-0.264,0.5-0.799,0.433-1.202l-2.554-15.133l8.995-6.295c1.657-1.165,2.978-2.952,2.948-4.001 c-0.012-0.396-0.146-0.798-0.362-1.164l-0.005-0.009c-0.25-0.343-0.566-0.626-0.93-0.791c-0.946-0.438-3.115,0.065-4.839,1.128 l-9.333,5.776L44.104,0.188c-0.343-0.218-0.908-0.253-1.273-0.074l-3.048,1.497c-0.364,0.179-0.415,0.542-0.118,0.816 l11.131,10.134l-9.017,6.349c-0.132,0.124-0.676,0.471-0.676,0.471s-0.271-0.069-0.481-0.142l-2.733-0.938l-3.152,1.545 c0.033,0.036,0.064,0.073,0.109,0.105L37.556,22.22z\"\n}), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7.875,68.89c0.153-1.395,0.442-2.738,0.747-4.15c0.114-0.528,0.227-1.054,0.333-1.58 c0.117-0.688,0.322-1.331,0.54-2.012c0.109-0.341,0.217-0.681,0.316-1.023l0.931-2.974c0.283-0.663,0.553-1.327,0.822-1.986 c0.521-1.277,1.012-2.483,1.569-3.625l1.38-2.628c0.126-0.232,0.258-0.486,0.389-0.74c0.306-0.589,0.594-1.146,0.918-1.609 c0.405-0.612,0.766-1.18,1.122-1.741c0.652-1.027,1.269-1.998,1.921-2.882l3.082-3.965c0.682-0.764,1.4-1.535,2.09-2.277 l0.987-1.064c0.773-0.89,1.609-1.641,2.417-2.367l3.003-2.703c1.036-0.819,1.925-1.489,2.651-2.036 c0.241-0.182,0.464-0.35,0.669-0.506l1.248,1.716c-0.229,0.16-0.476,0.331-0.745,0.516c-0.772,0.533-1.713,1.183-2.769,1.948 l-0.11,0.086l-2.822,2.356c-0.771,0.633-1.644,1.351-2.5,2.266l-2.979,2.966L22.971,39l-3.061,3.616 c-0.729,0.901-1.378,1.834-2.005,2.737c-0.357,0.514-0.72,1.036-1.099,1.556c-0.444,0.573-0.806,1.208-1.155,1.82 c-0.122,0.213-0.244,0.428-0.371,0.64l-1.423,2.449c-0.629,1.163-1.163,2.327-1.678,3.452c-0.295,0.644-0.593,1.294-0.908,1.944 l-0.082,0.196l-1.017,2.838c-0.108,0.321-0.211,0.599-0.313,0.875c-0.255,0.691-0.545,1.475-0.719,2.323 c-0.105,0.427-0.235,0.924-0.365,1.424C8.438,66.162,8.092,67.49,7.875,68.89z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M34.177,24.192c0,0-0.456,0.347-1.313,0.998c-0.856,0.66-2.113,1.579-3.712,2.844c-0.795,0.716-1.676,1.509-2.635,2.371 c-0.954,0.864-2.015,1.777-2.966,2.873c-0.988,1.073-2.056,2.197-3.143,3.414c-1.002,1.29-2.055,2.646-3.155,4.061 c-1.062,1.439-2.01,3.056-3.071,4.662c-0.554,0.79-0.964,1.688-1.438,2.564c-0.464,0.881-0.933,1.776-1.408,2.684 c-0.897,1.84-1.628,3.824-2.473,5.795c-0.321,1.027-0.645,2.065-0.974,3.113c-0.304,1.053-0.708,2.087-0.895,3.194 c-0.44,2.191-1.018,4.39-1.178,6.691c-0.11,1.146-0.287,2.287-0.34,3.445c-0.012,1.162-0.022,2.33-0.034,3.501 c0.008,0.586-0.036,1.171,0.015,1.758l0.166,1.76c0.125,1.174,0.196,2.354,0.369,3.523l0.719,3.485 c0.136,0.576,0.204,1.17,0.396,1.732l0.55,1.695c0.386,1.121,0.696,2.27,1.146,3.363l1.478,3.226 c0.443,1.095,1.075,2.09,1.691,3.088c0.629,1.013,1.17,1.973,1.868,3.012c0.682,0.901,1.361,1.797,2.037,2.691 c0.752,0.875,1.541,1.734,2.304,2.591c1.601,1.625,3.229,3.156,4.984,4.487c3.47,2.701,7.187,4.794,10.862,6.372 c3.697,1.55,7.358,2.516,10.761,3.199c1.72,0.244,3.352,0.58,4.932,0.666c0.787,0.067,1.554,0.134,2.298,0.196 c0.747,0.019,1.472,0.033,2.175,0.049c0.555,0.005,1.094,0.03,1.618,0.03c0.141,0,0.282-0.002,0.421-0.006 c0.654-0.03,1.286-0.059,1.894-0.087c0.606-0.027,1.188-0.054,1.742-0.079c0.553-0.062,1.081-0.119,1.581-0.175 c0.999-0.12,1.896-0.188,2.665-0.315c0.771-0.135,1.424-0.25,1.955-0.342c1.06-0.186,1.625-0.285,1.625-0.285 s-0.569,0.075-1.636,0.216c-0.532,0.07-1.189,0.156-1.962,0.259c-0.773,0.097-1.671,0.125-2.669,0.202 c-0.5,0.034-1.025,0.069-1.577,0.106c-0.555,0.003-1.133,0.004-1.736,0.006c-0.603,0.003-1.229,0.004-1.881,0.007 c-0.65-0.007-1.323-0.072-2.018-0.107c-0.693-0.045-1.41-0.091-2.147-0.139c-0.732-0.095-1.485-0.191-2.259-0.291 c-1.554-0.148-3.147-0.551-4.823-0.859c-3.312-0.813-6.849-1.911-10.372-3.565c-3.503-1.684-6.999-3.855-10.21-6.579 c-1.621-1.34-3.121-2.882-4.562-4.47c-0.674-0.823-1.353-1.651-2.035-2.484c-0.638-0.92-1.278-1.846-1.922-2.773 c-2.151-3.709-4.256-7.753-5.248-12.076l-0.45-1.599c-0.157-0.529-0.194-1.091-0.299-1.634L9.356,82.99 c-0.114-1.096-0.13-2.2-0.201-3.293l-0.089-1.637c-0.026-0.544,0.044-1.091,0.06-1.635c0.055-1.086,0.11-2.167,0.166-3.243 c0.095-1.071,0.31-2.129,0.454-3.185c0.229-2.121,0.866-4.145,1.353-6.151c0.208-1.015,0.633-1.962,0.955-2.924 c0.344-0.955,0.682-1.903,1.018-2.84c0.869-1.795,1.614-3.597,2.515-5.263c0.477-0.82,0.946-1.629,1.409-2.426 c0.473-0.789,0.878-1.601,1.426-2.31c1.052-1.441,1.978-2.895,3.016-4.18c1.065-1.26,2.088-2.467,3.061-3.615 c1.065-1.063,2.075-2.069,3.026-3.015c0.925-0.987,1.892-1.735,2.762-2.46c0.867-0.727,1.665-1.393,2.385-1.995 c1.6-1.159,2.932-2.05,3.803-2.667c0.884-0.613,1.355-0.942,1.355-0.942L34.177,24.192L34.177,24.192z M67.694,122.04h0.005 H67.694z\"\n}))));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgTravel = function SvgTravel(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"123.328px\",\n    height: \"123.328px\",\n    viewBox: \"0 0 123.328 123.328\",\n    style: {\n      enableBackground: \"new 0 0 123.328 123.328\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTravel, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/travel.d9baea5d.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M518.516,422.608h99c83-45.601,114.101-127.9,125-170.2c3.7-14.5-5.899-28.9-20.7-31c-128.699-18.5-193.5,17.4-239,89.6 c3.2,7.601,6.301,15.3,9.301,23.101c6.899,18.3,11.399,40,13.6,60.6c62.3-35.4,116.1-80.1,135.4-92.9 C627.016,317.208,588.117,364.808,518.516,422.608z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0.417,135.908c11.1,59.7,55.3,219.2,217.5,286.7h194.3c-61.4-111.9-172.4-166.9-222-197.3c37.8,6.9,154.7,47,261.3,158.1 c8.2,8.6,24.9,26.7,25.4,26.5c-12.101-175-174.3-316.9-345.801-316.9c-34.899,0-72.199,4.5-112,14.1 C6.216,110.208-1.984,122.908,0.417,135.908z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M937.816,477.608c0-13.801-11.199-25-25-25h-770.7c-13.8,0-25,11.199-25,25v3c0,201.199,163.101,364.199,364.2,364.199 h92.2c201.2,0,364.2-163.1,364.2-364.199v-3H937.816z\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgVegBowl = function SvgVegBowl(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"937.816px\",\n    height: \"937.815px\",\n    viewBox: \"0 0 937.816 937.815\",\n    style: {\n      enableBackground: \"new 0 0 937.816 937.815\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgVegBowl, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/veg_bowl.ee16e10a.svg\";\nexport { ForwardRef as ReactComponent };","const requireSvg = (icon: string): IImageSrc => require(`./${icon}.svg`);\n\nexport const SVG_ICON_STRINGS: IconsStringObject = {\n  // A\n  ARTIST: requireSvg(\"artist\"),\n  // B\n  BOOK: requireSvg(\"book\"),\n  BRAIN: requireSvg(\"brain\"),\n  // C\n  CAKE: requireSvg(\"cake\"),\n  CAMERA: requireSvg(\"camera\"),\n  CITY: requireSvg(\"city\"),\n  // F\n  FLAG: requireSvg(\"flag\"),\n  // M\n  MAP_PIN: requireSvg(\"map_pin\"),\n  // N\n  NOTEPAD: requireSvg(\"notepad\"),\n  // P\n  PALM_TREE: requireSvg(\"palm_tree\"),\n  PEACE_SIGN: requireSvg(\"peace_sign\"),\n  PEOPLE: requireSvg(\"people\"),\n  // R\n  ROLLER_COASTER: requireSvg(\"roller_coaster\"),\n  // S\n  STADIUM: requireSvg(\"stadium\"),\n  STARS: requireSvg(\"stars\"),\n  // T\n  TENT: requireSvg(\"tent\"),\n  THEATRE: requireSvg(\"theatre\"),\n  TOWN_HALL: requireSvg(\"town_hall\")\n};\n\nexport { ReactComponent as SvgMicrophone } from \"./microphone.svg\";\nexport { ReactComponent as SvgTheatreMasks } from \"./masks.svg\";\nexport { ReactComponent as SvgVinyl } from \"./vinyl.svg\";\nexport { ReactComponent as SvgTravel } from \"./travel.svg\";\nexport { ReactComponent as SvgVegBowl } from \"./veg_bowl.svg\";\n","const requireOsloJpeg = (number: string): IImageSrc =>\n  require(`./oslo_${number}.jpg`);\n\nconst PHOTOS_TRAVEL_OSLO: Array<IImageSrc> = [\n  requireOsloJpeg(\"1\"),\n  requireOsloJpeg(\"2\"),\n  requireOsloJpeg(\"3\"),\n  requireOsloJpeg(\"4\")\n];\n\ninterface IPhotosTravel {\n  OSLO: Array<IImageSrc>;\n}\n\nexport const PHOTOS_TRAVEL: IPhotosTravel = {\n  OSLO: PHOTOS_TRAVEL_OSLO\n};\n","const requireVinyl = (artist: string, album: string): IImageSrc =>\n  require(`./${artist}_${album}.jpg`);\n\nexport const PHOTOS_VINYL: VinylPhotosObject = {\n  // 123\n  THE_1975: {\n    A_BRIEF_INQUIRY_INTO_ONLINE_RELATIONSHIPS: requireVinyl(\n      \"1975-the\",\n      \"a-brief-inquiry-into-online-relationships\"\n    )\n  },\n  // A\n  ADELE: { \"19\": requireVinyl(\"adele\", \"19\") },\n  ALLIE_X: { SUPER_SUNSET: requireVinyl(\"allie-x\", \"super-sunset\") },\n  AMY_WINEHOUSE: {\n    BACK_TO_BLACK: requireVinyl(\"amy-winehouse\", \"back-to-black\")\n  },\n  ARCTIC_MONKEYS: {\n    FAVOURITE_WORST_NIGHTMARE: requireVinyl(\n      \"arctic-monkeys\",\n      \"favourite-worst-nightmare\"\n    )\n  },\n  ARIANA_GRANDE: {\n    THANK_U_NEXT: requireVinyl(\"ariana-grande\", \"thank-u-next\")\n  },\n  // B\n  BANKS: {\n    GODDESS: requireVinyl(\"banks\", \"goddess\"),\n    III: requireVinyl(\"banks\", \"iii\")\n  },\n  BEN_HOWARD: { EVERY_KINGDOM: requireVinyl(\"ben-howard\", \"every-kingdom\") },\n  BEYONCE: { LEMONADE: requireVinyl(\"beyonce\", \"lemonade\") },\n  // C\n  CARIBOU: { OUR_LOVE: requireVinyl(\"caribou\", \"our-love\") },\n  CHARLI_XCX: {\n    HOW_IM_FEELING_NOW: requireVinyl(\"charli-xcx\", \"how-im-feeling-now\")\n  },\n  // D\n  DUA_LIPA: { FUTURE_NOSTALGIA: requireVinyl(\"dua-lipa\", \"future-nostalgia\") },\n  // E\n  ELLIE_GOULDING: { HALCYON: requireVinyl(\"ellie-goulding\", \"halcyon\") },\n  // F\n  FKA_TWIGS: { MAGDALENE: requireVinyl(\"fka-twigs\", \"magdalene\") },\n  FLORENCE_AND_THE_MACHINE: {\n    LUNGS: requireVinyl(\"florence-and-the-machine\", \"lungs\")\n  },\n  // G\n  GEORGE_FITZGERALD: {\n    ALL_THAT_MUST_BE: requireVinyl(\"george-fitzgerald\", \"all-that-must-be\")\n  },\n  GRIMES: { ART_ANGELS: requireVinyl(\"grimes\", \"art-angels\") },\n  // H\n  HAIM: {\n    WOMEN_IN_MUSIC_PT_III: requireVinyl(\"haim\", \"women-in-music-pt-iii\")\n  },\n  // J\n  JON_HOPKINS: { SINGULARITY: requireVinyl(\"jon-hopkins\", \"singularity\") },\n  // K\n  KATE_NASH: {\n    MADE_OF_BRICKS: requireVinyl(\"kate-nash\", \"made-of-bricks\")\n  },\n  KATY_PERRY: {\n    ONE_OF_THE_BOYS: requireVinyl(\"katy-perry\", \"one-of-the-boys\")\n  },\n  KIM_PETRAS: { CLARITY: requireVinyl(\"kim-petras\", \"clarity\") },\n  // L\n  LADY_GAGA: { BORN_THIS_WAY: requireVinyl(\"lady-gaga\", \"born-this-way\") },\n  LANA_DEL_REY: { BORN_TO_DIE: requireVinyl(\"lana-del-rey\", \"born-to-die\") },\n  LANE_8: { RISE: requireVinyl(\"lane-8\", \"rise\") },\n  LANY: { MALIBU_NIGHTS: requireVinyl(\"lany\", \"malibu-nights\") },\n  LEON: { LEON: requireVinyl(\"leon\", \"leon\") },\n  LENNON_STELLA: {\n    THREE_TWO_ONE: requireVinyl(\"lennon-stella\", \"three-two-one\")\n  },\n  LISSIE: { CATCHING_A_TIGER: requireVinyl(\"lissie\", \"catching-a-tiger\") },\n  LORDE: { PURE_HEROINE: requireVinyl(\"lorde\", \"pure-heroine\") },\n  // M\n  MARINA: { ELECTRA_HEART: requireVinyl(\"marina\", \"electra-heart\") },\n  MUNA: { ABOUT_U: requireVinyl(\"muna\", \"about-u\") },\n  // N\n  NATALIA_KILLS: {\n    PERFECTIONIST: requireVinyl(\"natalia-kills\", \"perfectionist\")\n  },\n  // P\n  PANIC_AT_THE_DISCO: {\n    A_FEVER_YOU_CANT_SWEAT_OUT: requireVinyl(\n      \"panic-at-the-disco\",\n      \"a-fever-you-cant-sweat-out\"\n    )\n  },\n  PARAMORE: { RIOT: requireVinyl(\"paramore\", \"riot\") },\n  PVRIS: {\n    ALL_WE_KNOW_OF_HEAVEN_ALL_WE_NEED_OF_HELL: requireVinyl(\n      \"pvris\",\n      \"all-we-know-of-heaven-all-we-need-of-hell\"\n    )\n  },\n  // R\n  RIHANNA: { RATED_R: requireVinyl(\"rihanna\", \"rated-r\") },\n  RYN_WEAVER: { THE_FOOL: requireVinyl(\"ryn-weaver\", \"the-fool\") },\n  // S\n  SOPHIE: {\n    OIL_OF_EVERY_PEARLS_UNINSIDES: requireVinyl(\n      \"sophie\",\n      \"oil-of-every-pearls-uninsides\"\n    )\n  },\n  SUFJAN_STEVENS: {\n    CARRIE_AND_LOWELL: requireVinyl(\"sufjan-stevens\", \"carrie-and-lowell\")\n  },\n  // T\n  TAYLOR_SWIFT: { \"1989\": requireVinyl(\"taylor-swift\", \"1989\") },\n  TOURIST: { U: requireVinyl(\"tourist\", \"u\") },\n  TROYE_SIVAN: { BLOOM: requireVinyl(\"troye-sivan\", \"bloom\") }\n};\n","import { PHOTOS_VINYL } from \"resources\";\n\nexport const ALLIE_X: IMusician = {\n  name: \"Allie X\",\n  albums: [\n    {\n      title: \"Super Sunset\",\n      artwork: PHOTOS_VINYL.ALLIE_X.SUPER_SUNSET,\n      appleMusicUrl: \"https://music.apple.com/gb/album/super-sunset/1421851140\",\n      year: 2018,\n      purchased: true,\n      signed: true\n    }\n  ]\n};\n\nexport const BANKS: IMusician = {\n  name: \"Banks\",\n  albums: [\n    {\n      artwork: PHOTOS_VINYL.BANKS.III,\n      appleMusicUrl: \"https://music.apple.com/gb/album/iii/1467547466\",\n      title: \"III\",\n      year: 2019,\n      purchased: true,\n      signed: true\n    }\n    // {\n    //   artwork: PHOTOS_VINYL.BANKS.GODDESS,\n    //   appleMusicUrl: \"https://music.apple.com/gb/album/goddess/1442651979\",\n    //   title: \"Goddess\",\n    //   year: 2014\n    // }\n  ]\n};\n\nexport const HAIM: IMusician = {\n  name: \"HAIM\",\n  albums: [\n    {\n      artwork: PHOTOS_VINYL.HAIM.WOMEN_IN_MUSIC_PT_III,\n      title: \"Women In Music Pt. III\",\n      appleMusicUrl:\n        \"https://music.apple.com/gb/album/women-in-music-pt-iii/1500020581\",\n      year: 2020,\n      purchased: true,\n      signed: true\n    }\n  ]\n};\n\nconst leon: string = \"LÉON\";\nexport const LEON: IMusician = {\n  name: leon,\n  albums: [\n    {\n      artwork: PHOTOS_VINYL.LEON.LEON,\n      title: leon,\n      appleMusicUrl: \"https://music.apple.com/gb/album/l%C3%A9on/1450257286\",\n      year: 2019,\n      purchased: true\n    }\n  ]\n};\n\nexport const FKA_TWIGS: IMusician = {\n  name: \"FKA twigs\",\n  albums: [\n    {\n      title: \"Magdalene\",\n      artwork: PHOTOS_VINYL.FKA_TWIGS.MAGDALENE,\n      appleMusicUrl: \"https://music.apple.com/gb/album/magdalene/1477652618\",\n      year: 2019,\n      purchased: true\n    }\n  ]\n};\n\nexport const THE_1975: IMusician = {\n  name: \"1975, The\",\n  albums: [\n    {\n      title: \"A Brief Inquiry Into Online Relationships\",\n      artwork: PHOTOS_VINYL.THE_1975.A_BRIEF_INQUIRY_INTO_ONLINE_RELATIONSHIPS,\n      appleMusicUrl:\n        \"https://music.apple.com/gb/album/a-brief-inquiry-into-online-relationships/1435546528\",\n      year: 2018,\n      purchased: true\n    }\n  ]\n};\n\nexport const MUNA: IMusician = {\n  name: \"MUNA\",\n  albums: [\n    {\n      title: \"About U\",\n      appleMusicUrl: \"https://music.apple.com/gb/album/about-u/1171832662\",\n      year: 2017,\n      artwork: PHOTOS_VINYL.MUNA.ABOUT_U,\n      purchased: true\n    }\n  ]\n};\n\nexport const TAYLOR_SWIFT: IMusician = {\n  name: \"Taylor Swift\",\n  albums: [\n    {\n      title: \"1989\",\n      year: 2014,\n      appleMusicUrl: \"https://music.apple.com/gb/album/1989/1445888258\",\n      artwork: PHOTOS_VINYL.TAYLOR_SWIFT[\"1989\"],\n      purchased: true\n    }\n  ]\n};\n\nexport const LORDE: IMusician = {\n  name: \"Lorde\",\n  albums: [\n    {\n      title: \"Pure Heroine\",\n      appleMusicUrl: \"https://music.apple.com/gb/album/pure-heroine/1440818584\",\n      year: 2013,\n      artwork: PHOTOS_VINYL.LORDE.PURE_HEROINE,\n      purchased: true\n    }\n  ]\n};\n\nexport const LANA_DEL_REY: IMusician = {\n  name: \"Lana Del Rey\",\n  favourite: true,\n  albums: [\n    {\n      title: \"Born to Die\",\n      artwork: PHOTOS_VINYL.LANA_DEL_REY.BORN_TO_DIE,\n      appleMusicUrl: \"https://music.apple.com/gb/album/born-to-die/1440809572\",\n      year: 2012,\n      purchased: true\n    }\n  ]\n};\n\nexport const MARINA: IMusician = {\n  name: \"MARINA\",\n  albums: [\n    {\n      title: \"Electra Heart\",\n      purchased: true,\n      appleMusicUrl: \"https://music.apple.com/gb/album/electra-heart/612448612\",\n      year: 2012,\n      artwork: PHOTOS_VINYL.MARINA.ELECTRA_HEART\n    }\n  ]\n};\n\nexport const FLORENCE_AND_THE_MACHINE: IMusician = {\n  name: \"Florence + the Machine\",\n  albums: [\n    {\n      title: \"Lungs\",\n      purchased: true,\n      appleMusicUrl: \"https://music.apple.com/gb/album/lungs/1440982056\",\n      artwork: PHOTOS_VINYL.FLORENCE_AND_THE_MACHINE.LUNGS,\n      year: 2009\n    }\n  ]\n};\n\nexport const ADELE: IMusician = {\n  name: \"Adele\",\n  albums: [\n    {\n      artwork: PHOTOS_VINYL.ADELE[\"19\"],\n      title: \"19\",\n      appleMusicUrl: \"https://music.apple.com/gb/album/19/269864356\",\n      year: 2008,\n      purchased: true\n    }\n  ]\n};\n\nexport const ARCTIC_MONKEYS: IMusician = {\n  name: \"Arctic Monkeys\",\n  albums: [\n    {\n      title: \"Favourite Worst Nightmare\",\n      purchased: true,\n      artwork: PHOTOS_VINYL.ARCTIC_MONKEYS.FAVOURITE_WORST_NIGHTMARE,\n      appleMusicUrl:\n        \"https://music.apple.com/gb/album/favourite-worst-nightmare/251126923\",\n      year: 2007\n    }\n  ]\n};\n\nexport const AMY_WINEHOUSE: IMusician = {\n  name: \"Amy Winehouse\",\n  noLongerExists: true,\n  albums: [\n    {\n      title: \"Back to Black\",\n      artwork: PHOTOS_VINYL.AMY_WINEHOUSE.BACK_TO_BLACK,\n      appleMusicUrl:\n        \"https://music.apple.com/gb/album/back-to-black/1006515289\",\n      year: 2006,\n      purchased: true\n    }\n  ]\n};\n\nexport const KATE_NASH: IMusician = {\n  name: \"Kate Nash\",\n  albums: [\n    {\n      title: \"Made of Bricks\",\n      appleMusicUrl:\n        \"https://music.apple.com/gb/album/made-of-bricks-bonus-track-version/1440791847\",\n      artwork: PHOTOS_VINYL.KATE_NASH.MADE_OF_BRICKS,\n      year: 2007,\n      purchased: true\n    }\n  ]\n};\n\nexport const CHARLI_XCX: IMusician = {\n  name: \"Charli XCX\",\n  albums: [\n    {\n      title: \"how i'm feeling now\",\n      year: 2020,\n      appleMusicUrl:\n        \"https://music.apple.com/gb/album/how-im-feeling-now/1513162098\",\n      artwork: PHOTOS_VINYL.CHARLI_XCX.HOW_IM_FEELING_NOW\n    }\n  ]\n};\n\nexport const DUA_LIPA: IMusician = {\n  name: \"Dua Lipa\",\n  albums: [\n    {\n      title: \"Future Nostalgia\",\n      appleMusicUrl:\n        \"https://music.apple.com/gb/album/future-nostalgia/1495799403\",\n      year: 2020,\n      artwork: PHOTOS_VINYL.DUA_LIPA.FUTURE_NOSTALGIA\n    }\n  ]\n};\n\nexport const LENNON_STELLA: IMusician = {\n  name: \"Lennon Stella\",\n  albums: [\n    {\n      title: \"Three. Two. One.\",\n      appleMusicUrl:\n        \"https://music.apple.com/gb/album/three-two-one/1501262697\",\n      year: 2020,\n      artwork: PHOTOS_VINYL.LENNON_STELLA.THREE_TWO_ONE\n    }\n  ]\n};\n\nexport const ARIANA_GRANDE: IMusician = {\n  name: \"Ariana Grande\",\n  albums: [\n    {\n      title: \"thank u, next\",\n      appleMusicUrl: \"https://music.apple.com/gb/album/thank-u-next/1450330588\",\n      year: 2019,\n      artwork: PHOTOS_VINYL.ARIANA_GRANDE.THANK_U_NEXT\n    }\n  ]\n};\n\nexport const KIM_PETRAS: IMusician = {\n  name: \"Kim Petras\",\n  albums: [\n    {\n      title: \"Clarity\",\n      year: 2019,\n      appleMusicUrl: \"https://music.apple.com/gb/album/clarity/1469298192\",\n      artwork: PHOTOS_VINYL.KIM_PETRAS.CLARITY\n    }\n  ]\n};\n\nexport const GEORGE_FITZGERALD: IMusician = {\n  name: \"George FitzGerald\",\n  albums: [\n    {\n      title: \"All That Must Be\",\n      appleMusicUrl:\n        \"https://music.apple.com/gb/album/all-that-must-be/1322664114\",\n      year: 2018,\n      artwork: PHOTOS_VINYL.GEORGE_FITZGERALD.ALL_THAT_MUST_BE\n    }\n  ]\n};\n\nexport const JON_HOPKINS: IMusician = {\n  name: \"Jon Hopkins\",\n  albums: [\n    {\n      title: \"Singularity\",\n      appleMusicUrl: \"https://music.apple.com/gb/album/singularity/1349736537\",\n      year: 2018,\n      artwork: PHOTOS_VINYL.JON_HOPKINS.SINGULARITY\n    }\n  ]\n};\n\nexport const LANY: IMusician = {\n  name: \"LANY\",\n  albums: [\n    {\n      title: \"Malibu Nights\",\n      appleMusicUrl:\n        \"https://music.apple.com/gb/album/malibu-nights/1435482172\",\n      year: 2018,\n      artwork: PHOTOS_VINYL.LANY.MALIBU_NIGHTS\n    }\n  ]\n};\n\nexport const SOPHIE: IMusician = {\n  name: \"SOPHIE\",\n  albums: [\n    {\n      title: \"Oil of Every Pearl's Un-Insides\",\n      appleMusicUrl:\n        \"https://music.apple.com/gb/album/oil-of-every-pearls-un-insides/1395045797\",\n      year: 2018,\n      artwork: PHOTOS_VINYL.SOPHIE.OIL_OF_EVERY_PEARLS_UNINSIDES\n    }\n  ]\n};\n\nexport const TROYE_SIVAN: IMusician = {\n  name: \"Troye Sivan\",\n  albums: [\n    {\n      title: \"Bloom\",\n      appleMusicUrl: \"https://music.apple.com/gb/album/bloom/1396292262\",\n      year: 2018,\n      artwork: PHOTOS_VINYL.TROYE_SIVAN.BLOOM\n    }\n  ]\n};\n\nexport const PVRIS: IMusician = {\n  name: \"PVRIS\",\n  albums: [\n    {\n      title: \"All We Know of Heaven, All We Need of Hell\",\n      appleMusicUrl:\n        \"https://music.apple.com/gb/album/all-we-know-of-heaven-all-we-need-of-hell/1227528237\",\n      artwork: PHOTOS_VINYL.PVRIS.ALL_WE_KNOW_OF_HEAVEN_ALL_WE_NEED_OF_HELL,\n      year: 2017\n    }\n  ]\n};\n\nexport const BEYONCE: IMusician = {\n  name: \"Beyoncé\",\n  albums: [\n    {\n      title: \"Lemonade\",\n      appleMusicUrl: \"https://music.apple.com/gb/album/lemonade/1460430561\",\n      artwork: PHOTOS_VINYL.BEYONCE.LEMONADE,\n      year: 2016\n    }\n  ]\n};\n\nexport const TOURIST: IMusician = {\n  name: \"Tourist\",\n  albums: [\n    {\n      appleMusicUrl: \"https://music.apple.com/gb/album/u/1086160489\",\n      title: \"U\",\n      artwork: PHOTOS_VINYL.TOURIST.U,\n      year: 2016\n    }\n  ]\n};\n\nexport const GRIMES: IMusician = {\n  name: \"Grimes\",\n  albums: [\n    {\n      title: \"Art Angels\",\n      appleMusicUrl: \"https://music.apple.com/gb/album/art-angels/1051022913\",\n      artwork: PHOTOS_VINYL.GRIMES.ART_ANGELS,\n      year: 2015\n    }\n  ]\n};\n\nexport const RYN_WEAVER: IMusician = {\n  name: \"Ryn Weaver\",\n  favourite: true,\n  albums: [\n    {\n      title: \"The Fool\",\n\n      year: 2015,\n      appleMusicUrl: \"https://music.apple.com/gb/album/the-fool/1442781012\",\n      artwork: PHOTOS_VINYL.RYN_WEAVER.THE_FOOL\n    }\n  ]\n};\n\nexport const ELLIE_GOULDING: IMusician = {\n  name: \"Ellie Goulding\",\n  albums: [\n    {\n      title: \"Halcyon\",\n      appleMusicUrl: \"https://music.apple.com/gb/album/halcyon/1442722757\",\n      artwork: PHOTOS_VINYL.ELLIE_GOULDING.HALCYON,\n      year: 2012\n    }\n  ]\n};\n\nexport const BEN_HOWARD: IMusician = {\n  name: \"Ben Howard\",\n  albums: [\n    {\n      appleMusicUrl:\n        \"https://music.apple.com/gb/album/every-kingdom/1440804636\",\n      artwork: PHOTOS_VINYL.BEN_HOWARD.EVERY_KINGDOM,\n      title: \"Every Kingdom\",\n      year: 2011\n    }\n  ]\n};\n\nexport const LADY_GAGA: IMusician = {\n  name: \"Lady Gaga\",\n  albums: [\n    {\n      title: \"Born This Way\",\n      appleMusicUrl:\n        \"https://music.apple.com/gb/album/born-this-way-special-edition/1440857161\",\n      artwork: PHOTOS_VINYL.LADY_GAGA.BORN_THIS_WAY,\n      year: 2011\n    }\n  ]\n};\n\nexport const RIHANNA: IMusician = {\n  name: \"Rihanna\",\n  albums: [\n    {\n      title: \"Rated R\",\n      appleMusicUrl: \"https://music.apple.com/gb/album/rated-r/338914834\",\n      artwork: PHOTOS_VINYL.RIHANNA.RATED_R,\n      year: 2009\n    }\n  ]\n};\n\nexport const LISSIE: IMusician = {\n  name: \"Lissie\",\n  albums: [\n    {\n      artwork: PHOTOS_VINYL.LISSIE.CATCHING_A_TIGER,\n      appleMusicUrl:\n        \"https://music.apple.com/gb/album/catching-a-tiger/372594767\",\n      title: \"Catching a Tiger\",\n      year: 2010\n    }\n  ]\n};\n\nexport const KATY_PERRY: IMusician = {\n  name: \"Katy Perry\",\n  albums: [\n    {\n      title: \"One of the Boys\",\n      appleMusicUrl:\n        \"https://music.apple.com/gb/album/one-of-the-boys/715853053\",\n      artwork: PHOTOS_VINYL.KATY_PERRY.ONE_OF_THE_BOYS,\n      year: 2008\n    }\n  ]\n};\n\nexport const PANIC_AT_THE_DISCO: IMusician = {\n  name: \"Panic! At the Disco\",\n  albums: [\n    {\n      title: \"A Fever You Can't Sweat Out\",\n      appleMusicUrl:\n        \"https://music.apple.com/gb/album/a-fever-you-cant-sweat-out/128167002\",\n      artwork: PHOTOS_VINYL.PANIC_AT_THE_DISCO.A_FEVER_YOU_CANT_SWEAT_OUT,\n      year: 2005\n    }\n  ]\n};\n\nexport const PARAMORE: IMusician = {\n  name: \"Paramore\",\n  albums: [\n    {\n      title: \"Riot!\",\n      appleMusicUrl: \"https://music.apple.com/gb/album/riot/604804755\",\n      artwork: PHOTOS_VINYL.PARAMORE.RIOT,\n      year: 2007\n    }\n  ]\n};\n\nexport const SUFJAN_STEVENS: IMusician = {\n  name: \"Sufjan Stevens\",\n  albums: [\n    {\n      artwork: PHOTOS_VINYL.SUFJAN_STEVENS.CARRIE_AND_LOWELL,\n      appleMusicUrl: \"https://music.apple.com/gb/album/carrie-lowell/955572616\",\n      title: \"Carrie & Lowell\",\n      year: 2015\n    }\n  ]\n};\n\nexport const NATALIA_KILLS: IMusician = {\n  name: \"Natalia Kills\",\n  noLongerExists: true,\n  albums: [\n    {\n      title: \"Perfectionist\",\n      year: 2011,\n      appleMusicUrl:\n        \"https://music.apple.com/gb/album/perfectionist/1443164533\",\n      artwork: PHOTOS_VINYL.NATALIA_KILLS.PERFECTIONIST\n    }\n  ]\n};\n\nexport const LANE_8: IMusician = {\n  name: \"Lane 8\",\n  albums: [\n    {\n      title: \"Rise\",\n      appleMusicUrl: \"https://music.apple.com/gb/album/rise/988732595\",\n      year: 2015,\n      artwork: PHOTOS_VINYL.LANE_8.RISE\n    }\n  ]\n};\n\nexport const CARIBOU: IMusician = {\n  name: \"Caribou\",\n  albums: [\n    {\n      appleMusicUrl: \"https://music.apple.com/gb/album/our-love/1276611236\",\n      artwork: PHOTOS_VINYL.CARIBOU.OUR_LOVE,\n      title: \"Our Love\",\n      year: 2014\n    }\n  ]\n};\n","import * as MUSICANS_WITH_ALBUMS from \"./with-albums\";\n\nexport const MUSICIANS: IMusicians = {\n  ...MUSICANS_WITH_ALBUMS,\n  // 123\n  \"100_GECS\": { name: \"100 gecs\" },\n  // A\n  AURORA: { name: \"Aurora\" },\n  ACADEMY_IS_THE: { name: \"Academy Is..., The\" },\n  ALESSIA_CARA: { name: \"Alessia Cara\" },\n  ALEX_CHAPMAN: { name: \"Alex Chapman\" },\n  ALL_AMERICAN_REJECTS_THE: { name: \"All-American Rejects, The\" },\n  ALL_TIME_LOW: { name: \"All Time Low\" },\n  ALMA: { name: \"Alma\" },\n  AMOS_LEE: { name: \"Amos Lee\" },\n  ANNA_OF_THE_NORTH: { name: \"Anna of the North\" },\n  ANASTACIA: { name: \"Anastacia\" },\n  ANNE_MARIE: { name: \"Anne-Marie\" },\n  AQUILO: { name: \"Aquilo\" },\n  AUDITION_THE: { name: \"Audition, The\" },\n  // B\n  BAAUER: { name: \"Baauer\" },\n  BANANARAMA: { name: \"Bananarama\" },\n  BASTILLE: { name: \"Bastille\" },\n  BAYNK: { name: \"BAYNK\" },\n  BEARS_DEN: { name: \"Bear's Den\" },\n  BECKY_MILLS_HILL: { name: \"Becky Hill\" },\n  BETSY: { name: \"Betsy\" },\n  BETTY_WHO: { name: \"Betty Who\" },\n  BICEP: { name: \"Bicep\" },\n  BILLIE_EILISH: { name: \"Billie Eilish\" },\n  BLACK_KIDS: { name: \"Black Kids\" },\n  B_O_B: { name: \"B.o.B\" },\n  BONDAX: { name: \"Bondax\" },\n  BON_IVER: { name: \"Bon Iver\" },\n  BONTAN: { name: \"Bontan\" },\n  BORNS: { name: \"BØRNS\" },\n  BOYS_LIKE_GIRLS: { name: \"Boys Like Girls\" },\n  BLONDE: { name: \"Blonde\" },\n  BREACH: { name: \"Breach\" },\n  BRIGITTE_APHRODITE: { name: \"Brigitte Aphrodite\" },\n  BRITNEY_SPEARS: { name: \"Britney Spears\" },\n  BROODS: { name: \"Broods\" },\n  BULOW: { name: \"bülow\" },\n  // C\n  CAMILA_CABELLO: { name: \"Camila Cabello\" },\n  CARLY_RAE_JEPSEN: { name: \"Carly Rae Jepsen\" },\n  CARL_COX: { name: \"Carl Cox\" },\n  CAROLINE_POLACHEK: { name: \"Caroline Polachek\" },\n  CELESTE: { name: \"Celeste\" },\n  CHARLI_ADAMS: { name: \"Charli Adams\" },\n  CHARLOTTE_CHURCH: { name: \"Charlotte Church\" },\n  CHELSEA_CUNNINGHAM_CUTLER: { name: \"Chelsea Cutler\" },\n  CHEMICAL_BROTHERS_THE: { name: \"Chemical Brothers, The\" },\n  CHERYL: { name: \"Cheryl\" },\n  CHLOE_WHITE_X_HALLE: { name: \"Chloe x Halle\" },\n  CHRISTINE_AND_THE_QUEENS: { name: \"Christine and the Queens\" },\n  CHRVCHES: { name: \"CHVRCHES\" },\n  CLAIRO: { name: \"Clairo\" },\n  CLEAN_BANDIT: { name: \"Clean Bandit\" },\n  COBRA_STARSHIP: { name: \"Cobra Starship\" },\n  CODE_THE: { name: \"Code, The\" },\n  CRUEL_YOUTH: { name: \"Cruel Youth\", favourite: true },\n  CUTE_IS_WHAT_WE_AIM_FOR: { name: \"Cute Is What We Aim for\" },\n  CYRIL_HAHN: { name: \"Cyril Hahn\" },\n  // D\n  DANIEL_AVERY: { name: \"Daniel Avery\" },\n  DAUGHTER: { name: \"Daughter\" },\n  DAVID_RODIGAN: { name: \"David Rodigan\" },\n  DIPLO: { name: \"Diplo\" },\n  DISCLOSURE: { name: \"Disclosure\" },\n  DIZZEE_RASCAL: { name: \"Dizzee Rascal\" },\n  DRUMS_THE: { name: \"Drums, The\" },\n  DUKE_DUMONT: { name: \"Duke Dumont\" },\n  DUSKY: { name: \"Dusky\" },\n  DYLAN: { name: \"Dylan\" },\n  // E\n  EARTHEATER: { name: \"Eartheater\" },\n  EATS_EVERYTHING: { name: \"Eats Everything\" },\n  ELDERBROOK: { name: \"Elderbrook\" },\n  ELIZA_DOOLITTLE: { name: \"Eliza Doolittle\" },\n  ELLA_EYRE: { name: \"Ella Eyre\" },\n  EMAROSA: { name: \"Emarosa\" },\n  // F\n  FALL_OUT_BOY: { name: \"Fall Out Boy\" },\n  FLEETWOOD_MAC: { name: \"Fleetwood Mac\" },\n  FLIGHT_FACILITIES: { name: \"Flight Facilities\" },\n  FOREVER_THE_SICKEST_KIDS: { name: \"Forever the Sickest Kids\" },\n  FOURS: { name: \"Fours\" },\n  FOUR_TET: { name: \"Four Tet\" },\n  FOXES: { name: \"Foxes\" },\n  FRANCES: { name: \"Frances\" },\n  FRANCIS_AND_THE_LIGHTS: { name: \"Francis and the Lights\" },\n  FRANK_OCEAN: { name: \"Frank Ocean\" },\n  FREYA_RIDINGS: { name: \"Freya Ridings\" },\n  FRIDAY_NIGHT_BOYS_THE: { name: \"Friday Night Boys, The\" },\n  FRIEND_WITHIN: { name: \"Friend Within\" },\n  // G\n  GEORGE_EZRA: { name: \"George Ezra\" },\n  GEORGIA: { name: \"Georgia\" },\n  G_FLIP: { name: \"G Flip\" },\n  GLOWIE: { name: \"Glowie\" },\n  GORGON_CITY: { name: \"Gorgon City\" },\n  GRACEY: { name: \"GRACEY\" },\n  GREEN_VELVET: { name: \"Green Velvet\" },\n  GROOVE_ARMADA: { name: \"Groove Armada\" },\n  GRYFFIN: { name: \"Gryffin\" },\n  GYM_CLASS_HEROES: { name: \"Gym Class Heroes\" },\n  // H\n  HALSEY: { name: \"Halsey\" },\n  HANNAH_WANTS: { name: \"Hannah Wants\" },\n  HAUX: { name: \"Haux\" },\n  HEIDI: { name: \"Heidi\" },\n  HEY_MONDAY: { name: \"Hey Monday\" },\n  HOLLY_HUMBERSTONE: { name: \"Holly Humberstone\" },\n  HORSE_MEAT_DISCO: { name: \"Horse Meat Disco\" },\n  // I\n  INCOGNITO: { name: \"Incognito\" },\n  // J\n  JAMES_BAY: { name: \"James Bay\" },\n  JAMES_BLAKE: { name: \"James Blake\" },\n  JAMIE_JONES: { name: \"Jamie Jones\" },\n  JAMIE_T: { name: \"Jamie T\" },\n  JAMIE_XX: { name: \"Jamie xx\" },\n  JAX_JONES: { name: \"Jax Jones\" },\n  JAY_Z: { name: \"JAY Z\" },\n  JEREMY_ZUCKER: { name: \"Jeremy Zucker\" },\n  JESS_GLYNNE: { name: \"Jess Glynne\" },\n  JESSIE_WARE: { name: \"Jessie Ware\" },\n  JOE_GODDARD: { name: \"Joe Goddard\" },\n  JOHNNY_MARR: { name: \"Johnny Marr\" },\n  JONAS_BLUE: { name: \"Jonas Blue\" },\n  JONES: { name: \"Jones\" },\n  JORIS_VOORN: { name: \"Joris Voorn\" },\n  JORJA_SMITH: { name: \"Jorja Smith\" },\n  JOSH_BUTLER: { name: \"Josh Butler\" },\n  JOY_ORBISON: { name: \"Joy Orbison\" },\n  JOSEF_SALVAT: { name: \"Josef Salvat\" },\n  JULIA_MICHAELS: { name: \"Julia Michaels\" },\n  JULIO_BASHMORE: { name: \"Julio Bashmore\" },\n  JUSTIN_BIEBER: { name: \"Justin Bieber\" },\n  JUSTIN_MARTIN: { name: \"Justin Martin\" },\n  // K\n  KAH_LO: { name: \"Kah-Lo\" },\n  KANYE_WEST: { name: \"Kanye West\" },\n  KAYTRANADA: { name: \"Kaytranada\" },\n  KESHA: { name: \"Kesha\" },\n  KIASMOS: { name: \"Kiasmos\" },\n  KIDNAP: { name: \"Kidnap\" },\n  KIDS_IN_GLASS_HOUSES: { name: \"Kids In Glass Houses\" },\n  KILLERS_THE: { name: \"Killers, The\" },\n  KOLSCH: { name: \"Kölsch\" },\n  KYGO: { name: \"Kygo\" },\n  // L\n  LADY_STARLIGHT: { name: \"Lady Starlight\" },\n  LA_ROUX: { name: \"La Roux\" },\n  LAUV: { name: \"Lauv\" },\n  L_DEVINE: { name: \"L Devine\" },\n  LELAND: { name: \"Leland\" },\n  LILY_ALLEN: { name: \"Lily Allen\" },\n  LITTLE_COMETS: { name: \"Little Comets\" },\n  LITTLE_DRAGON: { name: \"Little Dragon\" },\n  LONDON_GRAMMAR: { name: \"London Grammar\" },\n  LUCY_ROSE: { name: \"Lucy Rose\" },\n  LYKKE_LI: { name: \"Lykke Li\" },\n  LYVES: { name: \"Lyves\" },\n  // M\n  MACEO_PLEX: { name: \"Maceo Plex\" },\n  MALLRAT: { name: \"Mallrat\" },\n  MAGGIE_ROGERS: { name: \"Maggie Rogers\" },\n  MAINE_THE: { name: \"Maine, The\" },\n  MAJOR_LAZER: { name: \"Major Lazer\" },\n  MARY_J_BLIGE: { name: \"Mary J. Blige\" },\n  MARTIN_SOLVEIG: { name: \"Martin Solveig\" },\n  MELANIE_MARTINEZ: { name: \"Melanie Martinez\" },\n  METRO_STATION: { name: \"Metro Station\" },\n  MICHAEL_KIWANUKA: { name: \"Michael Kiwanuka\" },\n  MIDLAND: { name: \"Midland\" },\n  MIGUEL: { name: \"Miguel\" },\n  MIKE_POSNER: { name: \"Mike Posner\" },\n  MILEY_CYRUS: { name: \"Miley Cyrus\" },\n  MISHA_B: { name: \"Misha B\" },\n  M_0: { name: \"M.O\" },\n  MK: { name: \"MK\" },\n  MNEK: { name: \"MNEK\" },\n  MO: { name: \"MØ\" },\n  MURA_MASA: { name: \"Mura Masa\" },\n  // N\n  NAAZ: { name: \"Naaz\" },\n  NAO: { name: \"Nao\" },\n  NASTY_CHERRY: { name: \"Nasty Cherry\" },\n  NATASHA_BEDINGFIELD: { name: \"Natasha Bedingfield\" },\n  NAVVY: { name: \"Navvy\" },\n  NICKI_MINAJ: { name: \"Nicki Minaj\" },\n  NOEL_GALLAGHERS_HIGH_FLYING_BIRDS: {\n    name: \"Noel Gallagher's High Flying Birds\"\n  },\n  // O\n  OH_ANNIE_OH: { name: \"Oh Annie Oh\" },\n  OKAYWILL: { name: \"okaywill\" },\n  // P\n  PALE_WAVES: { name: \"Pale Waves\" },\n  PALOMA_FAITH: { name: \"Paloma Faith\" },\n  PAUL_WOOLFORD: { name: \"Paul Woolford\" },\n  PET_SHOP_BOYS: { name: \"Pet Shop Boys\" },\n  PHILIP_GEORGE: { name: \"Philip George\" },\n  PRETENDERS: { name: \"Pretenders\" },\n  // R\n  RAINBOW_KITTEN_SURPRISE: { name: \"Rainbow Kitten Surprise\" },\n  RALEIGH_RITCHIE: { name: \"Raleigh Ritchie\" },\n  RALPH: { name: \"Ralph\" },\n  REDLIGHT: { name: \"Redlight\" },\n  RINA_SAWAYAMA: { name: \"Rina Sawayama\" },\n  RITON: { name: \"Riton\" },\n  RIXTON: { name: \"Rixton\" },\n  ROBINSON: { name: \"Robinson\" },\n  ROBYN: { name: \"Robyn\" },\n  ROMY: { name: \"Romy\" },\n  ROOSEVELT: { name: \"Roosevelt\" },\n  ROUTE_94: { name: \"Route 94\" },\n  RUDIMENTAL: { name: \"Rudimental\" },\n  RUFUS_DU_SOL: { name: \"RÜFÜS DU SOL\" },\n  RYAN_BEATTY: { name: \"Ryan Beatty\" },\n  // S\n  SABRINA_CLAUDIO: { name: \"Sabrina Claudio\" },\n  SAINT_JHN: { name: \"SAINt JHN\" },\n  SAM_SMITH: { name: \"Sam Smith\" },\n  SASHA_SLOAN: { name: \"Sasha Sloan\" },\n  SBTRKT: { name: \"SBTRKT\" },\n  SEEB: { name: \"Seeb\" },\n  SEGA_BODEGA: { name: \"Sega Bodega\" },\n  SEINABO_SEY: { name: \"Seinabo Sey\" },\n  SEVDALIZA: { name: \"Sevdaliza\" },\n  SIA: { name: \"Sia\" },\n  SIGRID: { name: \"Sigrid\" },\n  SISTER_SLEDGE: { name: \"Sister Sledge\" },\n  SKY_FERREIRA: { name: \"Sky Ferreira\", favourite: true },\n  SLIIMY: { name: \"Sliimy\" },\n  SOFI_TUKKER: { name: \"Sofi Tukker\" },\n  SOAK: { name: \"SOAK\" },\n  SONIKKU: { name: \"SONIKKU\" },\n  SOPHIE_ELLIS_BEXTOR: { name: \"Sophie Ellis-Bextor\" },\n  SOUL_WAX: { name: \"Soul Wax\" },\n  SMYTHS_THE: { name: \"Smyths, The\" },\n  SPILL_CANVAS_THE: { name: \"Spill Canvas, The\" },\n  SKREAM: { name: \"Skream\" },\n  SUNDAY_GIRL: { name: \"Sunday Girl\" },\n  // T\n  TENSNAKE: { name: \"Tensnake\" },\n  TEN_WALLS: { name: \"Ten Walls\" },\n  TERROR_JR: { name: \"Terror Jr\" },\n  TOM_ODELL: { name: \"Tom Odell\" },\n  TORI_KELLY: { name: \"Tori Kelly\" },\n  TOVE_LO: { name: \"Tove Lo\" },\n  TULISA: { name: \"Tulisa\" },\n  TWENTY_ONE_PILOTS: { name: \"Twenty One Pilots\" },\n  TWO_FEET: { name: \"Two Feet\" },\n  TYGA: { name: \"Tyga\" },\n  // V\n  VERITE: { name: \"VÉRITÉ\" },\n  // W\n  WE_THE_KINGS: { name: \"We the Kings\" },\n  WILL_YOUNG: { name: \"Will Young\" },\n  // X\n  XX_THE: { name: \"xx, The\" },\n  // Y\n  YEARS_AND_YEARS: { name: \"Years & Years\" },\n  YOU_ME_AT_SIX: { name: \"You Me At Six\" },\n  YOUSEF: { name: \"Yousef\" },\n  // Z\n  ZARA_LARSSON: { name: \"Zara Larsson\" }\n};\n","const MUSIC_VENUES_LONDON: IMusicVenuesLondon = {\n  // A\n  ALEXANDRA_PALACE: { name: \"Alexandra Palace\" },\n  ALEXANDRA_PALACE_THEATRE: {\n    name: \"Alexandra Palace Theatre\",\n    favourite: true\n  },\n  // B\n  BRIXTON_ACADEMY: { name: \"Brixton Academy\", favourite: true },\n  BROCKWELL_PARK: { name: \"Brockwell Park\" },\n  // C\n  CAMDEN_ASSEMBLY: { name: \"Camden Assembly\" },\n  CORSICA_STUDIOS: { name: \"Corsica Studios\" },\n  COURTYARD_THEATRE: { name: \"Courtyard Theatre\" },\n  // D\n  DINGWALLS: { name: \"Dingwalls\" },\n  GARAGE_THE: { name: \"Garage, The\" },\n  // E\n  EARTH: { name: \"EartH\" },\n  EGG: { name: \"Egg\" },\n  ELECTRIC_BRIXTON: { name: \"Electric Brixton\" },\n  ELECTROWERKZ: { name: \"Electrowerkz\" },\n  // F\n  FABRIC: { name: \"Fabric\" },\n  FINSBURY_PARK: { name: \"Finsbury Park\" },\n  // H\n  HAMMERSMITH_APOLLO: { name: \"Hammersmith Apollo\" },\n  HEAVEN: { name: \"Heaven\" },\n  HOXTON_HALL: { name: \"Hoxton Hall\" },\n  HOXTON_SQUARE_BAR_AND_KITCHEN: { name: \"Hoxton Square Bar & Kitchen\" },\n  // I\n  ISLINGTON_ASSEMBLY_HALL: { name: \"Islington Assembly Hall\", favourite: true },\n  // K\n  KENTISH_TOWN_FORUM: { name: \"Kentish Town Forum\" },\n  KOKO: { name: \"Koko\", favourite: true },\n  // L\n  LAFAYETTE: { name: \"Lafayette\" },\n  LAYLOW: { name: \"Laylow\" },\n  LONDON_STADIUM: { name: \"London Stadium\" },\n  // M\n  MINISTRY_OF_SOUND: { name: \"Ministry of Sound\" },\n  MOTH_CLUB: { name: \"Moth Club\", favourite: true },\n  // O\n  OLD_BLUE_LAST: { name: \"Old Blue Last\", favourite: true },\n  OMEARA: { name: \"Omeara\" },\n  OSLO_HACKNEY: { name: \"Oslo Hackney\" },\n  OVAL_SPACE: { name: \"Oval Space\" },\n  O2_THE: { name: \"O2, The\" },\n  // P\n  PRINTWORKS: { name: \"Printworks\", favourite: true },\n  // Q\n  QUEEN_OF_HOXTON: { name: \"Queen of Hoxton\" },\n  // R\n  RIDGEWAY_PARK: { name: \"Ridgeway Park\" },\n  ROUNDHOUSE: { name: \"Roundhouse\", favourite: true },\n  ROYAL_ALBERT_HALL: { name: \"Royal Albert Hall\", favourite: true },\n  ROYAL_FESTIVAL_HALL: { name: \"Royal Festival Hall\", favourite: true },\n  // S\n  SCALA: { name: \"Scala\" },\n  SERVANT_JAZZ_QUARTERS: { name: \"Servant Jazz Quarters\" },\n  SHEPHERDS_BUSH_EMPIRE: { name: \"Shepherd's Bush Empire\" },\n  ST_GILES_IN_THE_FIELD: { name: \"St Giles-in-the-Fields\" },\n  // T\n  TOTTENHAM_HOTSPUR_STADIUM: { name: \"Tottenham Hotspur Stadium\" },\n  TWICKENHAM_STADIUM: { name: \"Twickenham Stadium\" },\n  TROXY: { name: \"Troxy\" },\n  // V\n  VICTORIA_PARK: { name: \"Victoria Park\" },\n  VILLAGE_UNDERGROUND: { name: \"Village Underground\" },\n  // W\n  WEMBLEY_STADIUM: { name: \"Wembley Stadium\" },\n  // X\n  XOYO: { name: \"XOYO\" },\n  // Z\n  ZIGFRID_VON_UNDERBELLY: { name: \"Zigfrid von Underbelly\" }\n};\n\nconst MUSIC_VENUES_BIRMINGHAM: IMusicVenuesBirmingham = {\n  // A\n  ACADEMY_BIRMINGHAM: { name: \"Birmingham Academy\" },\n  ACADEMY_2_BIRMINGHAM: { name: \"Birmingham Academy 2\" },\n  ALEXANDRA_THEATRE: { name: \"Alexandra Theatre\" },\n  // B\n  BARFLY_BIRMINGHAM: { name: \"Birmingham Barfly\" },\n  // I\n  INSTITUTE_BIRMINGHAM: { name: \"Birmingham Institute\" },\n  // N\n  NEC_ARENA_BIRMINGHAM: { name: \"Birmingham NEC Arena\" },\n  NIA_ARENA_BIRMINGHAM: { name: \"Birmingham NIA Arena\" }\n};\n\nconst MUSIC_VENUES_NOTTINGHAM: IMusicVenuesNottingham = {\n  // B\n  BODEGA: { name: \"Bodega\" },\n  ARENA_NOTTINGHAM: { name: \"Nottingham Arena\" },\n  // R\n  RESCUE_ROOMS: { name: \"Rescue Rooms\" },\n  ROCK_CITY: { name: \"Rock City\" },\n  // T\n  TRENT_UNIVERSITY_NOTTINGHAM: { name: \"Nottingham Trent University\" }\n};\n\nconst MUSIC_VENUES_MANCHESTER: IMusicVenuesManchester = {\n  // A\n  ACADEMY_MANCHESTER: { name: \"Manchester Academy\" },\n  ACADEMY_2_MANCHESTER: { name: \"Manchester Academy 2\" },\n  ALBERT_HALL_MANCHESTER: { name: \"Manchester Albert Hall\", favourite: true },\n  APOLLO_MANCHESTER: { name: \"Manchester Apollo\" },\n  ARENA_MANCHESTER: { name: \"Manchester Arena\" },\n  // C\n  CASTLEFIELD_BOWL: { name: \"Castlefield Bowl\" },\n  // D\n  DEAF_INSTITUTE: { name: \"Deaf Institute\" },\n  // G\n  GORILLA: { name: \"Gorilla\" },\n  // H\n  HEATON_PARK: { name: \"Heaton Park\" },\n  // R\n  MAYFIELD_DEPOT: { name: \"Mayfield Depot\" },\n  // R\n  RITZ_MANCHESTER: { name: \"Manchester Ritz\" },\n  RUBY_LOUNGE: { name: \"Ruby Lounge\" },\n  // S\n  SANKEYS: { name: \"Sankeys\" },\n  STORE_STREET: { name: \"Store Street\" }\n};\n\nconst MUSIC_VENUES_ELSEWHERE: IMusicVenuesElsewhere = {\n  // C\n  COCKPIT_LEEDS: { name: \"The Cockpit Leeds\" },\n  // D\n  DE_MONTFORT_HALL: { name: \"Leicester De Montfort Hall\" },\n  // E\n  ENGINE_SHED: { name: \"Lincoln Engine Shed\" },\n  // I\n  IFEMA_MADRID: { name: \"IFEMA\" },\n  // L\n  LULWORTH_ESTATE: { name: \"Lulworth Estate\" },\n  // M\n  MOTION: { name: \"Motion\" },\n  // P\n  PRESTON_PARK: { name: \"Preston Park\" },\n  // S\n  SCHWUZ: { name: \"SchwuZ Berlin\", insignificant: true },\n  SHEFFIELD_ARENA: { name: \"Sheffield Arena\" },\n  // T\n  TRESOR: { name: \"Tresor Berlin\", insignificant: true },\n  // W\n  WESTON_PARK: { name: \"Weston Park\" },\n  WOLVERHAMPTON_CIVIC_HALL: { name: \"Wolverhampton Civic Hall\" },\n  WORTHY_FARM: { name: \"Worthy Farm\", favourite: true }\n};\n\nexport const MUSIC_VENUES: IMusicVenues = {\n  ...MUSIC_VENUES_LONDON,\n  ...MUSIC_VENUES_MANCHESTER,\n  ...MUSIC_VENUES_NOTTINGHAM,\n  ...MUSIC_VENUES_BIRMINGHAM,\n  ...MUSIC_VENUES_ELSEWHERE\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FLOUR: IFlour = {\n  CORNFLOUR: {\n    displayText: \"cornflour\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.3 }\n  },\n  FLOUR_PLAIN: {\n    displayText: \"plain flour\",\n    knownCost: {\n      quantity: 1.5,\n      measurement: MEASUREMENTS.KILOGRAM,\n      price: 0.75\n    }\n  },\n  FLOUR_SELF_RAISING: {\n    displayText: \"self-raising flour\",\n    knownCost: {\n      quantity: 1.5,\n      measurement: MEASUREMENTS.KILOGRAM,\n      price: 0.75\n    }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SUGAR: ISugar = {\n  SUGAR_BROWN: {\n    displayText: \"brown sugar (light or dark)\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  SUGAR_BROWN_DARK: {\n    displayText: \"dark brown sugar\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  SUGAR_BROWN_LIGHT: {\n    displayText: \"light brown sugar\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  SUGAR_CASTER_GOLDEN: {\n    displayText: \"golden caster sugar\",\n    knownCost: { quantity: 1000, measurement: MEASUREMENTS.GRAM, price: 1.9 }\n  },\n  SUGAR_DEMERARA: {\n    displayText: \"demerara sugar\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  SUGAR_GRANULATED: {\n    displayText: \"granulated sugar\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.55 }\n  },\n  SUGAR_ICING: {\n    displayText: \"icing sugar\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SYRUPS: ISyrups = {\n  LEMON_EXTRACT: {\n    displayText: \"lemon extract\",\n    knownCost: {\n      quantity: 38,\n      measurement: MEASUREMENTS.MILLILITRE,\n      price: 1.5\n    }\n  },\n  NECTAR_AGAVE: {\n    displayText: \"agave nectar\",\n    knownCost: { quantity: 250, measurement: MEASUREMENTS.MILLILITRE, price: 4 }\n  },\n  SYRUP_GOLDEN: {\n    displayText: \"golden syrup\",\n    knownCost: { quantity: 600, measurement: MEASUREMENTS.GRAM, price: 1.9 }\n  },\n  VANILLA_EXTRACT: {\n    displayText: \"vanilla extract\",\n    knownCost: {\n      quantity: 35,\n      measurement: MEASUREMENTS.MILLILITRE,\n      price: 1.3\n    }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nimport { FLOUR } from \"./flour\";\nimport { SUGAR } from \"./sugar\";\nimport { SYRUPS } from \"./syrups\";\n\nexport const BAKING: IBaking = {\n  ...FLOUR,\n  ...SUGAR,\n  ...SYRUPS,\n\n  BAKING_POWDER: {\n    displayText: \"baking powder\",\n    knownCost: { quantity: 170, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  BICARBONATE_OF_SODA: {\n    displayText: \"bicarbonate of soda\",\n    knownCost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  CHOCOLATE_DARK: {\n    displayText: \"dark chocolate\",\n    knownCost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 1.7 }\n  },\n  COCOA_POWDER: {\n    displayText: \"cocoa powder\",\n    knownCost: { quantity: 190, measurement: MEASUREMENTS.GRAM, price: 2.75 }\n  },\n  OATS: {\n    displayText: \"oats\",\n    knownCost: { quantity: 2000, measurement: MEASUREMENTS.GRAM, price: 3 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const PASTA: IPasta = {\n  SPAGHETTI: {\n    displayText: \"spaghetti\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.6 }\n  },\n  PASTA: { displayText: \"pasta\" },\n  PASTA_LASAGNE_SHEET_DRIED: {\n    displayText: \"dried lasagne sheet\",\n    knownCost: { quantity: 20, price: 0.7 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const RICE: IRice = {\n  RICE: { displayText: \"rice\" },\n  RICE_BASMATI: {\n    displayText: \"basmati rice\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.1 }\n  },\n  RICE_BROWN: {\n    displayText: \"brown rice\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.85 }\n  },\n  RICE_RISOTTO_ARBORIO: {\n    displayText: \"arborio risotto rice\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.25 }\n  }\n};\n","import { BREAD } from \"./bread\";\nimport { PASTA } from \"./pasta\";\nimport { RICE } from \"./rice\";\n\nexport const CARBS: ICarbs = {\n  ...BREAD,\n  ...PASTA,\n  ...RICE,\n\n  POPPADOMS: { displayText: \"poppadoms\" }\n};\n","export const BREAD: IBread = {\n  BREAD_GARLIC: { displayText: \"garlic bread\" },\n  BREAD_SOURDOUGH: { displayText: \"sourdough\" },\n  BREAD_SOURDOUGH_DARK: { displayText: \"dark sourdough\" }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const MILK: IMilk = {\n  MILK_COCONUT_CANNED: {\n    displayText: \"coconut milk\",\n    knownCost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 1 }\n  },\n  MILK_ALMOND_UNSWEETENED: {\n    displayText: \"unsweetened almond milk\",\n    knownCost: { quantity: 750, measurement: MEASUREMENTS.MILLILITRE, price: 2 }\n  },\n  MILK_OATLY_BARISTA: {\n    displayText: \"Oatly Barista\",\n    knownCost: { quantity: 1, measurement: MEASUREMENTS.LITRE, price: 1.85 }\n  },\n  MILK: {\n    displayText: \"milk\",\n    knownCost: { quantity: 1, measurement: MEASUREMENTS.LITRE, price: 1 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nimport { MILK } from \"./milk\";\n\nexport const DAIRY: IDairy = {\n  ...MILK,\n\n  BUTTER_VEGAN: {\n    displayText: \"dairy-free buttery spread\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  CREAM_OAT: {\n    displayText: \"oat cream\",\n    knownCost: {\n      quantity: 250,\n      measurement: MEASUREMENTS.MILLILITRE,\n      price: 0.95\n    }\n  },\n  CHEESE_VEGAN_SLICE: {\n    displayText: \"vegan cheese slices\",\n    knownCost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 2.6 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FRUIT_DRIED: IFruitDried = {\n  APRICOTS_DRIED: {\n    displayText: \"dried apricots\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 2.7 }\n  },\n  BLUEBERRIES_DRIED: {\n    displayText: \"dried blueberries\",\n    knownCost: { quantity: 75, measurement: MEASUREMENTS.GRAM, price: 2.25 }\n  },\n  CRANBERRIES_DRIED: {\n    displayText: \"dried cranberries\",\n    knownCost: { quantity: 75, measurement: MEASUREMENTS.GRAM, price: 1.15 }\n  },\n  RAISINS: {\n    displayText: \"raisins\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.8 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FRUIT_FRESH: IFruitFresh = {\n  APPLE_BRAMLEY: {\n    displayText: \"Bramley apple\",\n    knownCost: { quantity: 1, measurement: MEASUREMENTS.KILOGRAM, price: 2 }\n  },\n  BANANA: {\n    displayText: \"banana\",\n    knownCost: { quantity: 1, price: 0.2 }\n  },\n  BLACKBERRIES_FRESH: {\n    displayText: \"fresh blackberries\",\n    knownCost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  },\n  BLUEBERRIES_FRESH: {\n    displayText: \"fresh blueberries\",\n    knownCost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  LEMON: {\n    displayText: \"lemon\",\n    knownCost: { quantity: 1, price: 0.3 }\n  },\n  LEMON_LARGE: {\n    displayText: \"large lemon\",\n    knownCost: { quantity: 1, price: 0.4 }\n  },\n  LIME: {\n    displayText: \"lime\",\n    knownCost: { quantity: 1, price: 0.3 }\n  },\n  PINEAPPLE: {\n    displayText: \"pineapple\",\n    knownCost: { quantity: 1, price: 1.1 }\n  },\n  RASPBERRIES_FRESH: {\n    displayText: \"fresh raspberries\",\n    knownCost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FRUIT_FROZEN: IFruitFrozen = {\n  BLACKBERRIES_FROZEN: {\n    displayText: \"frozen blackberries\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  RASPBERRIES_FROZEN: {\n    displayText: \"frozen raspberries\",\n    knownCost: { quantity: 350, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const JUICE: IJuice = {\n  LEMON_JUICE: {\n    displayText: \"lemon juice\",\n    knownCost: {\n      quantity: 250,\n      measurement: MEASUREMENTS.MILLILITRE,\n      price: 0.7\n    }\n  },\n  LEMON_JUICE_FRESH: {\n    displayText: \"fresh lemon juice\",\n    knownCost: { quantity: 3, measurement: MEASUREMENTS.TABLESPOON, price: 0.3 }\n  },\n  LIME_JUICE_FRESH: {\n    displayText: \"fresh lime juice\",\n    knownCost: { quantity: 3, measurement: MEASUREMENTS.TABLESPOON, price: 0.5 }\n  }\n};\n","import { FRUIT_DRIED } from \"./dried-fruit\";\nimport { FRUIT_FRESH } from \"./fresh-fruit\";\nimport { FRUIT_FROZEN } from \"./frozen-fruit\";\nimport { JUICE } from \"./juice\";\n\nexport const FRUIT: IFruit = {\n  ...FRUIT_DRIED,\n  ...FRUIT_FRESH,\n  ...FRUIT_FROZEN,\n  ...JUICE\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const HERBS_DRIED: IHerbsDried = {\n  BASIL_DRIED: {\n    displayText: \"dried basil\",\n    knownCost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  },\n  HERBS_MIXED_DRIED: {\n    displayText: \"dried mixed herbs\",\n    knownCost: {\n      quantity: 6,\n      measurement: MEASUREMENTS.TABLESPOON,\n      price: 0.75\n    }\n  },\n  OREGANO_DRIED: {\n    displayText: \"dried oregano\",\n    knownCost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  },\n  ROSEMARY_DRIED: {\n    displayText: \"dried rosemary\",\n    knownCost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  },\n  THYME_DRIED: {\n    displayText: \"dried thyme\",\n    knownCost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const HERBS_FRESH: IHerbsFresh = {\n  BASIL_FRESH: {\n    displayText: \"fresh basil\",\n    knownCost: {\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM,\n      price: 0.75,\n      payFullAmountAlways: true\n    }\n  },\n  CORIANDER_FRESH: {\n    displayText: \"fresh coriander\",\n    knownCost: {\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM,\n      price: 0.75,\n      payFullAmountAlways: true\n    }\n  },\n  PARSLEY_FRESH: {\n    displayText: \"fresh parsley\",\n    knownCost: {\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM,\n      price: 0.75,\n      payFullAmountAlways: true\n    }\n  },\n  SAGE_FRESH: { displayText: \"fresh sage\" }\n};\n","import { HERBS_DRIED } from \"./dried-herbs\";\nimport { HERBS_FRESH } from \"./fresh-herbs\";\n\nexport const HERBS: IHerbs = {\n  ...HERBS_DRIED,\n  ...HERBS_FRESH\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const BEANS: IBeans = {\n  BEANS_BAKED: { displayText: \"baked beans\" },\n  BEANS_HARICOT: {\n    displayText: \"haricot beans\",\n    knownCost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 0.55 }\n  },\n  BEANS_KIDNEY: {\n    displayText: \"kidney beans\",\n    knownCost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 0.55 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SEITAN: ISeitan = {\n  GLUTEN_WHEAT_VITAL: {\n    displayText: \"vital wheat gluten\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.99 }\n  },\n  SEITAN: { displayText: \"seitan\" }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nimport { BEANS } from \"./beans\";\nimport { SEITAN } from \"./seitan\";\n\nexport const PROTEIN: IProtein = {\n  ...BEANS,\n  ...SEITAN,\n\n  CHICKPEAS: {\n    displayText: \"chickpeas\",\n    knownCost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 1 }\n  },\n  EGGS: { displayText: \"egg\", knownCost: { quantity: 6, price: 2.1 } },\n  LENTIL_RED_DRY: {\n    displayText: \"dry red lentils\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.15 }\n  },\n  TOFU: {\n    displayText: \"tofu\",\n    knownCost: { quantity: 280, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS, SAINSBURYS_SEASONING_COST } from \"../../measurements\";\n\nexport const DRIED_SEASONING: ISeasoningDried = {\n  PAPRIKA: {\n    displayText: \"paprika\",\n    knownCost: SAINSBURYS_SEASONING_COST\n  },\n  ONION_POWDER: {\n    displayText: \"onion powder\",\n    knownCost: SAINSBURYS_SEASONING_COST\n  },\n  GARLIC_GRANULES: {\n    displayText: \"garlic granules\",\n    knownCost: SAINSBURYS_SEASONING_COST\n  },\n  PAPRIKA_SMOKED: {\n    displayText: \"smoked paprika\",\n    knownCost: SAINSBURYS_SEASONING_COST\n  },\n  TURMERIC_GROUND: {\n    displayText: \"ground turmeric\",\n    knownCost: SAINSBURYS_SEASONING_COST\n  },\n  ALLSPICE_GROUND: {\n    displayText: \"ground allspice\",\n    knownCost: SAINSBURYS_SEASONING_COST\n  },\n  CHILLI_POWDER: {\n    displayText: \"chilli powder\",\n    knownCost: SAINSBURYS_SEASONING_COST\n  },\n  CINNAMON_GROUND: {\n    displayText: \"ground cinnamon\",\n    knownCost: SAINSBURYS_SEASONING_COST\n  },\n  CHILLI_CRUSHED_DRIED: {\n    displayText: \"dried crushed chillis\",\n    knownCost: SAINSBURYS_SEASONING_COST\n  },\n  NUTMEG_GROUND: {\n    displayText: \"ground nutmeg\",\n    knownCost: SAINSBURYS_SEASONING_COST\n  },\n  YEAST_NUTRITIONAL: {\n    displayText: \"nutritional yeast flakes\",\n    knownCost: { quantity: 125, measurement: MEASUREMENTS.GRAM, price: 3.4 }\n  },\n  STOCK_POWDER_VEGAN: {\n    displayText: \"vegan stock powder\",\n    knownCost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const OILS: IOils = {\n  OIL_OLIVE: {\n    displayText: \"olive oil\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.MILLILITRE, price: 3 }\n  },\n  OIL_SUNFLOWER: {\n    displayText: \"sunflower oil\",\n    knownCost: {\n      quantity: 1000,\n      measurement: MEASUREMENTS.MILLILITRE,\n      price: 1.2\n    }\n  }\n};\n","interface IUnicode {\n  JALAPENOS: string;\n  TOMATO_PUREE: string;\n  QUARTER: string;\n  THIRD: string;\n  HALF: string;\n  TWO_THIRDS: string;\n  THREE_QUARTERS: string;\n  DEGREES_CELCIUS: string;\n}\n\nexport const UNICODE: IUnicode = {\n  // INGREDIENTS\n  JALAPENOS: \"jalape\\u00f1os\",\n  TOMATO_PUREE: \"tomato pur\\u00e9e\",\n\n  // FRACTIONS\n  QUARTER: \"\\u00bc\",\n  THIRD: \"\\u2153\",\n  HALF: \"\\u00bd\",\n  TWO_THIRDS: \"\\u2154\",\n  THREE_QUARTERS: \"\\u00be\",\n\n  // MISC\n  DEGREES_CELCIUS: \"\\u00b0C\"\n};\n","import { MEASUREMENTS } from \"../../measurements\";\nimport { UNICODE } from \"../../unicode\";\n\nexport const PASTES: IPastes = {\n  CURRY_PASTE_MADRAS: {\n    displayText: \"Madras curry paste\",\n    knownCost: { quantity: 283, measurement: MEASUREMENTS.GRAM, price: 2.25 }\n  },\n  CURRY_PASTE_ROGAN_JOSH: {\n    displayText: \"Rogan Josh curry paste\",\n    knownCost: { quantity: 283, measurement: MEASUREMENTS.GRAM, price: 2.3 }\n  },\n  TOMATO_PUREE: {\n    displayText: UNICODE.TOMATO_PUREE,\n    knownCost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 0.5 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SALT: ISalts = {\n  SALT_BLACK: {\n    displayText: \"black salt (kala namak)\",\n    knownCost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 2.9 }\n  },\n  SALT_TABLE: {\n    displayText: \"table salt\",\n    knownCost: { price: 0 }\n  },\n  SALT_ROCK_FRESH: {\n    displayText: \"freshly ground rock salt\",\n    knownCost: { price: 0 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SAUCES: ISauces = {\n  LIQUID_SMOKE: {\n    displayText: \"liquid smoke\",\n    knownCost: {\n      quantity: 475,\n      measurement: MEASUREMENTS.MILLILITRE,\n      price: 6.7\n    }\n  },\n  SOY_SAUCE: {\n    displayText: \"soy sauce\",\n    knownCost: {\n      quantity: 150,\n      measurement: MEASUREMENTS.MILLILITRE,\n      price: 0.7\n    }\n  },\n  KETCHUP_TOMATO: {\n    displayText: \"tomato ketchup\",\n    knownCost: { quantity: 570, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  MAYONNAISE: {\n    displayText: \"mayonnaise\",\n    knownCost: { quantity: 430, measurement: MEASUREMENTS.MILLILITRE, price: 2 }\n  },\n  SRIRACHA: {\n    displayText: \"sriracha\",\n    knownCost: {\n      quantity: 455,\n      measurement: MEASUREMENTS.MILLILITRE,\n      price: 3.1\n    }\n  },\n  SWEET_CHILLI_SAUCE: {\n    displayText: \"sweet chilli sauce\",\n    knownCost: { quantity: 230, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VINEGARS: IVinegars = {\n  VINEGAR_BALSAMIC: {\n    displayText: \"balsamic vinegar\",\n    knownCost: { quantity: 250, measurement: MEASUREMENTS.MILLILITRE, price: 2 }\n  },\n  VINEGAR_CIDER: {\n    displayText: \"cider vinegar\",\n    knownCost: {\n      quantity: 350,\n      measurement: MEASUREMENTS.MILLILITRE,\n      price: 1.6\n    }\n  },\n  VINEGAR_WHITE_WINE: {\n    displayText: \"white wine vinegar\",\n    knownCost: {\n      quantity: 350,\n      measurement: MEASUREMENTS.MILLILITRE,\n      price: 1.6\n    }\n  }\n};\n","import { MEASUREMENTS, SAINSBURYS_SEASONING_COST } from \"../../measurements\";\n\nimport { DRIED_SEASONING } from \"./dried-seasoning\";\nimport { OILS } from \"./oils\";\nimport { PASTES } from \"./pastes\";\nimport { SALT } from \"./salt\";\nimport { SAUCES } from \"./sauces\";\nimport { VINEGARS } from \"./vinegars\";\n\nexport const SEASONING: ISeasoning = {\n  ...DRIED_SEASONING,\n  ...OILS,\n  ...PASTES,\n  ...SALT,\n  ...SAUCES,\n  ...VINEGARS,\n\n  PEPPER_BLACK_FRESH: {\n    displayText: \"freshly ground black pepper\",\n    knownCost: { price: 0 }\n  },\n  PEPPER_BLACK_GROUND: {\n    displayText: \"ground black pepper\",\n    knownCost: SAINSBURYS_SEASONING_COST\n  },\n  WINE_RED: {\n    displayText: \"red wine\",\n    knownCost: {\n      quantity: 750,\n      measurement: MEASUREMENTS.MILLILITRE,\n      price: 6.5\n    }\n  },\n  CHILLI_RED_FRESH: {\n    displayText: \"fresh red chilli\",\n    knownCost: { quantity: 2, price: 0.6 }\n  },\n  CHILLI_BIRD_EYE_FRESH: {\n    displayText: \"bird eye chillies\",\n    knownCost: { quantity: 20, measurement: MEASUREMENTS.GRAM, price: 0.7 }\n  },\n  GINGER_FRESH: {\n    displayText: \"fresh ginger\",\n    knownCost: { payFullAmountAlways: true, price: 0.3 }\n  },\n  NUTMEG_FRESH: {\n    displayText: \"freshly grated whole nutmeg\",\n    knownCost: SAINSBURYS_SEASONING_COST\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const NUTS: INuts = {\n  NUTS_CASHEWS: {\n    displayText: \"cashew nuts\",\n    knownCost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 3 }\n  },\n  NUTS_PINE: {\n    displayText: \"pine nuts\",\n    knownCost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 3.6 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SEEDS: ISeeds = {\n  SEEDS_CHIA: {\n    displayText: \"chia seeds\",\n    knownCost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  },\n  SEEDS_POPPY: {\n    displayText: \"poppy seeds\",\n    knownCost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 0.9 }\n  },\n  SEEDS_FLAX_GROUND: {\n    displayText: \"ground flax seeds\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 4 }\n  },\n  SEEDS_PUMPKIN: {\n    displayText: \"pumpkin seeds\",\n    knownCost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  SEEDS_SESAME: {\n    displayText: \"sesame seeds\",\n    knownCost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  SEEDS_SUNFLOWER: {\n    displayText: \"sunflower seeds\",\n    knownCost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 1 }\n  }\n};\n","import { NUTS } from \"./nuts\";\nimport { SEEDS } from \"./seeds\";\n\nexport const NUTS_AND_SEEDS: INutsSeeds = {\n  ...NUTS,\n  ...SEEDS\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VEG_CANNED: IVegCanned = {\n  TOMATO_CHOPPED: {\n    displayText: \"chopped tomatoes\",\n    knownCost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 0.5 }\n  },\n  TOMATO_PASSATA: {\n    displayText: \"passata\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.45 }\n  },\n  TOMATO_SUN_DRIED: {\n    displayText: \"sun dried tomatoes\",\n    knownCost: { quantity: 1, measurement: MEASUREMENTS.JAR, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VEG_FRESH: IVegFresh = {\n  ASPARAGUS: { displayText: \"asparagus\" },\n  AUBERGINE: {\n    displayText: \"aubergine\",\n    knownCost: { quantity: 1, price: 0.7 }\n  },\n  BEANS_GREEN: {\n    displayText: \"green beans\",\n    knownCost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  BROCCOLI: { displayText: \"broccoli\", knownCost: { quantity: 1, price: 0.7 } },\n  BUTTERNUT_SQUASH: {\n    displayText: \"butternut squash\",\n    knownCost: { quantity: 1, price: 1.5 }\n  },\n  CARROT: { displayText: \"carrot\", knownCost: { quantity: 1, price: 0.12 } },\n  CAULIFLOWER_REGULAR: {\n    displayText: \"cauliflower\",\n    knownCost: { quantity: 1, price: 1 }\n  },\n  CELERY_STICK: {\n    displayText: \"celery stick\",\n    knownCost: { quantity: 1, price: 0.3 }\n  },\n  COURGETTE: {\n    displayText: \"courgette\",\n    knownCost: { quantity: 1, price: 0.35 }\n  },\n  GARLIC_CLOVE: {\n    displayText: \"garlic clove\",\n    knownCost: { quantity: 10, price: 0.3 }\n  },\n  KALE: {\n    displayText: \"kale\",\n    knownCost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1.05 }\n  },\n  LEEK: { displayText: \"leek\", knownCost: { quantity: 1, price: 0.7 } },\n  MUSHROOMS: {\n    displayText: \"mushrooms\",\n    knownCost: { quantity: 250, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  MUSHROOMS_CHESTNUT: {\n    displayText: \"chestnut mushrooms\",\n    knownCost: { quantity: 300, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  ONION_WHITE_MEDIUM: {\n    displayText: \"white onion\",\n    knownCost: { quantity: 1, price: 0.2 }\n  },\n  ONION_RED_MEDIUM: {\n    displayText: \"red onion\",\n    knownCost: { quantity: 1, price: 0.25 }\n  },\n  ONION_SPRING: {\n    displayText: \"spring onion\",\n    knownCost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 0.55 }\n  },\n  PEPPER_RED: {\n    displayText: \"red pepper\",\n    knownCost: { quantity: 1, price: 0.5 }\n  },\n  PEPPER_GREEN: {\n    displayText: \"green pepper\",\n    knownCost: { quantity: 1, price: 0.5 }\n  },\n  PEPPER_ORANGE: {\n    displayText: \"orange pepper\",\n    knownCost: { quantity: 1, price: 0.5 }\n  },\n  PEPPER_MIXED: {\n    displayText: \"mixed pepper\",\n    knownCost: { quantity: 3, price: 1.3 }\n  },\n  POTATO_MARIS_PIPER: { displayText: \"Maris Piper potatoes\" },\n  POTATO_BAKING: {\n    displayText: \"baking potato\",\n    knownCost: { quantity: 1, price: 0.4 }\n  },\n  POTATO_JERSEY_ROYAL: {\n    displayText: \"Jersey Royal baby potatoes\",\n    knownCost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  },\n  POTATO_SWEET: {\n    displayText: \"sweet potato\",\n    knownCost: { quantity: 1, price: 0.5 }\n  },\n  SPINACH: {\n    displayText: \"spinach\",\n    knownCost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VEG_FROZEN: IVegFrozen = {\n  PETITS_POIS_FROZEN: {\n    displayText: \"frozen petits pois\",\n    knownCost: { quantity: 910, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  },\n  VEGETABLES_MIXED_FROZEN: {\n    displayText: \"frozen mixed vegetables\",\n    knownCost: { quantity: 1, measurement: MEASUREMENTS.KILOGRAM, price: 1.3 }\n  }\n};\n","import { VEG_CANNED } from \"./canned-veg\";\nimport { VEG_FRESH } from \"./fresh-veg\";\nimport { VEG_FROZEN } from \"./frozen-veg\";\n\nexport const VEG: IVeg = {\n  ...VEG_CANNED,\n  ...VEG_FRESH,\n  ...VEG_FROZEN\n};\n","import { BAKING } from \"./baking\";\nimport { CARBS } from \"./carbs\";\nimport { DAIRY } from \"./dairy\";\nimport { FRUIT } from \"./fruit\";\nimport { HERBS } from \"./herbs\";\nimport { PROTEIN } from \"./protein\";\nimport { SEASONING } from \"./seasoning\";\nimport { NUTS_AND_SEEDS } from \"./nuts-seeds\";\nimport { VEG } from \"./veg\";\n\nexport const INGREDIENTS: IInventoryIngredients = {\n  ...BAKING,\n  ...CARBS,\n  ...DAIRY,\n  ...FRUIT,\n  ...HERBS,\n  ...NUTS_AND_SEEDS,\n  ...PROTEIN,\n  ...SEASONING,\n  ...VEG,\n\n  WATER: { displayText: \"water\", knownCost: { price: 0 } },\n  WATER_BOILING: { displayText: \"boiling water\", knownCost: { price: 0 } }\n};\n","interface IPageSectionTitle {\n  BUCKET_LIST: string;\n  FRIENDS: string;\n  UP_NEXT: string;\n}\n\nexport const PAGE_SECTION_TITLES: IPageSectionTitle = {\n  BUCKET_LIST: \"Bucket List\",\n  FRIENDS: \"Friends\",\n  UP_NEXT: \"Up Next\"\n};\n\ninterface IPageSectionPanelTypes {\n  COUNTED_LIST: string;\n  RECIPE_CARDS: string;\n  REGULAR_CARDS: string;\n}\n\nexport const PAGE_SECTION_PANEL_TYPES: IPageSectionPanelTypes = {\n  COUNTED_LIST: \"counted-list\",\n  RECIPE_CARDS: \"recipe-cards\",\n  REGULAR_CARDS: \"regular-cards\"\n};\n","export const PLAYS: IPlays = {\n  // 123\n  \"1984\": { name: \"1984\" },\n  \"4000_MILES\": { name: \"4000 Miles\" },\n  // A\n  AFTERGLOW: { name: \"Afterglow\" },\n  // C\n  CONSENT: { name: \"Consent\" },\n  // D\n  DUST: { name: \"Dust\" },\n  // E\n  EVERYBODYS_TALKING_ABOUT_JAMIE: { name: \"Everybody's Talking About Jamie\" },\n  // F\n  FERRYMAN_THE: { name: \"Ferryman, The\" },\n  FROZEN: { name: \"Frozen\" },\n  // H\n  HOME_IM_DARLING: { name: \"Home, I'm Darling\" },\n  // I\n  INHERITANCE_THE: { name: \"Inheritance, The\" },\n  // K\n  KINKY_BOOTS: { name: \"Kinky Boots\" },\n  // L\n  LEAVE_TO_REMAIN: { name: \"Leave to Remain\" },\n  LOST_UNFOUND: { name: \"Lost Unfound\" },\n  LUNGS: { name: \"Lungs\" },\n  // M\n  MATILDA: { name: \"Matilda\" },\n  MIDSUMMER_NIGHTS_DREAM: { name: \"A Midsummer Night's Dream\" },\n  // S\n  SON_THE: { name: \"Son, The\" },\n  // T\n  THAT_GIRL: { name: \"That Girl\" },\n  // U\n  UGLY_LIES_THE_BONE: { name: \"Ugly Lies the Bone\" },\n  UNCLE_VANYA: { name: \"Uncle Vanya\" },\n  // W\n  WAITRESS: { name: \"Waitress\" },\n  WICKED: { name: \"Wicked\" },\n  // Y\n  YOUNG_MARX: { name: \"Young Marx\" }\n};\n","const LONDON: ITheatreVenuesLondon = {\n  // A\n  ADELPHI: { name: \"Adelphi Theatre\" },\n  APOLLO: { name: \"Apollo Theatre\" },\n  APOLLO_VICTORIA: { name: \"Apollo Victoria Theatre\" },\n  // B\n  BRIDGE: { name: \"Bridge Theatre\" },\n  // C\n  CAMBRIDGE: { name: \"Cambridge Theatre\" },\n  // D\n  DUKE_OF_YORKS: { name: \"Duke of York's Theatre\" },\n  // G\n  GIELGUD: { name: \"Gielgud Theatre\" },\n  // H\n  HAROLD_PINTER: { name: \"Harold Pinter Theatre\" },\n  // L\n  LYRIC: { name: \"Lyric Hammersmith\" },\n  // N\n  NATIONAL: { name: \"National Theatre\" },\n  NOEL_COWARD: { name: \"Noël Coward Theatre\" },\n  // O\n  OLD_RED_LION: { name: \"Old Red Lion Theatre\" },\n  OLD_VIC: { name: \"The Old Vic\" },\n  // P\n  PLAYHOUSE: { name: \"Playhouse Theatre\" },\n  // R\n  ROYAL_HAYMARKET: { name: \"Theatre Royal Haymarket\" },\n  // T\n  TRAFALGAR_STUDIOS: { name: \"Trafalgar Studios\" },\n  // W\n  WATERLOO_EAST: { name: \"Waterloo East Theatre\" },\n  WHITE_BEAR: { name: \"White Bear Theatre\" }\n};\n\nconst STRATFORD: ITheatreVenuesStratford = {\n  ROYAL_SHAKESPEARE: { name: \"Royal Shakespeare Theatre\" }\n};\n\nexport const THEATRE_VENUES: ITheatreVenues = {\n  ...LONDON,\n  ...STRATFORD\n};\n","export const TICKET_TYPES: ITicketTypes = {\n  // A\n  AXS_MOBILE_APP: \"AXS app ticket\",\n  // D\n  DICE: \"Dice mobile ticket\",\n  // G\n  GIGS_AND_TOURS_POSTAL: \"Gigs and Tours postal ticket\",\n  // K\n  KABOODLE_ETICKET: \"Kaboodle eTicket\",\n  // S\n  SEE_TICKETS_PRINT_AT_HOME: \"SeeTickets print-at-home\",\n  // T\n  TICKETWEB: `Ticketweb PDF`,\n  TICKETMASTER_ETICKET: \"Ticketmaster eTicket\"\n};\n","export { ACTORS } from \"./actors\";\nexport { DIETS } from \"./diets\";\nexport { FESTIVALS } from \"./festivals\";\nexport { FRIENDS } from \"./friends\";\nexport { COUNTRIES, CITIES, ATTRACTIONS, ISLANDS } from \"./locations\";\nexport { MEASUREMENTS, SAINSBURYS_SEASONING_COST } from \"./measurements\";\nexport { MUSICIANS } from \"./musicians\";\nexport { MUSIC_VENUES } from \"./music-venues\";\nexport { INGREDIENTS } from \"./ingredients\";\nexport { PAGE_SECTION_TITLES, PAGE_SECTION_PANEL_TYPES } from \"./page-sections\";\nexport { PLAYS } from \"./plays\";\nexport { THEATRE_VENUES } from \"./theatre-venues\";\nexport { TICKET_TYPES } from \"./ticket-types\";\nexport { UNICODE } from \"./unicode\";\n\nexport const DAYS_OF_THE_WEEK: Array<string> = [\n  \"Sun\",\n  \"Mon\",\n  \"Tue\",\n  \"Wed\",\n  \"Thu\",\n  \"Fri\",\n  \"Sat\"\n];\n\nexport const MONTHS: Array<string> = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\"\n];\n","import { DAYS_OF_THE_WEEK, MONTHS } from \"@constants\";\n\nexport const dateToString = (date: Date): string => {\n  const weekday: number = date.getDay();\n  const day: number = date.getDate();\n  const month: number = date.getMonth();\n  const year: number = date.getFullYear();\n\n  return `${DAYS_OF_THE_WEEK[weekday]} ${day} ${MONTHS[month]} ${year}`;\n};\n\nexport const datesToString = (dates: Array<Date>): string => {\n  if (dates.length === 2)\n    return `${dateToString(dates[0])} to ${dateToString(dates[1])}`;\n\n  const errorText: string =\n    \"You passed an incorrect number dates to the datesArrayToString function\";\n  alert(errorText);\n  return errorText;\n};\n","import { UNICODE } from \"@constants\";\n\nconst { QUARTER, HALF, THREE_QUARTERS } = UNICODE;\n\nexport const decimalToFractionString = (decimal: number): string => {\n  const floor: number = Math.floor(decimal);\n  const decimalPoints: number = decimal - floor;\n\n  if (decimalPoints === 0.25) return floor > 0 ? floor + QUARTER : QUARTER;\n  if (decimalPoints === 0.5) return floor > 0 ? floor + HALF : HALF;\n  if (decimalPoints === 0.75)\n    return floor > 0 ? floor + THREE_QUARTERS : THREE_QUARTERS;\n\n  return decimal.toString();\n};\n","export const isInFuture = (date: Date): boolean => {\n  const yesterday = (): number => {\n    const today: Date = new Date();\n    return today.setDate(today.getDate() - 1);\n  };\n\n  const dateToCompare: number = date.valueOf();\n\n  return dateToCompare > yesterday();\n};\n","export const numberToCurrencyString = (\n  number: number,\n  decimalPrecision: number = 2\n): string => {\n  if (decimalPrecision === 1)\n    return `£${(Math.round(number * 10) / 10).toFixed(2)}`;\n\n  return `£${(Math.round(number * 100) / 100).toFixed(2)}`;\n};\n","import { convertIngredientQuantity } from \"./convertIngredientQuantity\";\n\nexport const calculateIngredientCost = ({\n  ingredient: { displayText, knownCost },\n  quantity,\n  measurement\n}: IRecipeIngredient): number => {\n  if (knownCost) {\n    // Water, salt\n    if (knownCost.price === 0) return 0;\n    // Fresh herbs\n    if (knownCost.payFullAmountAlways) return knownCost.price;\n\n    if (quantity && knownCost.quantity) {\n      if (!measurement) {\n        // 3 mixed peppers\n        if (!knownCost.measurement)\n          return quantity * (knownCost.price / knownCost.quantity);\n\n        // Carrot, banana, onion\n        return quantity * knownCost.price;\n      }\n\n      // Grams, cans, tbsp, litre\n      if (measurement && knownCost.measurement) {\n        if (measurement === knownCost.measurement) {\n          return quantity * (knownCost.price / knownCost.quantity);\n        }\n\n        return (\n          (convertIngredientQuantity({\n            quantity,\n            measurement,\n            knownCost\n          }) /\n            knownCost.quantity) *\n          knownCost.price\n        );\n      }\n    }\n  }\n\n  alert(\"Error calculating cost for ingredient: \" + displayText);\n  return 0;\n};\n","import { MEASUREMENTS } from \"@constants\";\n\ninterface IGetKnownCostQuantity {\n  quantity: number;\n  measurement: string;\n  knownCost: IIngredientCost;\n}\n\nexport const convertIngredientQuantity = ({\n  quantity,\n  measurement,\n  knownCost\n}: IGetKnownCostQuantity): number => {\n  switch (true) {\n    // 1 tsp = 5.9ml\n    case measurement === MEASUREMENTS.TEASPOON &&\n      knownCost.measurement === MEASUREMENTS.MILLILITRE:\n      return quantity * 5.9;\n\n    // 1 tbsp = 17.8ml\n    case measurement === MEASUREMENTS.TABLESPOON &&\n      knownCost.measurement === MEASUREMENTS.MILLILITRE:\n      return quantity * 17.8;\n\n    // 1000g = 1kg, 1000 ml = 1L\n    case (measurement === MEASUREMENTS.GRAM &&\n      knownCost.measurement === MEASUREMENTS.KILOGRAM) ||\n      (measurement === MEASUREMENTS.MILLILITRE &&\n        knownCost.measurement === MEASUREMENTS.LITRE):\n      return quantity / 1000;\n\n    // 1kg = 1000g, 1L = 1000ml\n    case (measurement === MEASUREMENTS.KILOGRAM &&\n      knownCost.measurement === MEASUREMENTS.GRAM) ||\n      (measurement === MEASUREMENTS.LITRE &&\n        knownCost.measurement === MEASUREMENTS.MILLILITRE):\n      return quantity * 1000;\n\n    // 1 tbsp = 3tsp\n    case measurement === MEASUREMENTS.TABLESPOON &&\n      knownCost.measurement === MEASUREMENTS.TEASPOON:\n      return quantity * 3;\n\n    // 3 tsp = 1 tsp\n    case measurement === MEASUREMENTS.TEASPOON &&\n      knownCost.measurement === MEASUREMENTS.TABLESPOON:\n      return quantity / 3;\n\n    // ROUGH ESTIMATE: 1 tbsp = 12g\n    case measurement === MEASUREMENTS.TABLESPOON &&\n      knownCost.measurement === MEASUREMENTS.GRAM:\n      return quantity * 12;\n\n    // ROUGH ESTIMATE: 1 tsp = 4g\n    case measurement === MEASUREMENTS.TEASPOON &&\n      knownCost.measurement === MEASUREMENTS.GRAM:\n      return quantity * 4;\n\n    default:\n      alert(\n        \"There may have been an error converting an ingredient quantity to a known cost quantity\"\n      );\n      return quantity;\n  }\n};\n","import { MEASUREMENTS } from \"@constants\";\n\nexport const concatenateQuantityAndMeasurement = (\n  displayQuantity: string,\n  measurement: string\n) => {\n  if (\n    measurement === MEASUREMENTS.GRAM ||\n    measurement === MEASUREMENTS.KILOGRAM ||\n    measurement === MEASUREMENTS.MILLILITRE ||\n    measurement === MEASUREMENTS.CENTIMETRE ||\n    measurement === MEASUREMENTS.LITRE\n  ) {\n    // 2 + g = 2g\n    return displayQuantity + measurement;\n  }\n\n  if (\n    measurement === MEASUREMENTS.TEASPOON ||\n    measurement === MEASUREMENTS.TABLESPOON\n  ) {\n    // 2 + tsp = 2 tsp\n    return displayQuantity + \" \" + measurement;\n  }\n\n  if (measurement === MEASUREMENTS.JAR || measurement === MEASUREMENTS.CAN) {\n    if (parseInt(displayQuantity) > 1)\n      return displayQuantity + \" \" + measurement + \"s\";\n    return displayQuantity + \" \" + measurement;\n  }\n\n  return displayQuantity;\n};\n","import { calculateIngredientCost } from \"./calculateIngredientCost\";\nimport {\n  consoleLogCostedIngredient,\n  consoleLogRecipeTitle\n} from \"./console-logs\";\n\nexport const calculateRecipeCost = (\n  ingredients: Array<Array<IRecipeIngredient>>,\n  title: string\n): number => {\n  if (title) consoleLogRecipeTitle(title);\n\n  let totalRecipeCost: number = 0;\n  ingredients.forEach((ingredientSection: Array<IRecipeIngredient>): void => {\n    ingredientSection.forEach((recipeIngredient: IRecipeIngredient): void => {\n      const ingredientCost: number = calculateIngredientCost(recipeIngredient);\n      totalRecipeCost += ingredientCost;\n\n      consoleLogCostedIngredient({ ...recipeIngredient, cost: ingredientCost });\n    });\n  });\n\n  return totalRecipeCost;\n};\n","import { LOG_RECIPE_COST_CALCULATIONS } from \"config\";\n\nimport { numberToCurrencyString } from \"../basic\";\nimport { concatenateQuantityAndMeasurement } from \"../concatenateQuantityAndMeasurement\";\n\nexport const consoleLogRecipeTitle = (title: string): void => {\n  if (!LOG_RECIPE_COST_CALCULATIONS) return;\n\n  const logDashedLine = (): void => console.log(\"-----------------------\");\n\n  logDashedLine();\n  console.log(title.toUpperCase());\n  logDashedLine();\n};\n\ninterface IConsoleLogCostedIngredient extends IRecipeIngredient {\n  cost: number;\n}\n\nexport const consoleLogCostedIngredient = ({\n  cost,\n  quantity,\n  measurement,\n  ingredient\n}: IConsoleLogCostedIngredient): void => {\n  if (!LOG_RECIPE_COST_CALCULATIONS) return;\n\n  if (!quantity || cost === 0) return;\n\n  const displayIngredient = ingredient.displayText;\n  const priceString: string = numberToCurrencyString(cost, 2);\n  const quantityString: string = quantity.toString();\n  const quantityMeasurementString: string = measurement\n    ? concatenateQuantityAndMeasurement(quantityString, measurement)\n    : quantityString;\n\n  console.log(\n    priceString + \" for \" + quantityMeasurementString + \" \" + displayIngredient\n  );\n};\n","import { useMediaQuery } from \"react-responsive\";\n\nimport { BREAKPOINTS } from \"styles\";\n\ninterface IUseMediaQueries {\n  pageUses2Columns: boolean;\n}\n\nexport const useMediaQueries = (): IUseMediaQueries => {\n  const pageUses2Columns: boolean = useMediaQuery({\n    minWidth: BREAKPOINTS.tablet.minWidth\n  });\n\n  return { pageUses2Columns };\n};\n","import { decimalToFractionString } from \"./basic/decimalToFractionString\";\nimport { concatenateQuantityAndMeasurement } from \"./concatenateQuantityAndMeasurement\";\n\nconst POTATO = \"potato\";\n\nexport const generateIngredientListItem = ({\n  quantity,\n  measurement,\n  ingredient: { displayText },\n  optional,\n  notes\n}: IRecipeIngredient): string => {\n  if (quantity) {\n    const quantityString: string = decimalToFractionString(quantity);\n\n    const ingredientString: string =\n      quantity > 1 && !measurement\n        ? displayText.slice(-POTATO.length) === POTATO\n          ? displayText + \"es\"\n          : displayText + \"s\"\n        : displayText;\n\n    const quantityMeasurementString = measurement\n      ? concatenateQuantityAndMeasurement(quantityString, measurement)\n      : quantityString;\n\n    const quantityMeasurementIngredientString =\n      quantityMeasurementString + \" \" + ingredientString;\n\n    return optional\n      ? quantityMeasurementIngredientString + \" (optional)\"\n      : notes\n      ? `${quantityMeasurementIngredientString} (${notes})`\n      : quantityMeasurementIngredientString;\n  }\n\n  return displayText;\n};\n","import { isInFuture } from \"./basic\";\n\ninterface IGetItemCounts {\n  data: {\n    gigCards?: Array<IGigCard>;\n    theatreCards?: Array<ITheatreCard>;\n    travelCards?: Array<ITravelCard>;\n  };\n  item: {\n    actor?: IActor;\n    attraction?: IAttraction;\n    city?: ICity;\n    country?: ICountryTemplate;\n    festival?: IFestival;\n    friend?: IFriend;\n    island?: IIsland;\n    musician?: IMusician;\n    musicVenue?: IMusicVenue;\n    play?: IPlay;\n    theatre?: ITheatreVenue;\n  };\n}\n\nexport const getItemCounts = ({\n  data: { gigCards, theatreCards, travelCards },\n  item: {\n    actor,\n    attraction,\n    city,\n    country,\n    festival,\n    friend,\n    island,\n    musician,\n    musicVenue,\n    play,\n    theatre\n  }\n}: IGetItemCounts): IPastAndFutureCounts => {\n  let pastCount: number = 0;\n  let futureCount: number = 0;\n\n  const incremementPastOrFutureCount = (date: Date): void => {\n    if (isInFuture(date)) {\n      futureCount += 1;\n    } else {\n      pastCount += 1;\n    }\n  };\n\n  gigCards &&\n    (festival || friend || musician || musicVenue) &&\n    gigCards.forEach(\n      ({\n        company,\n        headline,\n        support,\n        dates,\n        lineup,\n        venue,\n        ...rest\n      }: IGigCard): void => {\n        if (\n          (festival && rest.festival === festival) ||\n          (friend && company.includes(friend)) ||\n          (musicVenue && musicVenue === venue) ||\n          (musician &&\n            (headline === musician ||\n              (support && support.includes(musician)) ||\n              (lineup && lineup.includes(musician))))\n        )\n          incremementPastOrFutureCount(dates[0]);\n      }\n    );\n\n  travelCards &&\n    (attraction || city || country || friend || island) &&\n    travelCards.forEach(\n      ({ title, company, subtitle, hidden, dates }: ITravelCard): void => {\n        if (\n          (attraction &&\n            ((title && title.includes(attraction)) ||\n              (hidden && hidden.includes(attraction)) ||\n              (subtitle && subtitle.includes(attraction)))) ||\n          (country &&\n            ((title && title.includes(country)) ||\n              (hidden && hidden.includes(country)) ||\n              (subtitle && subtitle.includes(country)))) ||\n          (city &&\n            ((title && title.includes(city)) ||\n              (hidden && hidden.includes(city)) ||\n              (subtitle && subtitle.includes(city)))) ||\n          (island &&\n            ((title && title.includes(island)) ||\n              (hidden && hidden.includes(island)) ||\n              (subtitle && subtitle.includes(island)))) ||\n          (friend && company.includes(friend))\n        )\n          incremementPastOrFutureCount(dates[0]);\n      }\n    );\n\n  theatreCards &&\n    (actor || friend || play || theatre) &&\n    theatreCards.forEach(\n      ({ cast, company, date, ...rest }: ITheatreCard): void => {\n        if (\n          (actor && cast && cast.includes(actor)) ||\n          (play && rest.play === play) ||\n          (theatre && rest.theatre === theatre) ||\n          (friend && company.includes(friend))\n        )\n          incremementPastOrFutureCount(date);\n      }\n    );\n\n  return { pastCount, futureCount };\n};\n","import { UNICODE } from \"@constants\";\n\ninterface IBakeForAbout {\n  minutes: number;\n  skewer?: boolean;\n  wellRisen?: boolean;\n  continueToCookOutsideOven?: boolean;\n}\ninterface IPreheatOven {\n  degreesCelcius: number;\n  bakingTray?: boolean;\n}\ninterface ITransferToLoafTin {\n  sunkenCentre?: boolean;\n}\ninterface IRecipeMethodEntries {\n  FOLD_IN_FLOUR_MIX: string;\n  LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN: string;\n  MAKE_FLAX_EGG: string;\n  bakeForAbout: (params: IBakeForAbout) => string;\n  preheatOven: (params: IPreheatOven) => string;\n  transferToLoafTin: (params: ITransferToLoafTin) => string;\n}\n\nexport const recipeMethodEntries = (): IRecipeMethodEntries => {\n  const FOLD_IN_FLOUR_MIX: string =\n    \"in small batches, sieve the flour mix into the mixture and gently fold in until there are no more flour pockets\";\n  const LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN: string =\n    \"leave to cool before removing from loaf tin\";\n  const MAKE_FLAX_EGG: string =\n    \"make flax egg by stirring ground flax seeds with water and leaving to rest for at least 5 minutes until it thickens\";\n\n  const bakeForAbout = ({\n    minutes,\n    skewer,\n    wellRisen,\n    continueToCookOutsideOven\n  }: IBakeForAbout): string => {\n    const defaultText = `bake for about ${minutes} minutes`;\n    const additionalText =\n      (skewer && \"just until skewer runs clean\") ||\n      (continueToCookOutsideOven &&\n        \"they will continue cooking out of the oven\") ||\n      (wellRisen && \"until well-risen and slightly golden\");\n\n    if (!additionalText) return defaultText;\n    return `${defaultText} (${additionalText})`;\n  };\n\n  const preheatOven = ({\n    degreesCelcius,\n    bakingTray\n  }: IPreheatOven): string => {\n    const ovenTemperature = degreesCelcius + UNICODE.DEGREES_CELCIUS;\n\n    if (!bakingTray) return \"preheat oven to \" + ovenTemperature;\n    return \"preheat baking tray in oven at \" + ovenTemperature;\n  };\n\n  const transferToLoafTin = ({ sunkenCentre }: ITransferToLoafTin): string => {\n    const defaultText = \"transfer mixture to non-stick loaf tin\";\n    const additionalText =\n      sunkenCentre &&\n      \"create slightly sunken centre to help the cake rise more evenly\";\n\n    if (!additionalText) return defaultText;\n    return `${defaultText} (${additionalText})`;\n  };\n\n  return {\n    FOLD_IN_FLOUR_MIX,\n    LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN,\n    MAKE_FLAX_EGG,\n    bakeForAbout,\n    preheatOven,\n    transferToLoafTin\n  };\n};\n","import { moveTheSuffixToPrefix } from \"./basic\";\n\ninterface IFormatCountedListItems {\n  countedListItems: Array<ICountedListItem>;\n  isLeaderboard?: boolean;\n}\n\nexport const formatCountedListItems = ({\n  countedListItems,\n  isLeaderboard\n}: IFormatCountedListItems): Array<ICountedListItem> => {\n  const filteredCountedListItems: Array<ICountedListItem> = countedListItems.filter(\n    ({\n      futureCount,\n      pastCount,\n      countInfoIrrelevant\n    }: ICountedListItem): boolean =>\n      countInfoIrrelevant || futureCount !== 0 || pastCount !== 0\n  );\n\n  const sortedCountedListItems: Array<ICountedListItem> = filteredCountedListItems.sort(\n    (a: ICountedListItem, b: ICountedListItem): number =>\n      isLeaderboard\n        ? a.pastCount > b.pastCount\n          ? -1\n          : a.pastCount === b.pastCount && a.futureCount > b.futureCount\n          ? -1\n          : 1\n        : a.text.toLowerCase().localeCompare(b.text.toLowerCase())\n  );\n\n  const translatedCountedListItems: Array<ICountedListItem> = sortedCountedListItems.map(\n    (countedListItem: ICountedListItem): ICountedListItem => ({\n      ...countedListItem,\n      text: moveTheSuffixToPrefix(countedListItem.text)\n    })\n  );\n\n  const mappedCountedListItems: Array<ICountedListItem> = translatedCountedListItems.map(\n    (countedListItem: ICountedListItem): ICountedListItem =>\n      isLeaderboard\n        ? {\n            ...countedListItem,\n            isLeaderboardItem: true\n          }\n        : countedListItem\n  );\n\n  return mappedCountedListItems;\n};\n","import styled, { css } from \"styled-components\";\n\nimport { IBodyHeight } from \"./\";\n\ninterface IPanelContainer extends IThemeProp {\n  bodyHeight: IBodyHeight;\n}\n\nexport const PanelContainer = styled.div(\n  ({ bodyHeight, theme: { disclosure } }: IPanelContainer) =>\n    css`\n      transition: ${disclosure.transition};\n      overflow: hidden;\n      max-height: 0;\n\n      &.initial-state {\n        max-height: unset;\n      }\n\n      &.panel-visible {\n        max-height: ${bodyHeight}px;\n      }\n    `\n);\n\nexport const ClickableDiv = styled.div`\n  cursor: pointer;\n`;\n","import React, { ReactElement } from \"react\";\n\nimport { PanelContainer, ClickableDiv } from \"./styles\";\n\nexport type IBodyHeight = number | null;\n\nexport const Disclosure: React.FC<IDisclosure> = ({\n  Header,\n  children,\n  autoExpand,\n  isStatic,\n  onlyHeaderClickable\n}) => {\n  const [panelIsVisible, switchPanelVisibility] = React.useState<boolean>(\n    !!(autoExpand || isStatic)\n  );\n  const [panelContainerHeight, setPanelContainerHeight] = React.useState<\n    IBodyHeight\n  >(null);\n\n  const refCallback = (element: HTMLDivElement): void => {\n    if (element && !panelContainerHeight)\n      setPanelContainerHeight(element.getBoundingClientRect().height);\n  };\n\n  const getPanelContainerClass = (\n    bodyHeight: IBodyHeight,\n    panelIsVisible: boolean\n  ): string =>\n    !bodyHeight\n      ? \"initial-state\"\n      : panelIsVisible\n      ? \"panel-visible\"\n      : \"panel-invisible\";\n\n  const Panel: ReactElement = (\n    <PanelContainer\n      data-test=\"disclosure-panel\"\n      className={getPanelContainerClass(panelContainerHeight, panelIsVisible)}\n      bodyHeight={panelContainerHeight}\n      ref={refCallback}\n    >\n      {children}\n    </PanelContainer>\n  );\n\n  const dataTestClickableDiv: string = \"disclosure-clickable-region\";\n  const onClick = (): void => switchPanelVisibility(!panelIsVisible);\n\n  return isStatic ? (\n    <>\n      {Header}\n      {children}\n    </>\n  ) : onlyHeaderClickable ? (\n    <>\n      <ClickableDiv data-test={dataTestClickableDiv} onClick={onClick}>\n        {Header}\n      </ClickableDiv>\n      {Panel}\n    </>\n  ) : (\n    <ClickableDiv data-test={dataTestClickableDiv} onClick={onClick}>\n      {Header}\n      {Panel}\n    </ClickableDiv>\n  );\n};\n","import styled, { css } from \"styled-components\";\n\nimport { FlexRow, H2 } from \"primitives\";\n\nexport const PageSectionTitle = styled(H2)`\n  text-transform: lowercase;\n`;\n\nexport const PageSectionHeaderContainer = styled(FlexRow)(\n  ({ theme: { pageSection } }: IThemeProp) => css`\n    padding: ${pageSection.header.padding.vertical} 0;\n  `\n);\n\nexport const PageSectionCount = styled.span(\n  ({ theme: { pageSection } }: IThemeProp) => css`\n    margin-left: ${pageSection.count.margin.left};\n  `\n);\n\nexport const PageSectionStarredCount = styled(PageSectionCount)(\n  ({ theme: { fadedOpacity } }: IThemeProp) => css`\n    opacity: ${fadedOpacity};\n  `\n);\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"styled-components\";\n\nimport { FlexRowGrow, SquareImage } from \"primitives\";\n\nimport {\n  PageSectionHeaderContainer,\n  PageSectionTitle,\n  PageSectionCount,\n  PageSectionStarredCount\n} from \"./styles\";\n\ntype PageSectionHeaderProps = {\n  title: string;\n  icon?: IImageSrc;\n  count?: number;\n  starCount?: number;\n  dataTest: string;\n};\n\nexport const PageSectionHeader: React.FC<PageSectionHeaderProps> = ({\n  title,\n  icon,\n  count,\n  starCount,\n  dataTest\n}) => {\n  const theme: ITheme = useContext(ThemeContext);\n\n  return (\n    <PageSectionHeaderContainer data-test={dataTest}>\n      <FlexRowGrow data-test=\"section-header-title-and-counts\">\n        <PageSectionTitle data-test=\"section-header-title\">\n          {title}\n        </PageSectionTitle>\n\n        {count && count > 1 && (\n          <PageSectionCount data-test=\"section-header-count\">\n            {count}\n          </PageSectionCount>\n        )}\n\n        {starCount && starCount > 0 && (\n          <PageSectionStarredCount data-test=\"section-header-starred-count\">\n            {starCount}\n          </PageSectionStarredCount>\n        )}\n      </FlexRowGrow>\n\n      {icon && (\n        <SquareImage\n          data-test=\"section-header-icon\"\n          imgSrc={icon}\n          size={theme.pageSection.icon.size}\n        />\n      )}\n    </PageSectionHeaderContainer>\n  );\n};\n","import styled, { css } from \"styled-components\";\n\nimport { FlexLiGrow } from \"primitives\";\nimport { CSS } from \"styles\";\n\nexport const CountedListItemContainer = styled(FlexLiGrow)``;\n\ninterface ICountedListItemText extends IThemeProp {\n  favourite?: boolean;\n  star?: boolean;\n  faded: boolean;\n}\n\nexport const CountedListItemText = styled.span(\n  ({ favourite, star, faded, theme }: ICountedListItemText) => css`\n    flex: 1;\n\n    ${favourite && CSS.PSEUDO_ELEMENT_HEART}\n    ${star && CSS.PSEUDO_ELEMENT_STAR}\n    ${\n      faded &&\n      css`\n        opacity: ${theme.fadedOpacity};\n      `\n    }\n  `\n);\n\ninterface ICountedListItemPastCount extends IThemeProp {\n  isLeaderboardItem?: boolean;\n}\n\nexport const CountedListItemPastCount = styled.span(\n  ({\n    isLeaderboardItem,\n    theme: { countedListItem }\n  }: ICountedListItemPastCount) => css`\n    font-weight: bold;\n    text-align: right;\n    width: ${countedListItem.count.width};\n    margin-left: ${isLeaderboardItem\n      ? css`\n          calc(3 * ${countedListItem.count.margin.left})\n        `\n      : countedListItem.count.margin.left};\n  `\n);\n\nexport const CountedListItemFutureCount = styled(CountedListItemPastCount)(\n  ({ theme: { fadedOpacity } }: IThemeProp) => css`\n    opacity: ${fadedOpacity};\n  `\n);\n","import React from \"react\";\n\nimport {\n  CountedListItemContainer,\n  CountedListItemText,\n  CountedListItemPastCount,\n  CountedListItemFutureCount\n} from \"./styles\";\n\nexport const CountedListItem: React.FC<ICountedListItem> = ({\n  text,\n  favourite,\n  star,\n  futureCount,\n  pastCount,\n  countInfoIrrelevant,\n  isLeaderboardItem\n}) => {\n  const showFutureCount: boolean = futureCount > 0 && pastCount > 0;\n  const showPastCount: boolean =\n    pastCount > 1 || (futureCount > 0 && pastCount > 0);\n\n  return (\n    <CountedListItemContainer>\n      <CountedListItemText\n        faded={!countInfoIrrelevant && pastCount === 0}\n        favourite={favourite}\n        star={star}\n      >\n        {text}\n      </CountedListItemText>\n\n      {!countInfoIrrelevant && showFutureCount && (\n        <CountedListItemFutureCount>{futureCount}</CountedListItemFutureCount>\n      )}\n\n      {!countInfoIrrelevant && showPastCount && (\n        <CountedListItemPastCount isLeaderboardItem={isLeaderboardItem}>\n          {pastCount}\n        </CountedListItemPastCount>\n      )}\n    </CountedListItemContainer>\n  );\n};\n","import styled, { css } from \"styled-components\";\n\ninterface IRoundedSymbol extends IThemeProp {\n  color: string;\n}\n\nexport const RoundedSymbol = styled.div(\n  ({ color, theme: { roundedSymbol } }: IRoundedSymbol) => css`\n    background: ${color};\n    border-radius: ${roundedSymbol.borderRadius};\n    color: ${roundedSymbol.textColor};\n    font-size: ${roundedSymbol.fontSize};\n    height: ${roundedSymbol.size};\n    line-height: ${roundedSymbol.size};\n    text-align: center;\n    width: ${roundedSymbol.size};\n  `\n);\n","import styled, { css } from \"styled-components\";\n\nimport { H3 } from \"primitives\";\nimport { CSS } from \"styles\";\n\ninterface ICardTitleBold {\n  favourite?: boolean;\n}\n\nexport const CardTitleBold = styled(H3)(\n  ({ favourite }: ICardTitleBold) => css`\n    font-weight: bold;\n    text-transform: uppercase;\n    ${favourite && CSS.PSEUDO_ELEMENT_HEART}\n  `\n);\n\nexport const CardSubtitleBold = styled.div`\n  font-weight: bold;\n  text-transform: uppercase;\n`;\n","import styled, { css } from \"styled-components\";\n\nimport { FlexColumn, FlexRow } from \"primitives\";\nimport { CSS } from \"styles\";\n\nexport const EventCardNote = styled.div(() => CSS.FONT_SIZE_75_PERCENT);\n\nexport const EventCardCountdown = styled.div`\n  font-weight: bold;\n`;\n\nexport const EventCardMainContainer = styled(FlexColumn)(\n  ({ theme: { eventCard } }: IThemeProp) => css`\n    > *:not(:first-child) {\n      margin-top: ${eventCard.notFirstChild.margin.top};\n    }\n  `\n);\n\nexport const EventCardDateText = styled.div(() => CSS.FONT_SIZE_75_PERCENT);\n\nexport const EventCardCompanyContainer = styled(FlexRow)(\n  ({ theme: { eventCard } }: IThemeProp) => css`\n    flex-wrap: wrap;\n    align-content: flex-start;\n    justify-content: flex-end;\n\n    > * {\n      margin-left: ${eventCard.companySymbol.spaceBetweenSymbols};\n      margin-bottom: ${eventCard.companySymbol.spaceBetweenSymbols};\n    }\n  `\n);\n\n// export const EventCardPhotosContainer = styled(FlexRow)`\n//   margin-top: 10px;\n//   justify-content: center;\n// `;\n\nexport const EventCardPhotosContainer = styled.div(\n  () => CSS.GRID_COLUMN_EQUAL_WIDTHS\n);\n","import React, { ReactElement, useContext } from \"react\";\nimport { ThemeContext } from \"styled-components\";\n\nimport { SHOW_EVENT_CARD_PHOTOS } from \"config\";\nimport { GridColumnDiv, SquareImage } from \"primitives\";\n\nimport { RoundedSymbol } from \"../RoundedSymbol\";\nimport { CardTitleBold, CardSubtitleBold } from \"../styles\";\nimport {\n  EventCardNote,\n  EventCardCountdown,\n  EventCardMainContainer,\n  EventCardCompanyContainer,\n  EventCardDateText,\n  EventCardPhotosContainer\n} from \"./styles\";\n\nexport const EventCard: React.FC<IEventCard> = ({\n  title,\n  subtitle,\n  favourite,\n  body,\n  dateText,\n  note,\n  countdownText,\n  company,\n  photos\n}) => {\n  const theme: ITheme = useContext(ThemeContext);\n\n  const EventCardMain: ReactElement = (\n    <EventCardMainContainer data-test=\"event-card-container\">\n      <div data-test=\"event-card-title-and-subtitle\">\n        <CardTitleBold data-test=\"event-card-title\" favourite={favourite}>\n          {title}\n        </CardTitleBold>\n\n        {subtitle && (\n          <CardSubtitleBold data-test=\"event-card-subtitle\">\n            {subtitle}\n          </CardSubtitleBold>\n        )}\n      </div>\n\n      {body && <span data-test=\"event-card-body\">{body}</span>}\n\n      <EventCardDateText data-test=\"event-card-date-text\">\n        {dateText}\n      </EventCardDateText>\n\n      {countdownText && (\n        <>\n          <EventCardCountdown data-test=\"event-card-countdown\">\n            {countdownText}\n          </EventCardCountdown>\n\n          {note && (\n            <EventCardNote data-test=\"event-card-note\">{`(${note})`}</EventCardNote>\n          )}\n        </>\n      )}\n    </EventCardMainContainer>\n  );\n\n  if (company.length === 0) return EventCardMain;\n\n  const EventCardCompany: ReactElement = (\n    <EventCardCompanyContainer>\n      {company\n        .sort((a: IFriend, b: IFriend) => (a.initials > b.initials ? 1 : -1))\n        .map(({ initials }: IFriend, index: number) => (\n          <RoundedSymbol\n            key={index}\n            color={theme.eventCard.companySymbol.color}\n          >\n            {initials}\n          </RoundedSymbol>\n        ))}\n    </EventCardCompanyContainer>\n  );\n\n  const EventCardWithCompany: ReactElement = (\n    <GridColumnDiv\n      data-test=\"event-card-grid-container\"\n      equalWidthColumns={false}\n    >\n      {EventCardMain}\n      {EventCardCompany}\n    </GridColumnDiv>\n  );\n\n  if (!photos || !SHOW_EVENT_CARD_PHOTOS) return EventCardWithCompany;\n\n  const EventCardPhotos: ReactElement = (\n    <EventCardPhotosContainer>\n      {photos.map(\n        (photoSrc: IImageSrc, index: number): ReactElement => (\n          <SquareImage\n            key={index}\n            imgSrc={photoSrc}\n            size={theme.eventCard.photo.size}\n          />\n        )\n      )}\n    </EventCardPhotosContainer>\n  );\n\n  return (\n    <>\n      {EventCardWithCompany}\n      {EventCardPhotos}\n    </>\n  );\n};\n","import React from \"react\";\n\nimport {\n  arrayToString,\n  moveTheSuffixToPrefix,\n  getCountdownText,\n  dateToString,\n  datesToString,\n  isInFuture,\n  daysToGo\n} from \"utils\";\n\nimport { EventCard } from \"../EventCard\";\n\nexport const GigCard: React.FC<IGigCard> = ({\n  headline,\n  festival,\n  support,\n  lineup,\n  venue,\n  favourite,\n  company,\n  ticketType,\n  dates\n}) => {\n  const title: string = headline\n    ? moveTheSuffixToPrefix(headline.name)\n    : festival\n    ? festival.name\n    : \"GIG CARD TITLE MISSING\";\n\n  const subtitle: string | undefined = support\n    ? arrayToString({\n        stringArray: support.map(({ name }: IMusician): string =>\n          moveTheSuffixToPrefix(name)\n        )\n      })\n    : lineup &&\n      arrayToString({\n        stringArray: lineup.map(({ name }: IMusician): string =>\n          moveTheSuffixToPrefix(name)\n        )\n      });\n\n  const dateText: string =\n    dates.length === 2 ? datesToString(dates) : dateToString(dates[0]);\n\n  const countdownText: string | undefined = isInFuture(dates[0])\n    ? getCountdownText(daysToGo(dates))\n    : undefined;\n\n  const body: string = moveTheSuffixToPrefix(venue.name);\n\n  return (\n    <EventCard\n      title={title}\n      subtitle={subtitle}\n      body={body}\n      favourite={favourite}\n      company={company}\n      dateText={dateText}\n      countdownText={countdownText}\n      note={ticketType}\n    />\n  );\n};\n","export const getCountdownText = (daysToGo: number): string => {\n  if (daysToGo === 0) return \"TODAY\";\n  if (daysToGo === 1) return daysToGo + \" DAY TO GO\";\n  return daysToGo + \" DAYS TO GO\";\n};\n","export const daysToGo = (dates: Array<Date>): number => {\n  const secondsInADay: number = 24 * 60 * 60;\n  const dateDifference: number = dates[0].valueOf() - new Date().valueOf();\n\n  return Math.ceil(dateDifference / (secondsInADay * 1000));\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { Ul, Li } from \"primitives\";\n\ninterface IStyledLi extends IThemeProp {\n  addPaddingTop?: boolean;\n}\n\nconst StyledLi = styled(Li)(\n  ({ addPaddingTop, theme: { listItemGroupVerticalSpacing } }: IStyledLi) =>\n    addPaddingTop &&\n    css`\n      padding-top: ${listItemGroupVerticalSpacing};\n    `\n);\n\ninterface ListProps {\n  title: string;\n  listItems: Array<IListItemWithPaddingTopFlag>;\n  showBullets?: boolean;\n}\n\nexport const List: React.FC<ListProps> = ({\n  title,\n  listItems,\n  showBullets\n}) => (\n  <Ul showBullets={showBullets}>\n    <strong>{title}</strong>\n\n    {listItems.map(\n      ({ text, addPaddingTop }: IListItemWithPaddingTopFlag, index: number) => (\n        <StyledLi key={index} addPaddingTop={addPaddingTop}>\n          <span>{text}</span>\n        </StyledLi>\n      )\n    )}\n  </Ul>\n);\n","import { generateIngredientListItem } from \"utils\";\n\nexport const mapMethodToListItems = (\n  method: Array<string>\n): Array<IListItemWithPaddingTopFlag> =>\n  method.map(\n    (item: string): IListItemWithPaddingTopFlag => ({\n      text: item,\n      addPaddingTop: false\n    })\n  );\n\nexport const mapServeWithToListItems = (\n  serveWith: Array<Array<IRecipeIngredient>>\n): Array<IListItemWithPaddingTopFlag> => {\n  const getServeWithListItem = (\n    lineOptions: Array<IRecipeIngredient>\n  ): string => {\n    let output: string = \"\";\n\n    lineOptions.forEach(\n      ({ ingredient: { displayText } }: IRecipeIngredient, index: number) =>\n        (output +=\n          index === 0\n            ? displayText\n            : index === lineOptions.length - 1\n            ? ` or ${displayText}`\n            : `, ${displayText}`)\n    );\n\n    return output;\n  };\n\n  return serveWith.map(\n    (lineOptions: Array<IRecipeIngredient>): IListItemWithPaddingTopFlag => ({\n      text: getServeWithListItem(lineOptions),\n      addPaddingTop: false\n    })\n  );\n};\n\nexport const mapIngredientsToListItems = (\n  ingredientsGroups: Array<Array<IRecipeIngredient>>\n): Array<IListItemWithPaddingTopFlag> => {\n  let ingredientsWithPaddingFlags: Array<IListItemWithPaddingTopFlag> = [];\n\n  ingredientsGroups.forEach(\n    (ingredientsGroup: Array<IRecipeIngredient>, INDEX_HIGH: number) => {\n      ingredientsGroup.forEach(\n        (ingredient: IRecipeIngredient, INDEX_LOW: number) => {\n          ingredientsWithPaddingFlags.push({\n            text: generateIngredientListItem(ingredient),\n            addPaddingTop: INDEX_HIGH !== 0 && INDEX_LOW === 0\n          });\n        }\n      );\n    }\n  );\n\n  return ingredientsWithPaddingFlags;\n};\n","import styled, { css } from \"styled-components\";\n\nimport { H3, FlexColumn } from \"primitives\";\nimport { CSS } from \"styles\";\n\ninterface IRecipeCardTitle extends IThemeProp {\n  favourite?: boolean;\n}\n\nexport const RecipeCardTitle = styled(H3)(\n  ({ theme: { recipeCard }, favourite }: IRecipeCardTitle) => css`\n    text-transform: lowercase;\n    font-weight: ${recipeCard.title.fontWeight};\n    flex: 1;\n    ${favourite && CSS.PSEUDO_ELEMENT_HEART}\n  `\n);\n\nexport const RecipeCardPanel = styled.div(\n  ({ theme: { recipeCard } }: IThemeProp) => css`\n    padding-top: ${recipeCard.panel.padding.top};\n\n    > * {\n      padding-top: ${recipeCard.panel.children.padding.top};\n    }\n  `\n);\n\nexport const RecipeCardCostsContainer = styled(FlexColumn)`\n  text-align: center;\n`;\n\nexport const RecipeCardPortionCost = styled.span(\n  ({ theme: { recipeCard } }: IThemeProp) => css`\n    margin-top: ${recipeCard.portionCost.margin.top};\n    ${CSS.FONT_SIZE_75_PERCENT}\n  `\n);\n\nexport const RecipeCardPhotoContainer = styled.div`\n  text-align: center;\n`;\n","import React, { useContext, ReactElement } from \"react\";\nimport { ThemeContext } from \"styled-components\";\n\nimport { FlexRow, SquareImage } from \"primitives\";\nimport { getIngredientsHeader, numberToCurrencyString } from \"utils\";\n\nimport { Disclosure } from \"../Disclosure\";\nimport { List } from \"../List\";\nimport { RoundedSymbol } from \"../RoundedSymbol\";\n\nimport {\n  mapMethodToListItems,\n  mapServeWithToListItems,\n  mapIngredientsToListItems\n} from \"./factory\";\nimport {\n  RecipeCardTitle,\n  RecipeCardPanel,\n  RecipeCardPortionCost,\n  RecipeCardPhotoContainer,\n  RecipeCardCostsContainer\n} from \"./styles\";\n\nexport const RecipeCard: React.FC<IRecipeCard> = ({\n  title,\n  makes,\n  ingredients,\n  method,\n  favourite,\n  serveWith,\n  newRecipe,\n  diet,\n  image,\n  totalCost,\n  portionCost\n}) => {\n  const theme: ITheme = useContext(ThemeContext);\n\n  const defaultIngredientsHeader: string = \"ingredients\";\n  const ingredientsHeader: string = makes\n    ? getIngredientsHeader({ makes, defaultIngredientsHeader })\n    : defaultIngredientsHeader;\n\n  const RecipeCardHeader: ReactElement = (\n    <FlexRow>\n      <RecipeCardTitle favourite={favourite}>{title}</RecipeCardTitle>\n      <RoundedSymbol color={diet.color}>{diet.abbreviation}</RoundedSymbol>\n    </FlexRow>\n  );\n\n  return (\n    <Disclosure autoExpand={newRecipe} Header={RecipeCardHeader}>\n      <RecipeCardPanel>\n        <List\n          title={ingredientsHeader}\n          listItems={mapIngredientsToListItems(ingredients)}\n        />\n\n        {serveWith && (\n          <List\n            title=\"serve with\"\n            listItems={mapServeWithToListItems(serveWith)}\n          />\n        )}\n\n        <List\n          title=\"method\"\n          listItems={mapMethodToListItems(method)}\n          showBullets\n        />\n\n        {image && (\n          <RecipeCardPhotoContainer>\n            <SquareImage imgSrc={image} size={theme.recipeCard.photo.size} />\n          </RecipeCardPhotoContainer>\n        )}\n\n        {totalCost && (\n          <RecipeCardCostsContainer>\n            <span>\n              <span>approx. </span>\n              <strong>{numberToCurrencyString(totalCost, 1)}</strong>\n              <span> to make</span>\n            </span>\n\n            {portionCost && makes && (\n              <RecipeCardPortionCost>\n                <strong>{numberToCurrencyString(portionCost, 1)}</strong>\n                <span>\n                  {makes.measurement ? ` per ${makes.measurement}` : \" each\"}\n                </span>\n              </RecipeCardPortionCost>\n            )}\n          </RecipeCardCostsContainer>\n        )}\n      </RecipeCardPanel>\n    </Disclosure>\n  );\n};\n","import { MEASUREMENTS } from \"@constants\";\n\nimport { concatenateQuantityAndMeasurement } from \"./concatenateQuantityAndMeasurement\";\n\ninterface IGetIngredientsHeader {\n  defaultIngredientsHeader: string;\n  makes: IRecipeMakes;\n}\n\nexport const getIngredientsHeader = ({\n  defaultIngredientsHeader,\n  makes\n}: IGetIngredientsHeader): string => {\n  if (!makes.measurement)\n    return `${defaultIngredientsHeader} (makes ${makes.quantity})`;\n\n  const quantitySpaceMeasurement: string =\n    makes.quantity.toString() + \" \" + makes.measurement;\n\n  const quantityAndMeasurement: string =\n    makes.measurement === MEASUREMENTS.GRAM ||\n    makes.measurement === MEASUREMENTS.MILLILITRE\n      ? concatenateQuantityAndMeasurement(\n          makes.quantity.toString(),\n          makes.measurement\n        )\n      : makes.quantity === 1\n      ? quantitySpaceMeasurement\n      : quantitySpaceMeasurement + \"s\";\n\n  return `${defaultIngredientsHeader} (makes ${quantityAndMeasurement})`;\n};\n","import React from \"react\";\n\nimport { arrayToString, dateToString, moveTheSuffixToPrefix } from \"utils\";\n\nimport { EventCard } from \"../EventCard\";\n\nexport const TheatreCard: React.FC<ITheatreCard> = ({\n  play,\n  cast,\n  favourite,\n  company,\n  theatre,\n  date\n}) => {\n  const title: string = moveTheSuffixToPrefix(play.name);\n\n  const subtitle: string | undefined =\n    cast &&\n    arrayToString({\n      stringArray: cast.map(({ name }: IActor): string =>\n        moveTheSuffixToPrefix(name)\n      )\n    });\n\n  const dateText: string = dateToString(date);\n\n  const body: string = theatre.name;\n\n  return (\n    <EventCard\n      title={title}\n      subtitle={subtitle}\n      body={body}\n      favourite={favourite}\n      company={company}\n      dateText={dateText}\n    />\n  );\n};\n","import React from \"react\";\n\nimport { arrayToString, datesToString } from \"utils\";\n\nimport { EventCard } from \"../EventCard\";\n\nexport const TravelCard: React.FC<ITravelCard> = ({\n  title,\n  subtitle,\n  favourite,\n  company,\n  dates,\n  photos\n}) => {\n  const TITLE: string = arrayToString({\n    stringArray: title.map(({ name }: ILocation) => name),\n    useAmpersandsForPair: true\n  });\n\n  const SUBTITLE: string | undefined =\n    subtitle &&\n    arrayToString({\n      stringArray: subtitle.map(({ name }: ILocation) => name)\n    });\n\n  const dateText: string = datesToString(dates);\n\n  return (\n    <EventCard\n      title={TITLE}\n      subtitle={SUBTITLE}\n      favourite={favourite}\n      company={company}\n      dateText={dateText}\n      photos={photos}\n    />\n  );\n};\n","import React, { useContext } from \"react\";\nimport styled, { css, ThemeContext } from \"styled-components\";\n\nimport { Link, FlexRow, SquareImage } from \"primitives\";\nimport { moveTheSuffixToPrefix } from \"utils\";\n\nimport { CardTitleBold, CardSubtitleBold } from \"../styles\";\n\nconst VinylCardContainer = FlexRow;\n\nconst VinylCardLink = styled(Link)(\n  ({ theme: { vinylCard } }: IThemeProp) =>\n    css`\n      margin-right: ${vinylCard.artwork.margin.right};\n    `\n);\n\nconst VinylCardArtwork = styled(SquareImage)`\n  display: block;\n`;\n\nconst VinylCardTextContainer = styled.div(\n  ({ theme: { vinylCard } }: IThemeProp) =>\n    css`\n      flex: 1;\n\n      > *:not(:last-child) {\n        margin-bottom: ${vinylCard.notLastChild.margin.bottom};\n      }\n    `\n);\n\nexport const VinylCard: React.FC<IVinylCard> = ({\n  artist,\n  title,\n  year,\n  artwork,\n  appleMusicUrl\n}) => {\n  const theme: ITheme = useContext(ThemeContext);\n\n  return (\n    <VinylCardContainer data-test=\"vinyl-card\">\n      <VinylCardLink href={appleMusicUrl}>\n        <VinylCardArtwork\n          dataTest=\"vinyl-artwork\"\n          size={theme.vinylCard.artwork.size}\n          imgSrc={artwork}\n        />\n      </VinylCardLink>\n\n      <VinylCardTextContainer>\n        <CardTitleBold>{title}</CardTitleBold>\n        <CardSubtitleBold>{moveTheSuffixToPrefix(artist)}</CardSubtitleBold>\n\n        <div>{year}</div>\n      </VinylCardTextContainer>\n    </VinylCardContainer>\n  );\n};\n","import styled, { css } from \"styled-components\";\n\nimport { Ul } from \"primitives\";\nimport { PAGE_SECTION_PANEL_TYPES } from \"@constants\";\n\ninterface IPageSectionPanelList {\n  pageSectionPanelType: string;\n}\n\nconst CSS_COMMON = ({ theme: { pageSection } }: IThemeProp) => css`\n  > * {\n    border-bottom: ${pageSection.panelList.border.bottom};\n  }\n\n  > *:last-child {\n    border-bottom: 0;\n  }\n`;\n\nconst CSS_RECIPE_CARDS = ({\n  theme: {\n    pageSection: {\n      panelList: { recipeCards }\n    }\n  }\n}: IThemeProp) => css`\n  > * {\n    padding: ${recipeCards.padding.vertical} 0;\n  }\n\n  > *:first-child {\n    padding-top: ${recipeCards.firstRecipeCard.padding.top};\n  }\n\n  > *:last-child {\n    padding-bottom: ${recipeCards.lastRecipeCard.padding.bottom};\n  }\n\n  ${CSS_COMMON}\n`;\n\nconst CSS_COUNTED_LIST = ({\n  theme: {\n    pageSection: {\n      panelList: { padding, countedListItems }\n    }\n  }\n}: IThemeProp) => css`\n  padding-bottom: ${padding.bottom};\n\n  > * {\n    padding: ${countedListItems.padding.vertical} 0;\n  }\n\n  ${CSS_COMMON}\n`;\n\nconst CSS_REGULAR_CARDS = ({\n  theme: {\n    pageSection: {\n      panelList: { padding, regularCards }\n    }\n  }\n}: IThemeProp) => css`\n  padding-bottom: ${padding.bottom};\n\n  > * {\n    padding: ${regularCards.padding.vertical} 0;\n  }\n\n  > *:first-child {\n    padding-top: 0;\n  }\n\n  > *:last-child {\n    padding-bottom: ${regularCards.lastRegularCard.padding.bottom};\n  }\n\n  ${CSS_COMMON}\n`;\n\nexport const PageSectionPanelList = styled(\n  Ul\n)(({ pageSectionPanelType }: IPageSectionPanelList) =>\n  pageSectionPanelType === PAGE_SECTION_PANEL_TYPES.RECIPE_CARDS\n    ? CSS_RECIPE_CARDS\n    : pageSectionPanelType === PAGE_SECTION_PANEL_TYPES.COUNTED_LIST\n    ? CSS_COUNTED_LIST\n    : CSS_REGULAR_CARDS\n);\n","import React from \"react\";\n\nimport { PAGE_SECTION_PANEL_TYPES } from \"@constants\";\nimport { Li } from \"primitives\";\n\nimport { CountedListItem } from \"../CountedListItem\";\nimport { GigCard } from \"../GigCard\";\nimport { RecipeCard } from \"../RecipeCard\";\nimport { TheatreCard } from \"../TheatreCard\";\nimport { TravelCard } from \"../TravelCard\";\nimport { VinylCard } from \"../VinylCard\";\n\nimport { PageSectionPanelList } from \"./styles\";\n\ninterface IPageSectionPanel extends IPageSectionDataTypes {\n  isLeaderboard?: boolean;\n}\n\nexport const PageSectionPanel: React.FC<IPageSectionPanel> = ({\n  isLeaderboard,\n  countedListItems,\n  gigCards,\n  recipeCards,\n  theatreCards,\n  travelCards,\n  vinylCards\n}) => {\n  const pageSectionPanelType: string = !!recipeCards\n    ? PAGE_SECTION_PANEL_TYPES.RECIPE_CARDS\n    : !!countedListItems\n    ? PAGE_SECTION_PANEL_TYPES.COUNTED_LIST\n    : PAGE_SECTION_PANEL_TYPES.REGULAR_CARDS;\n\n  return (\n    <PageSectionPanelList pageSectionPanelType={pageSectionPanelType}>\n      {recipeCards &&\n        recipeCards.map(\n          (recipeCard: IRecipeCard, index: number) =>\n            !recipeCard.hide && (\n              <Li key={index}>\n                <RecipeCard key={index} {...recipeCard} />\n              </Li>\n            )\n        )}\n\n      {gigCards &&\n        gigCards.map((gigCard: IGigCard, index: number) => (\n          <Li key={index}>\n            <GigCard {...gigCard} />\n          </Li>\n        ))}\n\n      {theatreCards &&\n        theatreCards.map((theateCard: ITheatreCard, index: number) => (\n          <Li key={index}>\n            <TheatreCard {...theateCard} />\n          </Li>\n        ))}\n\n      {travelCards &&\n        travelCards.map((travelCard: ITravelCard, index: number) => (\n          <Li key={index}>\n            <TravelCard {...travelCard} />\n          </Li>\n        ))}\n\n      {vinylCards &&\n        vinylCards.map(\n          (vinylCard: IVinylCard | undefined, index: number) =>\n            vinylCard && (\n              <Li key={index}>\n                <VinylCard {...vinylCard} />\n              </Li>\n            )\n        )}\n\n      {countedListItems &&\n        countedListItems.map(\n          (countedListItem: ICountedListItem, index: number) => (\n            <CountedListItem key={index} {...countedListItem} />\n          )\n        )}\n    </PageSectionPanelList>\n  );\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { useMediaQueries } from \"utils\";\nimport { Disclosure } from \"../Disclosure\";\nimport { PageSectionHeader } from \"../PageSectionHeader\";\nimport { PageSectionPanel } from \"../PageSectionPanel\";\n\nconst PageSectionContainer = styled.section(\n  ({\n    theme: {\n      pageSection: { background, boxShadow, borderRadius, padding, margin }\n    }\n  }) => css`\n    background: ${background};\n    box-shadow: ${boxShadow};\n    border-radius: ${borderRadius};\n    padding: 0 ${padding.horizontal};\n    margin-bottom: ${margin.bottom};\n  `\n);\n\nexport const PageSection: React.FC<IPageSection> = ({\n  title,\n  icon,\n  data,\n  count,\n  starCount,\n  staticAlways,\n  staticIf2Columns,\n  autoExpandAlways,\n  autoExpandIf2Columns,\n  onlyHeaderClickable\n}) => {\n  const { pageUses2Columns } = useMediaQueries();\n\n  return (\n    <PageSectionContainer>\n      <Disclosure\n        isStatic={staticAlways || (pageUses2Columns && staticIf2Columns)}\n        autoExpand={\n          autoExpandAlways || (pageUses2Columns && autoExpandIf2Columns)\n        }\n        onlyHeaderClickable={onlyHeaderClickable}\n        Header={\n          <PageSectionHeader\n            title={title}\n            count={count}\n            starCount={starCount}\n            icon={icon}\n            dataTest=\"section-header-container\"\n          />\n        }\n      >\n        <PageSectionPanel {...data} />\n      </Disclosure>\n    </PageSectionContainer>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"styled-components\";\n\nimport { Ul, Li, GridColumnDiv } from \"primitives\";\nimport { replaceSpacesWithDashes, useMediaQueries } from \"utils\";\n\nimport { PageSection } from \"../PageSection\";\n\ninterface IPageSectionsLayout {\n  pageSections: Array<IPageSection>;\n}\n\nexport const PageSectionsLayout: React.FC<IPageSectionsLayout> = ({\n  pageSections\n}) => {\n  const theme: ITheme = useContext(ThemeContext);\n  const { pageUses2Columns } = useMediaQueries();\n\n  const validPageSections: Array<IPageSection> = pageSections.filter(\n    ({\n      data: {\n        countedListItems,\n        gigCards,\n        recipeCards,\n        theatreCards,\n        travelCards,\n        vinylCards\n      }\n    }: IPageSection): boolean => {\n      const dataExists: boolean = !(\n        (countedListItems && countedListItems.length === 0) ||\n        (gigCards && gigCards.length === 0) ||\n        (recipeCards && recipeCards.filter(item => !item.hide).length === 0) ||\n        (theatreCards && theatreCards.length === 0) ||\n        (travelCards && travelCards.length === 0) ||\n        (vinylCards && vinylCards.length === 0)\n      );\n\n      return dataExists;\n    }\n  );\n\n  const validPageSectionCount: number = validPageSections.length;\n\n  const pageSectionsCol1: Array<IPageSection> = validPageSections.filter(\n    (pageSection: IPageSection, index: number): boolean =>\n      index < validPageSectionCount / 2\n  );\n  const pageSectionsCol2: Array<IPageSection> = validPageSections.filter(\n    (pageSection: IPageSection): boolean =>\n      !pageSectionsCol1.includes(pageSection)\n  );\n\n  const pageSectionColumns: Array<Array<IPageSection>> = pageUses2Columns\n    ? [pageSectionsCol1, pageSectionsCol2]\n    : [validPageSections];\n\n  return (\n    <GridColumnDiv\n      columnGap={theme.pageLayout.columnGap}\n      data-test=\"page-sections\"\n      equalWidthColumns={true}\n    >\n      {pageSectionColumns.map(\n        (pageSectionColumn: Array<IPageSection>, index: number) => (\n          <Ul key={index} data-test={\"page-column-\" + (index + 1)}>\n            {pageSectionColumn.map(\n              (pageSection: IPageSection, index: number) => (\n                <Li\n                  key={index}\n                  data-test={\n                    \"section-\" + replaceSpacesWithDashes(pageSection.title)\n                  }\n                >\n                  <PageSection {...pageSection} />\n                </Li>\n              )\n            )}\n          </Ul>\n        )\n      )}\n    </GridColumnDiv>\n  );\n};\n","export const replaceSpacesWithDashes = (stringWithSpaces: string): string =>\n  stringWithSpaces.replace(/\\s+/g, \"-\").toLowerCase();\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { H1 } from \"primitives\";\n\nconst PageHeaderContainer = styled.div(\n  ({ theme: { pageHeader } }: IThemeProp) => css`\n    display: flex;\n    justify-content: center;\n    text-transform: lowercase;\n    margin-bottom: ${pageHeader.margin.bottom};\n  `\n);\n\nconst PageHeaderCount = styled.span(\n  ({ theme: { pageHeader } }: IThemeProp) => css`\n    padding: ${pageHeader.count.padding.all};\n  `\n);\n\ninterface IPageHeader {\n  titleText: string;\n  count?: number;\n}\n\nexport const PageHeader: React.FC<IPageHeader> = ({ titleText, count }) => (\n  <PageHeaderContainer data-test=\"page-header-container\">\n    <H1 data-test=\"page-header-title\">{titleText}</H1>\n\n    {count && count > 0 && (\n      <PageHeaderCount data-test=\"page-header-count\">{count}</PageHeaderCount>\n    )}\n  </PageHeaderContainer>\n);\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2006: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.ALL_AMERICAN_REJECTS_THE,\n    dates: [new Date(\"2006-09-23\")],\n    venue: MUSIC_VENUES.APOLLO_MANCHESTER,\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2007: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.FALL_OUT_BOY,\n    support: [MUSICIANS.COBRA_STARSHIP],\n    dates: [new Date(\"2007-04-03\")],\n    venue: MUSIC_VENUES.APOLLO_MANCHESTER,\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON, FRIENDS.MEGAN_BLACKBURN]\n  },\n  {\n    festival: FESTIVALS.DECAYDANCE,\n    lineup: [\n      MUSICIANS.COBRA_STARSHIP,\n      MUSICIANS.ACADEMY_IS_THE,\n      MUSICIANS.GYM_CLASS_HEROES,\n      MUSICIANS.PANIC_AT_THE_DISCO,\n      MUSICIANS.FALL_OUT_BOY\n    ],\n    dates: [new Date(\"2007-08-22\")],\n    venue: MUSIC_VENUES.HAMMERSMITH_APOLLO,\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON, FRIENDS.MEGAN_BLACKBURN],\n    favourite: true\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2008: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.KATE_NASH,\n    support: [MUSICIANS.BLACK_KIDS],\n    venue: MUSIC_VENUES.WOLVERHAMPTON_CIVIC_HALL,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2008-03-01\")]\n  },\n  {\n    headline: MUSICIANS.PANIC_AT_THE_DISCO,\n    support: [MUSICIANS.METRO_STATION],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.MEGAN_BLACKBURN, FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON],\n    dates: [new Date(\"2008-03-15\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.ADELE,\n    venue: MUSIC_VENUES.ALEXANDRA_THEATRE,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2008-05-04\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BOYS_LIKE_GIRLS,\n    support: [MUSICIANS.WE_THE_KINGS, MUSICIANS.CUTE_IS_WHAT_WE_AIM_FOR],\n    venue: MUSIC_VENUES.ACADEMY_2_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON, FRIENDS.MEGAN_BLACKBURN],\n    dates: [new Date(\"2008-05-31\")]\n  },\n  {\n    headline: MUSICIANS.ACADEMY_IS_THE,\n    support: [MUSICIANS.WE_THE_KINGS, MUSICIANS.MAINE_THE],\n    venue: MUSIC_VENUES.BARFLY_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.MEGAN_BLACKBURN, FRIENDS.EMMA_CODRINGTON],\n    dates: [new Date(\"2008-09-20\")]\n  },\n  {\n    headline: MUSICIANS.FALL_OUT_BOY,\n    support: [MUSICIANS.BOYS_LIKE_GIRLS, MUSICIANS.YOU_ME_AT_SIX],\n    venue: MUSIC_VENUES.NEC_ARENA_BIRMINGHAM,\n    dates: [new Date(\"2008-10-19\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON, FRIENDS.MEGAN_BLACKBURN]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2009: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.FALL_OUT_BOY,\n    support: [MUSICIANS.HEY_MONDAY, MUSICIANS.KIDS_IN_GLASS_HOUSES],\n    dates: [new Date(\"2009-03-05\")],\n    company: [FRIENDS.MUM, FRIENDS.MEGAN_BLACKBURN, FRIENDS.EMMA_CODRINGTON],\n    venue: MUSIC_VENUES.ARENA_MANCHESTER\n  },\n  {\n    headline: MUSICIANS.YOU_ME_AT_SIX,\n    support: [MUSICIANS.EMAROSA, MUSICIANS.SPILL_CANVAS_THE],\n    dates: [new Date(\"2009-03-07\")],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.MEGAN_BLACKBURN, FRIENDS.EMMA_CODRINGTON]\n  },\n  {\n    headline: MUSICIANS.KATY_PERRY,\n    support: [MUSICIANS.SLIIMY],\n    favourite: true,\n    dates: [new Date(\"2009-08-25\")],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    company: [\n      FRIENDS.MUM,\n      FRIENDS.LOUISE_BLACKBURN,\n      FRIENDS.MEGAN_BLACKBURN,\n      FRIENDS.EMMA_CODRINGTON\n    ]\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    support: [MUSICIANS.XX_THE],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    dates: [new Date(\"2009-09-20\")],\n    favourite: true,\n    company: [FRIENDS.DAD]\n  },\n  {\n    headline: MUSICIANS.ALL_TIME_LOW,\n    support: [MUSICIANS.FRIDAY_NIGHT_BOYS_THE, MUSICIANS.AUDITION_THE],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    dates: [new Date(\"2009-10-02\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON, FRIENDS.MEGAN_BLACKBURN]\n  },\n  {\n    headline: MUSICIANS.ARCTIC_MONKEYS,\n    dates: [new Date(\"2009-11-22\")],\n    company: [FRIENDS.MUM, FRIENDS.DAD],\n    venue: MUSIC_VENUES.ARENA_NOTTINGHAM\n  },\n  {\n    headline: MUSICIANS.PARAMORE,\n    support: [MUSICIANS.YOU_ME_AT_SIX],\n    venue: MUSIC_VENUES.NIA_ARENA_BIRMINGHAM,\n    dates: [new Date(\"2009-12-11\")],\n    company: [FRIENDS.MEGAN_BLACKBURN, FRIENDS.EMMA_CODRINGTON, FRIENDS.MUM]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2010: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.YOU_ME_AT_SIX,\n    support: [MUSICIANS.WE_THE_KINGS, MUSICIANS.FOREVER_THE_SICKEST_KIDS],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    dates: [new Date(\"2010-03-09\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON, FRIENDS.MEGAN_BLACKBURN]\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    support: [MUSICIANS.DRUMS_THE],\n    venue: MUSIC_VENUES.WOLVERHAMPTON_CIVIC_HALL,\n    company: [FRIENDS.DAD, FRIENDS.EMMA_CODRINGTON, FRIENDS.MUM],\n    dates: [new Date(\"2010-05-10\")]\n  },\n  {\n    headline: MUSICIANS.PALOMA_FAITH,\n    support: [MUSICIANS.ELIZA_DOOLITTLE],\n    venue: MUSIC_VENUES.DE_MONTFORT_HALL,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2010-11-05\")]\n  },\n  {\n    headline: MUSICIANS.MARINA,\n    venue: MUSIC_VENUES.TRENT_UNIVERSITY_NOTTINGHAM,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2010-11-07\")]\n  },\n  {\n    headline: MUSICIANS.ELLIE_GOULDING,\n    support: [MUSICIANS.SUNDAY_GIRL],\n    venue: MUSIC_VENUES.ENGINE_SHED,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2010-11-08\")]\n  },\n  {\n    headline: MUSICIANS.PARAMORE,\n    support: [MUSICIANS.B_O_B],\n    venue: MUSIC_VENUES.SHEFFIELD_ARENA,\n    company: [FRIENDS.EMMA_CODRINGTON, FRIENDS.MEGAN_BLACKBURN, FRIENDS.MUM],\n    dates: [new Date(\"2010-11-11\")]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2011: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.KATE_NASH,\n    support: [MUSICIANS.BRIGITTE_APHRODITE],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.TONYA_FRANCE, FRIENDS.KIRSTEN_JACKSON],\n    dates: [new Date(\"2011-03-22\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.KATY_PERRY,\n    venue: MUSIC_VENUES.ARENA_NOTTINGHAM,\n    company: [\n      FRIENDS.JESS_SMITH,\n      FRIENDS.BLAINE_PEARSON,\n      FRIENDS.ELLIE_SPANOVIC,\n      FRIENDS.POOJA_DHIR\n    ],\n    dates: [new Date(\"2011-03-30\")]\n  },\n  {\n    headline: MUSICIANS.ADELE,\n    support: [MUSICIANS.MICHAEL_KIWANUKA],\n    venue: MUSIC_VENUES.INSTITUTE_BIRMINGHAM,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2011-04-18\")]\n  },\n  {\n    headline: MUSICIANS.ADELE,\n    support: [MUSICIANS.AMOS_LEE],\n    venue: MUSIC_VENUES.DE_MONTFORT_HALL,\n    company: [FRIENDS.EMMA_CODRINGTON, FRIENDS.MUM],\n    dates: [new Date(\"2011-09-13\")]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2012: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.SBTRKT,\n    support: [MUSICIANS.DISCLOSURE],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.TONYA_FRANCE],\n    dates: [new Date(\"2012-02-28\")]\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    venue: MUSIC_VENUES.NEC_ARENA_BIRMINGHAM,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2012-03-13\")]\n  },\n  {\n    headline: MUSICIANS.LITTLE_COMETS,\n    venue: MUSIC_VENUES.COCKPIT_LEEDS,\n    company: [FRIENDS.EMMA_CODRINGTON],\n    dates: [new Date(\"2012-04-23\")]\n  },\n  {\n    headline: MUSICIANS.KATE_NASH,\n    venue: MUSIC_VENUES.BODEGA,\n    company: [\n      FRIENDS.TONYA_FRANCE,\n      FRIENDS.SONYA_PARDI,\n      FRIENDS.KIRSTEN_JACKSON\n    ],\n    dates: [new Date(\"2012-06-22\")]\n  },\n  {\n    headline: MUSICIANS.MARINA,\n    venue: MUSIC_VENUES.INSTITUTE_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON],\n    dates: [new Date(\"2012-06-29\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.LADY_GAGA,\n    venue: MUSIC_VENUES.TWICKENHAM_STADIUM,\n    company: [FRIENDS.EMMA_CODRINGTON],\n    dates: [new Date(\"2012-09-08\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.NICKI_MINAJ,\n    support: [MUSICIANS.MISHA_B, MUSICIANS.TYGA],\n    venue: MUSIC_VENUES.ARENA_NOTTINGHAM,\n    company: [FRIENDS.ELLIE_SPANOVIC, FRIENDS.BLAINE_PEARSON],\n    dates: [new Date(\"2012-10-21\")]\n  },\n  {\n    headline: MUSICIANS.LITTLE_COMETS,\n    venue: MUSIC_VENUES.RESCUE_ROOMS,\n    company: [FRIENDS.SARAH_WHITAKER, FRIENDS.BETH_SHEARS],\n    dates: [new Date(\"2012-10-31\")]\n  },\n  {\n    headline: MUSICIANS.KILLERS_THE,\n    venue: MUSIC_VENUES.SHEFFIELD_ARENA,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2012-11-08\")]\n  },\n  {\n    headline: MUSICIANS.BEN_HOWARD,\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.STEVE_RICHARDS],\n    dates: [new Date(\"2012-11-22\")]\n  },\n  {\n    headline: MUSICIANS.ELLIE_GOULDING,\n    venue: MUSIC_VENUES.ROCK_CITY,\n    favourite: true,\n    company: [FRIENDS.BLAINE_PEARSON, FRIENDS.JESS_SMITH, FRIENDS.ELLIE_GURKIN],\n    dates: [new Date(\"2012-12-11\")]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2013: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.BASTILLE,\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.TONYA_FRANCE],\n    dates: [new Date(\"2013-03-21\")]\n  },\n  {\n    headline: MUSICIANS.RIHANNA,\n    venue: MUSIC_VENUES.NEC_ARENA_BIRMINGHAM,\n    company: [FRIENDS.JESS_SMITH],\n    dates: [new Date(\"2013-07-18\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.CHRVCHES,\n    venue: MUSIC_VENUES.RITZ_MANCHESTER,\n    company: [FRIENDS.SIMAN_PONE],\n    dates: [new Date(\"2013-10-14\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2014: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.FOXES,\n    venue: MUSIC_VENUES.RUBY_LOUNGE,\n    company: [FRIENDS.SIMAN_PONE],\n    dates: [new Date(\"2014-03-08\")]\n  },\n  {\n    headline: MUSICIANS.CLEAN_BANDIT,\n    venue: MUSIC_VENUES.ACADEMY_2_MANCHESTER,\n    company: [FRIENDS.SIAN_RODWAY_SMITH],\n    dates: [new Date(\"2014-05-07\")]\n  },\n  {\n    headline: MUSICIANS.LORDE,\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    company: [FRIENDS.TONYA_FRANCE],\n    dates: [new Date(\"2014-06-05\")]\n  },\n  {\n    festival: FESTIVALS.PARKLIFE,\n    lineup: [\n      MUSICIANS.FOXES,\n      MUSICIANS.ROUTE_94,\n      MUSICIANS.REDLIGHT,\n      MUSICIANS.BREACH,\n      MUSICIANS.RUDIMENTAL,\n      MUSICIANS.ELLA_EYRE,\n      MUSICIANS.CLEAN_BANDIT,\n      MUSICIANS.SAM_SMITH,\n      MUSICIANS.LONDON_GRAMMAR,\n      MUSICIANS.BASTILLE,\n      MUSICIANS.DISCLOSURE\n    ],\n    venue: MUSIC_VENUES.HEATON_PARK,\n    company: [FRIENDS.JESS_SMITH, FRIENDS.POOJA_DHIR, FRIENDS.TONYA_FRANCE],\n    dates: [new Date(\"2014-06-07\"), new Date(\"2014-06-08\")]\n  },\n  {\n    headline: MUSICIANS.SBTRKT,\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.THOM_STEPHANAKIS],\n    dates: [new Date(\"2014-09-30\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [\n      MUSICIANS.JAX_JONES,\n      MUSICIANS.DUKE_DUMONT,\n      MUSICIANS.CYRIL_HAHN,\n      MUSICIANS.FRIEND_WITHIN\n    ],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.TONYA_FRANCE],\n    dates: [new Date(\"2014-10-04\")]\n  },\n  {\n    headline: MUSICIANS.CLEAN_BANDIT,\n    support: [MUSICIANS.YEARS_AND_YEARS],\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.SIAN_RODWAY_SMITH],\n    dates: [new Date(\"2014-10-17\")]\n  },\n  {\n    headline: MUSICIANS.LADY_GAGA,\n    venue: MUSIC_VENUES.ARENA_MANCHESTER,\n    company: [FRIENDS.SIMAN_PONE],\n    dates: [new Date(\"2014-10-21\")]\n  },\n  {\n    headline: MUSICIANS.SAM_SMITH,\n    support: [MUSICIANS.TORI_KELLY],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2014-10-28\")]\n  },\n  {\n    headline: MUSICIANS.CHRVCHES,\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.SIMAN_PONE],\n    dates: [new Date(\"2014-11-06\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [\n      MUSICIANS.KIDNAP,\n      MUSICIANS.BONDAX,\n      MUSICIANS.GORGON_CITY,\n      MUSICIANS.REDLIGHT\n    ],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.AMY_BAGNI, FRIENDS.ELLE_OLDROYD],\n    dates: [new Date(\"2014-11-07\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [\n      MUSICIANS.GEORGE_FITZGERALD,\n      MUSICIANS.SKREAM,\n      MUSICIANS.PAUL_WOOLFORD,\n      MUSICIANS.GREEN_VELVET\n    ],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.ALEX_FAYE],\n    dates: [new Date(\"2014-11-15\")]\n  },\n  {\n    headline: MUSICIANS.LA_ROUX,\n    venue: MUSIC_VENUES.RITZ_MANCHESTER,\n    company: [FRIENDS.EMMA_CODRINGTON],\n    dates: [new Date(\"2014-11-16\")]\n  },\n  {\n    headline: MUSICIANS.LADY_GAGA,\n    support: [MUSICIANS.LADY_STARLIGHT],\n    venue: MUSIC_VENUES.SHEFFIELD_ARENA,\n    company: [FRIENDS.GRACE_HULME],\n    dates: [new Date(\"2014-11-20\")]\n  },\n  {\n    headline: MUSICIANS.LILY_ALLEN,\n    venue: MUSIC_VENUES.APOLLO_MANCHESTER,\n    company: [FRIENDS.SIAN_RODWAY_SMITH],\n    dates: [new Date(\"2014-11-25\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [MUSICIANS.MIDLAND, MUSICIANS.JOY_ORBISON, MUSICIANS.DUSKY],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [\n      FRIENDS.EMMA_CODRINGTON,\n      FRIENDS.BECKY_MILLS,\n      FRIENDS.NATALIE_LAMBERT\n    ],\n    dates: [new Date(\"2014-12-06\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2015: Array<IGigCard> = [\n  {\n    festival: FESTIVALS.TRANSMISSION,\n    lineup: [MUSICIANS.TEN_WALLS, MUSICIANS.DUSKY, MUSICIANS.YOUSEF],\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.CHLOE_WHITE, FRIENDS.AMY_BAGNI, FRIENDS.BETH_SPELLER],\n    dates: [new Date(\"2015-02-07\")]\n  },\n  {\n    festival: FESTIVALS.TRIBAL_SESSIONS,\n    lineup: [MUSICIANS.JOSH_BUTLER, MUSICIANS.BONTAN, MUSICIANS.GREEN_VELVET],\n    venue: MUSIC_VENUES.SANKEYS,\n    company: [FRIENDS.TONYA_FRANCE, FRIENDS.ALEX_FAYE],\n    dates: [new Date(\"2015-02-13\")]\n  },\n  {\n    festival: FESTIVALS.TRANSMISSION,\n    lineup: [MUSICIANS.JAX_JONES, MUSICIANS.DUKE_DUMONT, MUSICIANS.BLONDE],\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.BETH_SPELLER],\n    dates: [new Date(\"2015-02-27\")]\n  },\n  {\n    festival: FESTIVALS.TRANSMISSION,\n    lineup: [MUSICIANS.EATS_EVERYTHING, MUSICIANS.CARL_COX],\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.SONYA_PARDI, FRIENDS.TONYA_FRANCE, FRIENDS.ALEX_FAYE],\n    dates: [new Date(\"2015-04-03\")]\n  },\n  {\n    headline: MUSICIANS.ARIANA_GRANDE,\n    support: [MUSICIANS.RIXTON],\n    venue: MUSIC_VENUES.ARENA_MANCHESTER,\n    company: [FRIENDS.DAN_SPARROW],\n    dates: [new Date(\"2015-06-04\")]\n  },\n  {\n    festival: FESTIVALS.PARKLIFE,\n    lineup: [\n      MUSICIANS.BONDAX,\n      MUSICIANS.JUSTIN_MARTIN,\n      MUSICIANS.JULIO_BASHMORE,\n      MUSICIANS.TENSNAKE,\n      MUSICIANS.JAMES_BAY,\n      MUSICIANS.MK,\n      MUSICIANS.DANIEL_AVERY,\n      MUSICIANS.BAAUER,\n      MUSICIANS.DUSKY,\n      MUSICIANS.DAVID_RODIGAN,\n      MUSICIANS.GEORGE_FITZGERALD,\n      MUSICIANS.KAYTRANADA,\n      MUSICIANS.TEN_WALLS\n    ],\n    venue: MUSIC_VENUES.HEATON_PARK,\n    company: [\n      FRIENDS.SONYA_PARDI,\n      FRIENDS.TONYA_FRANCE,\n      FRIENDS.AMY_BAGNI,\n      FRIENDS.ELLE_OLDROYD,\n      FRIENDS.CHLOE_WHITE\n    ],\n    dates: [new Date(\"2015-06-06\"), new Date(\"2015-06-07\")]\n  },\n  {\n    festival: FESTIVALS.GLASTONBURY,\n    lineup: [\n      MUSICIANS.JAMES_BAY,\n      MUSICIANS.MARY_J_BLIGE,\n      MUSICIANS.SBTRKT,\n      MUSICIANS.CARIBOU,\n      MUSICIANS.FLORENCE_AND_THE_MACHINE,\n      MUSICIANS.MACEO_PLEX,\n      MUSICIANS.DUSKY,\n      MUSICIANS.SKREAM,\n      MUSICIANS.GEORGE_EZRA,\n      MUSICIANS.YEARS_AND_YEARS,\n      MUSICIANS.JESSIE_WARE,\n      MUSICIANS.BEN_HOWARD,\n      MUSICIANS.KANYE_WEST,\n      MUSICIANS.JAMIE_JONES,\n      MUSICIANS.FOUR_TET,\n      MUSICIANS.SMYTHS_THE,\n      MUSICIANS.SOAK,\n      MUSICIANS.SEINABO_SEY,\n      MUSICIANS.CHARLI_XCX,\n      MUSICIANS.GROOVE_ARMADA,\n      MUSICIANS.JAMIE_T,\n      MUSICIANS.CHEMICAL_BROTHERS_THE\n    ],\n    venue: MUSIC_VENUES.WORTHY_FARM,\n    company: [\n      FRIENDS.TONYA_FRANCE,\n      FRIENDS.GRACE_HULME,\n      FRIENDS.ELLIE_GURKIN,\n      FRIENDS.EMMA_CODRINGTON,\n      FRIENDS.THOM_STEPHANAKIS,\n      FRIENDS.FANNY_LINDQVIST,\n      FRIENDS.HANNA_FROGNER\n    ],\n    dates: [new Date(\"2015-06-26\"), new Date(\"2015-06-28\")]\n  },\n  {\n    headline: MUSICIANS.NOEL_GALLAGHERS_HIGH_FLYING_BIRDS,\n    support: [MUSICIANS.JOHNNY_MARR],\n    venue: MUSIC_VENUES.CASTLEFIELD_BOWL,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2015-07-11\")]\n  },\n  {\n    headline: MUSICIANS.MIGUEL,\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.SIAN_RODWAY_SMITH],\n    dates: [new Date(\"2015-10-18\")]\n  },\n  {\n    headline: MUSICIANS.CHRVCHES,\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.DAN_SPARROW],\n    dates: [new Date(\"2015-11-19\")]\n  },\n  {\n    headline: MUSICIANS.LISSIE,\n    venue: MUSIC_VENUES.ACADEMY_2_MANCHESTER,\n    dates: [new Date(\"2015-12-05\")],\n    company: [],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.FABRIC_NYE,\n    lineup: [MUSICIANS.GEORGE_FITZGERALD, MUSICIANS.EATS_EVERYTHING],\n    venue: MUSIC_VENUES.FABRIC,\n    company: [\n      FRIENDS.TONYA_FRANCE,\n      FRIENDS.SONYA_PARDI,\n      FRIENDS.FANNY_LINDQVIST,\n      FRIENDS.HANNA_FROGNER,\n      FRIENDS.LAURA_CAPECE_GALEOTA\n    ],\n    dates: [new Date(\"2015-12-31\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2016: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.HALSEY,\n    support: [MUSICIANS.BORNS],\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.DAN_SPARROW],\n    dates: [new Date(\"2016-02-22\")]\n  },\n  {\n    headline: MUSICIANS.JOSEF_SALVAT,\n    venue: MUSIC_VENUES.GORILLA,\n    favourite: true,\n    company: [],\n    dates: [new Date(\"2016-03-06\")]\n  },\n  {\n    headline: MUSICIANS.TROYE_SIVAN,\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.DAN_SPARROW],\n    dates: [new Date(\"2016-04-18\")]\n  },\n  {\n    headline: MUSICIANS.TOURIST,\n    venue: MUSIC_VENUES.DEAF_INSTITUTE,\n    company: [FRIENDS.DAN_SPARROW],\n    dates: [new Date(\"2016-05-10\")]\n  },\n  {\n    festival: FESTIVALS.GLASTONBURY,\n    lineup: [\n      MUSICIANS.NAO,\n      MUSICIANS.CHRISTINE_AND_THE_QUEENS,\n      MUSICIANS.AURORA,\n      MUSICIANS.DAUGHTER,\n      MUSICIANS.DISCLOSURE,\n      MUSICIANS.CARL_COX,\n      MUSICIANS.FOUR_TET,\n      MUSICIANS.MACEO_PLEX,\n      MUSICIANS.ALESSIA_CARA,\n      MUSICIANS.TOM_ODELL,\n      MUSICIANS.THE_1975,\n      MUSICIANS.WILL_YOUNG,\n      MUSICIANS.ADELE,\n      MUSICIANS.RALEIGH_RITCHIE,\n      MUSICIANS.YEARS_AND_YEARS,\n      MUSICIANS.ELLIE_GOULDING,\n      MUSICIANS.GRIMES\n    ],\n    venue: MUSIC_VENUES.WORTHY_FARM,\n    company: [\n      FRIENDS.TONYA_FRANCE,\n      FRIENDS.ELLIE_GURKIN,\n      FRIENDS.GRACE_HULME,\n      FRIENDS.CAITLIN_MCCAIG,\n      FRIENDS.ELLIE_PEARCE,\n      FRIENDS.THOM_STEPHANAKIS\n    ],\n    dates: [new Date(\"2016-06-24\"), new Date(\"2016-06-26\")]\n  },\n  {\n    headline: MUSICIANS.BEYONCE,\n    venue: MUSIC_VENUES.WEMBLEY_STADIUM,\n    company: [FRIENDS.EMMA_CODRINGTON],\n    dates: [new Date(\"2016-07-03\")],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.LOVEBOX,\n    lineup: [\n      MUSICIANS.MO,\n      MUSICIANS.RITON,\n      MUSICIANS.DIPLO,\n      MUSICIANS.PAUL_WOOLFORD,\n      MUSICIANS.HEIDI,\n      MUSICIANS.HANNAH_WANTS,\n      MUSICIANS.JORIS_VOORN,\n      MUSICIANS.MAJOR_LAZER\n    ],\n    venue: MUSIC_VENUES.VICTORIA_PARK,\n    company: [\n      FRIENDS.TONYA_FRANCE,\n      FRIENDS.TOM_CHINDA_COUTTS,\n      FRIENDS.RYAN_MILLS,\n      FRIENDS.LAURA_CAPECE_GALEOTA,\n      FRIENDS.LUKE_JONES,\n      FRIENDS.ALICE_RODER\n    ],\n    dates: [new Date(\"2016-07-15\")]\n  },\n  {\n    festival: FESTIVALS.DEFECTED_BRISTOL,\n    lineup: [MUSICIANS.MK],\n    venue: MUSIC_VENUES.MOTION,\n    dates: [new Date(\"2016-07-30\")],\n    company: [FRIENDS.CHELSEA_CUNNINGHAM, FRIENDS.SARAH_WHITAKER]\n  },\n  {\n    festival: FESTIVALS.BRIGHTON_PRIDE,\n    lineup: [\n      MUSICIANS.DUA_LIPA,\n      MUSICIANS.CARLY_RAE_JEPSEN,\n      MUSICIANS.SISTER_SLEDGE\n    ],\n    venue: MUSIC_VENUES.PRESTON_PARK,\n    company: [\n      FRIENDS.ELLIE_GURKIN,\n      FRIENDS.POOJA_DHIR,\n      FRIENDS.GRACE_HULME,\n      FRIENDS.SIAN_RODWAY_SMITH,\n      FRIENDS.TONYA_FRANCE,\n      FRIENDS.ALICE_RODER\n    ],\n    dates: [new Date(\"2016-08-06\")]\n  },\n  {\n    festival: FESTIVALS.V_FESTIVAL,\n    lineup: [\n      MUSICIANS.MIKE_POSNER,\n      MUSICIANS.MNEK,\n      MUSICIANS.ZARA_LARSSON,\n      MUSICIANS.PHILIP_GEORGE,\n      MUSICIANS.JESS_GLYNNE,\n      MUSICIANS.FLIGHT_FACILITIES,\n      MUSICIANS.SIA,\n      MUSICIANS.JUSTIN_BIEBER\n    ],\n    venue: MUSIC_VENUES.WESTON_PARK,\n    company: [FRIENDS.SARAH_WHITAKER, FRIENDS.CHELSEA_CUNNINGHAM],\n    dates: [new Date(\"2016-08-21\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [MUSICIANS.DUSKY, MUSICIANS.DANIEL_AVERY],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.DAN_SPARROW],\n    dates: [new Date(\"2016-09-30\")]\n  },\n  {\n    headline: MUSICIANS.ROOSEVELT,\n    venue: MUSIC_VENUES.XOYO,\n    company: [FRIENDS.TONYA_FRANCE],\n    dates: [new Date(\"2016-11-24\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2017: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.JONAS_BLUE,\n    venue: MUSIC_VENUES.MINISTRY_OF_SOUND,\n    dates: [new Date(\"2017-01-28\")],\n    company: [\n      FRIENDS.ALICE_RODER,\n      FRIENDS.TONYA_FRANCE,\n      FRIENDS.TOM_CHINDA_COUTTS,\n      FRIENDS.RYAN_MILLS,\n      FRIENDS.LAURA_CAPECE_GALEOTA\n    ]\n  },\n  {\n    headline: MUSICIANS.LYVES,\n    venue: MUSIC_VENUES.SERVANT_JAZZ_QUARTERS,\n    dates: [new Date(\"2017-02-20\")],\n    company: []\n  },\n  {\n    headline: MUSICIANS.DUSKY,\n    venue: MUSIC_VENUES.ELECTRIC_BRIXTON,\n    dates: [new Date(\"2017-02-24\")],\n    favourite: true,\n    company: [\n      FRIENDS.TONYA_FRANCE,\n      FRIENDS.TOM_CHINDA_COUTTS,\n      FRIENDS.CAITLIN_MCCAIG,\n      FRIENDS.RYAN_MILLS\n    ]\n  },\n  {\n    headline: MUSICIANS.MARTIN_SOLVEIG,\n    support: [MUSICIANS.JAX_JONES],\n    dates: [new Date(\"2017-03-10\")],\n    venue: MUSIC_VENUES.EGG,\n    company: [FRIENDS.TONYA_FRANCE]\n  },\n  {\n    headline: MUSICIANS.BANKS,\n    dates: [new Date(\"2017-03-13\")],\n    venue: MUSIC_VENUES.ROUNDHOUSE,\n    company: [\n      FRIENDS.BECKY_MILLS,\n      FRIENDS.EMMA_CODRINGTON,\n      FRIENDS.MEGAN_BLACKBURN\n    ]\n  },\n  {\n    headline: MUSICIANS.TOVE_LO,\n    support: [MUSICIANS.BROODS],\n    dates: [new Date(\"2017-03-17\")],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    company: [FRIENDS.DAN_SPARROW]\n  },\n  {\n    headline: MUSICIANS.MUNA,\n    dates: [new Date(\"2017-03-28\")],\n    venue: MUSIC_VENUES.HOXTON_SQUARE_BAR_AND_KITCHEN,\n    company: [FRIENDS.LUKE_STERN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.JORJA_SMITH,\n    dates: [new Date(\"2017-04-03\")],\n    venue: MUSIC_VENUES.VILLAGE_UNDERGROUND,\n    company: [FRIENDS.LUKE_STERN]\n  },\n  {\n    headline: MUSICIANS.VERITE,\n    dates: [new Date(\"2017-04-06\")],\n    venue: MUSIC_VENUES.ELECTROWERKZ,\n    company: [FRIENDS.TONYA_FRANCE]\n  },\n  {\n    headline: MUSICIANS.FRANCES,\n    dates: [new Date(\"2017-04-07\")],\n    venue: MUSIC_VENUES.INSTITUTE_BIRMINGHAM,\n    company: [FRIENDS.EMMA_CODRINGTON, FRIENDS.MUM]\n  },\n  {\n    headline: MUSICIANS.JONES,\n    dates: [new Date(\"2017-05-03\")],\n    venue: MUSIC_VENUES.HOXTON_HALL,\n    company: [FRIENDS.LUKE_STERN]\n  },\n  {\n    headline: MUSICIANS.BETSY,\n    dates: [new Date(\"2017-05-15\")],\n    venue: MUSIC_VENUES.MOTH_CLUB,\n    company: [FRIENDS.LUKE_STERN]\n  },\n  {\n    headline: MUSICIANS.ALMA,\n    dates: [new Date(\"2017-05-16\")],\n    venue: MUSIC_VENUES.OSLO_HACKNEY,\n    company: [FRIENDS.LUKE_STERN]\n  },\n  {\n    headline: MUSICIANS.BETTY_WHO,\n    dates: [new Date(\"2017-05-17\")],\n    venue: MUSIC_VENUES.ZIGFRID_VON_UNDERBELLY,\n    company: [FRIENDS.SIAN_RODWAY_SMITH]\n  },\n  {\n    headline: MUSICIANS.PARAMORE,\n    dates: [new Date(\"2017-06-19\")],\n    venue: MUSIC_VENUES.ROYAL_ALBERT_HALL,\n    company: [FRIENDS.LUKE_STERN],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.LOVEBOX,\n    lineup: [\n      MUSICIANS.JOE_GODDARD,\n      MUSICIANS.RUFUS_DU_SOL,\n      MUSICIANS.BICEP,\n      MUSICIANS.JAMIE_XX,\n      MUSICIANS.EATS_EVERYTHING,\n      MUSICIANS.FRANK_OCEAN\n    ],\n    dates: [new Date(\"2017-07-14\")],\n    venue: MUSIC_VENUES.VICTORIA_PARK,\n    company: [\n      FRIENDS.TONYA_FRANCE,\n      FRIENDS.TOM_CHINDA_COUTTS,\n      FRIENDS.RYAN_MILLS,\n      FRIENDS.CAITLIN_MCCAIG,\n      FRIENDS.ALICE_RODER\n    ]\n  },\n  {\n    festival: FESTIVALS.BRIGHTON_PRIDE,\n    lineup: [MUSICIANS.BECKY_MILLS_HILL, MUSICIANS.YEARS_AND_YEARS],\n    dates: [new Date(\"2017-08-05\")],\n    venue: MUSIC_VENUES.PRESTON_PARK,\n    company: [\n      FRIENDS.LUKE_STERN,\n      FRIENDS.TONYA_FRANCE,\n      FRIENDS.SONYA_PARDI,\n      FRIENDS.TOM_CHINDA_COUTTS,\n      FRIENDS.RYAN_MILLS,\n      FRIENDS.LAURA_CAPECE_GALEOTA\n    ]\n  },\n  {\n    festival: FESTIVALS.BESTIVAL,\n    lineup: [\n      MUSICIANS.ALMA,\n      MUSICIANS.LITTLE_DRAGON,\n      MUSICIANS.KOLSCH,\n      MUSICIANS.XX_THE,\n      MUSICIANS.MACEO_PLEX,\n      MUSICIANS.JOE_GODDARD,\n      MUSICIANS.FOURS,\n      MUSICIANS.ANNA_OF_THE_NORTH,\n      MUSICIANS.LUCY_ROSE,\n      MUSICIANS.DIZZEE_RASCAL,\n      MUSICIANS.DUSKY,\n      MUSICIANS.CHARLOTTE_CHURCH,\n      MUSICIANS.SOUL_WAX,\n      MUSICIANS.PET_SHOP_BOYS\n    ],\n    dates: [new Date(\"2017-09-08\"), new Date(\"2017-09-10\")],\n    venue: MUSIC_VENUES.LULWORTH_ESTATE,\n    company: [\n      FRIENDS.TONYA_FRANCE,\n      FRIENDS.RYAN_MILLS,\n      FRIENDS.DAN_SPARROW,\n      FRIENDS.MARIA_TAYLOR,\n      FRIENDS.CAITLIN_MCCAIG,\n      FRIENDS.CAITY_DALBY\n    ]\n  },\n  {\n    headline: MUSICIANS.SIGRID,\n    dates: [new Date(\"2017-09-13\")],\n    venue: MUSIC_VENUES.SCALA,\n    company: [FRIENDS.SIAN_RODWAY_SMITH]\n  },\n  {\n    headline: MUSICIANS.ALLIE_X,\n    dates: [new Date(\"2017-09-18\")],\n    venue: MUSIC_VENUES.OMEARA,\n    company: [FRIENDS.SIAN_RODWAY_SMITH],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.LORDE,\n    dates: [new Date(\"2017-09-27\")],\n    favourite: true,\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE,\n    company: [FRIENDS.LUKE_STERN, FRIENDS.CAITLIN_MCCAIG, FRIENDS.CAITY_DALBY]\n  },\n  {\n    headline: MUSICIANS.MURA_MASA,\n    dates: [new Date(\"2017-10-19\")],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    company: [FRIENDS.LUKE_STERN]\n  },\n  {\n    headline: MUSICIANS.FREYA_RIDINGS,\n    dates: [new Date(\"2017-10-26\")],\n    venue: MUSIC_VENUES.ST_GILES_IN_THE_FIELD,\n    company: [FRIENDS.TONYA_FRANCE]\n  },\n  {\n    headline: MUSICIANS.PVRIS,\n    dates: [new Date(\"2017-11-30\")],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    company: [FRIENDS.LUKE_STERN]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2018: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.KYGO,\n    support: [MUSICIANS.GRYFFIN, MUSICIANS.SEEB],\n    venue: MUSIC_VENUES.O2_THE,\n    dates: [new Date(\"2018-02-25\")],\n    company: [FRIENDS.TONYA_FRANCE]\n  },\n  {\n    headline: MUSICIANS.CODE_THE,\n    venue: MUSIC_VENUES.CORSICA_STUDIOS,\n    dates: [new Date(\"2018-03-07\")],\n    company: [FRIENDS.JERRY_EDWARDS, FRIENDS.JAMIE_HALKET, FRIENDS.DOM_COYNE]\n  },\n  {\n    headline: MUSICIANS.GEORGE_FITZGERALD,\n    venue: MUSIC_VENUES.ISLINGTON_ASSEMBLY_HALL,\n    dates: [new Date(\"2018-03-27\")],\n    company: [FRIENDS.TONYA_FRANCE]\n  },\n  {\n    headline: MUSICIANS.AQUILO,\n    venue: MUSIC_VENUES.OVAL_SPACE,\n    dates: [new Date(\"2018-04-19\")],\n    company: [FRIENDS.JAMIE_HALKET]\n  },\n  {\n    headline: MUSICIANS.TWO_FEET,\n    venue: MUSIC_VENUES.ELECTROWERKZ,\n    dates: [new Date(\"2018-05-24\")],\n    company: [FRIENDS.JERRY_EDWARDS]\n  },\n  {\n    headline: MUSICIANS.KIM_PETRAS,\n    venue: MUSIC_VENUES.COURTYARD_THEATRE,\n    dates: [new Date(\"2018-05-25\")],\n    company: [FRIENDS.JERRY_EDWARDS],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.HAIM,\n    support: [MUSICIANS.MAGGIE_ROGERS],\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE,\n    dates: [new Date(\"2018-06-15\")],\n    company: [\n      FRIENDS.EMMA_CODRINGTON,\n      FRIENDS.BECKY_MILLS,\n      FRIENDS.CAITLIN_MCCAIG\n    ]\n  },\n  {\n    festival: FESTIVALS.ON_THE_RUN_II,\n    lineup: [MUSICIANS.JAY_Z, MUSICIANS.BEYONCE],\n    venue: MUSIC_VENUES.LONDON_STADIUM,\n    dates: [new Date(\"2018-06-16\")],\n    company: [FRIENDS.TONYA_FRANCE]\n  },\n  {\n    headline: MUSICIANS.TAYLOR_SWIFT,\n    support: [MUSICIANS.CHARLI_XCX, MUSICIANS.CAMILA_CABELLO],\n    venue: MUSIC_VENUES.WEMBLEY_STADIUM,\n    dates: [new Date(\"2018-06-22\")],\n    company: [FRIENDS.DAN_SPARROW],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.NOTION_SUMMER_PARTY,\n    lineup: [\n      MUSICIANS.M_0,\n      MUSICIANS.BONDAX,\n      MUSICIANS.RITON,\n      MUSICIANS.KAH_LO,\n      MUSICIANS.ANNE_MARIE,\n      MUSICIANS.MO\n    ],\n    venue: MUSIC_VENUES.TROXY,\n    dates: [new Date(\"2018-07-27\")],\n    company: [FRIENDS.LUKE_JONES]\n  },\n  {\n    festival: FESTIVALS.BRIGHTON_PRIDE,\n    lineup: [MUSICIANS.BRITNEY_SPEARS],\n    venue: MUSIC_VENUES.PRESTON_PARK,\n    dates: [new Date(\"2018-08-04\")],\n    company: [\n      FRIENDS.TONYA_FRANCE,\n      FRIENDS.SONYA_PARDI,\n      FRIENDS.TOM_CHINDA_COUTTS,\n      FRIENDS.RYAN_MILLS,\n      FRIENDS.SIAN_RODWAY_SMITH\n    ]\n  },\n  {\n    headline: MUSICIANS.SOFI_TUKKER,\n    venue: MUSIC_VENUES.KOKO,\n    dates: [new Date(\"2018-09-17\")],\n    company: [FRIENDS.TONYA_FRANCE]\n  },\n  {\n    headline: MUSICIANS.LAUV,\n    venue: MUSIC_VENUES.KOKO,\n    dates: [new Date(\"2018-09-18\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  },\n  {\n    headline: MUSICIANS.RALPH,\n    venue: MUSIC_VENUES.OLD_BLUE_LAST,\n    dates: [new Date(\"2018-10-15\")],\n    company: [FRIENDS.DARREN_TAYLOR],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.RAINBOW_KITTEN_SURPRISE,\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2018-10-31\")],\n    company: [FRIENDS.JAMIE_HALKET]\n  },\n  {\n    headline: MUSICIANS.LYKKE_LI,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2018-11-04\")],\n    company: [FRIENDS.EMMA_CODRINGTON],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    venue: MUSIC_VENUES.O2_THE,\n    dates: [new Date(\"2018-11-21\")],\n    company: [FRIENDS.EMMA_CODRINGTON, FRIENDS.MEGAN_BLACKBURN]\n  },\n  {\n    headline: MUSICIANS.YOU_ME_AT_SIX,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2018-12-03\")],\n    company: [FRIENDS.EMMA_CODRINGTON]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2019: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.THE_1975,\n    venue: MUSIC_VENUES.O2_THE,\n    dates: [new Date(\"2019-01-19\")],\n    company: [FRIENDS.JERRY_EDWARDS]\n  },\n  {\n    headline: MUSICIANS.MAGGIE_ROGERS,\n    support: [MUSICIANS.MALLRAT],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-02-19\")],\n    company: [FRIENDS.DARREN_TAYLOR],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.TROYE_SIVAN,\n    support: [MUSICIANS.LELAND],\n    venue: MUSIC_VENUES.HAMMERSMITH_APOLLO,\n    dates: [new Date(\"2019-02-28\")],\n    company: [FRIENDS.JERRY_EDWARDS]\n  },\n  {\n    headline: MUSICIANS.LANY,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-03-12\")],\n    company: [FRIENDS.JERRY_EDWARDS]\n  },\n  {\n    headline: MUSICIANS.LEON,\n    venue: MUSIC_VENUES.ISLINGTON_ASSEMBLY_HALL,\n    dates: [new Date(\"2019-04-08\")],\n    company: [FRIENDS.DARREN_TAYLOR],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BULOW,\n    venue: MUSIC_VENUES.COURTYARD_THEATRE,\n    dates: [new Date(\"2019-04-11\")],\n    company: [FRIENDS.DARREN_TAYLOR]\n  },\n  {\n    headline: MUSICIANS.ROBYN,\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE,\n    dates: [new Date(\"2019-04-12\")],\n    company: [FRIENDS.DAN_SPARROW, FRIENDS.RYAN_MILLS],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BEARS_DEN,\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-04-23\")],\n    company: [FRIENDS.JAMIE_HALKET]\n  },\n  {\n    headline: MUSICIANS.MARINA,\n    venue: MUSIC_VENUES.ROYAL_ALBERT_HALL,\n    dates: [new Date(\"2019-05-03\")],\n    company: [FRIENDS.DARREN_TAYLOR]\n  },\n  {\n    headline: MUSICIANS.SASHA_SLOAN,\n    venue: MUSIC_VENUES.DINGWALLS,\n    dates: [new Date(\"2019-05-07\")],\n    company: [FRIENDS.DARREN_TAYLOR]\n  },\n  {\n    headline: MUSICIANS.G_FLIP,\n    venue: MUSIC_VENUES.GARAGE_THE,\n    dates: [new Date(\"2019-05-15\")],\n    company: [FRIENDS.JERRY_EDWARDS]\n  },\n  {\n    headline: MUSICIANS.FKA_TWIGS,\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE_THEATRE,\n    dates: [new Date(\"2019-05-28\")],\n    company: [FRIENDS.DARREN_TAYLOR],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.FLEETWOOD_MAC,\n    support: [MUSICIANS.PRETENDERS],\n    venue: MUSIC_VENUES.WEMBLEY_STADIUM,\n    dates: [new Date(\"2019-06-16\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA_CODRINGTON]\n  },\n  {\n    headline: MUSICIANS.SOPHIE,\n    favourite: true,\n    venue: MUSIC_VENUES.ROYAL_FESTIVAL_HALL,\n    dates: [new Date(\"2019-08-10\")],\n    company: [FRIENDS.JERRY_EDWARDS]\n  },\n  {\n    festival: FESTIVALS.MANCHESTER_PRIDE,\n    lineup: [\n      MUSICIANS.BECKY_MILLS_HILL,\n      MUSICIANS.BANANARAMA,\n      MUSICIANS.TULISA,\n      MUSICIANS.CHERYL,\n      MUSICIANS.ARIANA_GRANDE\n    ],\n    venue: MUSIC_VENUES.MAYFIELD_DEPOT,\n    dates: [new Date(\"2019-08-25\")],\n    company: [\n      FRIENDS.DAN_SPARROW,\n      FRIENDS.MARIA_TAYLOR,\n      FRIENDS.ASH_MORETON,\n      FRIENDS.SAM_BERRIE,\n      FRIENDS.LINDSAY_ASPINALL\n    ]\n  },\n  {\n    headline: MUSICIANS.KIM_PETRAS,\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2019-08-27\")],\n    company: [FRIENDS.DARREN_TAYLOR, FRIENDS.JERRY_EDWARDS]\n  },\n  {\n    festival: FESTIVALS.CHINGFEST,\n    lineup: [MUSICIANS.INCOGNITO, MUSICIANS.NAO],\n    venue: MUSIC_VENUES.RIDGEWAY_PARK,\n    dates: [new Date(\"2019-08-31\")],\n    company: [FRIENDS.DARREN_TAYLOR]\n  },\n  {\n    headline: MUSICIANS.MUNA,\n    venue: MUSIC_VENUES.VILLAGE_UNDERGROUND,\n    dates: [new Date(\"2019-09-10\")],\n    company: [FRIENDS.EMMA_CODRINGTON]\n  },\n  {\n    headline: MUSICIANS.JULIA_MICHAELS,\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-09-17\")],\n    company: [FRIENDS.DARREN_TAYLOR]\n  },\n  {\n    headline: MUSICIANS.ELDERBROOK,\n    venue: MUSIC_VENUES.EARTH,\n    dates: [new Date(\"2019-10-12\")],\n    company: [\n      FRIENDS.TONYA_FRANCE,\n      FRIENDS.SONYA_PARDI,\n      FRIENDS.LAURA_CAPECE_GALEOTA\n    ]\n  },\n  {\n    headline: MUSICIANS.CHARLI_XCX,\n    support: [MUSICIANS.RINA_SAWAYAMA],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-10-31\")],\n    company: [FRIENDS.DARREN_TAYLOR],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BANKS,\n    support: [MUSICIANS.GLOWIE],\n    venue: MUSIC_VENUES.ROUNDHOUSE,\n    dates: [new Date(\"2019-11-04\")],\n    company: [FRIENDS.DARREN_TAYLOR],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.LAUV,\n    support: [MUSICIANS.CHELSEA_CUNNINGHAM_CUTLER],\n    venue: MUSIC_VENUES.KENTISH_TOWN_FORUM,\n    dates: [new Date(\"2019-11-05\")],\n    company: [FRIENDS.JERRY_EDWARDS, FRIENDS.POPPY_SMITH]\n  },\n  {\n    festival: FESTIVALS.HOMOBLOC,\n    lineup: [MUSICIANS.ROMY, MUSICIANS.ROBYN, MUSICIANS.HORSE_MEAT_DISCO],\n    venue: MUSIC_VENUES.MAYFIELD_DEPOT,\n    dates: [new Date(\"2019-11-09\")],\n    company: [FRIENDS.DAN_SPARROW, FRIENDS.MARIA_TAYLOR]\n  },\n  {\n    headline: MUSICIANS.SABRINA_CLAUDIO,\n    support: [MUSICIANS.OH_ANNIE_OH],\n    venue: MUSIC_VENUES.ELECTRIC_BRIXTON,\n    dates: [new Date(\"2019-11-19\")],\n    company: [FRIENDS.DARREN_TAYLOR]\n  },\n  {\n    headline: MUSICIANS.ROBINSON,\n    support: [MUSICIANS.NAVVY],\n    venue: MUSIC_VENUES.QUEEN_OF_HOXTON,\n    dates: [new Date(\"2019-11-20\")],\n    company: [FRIENDS.DARREN_TAYLOR]\n  },\n  {\n    headline: MUSICIANS.FKA_TWIGS,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-11-25\")],\n    company: [\n      FRIENDS.DARREN_TAYLOR,\n      FRIENDS.CAITLIN_MCCAIG,\n      FRIENDS.EMMA_CODRINGTON,\n      FRIENDS.MEGAN_BLACKBURN\n    ]\n  },\n  {\n    headline: MUSICIANS.NAAZ,\n    support: [MUSICIANS.DYLAN],\n    venue: MUSIC_VENUES.CAMDEN_ASSEMBLY,\n    dates: [new Date(\"2019-11-27\")],\n    company: [FRIENDS.DARREN_TAYLOR]\n  },\n  {\n    headline: MUSICIANS.MUNA,\n    support: [MUSICIANS.L_DEVINE],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-12-03\")],\n    company: [FRIENDS.LEWIS_STEADMAN, FRIENDS.DARREN_TAYLOR]\n  },\n  {\n    headline: MUSICIANS.MELANIE_MARTINEZ,\n    support: [MUSICIANS.NAAZ],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-12-09\")],\n    company: [FRIENDS.DARREN_TAYLOR]\n  },\n  {\n    festival: FESTIVALS.AREA_10_NYE,\n    lineup: [MUSICIANS.MK],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-12-31\")],\n    company: [\n      FRIENDS.TOM_CHINDA_COUTTS,\n      FRIENDS.TONYA_FRANCE,\n      FRIENDS.SONYA_PARDI\n    ]\n  }\n];\n","import { FRIENDS, MUSICIANS, TICKET_TYPES, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2020: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.GRACEY,\n    venue: MUSIC_VENUES.LAYLOW,\n    dates: [new Date(\"2020-01-28\")],\n    company: [FRIENDS.DARREN_TAYLOR]\n  },\n  {\n    headline: MUSICIANS.JOSEF_SALVAT,\n    venue: MUSIC_VENUES.MOTH_CLUB,\n    dates: [new Date(\"2020-02-05\")],\n    company: [FRIENDS.DARREN_TAYLOR]\n  },\n  {\n    headline: MUSICIANS.KIM_PETRAS,\n    support: [MUSICIANS.ALEX_CHAPMAN],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2020-02-11\")],\n    company: [FRIENDS.DARREN_TAYLOR]\n  },\n  {\n    headline: MUSICIANS.NASTY_CHERRY,\n    venue: MUSIC_VENUES.GARAGE_THE,\n    dates: [new Date(\"2020-03-03\")],\n    company: [FRIENDS.DARREN_TAYLOR, FRIENDS.MEGAN_BLACKBURN],\n    ticketType: TICKET_TYPES.SEE_TICKETS_PRINT_AT_HOME\n  },\n  {\n    headline: MUSICIANS.CHRISTINE_AND_THE_QUEENS,\n    venue: MUSIC_VENUES.MOTH_CLUB,\n    dates: [new Date(\"2020-03-07\")],\n    favourite: true,\n    company: [FRIENDS.DARREN_TAYLOR],\n    ticketType: TICKET_TYPES.GIGS_AND_TOURS_POSTAL\n  },\n  {\n    headline: MUSICIANS.CAROLINE_POLACHEK,\n    support: [MUSICIANS.SEGA_BODEGA],\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2020-03-11\")],\n    company: [FRIENDS.DARREN_TAYLOR],\n    ticketType: TICKET_TYPES.DICE\n  },\n  {\n    headline: MUSICIANS.GEORGIA,\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2020-03-12\")],\n    company: [FRIENDS.DARREN_TAYLOR],\n    ticketType: TICKET_TYPES.DICE\n  },\n  // {\n  //   headline: MUSICIANS.ALLIE_X,\n  //   venue: MUSIC_VENUES.HEAVEN,\n  //   dates: [new Date(\"2020-06-04\"),\n  //   company: FRIENDS.DARREN_TAYLOR,\n  //   ticketType: TICKET_TYPES.DICE,\n  // },\n  // {\n  //   festival: FESTIVALS.MAD_COOL,\n  //   lineup: [MUSICIANS.TWENTY_ONE_PILOTS],\n  //   venue: MUSIC_VENUES.IFEMA_MADRID,\n  //   dates: [new Date(\"2020-07-08\")],\n  //   company: [FRIENDS.DAN_SPARROW],\n  //   ticketType: TICKET_TYPES.FESTICKET_PDF\n  // },\n  {\n    headline: MUSICIANS.CARIBOU,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2020-09-13\")],\n    company: [FRIENDS.DARREN_TAYLOR],\n    ticketType: TICKET_TYPES.TICKETMASTER_ETICKET\n  },\n  {\n    headline: MUSICIANS.SOPHIE,\n    support: [MUSICIANS.EARTHEATER],\n    venue: MUSIC_VENUES.OVAL_SPACE,\n    dates: [new Date(\"2020-10-17\")],\n    company: [FRIENDS.LEWIS_STEADMAN, FRIENDS.JERRY_EDWARDS],\n    ticketType: TICKET_TYPES.DICE\n  },\n  {\n    headline: MUSICIANS.LANE_8,\n    venue: MUSIC_VENUES.PRINTWORKS,\n    dates: [new Date(\"2020-10-25\")],\n    company: [FRIENDS.TONYA_FRANCE],\n    ticketType: TICKET_TYPES.DICE\n  },\n  {\n    headline: MUSICIANS.JON_HOPKINS,\n    venue: MUSIC_VENUES.ROYAL_ALBERT_HALL,\n    dates: [new Date(\"2020-12-04\")],\n    company: [FRIENDS.TONYA_FRANCE]\n  }\n];\n","import {\n  FRIENDS,\n  FESTIVALS,\n  MUSICIANS,\n  TICKET_TYPES,\n  MUSIC_VENUES\n} from \"@constants\";\n\nexport const GIGS_2021: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.JESSIE_WARE,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2021-04-26\")],\n    company: [FRIENDS.DARREN_TAYLOR],\n    ticketType: TICKET_TYPES.TICKETWEB\n  },\n  {\n    festival: FESTIVALS.MIGHTY_HOOPLA,\n    venue: MUSIC_VENUES.BROCKWELL_PARK,\n    dates: [new Date(\"2021-06-05\")],\n    company: [\n      FRIENDS.TONYA_FRANCE,\n      FRIENDS.MARIA_TAYLOR,\n      FRIENDS.TOM_CHINDA_COUTTS,\n      FRIENDS.RYAN_MILLS,\n      FRIENDS.DARREN_TAYLOR,\n      FRIENDS.SIAN_RODWAY_SMITH,\n      FRIENDS.CAITLIN_MCCAIG,\n      FRIENDS.DAN_SPARROW\n    ],\n    ticketType: TICKET_TYPES.KABOODLE_ETICKET\n  },\n  {\n    headline: MUSICIANS.THE_1975,\n    venue: MUSIC_VENUES.FINSBURY_PARK,\n    dates: [new Date(\"2021-07-10\")],\n    company: [\n      FRIENDS.DAN_SPARROW,\n      FRIENDS.LEWIS_STEADMAN,\n      FRIENDS.JERRY_EDWARDS,\n      FRIENDS.CAITLIN_MCCAIG,\n      FRIENDS.COBY_BLACKBURN\n    ],\n    ticketType: TICKET_TYPES.TICKETMASTER_ETICKET\n  },\n  {\n    headline: MUSICIANS.LADY_GAGA,\n    venue: MUSIC_VENUES.TOTTENHAM_HOTSPUR_STADIUM,\n    dates: [new Date(\"2021-07-30\")],\n    company: [\n      FRIENDS.RYAN_MILLS,\n      FRIENDS.DAN_SPARROW,\n      FRIENDS.TOM_CHINDA_COUTTS\n    ]\n  }\n];\n","import { GIGS_2006 } from \"./gigs-2006\";\nimport { GIGS_2007 } from \"./gigs-2007\";\nimport { GIGS_2008 } from \"./gigs-2008\";\nimport { GIGS_2009 } from \"./gigs-2009\";\nimport { GIGS_2010 } from \"./gigs-2010\";\nimport { GIGS_2011 } from \"./gigs-2011\";\nimport { GIGS_2012 } from \"./gigs-2012\";\nimport { GIGS_2013 } from \"./gigs-2013\";\nimport { GIGS_2014 } from \"./gigs-2014\";\nimport { GIGS_2015 } from \"./gigs-2015\";\nimport { GIGS_2016 } from \"./gigs-2016\";\nimport { GIGS_2017 } from \"./gigs-2017\";\nimport { GIGS_2018 } from \"./gigs-2018\";\nimport { GIGS_2019 } from \"./gigs-2019\";\nimport { GIGS_2020 } from \"./gigs-2020\";\nimport { GIGS_2021 } from \"./gigs-2021\";\n\nconst ALL: Array<IGigCard> = [\n  ...GIGS_2006,\n  ...GIGS_2007,\n  ...GIGS_2008,\n  ...GIGS_2009,\n  ...GIGS_2010,\n  ...GIGS_2011,\n  ...GIGS_2012,\n  ...GIGS_2013,\n  ...GIGS_2014,\n  ...GIGS_2015,\n  ...GIGS_2016,\n  ...GIGS_2017,\n  ...GIGS_2018,\n  ...GIGS_2019,\n  ...GIGS_2020,\n  ...GIGS_2021\n];\n\nconst SPLIT_BY_YEAR: Array<Array<IGigCard>> = [\n  GIGS_2006,\n  GIGS_2007,\n  GIGS_2008,\n  GIGS_2009,\n  GIGS_2010,\n  GIGS_2011,\n  GIGS_2012,\n  GIGS_2013,\n  GIGS_2014,\n  GIGS_2015,\n  GIGS_2016,\n  GIGS_2017,\n  GIGS_2018,\n  GIGS_2019,\n  GIGS_2020,\n  GIGS_2021\n];\n\nexport const DATA = { ALL, SPLIT_BY_YEAR };\n","import { DATA } from \"../data\";\n\nexport const FAVOURITES: Array<IGigCard> = DATA.ALL.filter(\n  ({ favourite }: IGigCard) => favourite\n);\n","import { MUSICIANS } from \"@constants\";\nimport { getItemCounts } from \"utils\";\n\nimport { DATA } from \"../data\";\n\nimport { FAVOURITES } from \"./favourites\";\n\ninterface IMusicianIsFavourited {\n  musician: IMusician;\n  favouritedGigCards: Array<IGigCard>;\n}\n\nconst musicianHasFavouritedGig = ({\n  musician,\n  favouritedGigCards\n}: IMusicianIsFavourited): boolean => {\n  let itemIsFavourited: boolean = false;\n\n  favouritedGigCards.forEach(({ headline }: IGigCard) => {\n    if (headline && headline.name === musician.name) itemIsFavourited = true;\n  });\n\n  return itemIsFavourited;\n};\n\nconst musicians: Array<IMusician> = Object.values(MUSICIANS);\n\nexport const musiciansCounted: Array<IMusicianCounted> = musicians.map(\n  (musician: IMusician): IMusicianCounted => ({\n    ...musician,\n    ...getItemCounts({ item: { musician }, data: { gigCards: DATA.ALL } })\n  })\n);\n\nexport const MUSICIANS_LIST_ITEMS: Array<ICountedListItem> = musiciansCounted.map(\n  (musician: IMusicianCounted): ICountedListItem => ({\n    text: musician.name,\n    favourite:\n      musicianHasFavouritedGig({ musician, favouritedGigCards: FAVOURITES }) ||\n      musician.favourite,\n    pastCount: musician.pastCount,\n    futureCount: musician.futureCount,\n    noLongerExists: musician.noLongerExists\n  })\n);\n","import { musiciansCounted } from \"./musicians\";\n\nconst musiciansForBucketList = musiciansCounted.filter(\n  ({ pastCount, futureCount, noLongerExists }: IMusicianCounted): boolean =>\n    pastCount === 0 && futureCount === 0 && !noLongerExists\n);\n\nexport const BUCKET_LIST_ITEMS: Array<ICountedListItem> = musiciansForBucketList.map(\n  ({ name, pastCount, futureCount }: IMusicianCounted): ICountedListItem => ({\n    text: name,\n    pastCount,\n    futureCount,\n    countInfoIrrelevant: true\n  })\n);\n","import { FRIENDS } from \"@constants\";\nimport { getItemCounts } from \"utils\";\n\nimport { DATA } from \"../data\";\n\nexport const FRIENDS_LIST_ITEMS: Array<ICountedListItem> = Object.values(\n  FRIENDS\n)\n  .filter(({ gigs }: IFriend): boolean => !!gigs)\n  .map(\n    (friend: IFriend): ICountedListItem => ({\n      text: friend.name,\n      ...getItemCounts({ item: { friend }, data: { gigCards: DATA.ALL } })\n    })\n  );\n","import { FESTIVALS } from \"@constants\";\nimport { getItemCounts } from \"utils\";\n\nimport { DATA } from \"../data\";\n\nexport const FESTIVALS_LIST_ITEMS: Array<ICountedListItem> = Object.values(\n  FESTIVALS\n)\n  .filter(({ festival }: IFestival): boolean => !!festival)\n  .map(\n    (festival: IFestival): ICountedListItem => ({\n      text: festival.name,\n      ...getItemCounts({ item: { festival }, data: { gigCards: DATA.ALL } })\n    })\n  );\n","import { isInFuture } from \"utils\";\n\nimport { DATA } from \"../data\";\n\nexport const UP_NEXT: Array<IGigCard> = DATA.ALL.filter(({ dates }: IGigCard) =>\n  isInFuture(dates[0])\n);\n","import { DATA } from \"../data\";\n\nimport { UP_NEXT } from \"./up-next\";\n\nconst totalGigsPastAndPresent: number = DATA.ALL.length;\nconst totalFutureGigs: number = UP_NEXT.length;\nconst totalGigsSoFar: number = totalGigsPastAndPresent - totalFutureGigs;\n\nexport const pageCount: number = totalGigsSoFar;\n","import { MUSIC_VENUES } from \"@constants\";\nimport { getItemCounts } from \"utils\";\n\nimport { DATA } from \"../data\";\n\nexport const VENUES_LIST_ITEMS: Array<ICountedListItem> = Object.values(\n  MUSIC_VENUES\n).map(\n  (musicVenue: IMusicVenue): ICountedListItem => ({\n    text: musicVenue.name,\n    favourite: musicVenue.favourite,\n    ...getItemCounts({ item: { musicVenue }, data: { gigCards: DATA.ALL } })\n  })\n);\n","import { formatCountedListItems } from \"utils\";\n\nimport { BUCKET_LIST_ITEMS } from \"./bucket-list\";\nimport { FRIENDS_LIST_ITEMS } from \"./friends\";\nimport { FESTIVALS_LIST_ITEMS } from \"./festivals\";\nimport { MUSICIANS_LIST_ITEMS } from \"./musicians\";\nimport { pageCount } from \"./page-count\";\nimport { UP_NEXT } from \"./up-next\";\nimport { VENUES_LIST_ITEMS } from \"./venues\";\n\ninterface IGigsFactory {\n  BUCKET_LIST: Array<ICountedListItem>;\n  MUSICIANS: Array<ICountedListItem>;\n  FESTIVALS: Array<ICountedListItem>;\n  FRIENDS: Array<ICountedListItem>;\n  VENUES: Array<ICountedListItem>;\n  UP_NEXT: Array<IGigCard>;\n  pageCount: number;\n}\n\nexport const FACTORY: IGigsFactory = {\n  BUCKET_LIST: formatCountedListItems({ countedListItems: BUCKET_LIST_ITEMS }),\n  FESTIVALS: formatCountedListItems({ countedListItems: FESTIVALS_LIST_ITEMS }),\n  FRIENDS: formatCountedListItems({\n    countedListItems: FRIENDS_LIST_ITEMS,\n    isLeaderboard: true\n  }),\n  MUSICIANS: formatCountedListItems({ countedListItems: MUSICIANS_LIST_ITEMS }),\n  UP_NEXT,\n  VENUES: formatCountedListItems({ countedListItems: VENUES_LIST_ITEMS }),\n  pageCount\n};\n","import { PAGE_SECTION_TITLES } from \"@constants\";\nimport { SVG_ICON_STRINGS } from \"resources\";\n\nimport { FACTORY } from \"./factory\";\nimport { DATA } from \"./data\";\nimport { isInFuture } from \"utils\";\n\nconst SECTION_BUCKET_LIST: IPageSection = {\n  title: PAGE_SECTION_TITLES.BUCKET_LIST,\n  icon: SVG_ICON_STRINGS.STARS,\n  data: { countedListItems: FACTORY.BUCKET_LIST },\n  count: FACTORY.BUCKET_LIST.length\n};\n\nconst SECTION_FESTIVALS: IPageSection = {\n  title: \"Festivals\",\n  icon: SVG_ICON_STRINGS.PEACE_SIGN,\n  data: { countedListItems: FACTORY.FESTIVALS }\n};\n\nconst SECTION_ARTISTS: IPageSection = {\n  title: \"Artists\",\n  icon: SVG_ICON_STRINGS.ARTIST,\n  data: { countedListItems: FACTORY.MUSICIANS },\n  count: FACTORY.MUSICIANS.length\n};\n\nconst SECTION_FRIENDS_GIGS: IPageSection = {\n  title: PAGE_SECTION_TITLES.FRIENDS,\n  icon: SVG_ICON_STRINGS.PEOPLE,\n  data: { countedListItems: FACTORY.FRIENDS }\n};\n\nconst SECTION_UP_NEXT_GIGS: IPageSection = {\n  title: PAGE_SECTION_TITLES.UP_NEXT,\n  icon: SVG_ICON_STRINGS.NOTEPAD,\n  data: { gigCards: FACTORY.UP_NEXT },\n  count: FACTORY.UP_NEXT.length\n};\n\nconst SECTION_VENUES_GIGS: IPageSection = {\n  title: \"Venues\",\n  icon: SVG_ICON_STRINGS.STADIUM,\n  data: { countedListItems: FACTORY.VENUES },\n  count: FACTORY.VENUES.length\n};\n\nconst SECTIONS_YEARS: Array<IPageSection> = DATA.SPLIT_BY_YEAR.map(\n  (year: Array<IGigCard>): IPageSection => ({\n    title: year[0].dates[0].getFullYear().toString(),\n    count: year.length,\n    data: {\n      gigCards: year.filter(({ dates }: IGigCard) => !isInFuture(dates[0]))\n    }\n  })\n);\n\nexport const sections: Array<IPageSection> = [\n  SECTION_ARTISTS,\n  SECTION_BUCKET_LIST,\n  SECTION_FESTIVALS,\n  SECTION_FRIENDS_GIGS,\n  SECTION_UP_NEXT_GIGS,\n  SECTION_VENUES_GIGS,\n  ...SECTIONS_YEARS\n];\n","import { SvgMicrophone } from \"resources\";\nimport { PAGE_COLORS } from \"styles\";\n\nimport { FACTORY } from \"./factory\";\nimport { sections } from \"./sections\";\n\nexport const PAGE_GIGS: IPage = {\n  title: \"Gigs\",\n  path: \"/gigs\",\n  SvgIcon: SvgMicrophone,\n  count: FACTORY.pageCount,\n  sections,\n  color: PAGE_COLORS.GIGS\n};\n","import { INGREDIENTS, MEASUREMENTS, UNICODE, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries, calculateRecipeCost } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.CHILLI_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.LIQUID_SMOKE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOFU,\n      quantity: 280,\n      measurement: MEASUREMENTS.GRAM\n    },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.CARROT, quantity: 4 },\n    { ingredient: INGREDIENTS.CELERY_STICK, quantity: 4 },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BASIL_FRESH,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OREGANO_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PUREE,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [\n    { ingredient: INGREDIENTS.SPAGHETTI },\n    { ingredient: INGREDIENTS.RICE_BROWN }\n  ],\n  [{ ingredient: INGREDIENTS.BREAD_GARLIC }]\n];\n\nconst method: Array<string> = [\n  preheatOven({ degreesCelcius: 180 }),\n  \"make paste from yeast, soy, oil, crushed garlic, chilli powder, liquid smoke\",\n  \"drain tofu, use both fingers to crumble into small pieces\",\n  \"mix tofu with smokey paste until evenly covered\",\n  \"bake for 40 minutes in a non-stick loaf tin (stir tofu twice throughout, do not let it burn)\",\n  \"set tofu aside\",\n  \"fry onion in water so it never sticks or burns\",\n  \"when the onion has softened and the water has reduced, pour over some olive oil\",\n  \"add grated carrot, grated celery and finely diced mushrooms to frying pan\",\n  `meanwhile, blend basil with stock, ${UNICODE.TOMATO_PUREE}, black pepper, oregano and some water`,\n  \"pour blend over the frying vegetables, fry for about 10 minutes until water reduces\",\n  \"pour over chopped tomatoes\",\n  \"cover, simmer for around 30 minutes (stirring regularly)\",\n  \"stir in tofu, remove from heat\"\n];\n\nconst title: string = \"Bolognese\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst image: IImageSrc = PHOTOS_RECIPES.BOLOGNESE;\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\nconst portionCost: number = totalCost / makes.quantity;\n\nexport const BOLOGNESE: IRecipeCard = {\n  title,\n  ingredients,\n  favourite: true,\n  makes,\n  serveWith,\n  diet,\n  method,\n  image,\n  totalCost,\n  portionCost\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.TOMATO_SUN_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.JAR\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.LIQUID_SMOKE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 750,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.SPINACH,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.NUTS_CASHEWS,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_BLACK,\n      quantity: 1.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.SPAGHETTI,\n      quantity: 400,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.ONION_WHITE_MEDIUM,\n      quantity: 2\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 7\n    },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS_CHESTNUT,\n      quantity: 300,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ]\n];\n\nconst method: Array<string> = [\n  \"thoroughly drain sun dried tomatoes from oil\",\n  \"chop tomatoes into many smaller pieces\",\n  \"marinade tomatoes in soy sauce and liquid smoke\",\n  \"chop the onion, mushroom and garlic\",\n  `blend almond milk with spinach, cashews, yeast, cornflour, salt and pepper`,\n  \"fry diced onion, crushed garlic, sliced mushrooms and thyme in butter (and some water) until softened\",\n  \"cook spaghetti as per packet instructions, drain and set aside\",\n  \"pour green sauce over frying vegetables, stirring until it thickens\",\n  \"remove from heat and stir in spaghetti and tomatoes until evenly covered\"\n];\n\nconst title: string = \"Carbonara\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.CARBONARA;\n\nexport const CARBONARA: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  method,\n  hide: true,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, UNICODE, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries, calculateRecipeCost } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.PEPPER_MIXED, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS_CHESTNUT,\n      quantity: 300,\n      measurement: MEASUREMENTS.GRAM\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 5 },\n    {\n      ingredient: INGREDIENTS.BASIL_FRESH,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.HERBS_MIXED_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_BALSAMIC,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PUREE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.SPINACH,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.LENTIL_RED_DRY,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 5,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 1,\n      measurement: MEASUREMENTS.LITRE\n    },\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ],\n  [\n    { ingredient: INGREDIENTS.PASTA_LASAGNE_SHEET_DRIED, quantity: 10 },\n    { ingredient: INGREDIENTS.COURGETTE, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.CHEESE_VEGAN_SLICE,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.BREAD_GARLIC }]\n];\n\nconst method: Array<string> = [\n  \"fry diced onion in oil and water for at least 5 minutes\",\n  \"add diced peppers, mushrooms, crushed garlic and fry for at least 10 minutes (replenishing the water to prevent burning)\",\n  `blend basil with stock powder, dried herbs, soy sauce, black pepper, balsamic vinegar, ${UNICODE.TOMATO_PUREE}, sugar and some water`,\n  \"pour basil blend into fried vegetables and stir throughly\",\n  \"add spinach and allow it to reduce\",\n  \"stir in chopped tomatoes and lentils\",\n  \"reduce heat, cover and simmer for at least 30 minutes\",\n  \"soak lasagne sheets in cold water\",\n  \"stir flour into medium hot olive oil\",\n  \"pour in the milk and whisk until it thickens (never give up, great arm workout)\",\n  \"remove from heat, season with salt and pepper\",\n  preheatOven({ degreesCelcius: 190 }),\n  `spoon ${UNICODE.THIRD} of each into an oven-proof dish (in the following order): ragu, lasagne sheets, white sauce, sliced raw courgettes`,\n  \"repeat previous step twice\",\n  \"seal the dish with vegan cheese slices\",\n  \"bake for 35 minutes\"\n];\nconst title: string = \"Lasagne\";\nconst makes: IRecipeMakes = { quantity: 6, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.LASAGNE;\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\nconst portionCost: number = totalCost / makes.quantity;\n\nexport const LASAGNE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  diet,\n  serveWith,\n  totalCost,\n  portionCost,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nimport { recipeMethodEntries, calculateRecipeCost } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.BUTTERNUT_SQUASH,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.ONION_WHITE_MEDIUM,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.LEEK,\n      quantity: 2\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 5\n    },\n    {\n      ingredient: INGREDIENTS.RICE_RISOTTO_ARBORIO,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 1,\n      measurement: MEASUREMENTS.LITRE\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BEANS_GREEN,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.SALT_ROCK_FRESH }],\n  [{ ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }],\n  [{ ingredient: INGREDIENTS.SAGE_FRESH, notes: \"crispy\" }]\n];\n\nconst method: Array<string> = [\n  preheatOven({ degreesCelcius: 200 }),\n  \"roast evenly-cubed squash for 40 minutes (in some olive oil, salt and pepper)\",\n  \"fry diced onion and leek with crushed garlic in half the butter (and some water) for about 10 minutes until soft\",\n  \"toss in uncooked rice and stir for 2 minutes\",\n  \"boil water, then add 200ml at a time, replenishing as soon as the rice becomes almost dry\",\n  \"stir constantly and be patient\",\n  \"add finely sliced green beans shortly into the rice cooking\",\n  \"remove from heat, stir in squash, yeast, salt, pepper, remaining butter\"\n];\nconst title: string = \"Risotto\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\nconst portionCost: number = totalCost / makes.quantity;\n\nexport const RISOTTO: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  portionCost,\n  totalCost,\n  diet,\n  method\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\nimport { calculateRecipeCost } from \"utils\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.ONION_RED_MEDIUM, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.CURRY_PASTE_ROGAN_JOSH,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.GINGER_FRESH,\n      quantity: 3,\n      measurement: MEASUREMENTS.CENTIMETRE\n    },\n    {\n      ingredient: INGREDIENTS.CORIANDER_FRESH,\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.POTATO_SWEET,\n      quantity: 1,\n      notes: \"large\"\n    },\n    {\n      ingredient: INGREDIENTS.CHICKPEAS,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.PETITS_POIS_FROZEN,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK_COCONUT_CANNED,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.SPINACH,\n      quantity: 260,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.RICE }],\n  [{ ingredient: INGREDIENTS.KALE }, { ingredient: INGREDIENTS.POPPADOMS }]\n];\n\nconst method: Array<string> = [\n  \"fry diced onion in oil, curry paste and some water on a medium heat for at least 10 minutes\",\n  \"meanwhile, blend coriander with some water\",\n  \"add grated ginger, diced sweet potato, drained chickpeas and blended coriander to frying pan\",\n  \"fry for about 20 minutes, regularly replenishing the water\",\n  \"add chopped tomatoes, bring to the boil\",\n  \"reduce heat and simmer for at least 30 minutes\",\n  \"stir in petit pois, coconut milk and spinach\"\n];\nconst title: string = \"Rogan josh\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.ROGAN_JOSH;\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\nconst portionCost: number = totalCost / makes.quantity;\n\nexport const ROGAN_JOSH: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  totalCost,\n  portionCost,\n  serveWith,\n  diet,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, UNICODE, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven, bakeForAbout } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.POTATO_BAKING, quantity: 3 },\n    { ingredient: INGREDIENTS.POTATO_SWEET, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 100,\n      measurement: MEASUREMENTS.MILLILITRE\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 5 },\n    { ingredient: INGREDIENTS.CARROT, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS_CHESTNUT,\n      quantity: 300,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.ROSEMARY_DRIED,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PUREE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.WINE_RED,\n      quantity: 250,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.PETITS_POIS_FROZEN,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON,\n      optional: true\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.ASPARAGUS, notes: \"pan-fried\" }]\n];\n\nconst method: Array<string> = [\n  \"peel and chop potato into smallish chunks (it cooks quicker and makes it easier to mash)\",\n  \"boil potatoes for about 25 minutes until soft and easily mashable\",\n  \"mash potato, then stir in butter, salt, pepper and some water to loosen it\",\n  \"elsewhere, fry diced onion with crushed garlic, sliced mushrooms and diced carrot all together in the oil and some water\",\n  \"shower vegetables in salt, pepper and dried herbs\",\n  \"keep replenishing the vegetables with splashes of water so they never or stick to the saucepan\",\n  `add ${UNICODE.TOMATO_PUREE} and stock powder`,\n  // \"once softened, add red wine (and lentils)\",\n  \"once softened, stir in red wine\",\n  // \"stir continuously whilst simmering for at least 30 minutes, adding water where necessary\",\n  \"simmer for at least 30 minutes, adding water where necessary\",\n  preheatOven({ degreesCelcius: 180 }),\n  \"remove from heat, stir in cornflour, yeast flakes and peas\",\n  \"transfer filling to oven-proof dish, cover with mashed potato and fork lines onto the topping\",\n  bakeForAbout({ minutes: 40 })\n];\n\nconst title: string = \"Shepherd's pie\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.SHEPHERDS_PIE;\nconst makes: IRecipeMakes = { quantity: 7, measurement: MEASUREMENTS.PORTION };\n\nexport const SHEPHERDS_PIE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  hide: true,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { calculateRecipeCost } from \"utils\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 5 },\n    {\n      ingredient: INGREDIENTS.GINGER_FRESH,\n      quantity: 3,\n      measurement: MEASUREMENTS.CENTIMETRE\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_WHITE_WINE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 4,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.KETCHUP_TOMATO,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.CHILLI_CRUSHED_DRIED,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 300,\n      measurement: MEASUREMENTS.MILLILITRE\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 1.5,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOFU,\n      quantity: 280,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.CARROT, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_RED, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_GREEN, quantity: 1 },\n    { ingredient: INGREDIENTS.PINEAPPLE, quantity: 1 }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.RICE_BASMATI }]\n];\n\nconst method: Array<string> = [\n  \"mix cornflour with water, set solution aside\",\n  \"fry crushed garlic and grated ginger in a small saucepan for 1 minute\",\n  \"pour over soy, vinegar, ketchup, crushed chillis and water\",\n  \"add cornflour solution, stir for about 10 minutes until the sauce thickens, remove from heat\",\n  \"drain the tofu, chop into bite-sized chunks\",\n  \"mix cornflour with salt, pepper and oil\",\n  \"coat sides of tofu chunks in cornflour paste\",\n  \"fry tofu on medium-high heat for 5 minutes, set aside\",\n  \"chop pineapple, pepper and onion chunkily but slice carrot very thinly\",\n  \"fry vegetables in oil and some water until charred\",\n  \"toss in the pineapple, tofu and pour over the sauce\",\n  \"simmer for at least 5 minutes to let the flavours infuse, serve\"\n];\nconst title: string = \"Sweet and Sour\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\nconst portionCost: number = totalCost / makes.quantity;\n\nexport const SWEET_AND_SOUR: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  totalCost,\n  portionCost,\n  serveWith,\n  diet,\n  method\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { calculateRecipeCost } from \"utils\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.BASIL_FRESH,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.NUTS_PINE,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 4,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 3\n    },\n    {\n      ingredient: INGREDIENTS.LEMON_JUICE_FRESH,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_CIDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 50,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 25,\n      measurement: MEASUREMENTS.MILLILITRE\n    }\n  ]\n];\n\nconst method: Array<string> = [\n  \"transfer all ingredients to blender\",\n  \"blend until smooth\",\n  \"store in refrigerator for up to 1 week\"\n];\n\nconst title: string = \"Pesto\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst makes: IRecipeMakes = { quantity: 100, measurement: MEASUREMENTS.GRAM };\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\n\nexport const PESTO: IRecipeCard = {\n  title,\n  ingredients,\n  totalCost,\n  diet,\n  makes,\n  method\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\nimport { calculateRecipeCost } from \"utils\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.PEPPER_RED, quantity: 1 },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 1 },\n\n    {\n      ingredient: INGREDIENTS.CHILLI_BIRD_EYE_FRESH,\n      quantity: 20,\n      measurement: MEASUREMENTS.GRAM,\n      notes: \"stalk removed\"\n    },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_WHITE_WINE,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 10 },\n    { ingredient: INGREDIENTS.LEMON, quantity: 1, notes: \"zest and juice\" },\n    {\n      ingredient: INGREDIENTS.PAPRIKA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.OREGANO_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: Array<string> = [\n  \"transfer all ingredients to blender and blitz until smooth\",\n  \"transfer to a saucepan and heat on low for about 20 minutes\",\n  \"remove from heat, leave to cool\",\n  \"keep refrigerated in a jar for up to 2 weeks\"\n];\n\nconst title: string = \"Piri Piri\";\nconst makes: IRecipeMakes = { quantity: 475, measurement: MEASUREMENTS.GRAM };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.PIRI_PIRI;\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\n\nexport const PIRI_PIRI: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  totalCost,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\nimport { calculateRecipeCost } from \"utils\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.ONION_WHITE_MEDIUM,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 3\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_RED,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.BEANS_HARICOT,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PASSATA,\n      quantity: 500,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 1,\n      optional: true,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA_SMOKED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.ALLSPICE_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: Array<string> = [\n  \"fry diced onion, garlic and pepper in oil (and some water if need be) for 5-10 minutes\",\n  \"transfer to slow cooker along with drained beans, passata and seasoning\",\n  \"cook on low for 8 hours or medium for 5 hours\"\n];\n\nconst title: string = \"Baked Beans\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.BAKED_BEANS;\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\nconst portionCost: number = totalCost / makes.quantity;\n\nexport const BAKED_BEANS: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  totalCost,\n  portionCost,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries, calculateRecipeCost } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.CAULIFLOWER_REGULAR, quantity: 1 },\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 200,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TURMERIC_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.SWEET_CHILLI_SAUCE,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.LIME_JUICE_FRESH,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SRIRACHA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 2 }\n  ]\n];\n\nconst method: Array<string> = [\n  preheatOven({ degreesCelcius: 200 }),\n  \"mix flour, almond milk, salt, pepper, turmeric, paprika in large bowl to make batter\",\n  \"remove all leaves from cauliflower, cut vertically around the stem to release florets\",\n  \"cover all florets in the batter\",\n  \"use tongs to transfer each floret to baking tray\",\n  \"roast the cauliflower for 25 minutes\",\n  \"make bang bang sauce by mixing sweet chilli, soy, lime juice, sriracha, crushed garlic\",\n  \"toss sauce over cauliflower in a heated wok\",\n  \"pour over fried spring onion and sesame seeds\"\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.ONION_SPRING }],\n  [{ ingredient: INGREDIENTS.SEEDS_SESAME }]\n];\n\nconst title: string = \"Bang Bang Cauliflower\";\nconst makes: IRecipeMakes = { quantity: 2, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.BANG_BANG_CAULIFLOWER;\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\nconst portionCost: number = totalCost / makes.quantity;\n\nexport const BANG_BANG_CAULIFLOWER: IRecipeCard = {\n  title,\n  ingredients,\n  image,\n  totalCost,\n  serveWith,\n  portionCost,\n  makes,\n  method,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries, calculateRecipeCost } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.KALE,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA_SMOKED,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.CHILLI_POWDER,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: Array<string> = [\n  preheatOven({ degreesCelcius: 100 }),\n  \"wash and dry kale thoroughly, discard large stems, transfer to large mixing bowl\",\n  \"mix oil with seasoning in a small jug\",\n  \"pour seasoning over kale, toss thoroughly until evenly distributed\",\n  \"transfer seasoned kale to 2 baking trays\",\n  \"bake for 20 minutes, one tray on top of the other\",\n  \"switch tray positions, bake for further 15 minutes\",\n  \"remove from oven, leave to cool\"\n];\n\nconst title: string = \"Crispy Kale\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.KALE_CRISPY;\nconst makes: IRecipeMakes = { quantity: 2, measurement: MEASUREMENTS.SERVING };\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\n\nexport const CRISPY_KALE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  totalCost,\n  method,\n  image,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\nimport { calculateRecipeCost } from \"utils\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.POTATO_BAKING, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ]\n];\n\nconst method: Array<string> = [\n  \"peel potatoes and chop into small-ish chunks (to speed up the boiling process)\",\n  \"submerge potato chunks in boiling water for at least 25 minutes (until soft enough to easily mash)\",\n  \"drain the boiling water, then use a masher to break down the potato\",\n  \"dissolve salt in the water, then stir into the potato\",\n  \"stir in the butter, then season with black pepper\"\n];\n\nconst title: string = \"Mashed Potato\";\nconst makes: IRecipeMakes = { quantity: 2, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.MASHED_POTATO;\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\n\nexport const MASHED_POTATO: IRecipeCard = {\n  ingredients,\n  title,\n  makes,\n  totalCost,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\nimport { calculateRecipeCost } from \"utils\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.POTATO_JERSEY_ROYAL,\n      quantity: 500,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MAYONNAISE,\n      quantity: 4,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.ONION_RED_MEDIUM,\n      quantity: 0.5\n    },\n    {\n      ingredient: INGREDIENTS.PARSLEY_FRESH,\n      quantity: 15,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ]\n];\n\nconst method: Array<string> = [\n  \"boil potatoes in salted water for 20 minutes\",\n  \"meanwhile, finely dice red onion and parsley\",\n  \"drain potatoes and roughly chop each into quarters\",\n  \"transfer potatoes to a large mixing bowl\",\n  \"add mayo, then toss in onion and parsley\",\n  \"season heavily with salt and pepper\"\n];\n\nconst title: string = \"Potato Salad\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGETARIAN;\nconst image: IImageSrc = PHOTOS_RECIPES.POTATO_SALAD;\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\nconst portionCost: number = totalCost / makes.quantity;\n\nexport const POTATO_SALAD: IRecipeCard = {\n  ingredients,\n  title,\n  makes,\n  totalCost,\n  portionCost,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries, calculateRecipeCost } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.AUBERGINE, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_RED, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_ORANGE, quantity: 1 },\n    { ingredient: INGREDIENTS.COURGETTE, quantity: 2 },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.OREGANO_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.LEMON_JUICE,\n      quantity: 2,\n      optional: true,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 1,\n      optional: true,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: Array<string> = [\n  preheatOven({ degreesCelcius: 180 }),\n  \"chunkily chop the aubergine, courgette, peppers and onions and distribute evenly across 2 baking trays\",\n  \"drizzle the vegetables in oil, ensuring they are evenly coated, plus season with salt and pepper\",\n  \"roast the vegetables for 1 hour, shaking the veg half way through and switching the position of the trays in the oven\",\n  \"heat oil, lightly fry garlic in a sauceapan for 1 minute\",\n  \"add chopped tomatoes and dried herbs\",\n  \"cover and simmer for 45 minutes\",\n  \"remove sauce from heat, stir in lemon juice, sugar, salt and pepper\",\n  \"transfer all roasted veg to the deeper of the 2 baking trays, pour tomato sauce all over and ensure it is evenly coated\",\n  \"bake for a final 10 minutes\"\n];\n\nconst title: string = \"Ratatouille\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.RATATOUILLE;\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\nconst portionCost: number = totalCost / makes.quantity;\n\nexport const RATATOUILLE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  totalCost,\n  portionCost,\n  diet,\n  image,\n  favourite: true\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { calculateRecipeCost } from \"utils\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.TOFU,\n      quantity: 280,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TURMERIC_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA_SMOKED,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_BLACK,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    }\n  ]\n];\n\nconst method: Array<string> = [\n  \"drain tofu, crumble into small pieces (using both fingers) into a large mixing bowl\",\n  \"in a small jug, make paste from yeast, turmeric, paprika, salt, pepper, thyme, water and oil\",\n  \"pour the paste over the crumbled tofu and stir until evenly covered\",\n  \"heat the butter over a medium heat in a small saucepan\",\n  \"fry tofu until heated through\"\n];\n\nconst title: string = \"Tofu Scramble\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\nconst portionCost: number = totalCost / makes.quantity;\n\nexport const TOFU_SCRAMBLE: IRecipeCard = {\n  ingredients,\n  makes,\n  totalCost,\n  portionCost,\n  method,\n  title,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries, calculateRecipeCost } from \"utils\";\n\nconst {\n  LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN,\n  FOLD_IN_FLOUR_MIX,\n  preheatOven,\n  bakeForAbout,\n  transferToLoafTin\n} = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.BANANA, quantity: 4, notes: \"very ripe\" },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 75,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.FLOUR_SELF_RAISING,\n      quantity: 225,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BICARBONATE_OF_SODA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.CINNAMON_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.NUTMEG_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_ICING,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    }\n  ]\n];\n\nconst method: Array<string> = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"blend (peeled) bananas with butter, sugar, oil and vanilla\",\n  \"in a small mixing bowl, weigh flour and stir in the baking powder, bicarbonate of soda, cinnamon and nutmeg\",\n  FOLD_IN_FLOUR_MIX,\n  transferToLoafTin({ sunkenCentre: true }),\n  bakeForAbout({ minutes: 40, skewer: true }),\n  LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN,\n  \"make butter icing by whisking butter with icing sugar and water\",\n  \"evenly spread icing over the cake\"\n];\n\nconst title: string = \"Banana Cake\";\nconst makes: IRecipeMakes = { quantity: 10, measurement: MEASUREMENTS.SLICE };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.BANANA_CAKE;\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\nconst portionCost: number = totalCost / makes.quantity;\n\nexport const BANANA_CAKE: IRecipeCard = {\n  title,\n  favourite: true,\n  ingredients,\n  totalCost,\n  portionCost,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\nimport { calculateRecipeCost } from \"utils\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.FLOUR_SELF_RAISING,\n      quantity: 175,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n    { ingredient: INGREDIENTS.EGGS, quantity: 1 },\n    {\n      ingredient: INGREDIENTS.MILK,\n      quantity: 200,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.BLUEBERRIES_FRESH,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.BANANA }],\n  [{ ingredient: INGREDIENTS.RASPBERRIES_FRESH }],\n  [\n    { ingredient: INGREDIENTS.NECTAR_AGAVE },\n    { ingredient: INGREDIENTS.SYRUP_GOLDEN }\n  ],\n  [{ ingredient: INGREDIENTS.SUGAR_ICING }],\n  [{ ingredient: INGREDIENTS.CINNAMON_GROUND }]\n];\n\nconst method: Array<string> = [\n  \"whisk all ingredients except blueberries\",\n  \"fold blueberries into pancake batter\",\n  \"brush frying pan with sunflower oil and heat\",\n  \"fry dessertspoonfuls of batter on a medium-low heat\",\n  \"flip pancakes once bases are golden brown\",\n  \"remove from heat once both sides are golden\"\n];\n\nconst title: string = \"Blueberry Pancakes\";\nconst diet: IRecipeDiet = DIETS.VEGETARIAN;\nconst makes: IRecipeMakes = { quantity: 13 };\nconst image: IImageSrc = PHOTOS_RECIPES.BLUEBERRY_PANCAKES;\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\nconst portionCost: number = totalCost / makes.quantity;\n\nexport const BLUEBERRY_PANCAKES: IRecipeCard = {\n  title,\n  ingredients,\n  totalCost,\n  makes,\n  image,\n  portionCost,\n  serveWith,\n  method,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven, FOLD_IN_FLOUR_MIX, bakeForAbout } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.CHOCOLATE_DARK,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.COCOA_POWDER,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 200,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.RASPBERRIES_FRESH,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: Array<string> = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"in a large mixing bowl, add chocolate (broken into chunks), oil and butter\",\n  \"rest the large mixing bowl over a small saucepan of hot (not boiling) water and stir until melted, then remove from heat\",\n  \"in a small mixing bowl, weigh flour and combine with sugar and cocoa powder\",\n  \"stir in almond milk and vanilla to the melted chocolate\",\n  FOLD_IN_FLOUR_MIX,\n  \"gently introduce the raspberries to the mixture\",\n  \"transfer to a non-stick baking tin\",\n  bakeForAbout({ minutes: 40, skewer: true }),\n  \"transfer to fridge for 1 hour to speed up cooling and increase fudginess\",\n  \"store in airtight container\"\n];\n\nconst title: string = \"Brownies\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.BROWNIES;\n\nexport const BROWNIES: IRecipeCard = {\n  ingredients,\n  method,\n  diet,\n  image,\n  title,\n  hide: true\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { calculateRecipeCost, recipeMethodEntries } from \"utils\";\n\nconst { preheatOven, bakeForAbout } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 125,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.CINNAMON_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BICARBONATE_OF_SODA,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 115,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    { ingredient: INGREDIENTS.EGGS, quantity: 1 },\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.OATS,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.RAISINS,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst title: string = \"Cookies\";\nconst makes: IRecipeMakes = { quantity: 20 };\nconst diet: IRecipeDiet = DIETS.VEGETARIAN;\nconst method: Array<string> = [\n  \"in a small mixing bowl, combine flour with cinnamon, baking soda and salt\",\n  \"in a large mixing bowl, cream butter with both types of sugar for 1-2 minutes\",\n  \"whisk in egg and vanilla extract to wet ingredients\",\n  \"slowly introduce the flour mix to the wet ingredients and combine\",\n  \"fold in the oats and raisins\",\n  \"cover and refrigerate the cookie dough for 30 minutes\",\n  preheatOven({ degreesCelcius: 170, bakingTray: true }),\n  \"scoop balls of cookie dough onto baking tray, leaving space for them to expand\",\n  bakeForAbout({ minutes: 10, continueToCookOutsideOven: true })\n];\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\nconst portionCost: number = totalCost / makes.quantity;\n\nexport const COOKIES: IRecipeCard = {\n  ingredients,\n  title,\n  totalCost,\n  method,\n  portionCost,\n  makes,\n  favourite: true,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries, calculateRecipeCost } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 350,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 175,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 175,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.APPLE_BRAMLEY,\n      quantity: 1,\n      measurement: MEASUREMENTS.KILOGRAM,\n      notes: \"weighs nearer 700g after peeling and coring\"\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 350,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.RASPBERRIES_FROZEN,\n      quantity: 350,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BLACKBERRIES_FROZEN,\n      quantity: 500,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.CINNAMON_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_DEMERARA,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.CREAM_OAT }]\n];\n\nconst method: Array<string> = [\n  preheatOven({ degreesCelcius: 160 }),\n  \"mix sieved flour and sieved caster sugar\",\n  \"introduce chunks of butter, use fingertips to form light crumble but don't overwork\",\n  \"blind bake the crumble topping for 40 minutes (shaking half way through)\",\n  \"peel, core and chop the apples into medium chunks\",\n  \"stew apple in the water until softened, remove from heat\",\n  \"stir in demerara sugar, raspberries, blackberries and cinnamon\",\n  \"transfer fruit to oven dish and cover with the crumble topping\",\n  \"bake for 20 minutes\",\n  \"remove from oven, leave to cool for at least 5 minutes before serving\"\n];\n\nconst makes: IRecipeMakes = { quantity: 8, measurement: MEASUREMENTS.PORTION };\nconst title: string = \"Crumble\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.CRUMBLE;\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\nconst portionCost: number = totalCost / makes.quantity;\n\nexport const CRUMBLE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  favourite: true,\n  method,\n  totalCost,\n  portionCost,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries, calculateRecipeCost } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.APRICOTS_DRIED,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BLUEBERRIES_DRIED,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.CRANBERRIES_DRIED,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OATS,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 140,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SYRUP_GOLDEN,\n      quantity: 90,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: Array<string> = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"in a large mixing bowl, stir finely chopped fruit and salt into the oats\",\n  \"melt butter in a saucepan with golden syrup and sugar\",\n  \"add melted butter mix to oat mix and stir thoroughly\",\n  \"transfer mixture to non-stick loaf tin, flatten to cover the whole base\",\n  \"bake for 15-20 minutes (depending how gooey you like it, remembering it will solidify more overnight)\",\n  \"leave to cool before cutting into suitably-sized chunks\"\n];\n\nconst title: string = \"Flapjacks\";\nconst makes: IRecipeMakes = { quantity: 12, measurement: MEASUREMENTS.CHUNK };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.FLAPJACKS;\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\nconst portionCost: number = totalCost / makes.quantity;\n\nexport const FLAPJACKS: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  totalCost,\n  portionCost,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst {\n  preheatOven,\n  FOLD_IN_FLOUR_MIX,\n  transferToLoafTin,\n  bakeForAbout\n} = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.MILK_COCONUT_CANNED,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 100,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    { ingredient: INGREDIENTS.LEMON_LARGE, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.LEMON_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.FLOUR_SELF_RAISING,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BICARBONATE_OF_SODA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    { ingredient: INGREDIENTS.LEMON_LARGE, quantity: 1 },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: Array<string> = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"in a large mixing bowl, whisk the coconut milk with the sugar, oil and lemon juice for at least 3 minutes\",\n  \"stir in the lemon zest, vanilla extract and lemon extract\",\n  \"in a small mixing bowl, weigh flour and combine with baking powder, bicarbonate of soda and salt\",\n  FOLD_IN_FLOUR_MIX,\n  transferToLoafTin({}),\n  bakeForAbout({ minutes: 40, skewer: true }),\n  \"make drizzle topping from zest and juice of lemon plus sugar\",\n  \"leave cake to cool for at least 30 minutes, prod a few holes in the cake\",\n  \"evenly coat drizzle topping\"\n];\n\nconst title: string = \"Lemon Drizzle\";\nconst makes: IRecipeMakes = { quantity: 10, measurement: MEASUREMENTS.SLICE };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const LEMON_DRIZZLE: IRecipeCard = {\n  title,\n  ingredients,\n  diet,\n  makes,\n  method,\n  hide: true\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { calculateRecipeCost } from \"utils\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.OATS,\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 100,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.MILK_OATLY_BARISTA,\n      quantity: 100,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.CINNAMON_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.RASPBERRIES_FROZEN,\n      quantity: 75,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IRecipeIngredient>> = [\n  [],\n  [{ ingredient: INGREDIENTS.NECTAR_AGAVE }]\n];\n\nconst method: Array<string> = [\n  \"transfer measured oats, water and Oatly to saucepan\",\n  \"heat moderately and continuously stir so it never sticks to the pan\",\n  \"add frozen raspberries and cinnamon shortly after\",\n  \"once it is creamy and thick, remove from heat\"\n];\n\nconst title: string = \"Porridge\";\nconst makes: IRecipeMakes = { quantity: 1, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.PORRIDGE;\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\n\nexport const PORRIDGE: IRecipeCard = {\n  title,\n  ingredients,\n  serveWith,\n  totalCost,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nimport { recipeMethodEntries, calculateRecipeCost } from \"utils\";\n\nconst { preheatOven, bakeForAbout } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 165,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK_OATLY_BARISTA,\n      quantity: 85,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.RAISINS,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: Array<string> = [\n  preheatOven({ degreesCelcius: 200, bakingTray: true }),\n  \"sieve flour and baking powder, combine with sugar and salt\",\n  \"add butter, use fingertips to form fine crumbs\",\n  \"dust the kitchen worktop with flour\",\n  \"slightly warm the milk and pour into the flour mix, use a knife to combine the ingredients\",\n  \"fold in the the raisins\",\n  \"roll out the dough on the worktop to a suitable thickness\",\n  \"cut out scone shapes and place on a baking tray\",\n  bakeForAbout({ minutes: 10, wellRisen: true })\n];\n\nconst title: string = \"Scones\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nconst totalCost: number = calculateRecipeCost(ingredients, title);\n\nexport const SCONES: IRecipeCard = {\n  ingredients,\n  method,\n  diet,\n  totalCost,\n  title\n};\n","import * as MAINS from \"./mains\";\nimport * as SAUCES from \"./sauces\";\nimport * as SIDES from \"./sides\";\nimport * as SWEETS from \"./sweets\";\nimport { RECIPES_COMING_SOON as COMING_SOON } from \"./recipes-coming-soon\";\n\nconst mains: IRecipeGroup = {\n  title: \"Mains\",\n  recipes: [\n    MAINS.BOLOGNESE,\n    MAINS.CARBONARA,\n    MAINS.LASAGNE,\n    MAINS.RISOTTO,\n    MAINS.ROGAN_JOSH,\n    MAINS.SHEPHERDS_PIE,\n    MAINS.SWEET_AND_SOUR\n  ]\n};\n\nconst sauces: IRecipeGroup = {\n  title: \"Sauces\",\n  recipes: [SAUCES.PESTO, SAUCES.PIRI_PIRI]\n};\n\nconst sides: IRecipeGroup = {\n  title: \"Sides\",\n  recipes: [\n    SIDES.BAKED_BEANS,\n    SIDES.BANG_BANG_CAULIFLOWER,\n    SIDES.CRISPY_KALE,\n    SIDES.MASHED_POTATO,\n    SIDES.POTATO_SALAD,\n    SIDES.RATATOUILLE,\n    SIDES.TOFU_SCRAMBLE\n  ]\n};\n\nconst sweets: IRecipeGroup = {\n  title: \"Sweets\",\n  recipes: [\n    SWEETS.BANANA_CAKE,\n    SWEETS.BLUEBERRY_PANCAKES,\n    SWEETS.BROWNIES,\n    SWEETS.COOKIES,\n    SWEETS.CRUMBLE,\n    SWEETS.FLAPJACKS,\n    SWEETS.LEMON_DRIZZLE,\n    SWEETS.PORRIDGE,\n    SWEETS.SCONES\n  ]\n};\n\nconst CATEGORISED: Array<IRecipeGroup> = [mains, sides, sauces, sweets];\n\nexport const DATA = { CATEGORISED, COMING_SOON };\n","const recipesComingSoon: Array<string> = [\n  \"gingerbread\",\n  \"spinach sweet potato hash\",\n  \"courgette rösti fritters\",\n  \"key lime pie\",\n  \"meatball tagine\",\n  \"aubergine teriyaki\",\n  \"loaded potato skins\",\n  \"mushroom stroganoff\",\n  \"carrot ginger cake\",\n  \"jackfruit mac\",\n  \"lemon meringue pie\",\n  \"chilli sin carne\",\n  \"passionfruit cheesecake\",\n  \"victoria sponge\",\n  \"margaritas\",\n  \"roast potatoes\",\n  \"thai green curry\",\n  \"dahl\"\n];\n\nexport const RECIPES_COMING_SOON: Array<ICountedListItem> = recipesComingSoon\n  .map((item: string) => ({\n    text: item,\n    countInfoIrrelevant: true,\n    futureCount: 0,\n    pastCount: 0\n  }))\n  .sort((a: ICountedListItem, b: ICountedListItem) =>\n    a.text > b.text ? 1 : -1\n  );\n","import { DATA } from \"./data\";\n\nconst SECTIONS_RECIPE_GROUPS: Array<IPageSection> = DATA.CATEGORISED.map(\n  ({ title, recipes }: IRecipeGroup): IPageSection => ({\n    title: title,\n    data: { recipeCards: recipes },\n    staticAlways: true\n  })\n);\n\nconst SECTION_COMING_SOON: IPageSection = {\n  title: \"Coming Soon\",\n  staticIf2Columns: true,\n  data: { countedListItems: DATA.COMING_SOON }\n};\n\nexport const sections: Array<IPageSection> = [\n  ...SECTIONS_RECIPE_GROUPS,\n  SECTION_COMING_SOON\n];\n","import { SvgVegBowl } from \"resources\";\nimport { PAGE_COLORS } from \"styles\";\n\nimport { sections } from \"./sections\";\n\nexport const PAGE_RECIPES: IPage = {\n  title: \"Recipes\",\n  path: \"/recipes\",\n  SvgIcon: SvgVegBowl,\n  sections,\n  color: PAGE_COLORS.RECIPES\n};\n","import { PLAYS, THEATRE_VENUES, FRIENDS } from \"@constants\";\n\nexport const THEATRE_2016: Array<ITheatreCard> = [\n  {\n    play: PLAYS.MIDSUMMER_NIGHTS_DREAM,\n    theatre: THEATRE_VENUES.ROYAL_SHAKESPEARE,\n    date: new Date(\"2016-06-17\"),\n    company: [FRIENDS.SIAN_RODWAY_SMITH]\n  },\n  {\n    play: PLAYS[1984],\n    theatre: THEATRE_VENUES.PLAYHOUSE,\n    date: new Date(\"2016-08-13\"),\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON],\n    favourite: true\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS } from \"@constants\";\n\nexport const THEATRE_2017: Array<ITheatreCard> = [\n  {\n    play: PLAYS.UGLY_LIES_THE_BONE,\n    theatre: THEATRE_VENUES.NATIONAL,\n    date: new Date(\"2017-03-25\"),\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  },\n  {\n    play: PLAYS.KINKY_BOOTS,\n    theatre: THEATRE_VENUES.ADELPHI,\n    date: new Date(\"2017-05-23\"),\n    company: [FRIENDS.SIAN_RODWAY_SMITH]\n  },\n  {\n    play: PLAYS.MATILDA,\n    theatre: THEATRE_VENUES.CAMBRIDGE,\n    date: new Date(\"2017-06-07\"),\n    company: [FRIENDS.SIAN_RODWAY_SMITH, FRIENDS.LUKE_STERN]\n  },\n  {\n    play: PLAYS.YOUNG_MARX,\n    theatre: THEATRE_VENUES.BRIDGE,\n    date: new Date(\"2017-10-24\"),\n    company: [\n      FRIENDS.JHC,\n      FRIENDS.JOE_EDWARDS,\n      FRIENDS.JAMIE_HALKET,\n      FRIENDS.AISHA_SAEED\n    ]\n  },\n  {\n    play: PLAYS.FERRYMAN_THE,\n    favourite: true,\n    theatre: THEATRE_VENUES.GIELGUD,\n    date: new Date(\"2017-11-26\"),\n    company: [FRIENDS.DAD, FRIENDS.EMMA_CODRINGTON]\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS, ACTORS } from \"@constants\";\n\nexport const THEATRE_2018: Array<ITheatreCard> = [\n  {\n    play: PLAYS.FROZEN,\n    theatre: THEATRE_VENUES.ROYAL_HAYMARKET,\n    date: new Date(\"2018-04-14\"),\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON],\n    cast: [ACTORS.SURANNE_JONES, ACTORS.NINA_SOSANYA, ACTORS.JASON_WATKINS]\n  },\n  {\n    play: PLAYS.EVERYBODYS_TALKING_ABOUT_JAMIE,\n    cast: [ACTORS.JOHN_MCCREA],\n    theatre: THEATRE_VENUES.APOLLO,\n    date: new Date(\"2018-05-12\"),\n    company: [FRIENDS.SIAN_RODWAY_SMITH]\n  },\n  {\n    play: PLAYS.CONSENT,\n    cast: [ACTORS.SIAN_CLIFFORD, ACTORS.ADAM_JAMES, ACTORS.LEE_INGLEBY],\n    theatre: THEATRE_VENUES.HAROLD_PINTER,\n    date: new Date(\"2018-06-30\"),\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  },\n  {\n    play: PLAYS.THAT_GIRL,\n    cast: [ACTORS.HATTY_JONES],\n    theatre: THEATRE_VENUES.OLD_RED_LION,\n    date: new Date(\"2018-09-05\"),\n    company: [\n      FRIENDS.JHC,\n      FRIENDS.JOE_EDWARDS,\n      FRIENDS.JAMIE_HALKET,\n      FRIENDS.LEWIS_STEADMAN,\n      FRIENDS.DOM_COYNE\n    ]\n  },\n  {\n    play: PLAYS.DUST,\n    theatre: THEATRE_VENUES.TRAFALGAR_STUDIOS,\n    cast: [ACTORS.MILLY_THOMAS],\n    date: new Date(\"2018-10-08\"),\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON],\n    favourite: true\n  },\n  {\n    play: PLAYS.INHERITANCE_THE,\n    theatre: THEATRE_VENUES.NOEL_COWARD,\n    date: new Date(\"2018-10-27\"),\n    company: [FRIENDS.MUM],\n    favourite: true\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS, ACTORS } from \"@constants\";\n\nexport const THEATRE_2019: Array<ITheatreCard> = [\n  {\n    play: PLAYS.WICKED,\n    theatre: THEATRE_VENUES.APOLLO_VICTORIA,\n    date: new Date(\"2019-01-12\"),\n    company: [FRIENDS.DAN_SPARROW, FRIENDS.MARIA_TAYLOR]\n  },\n  {\n    play: PLAYS.LEAVE_TO_REMAIN,\n    theatre: THEATRE_VENUES.LYRIC,\n    date: new Date(\"2019-01-22\"),\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  },\n  {\n    play: PLAYS.HOME_IM_DARLING,\n    cast: [ACTORS.KATHERINE_PARKINSON],\n    theatre: THEATRE_VENUES.DUKE_OF_YORKS,\n    date: new Date(\"2019-03-04\"),\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  },\n  {\n    play: PLAYS.MIDSUMMER_NIGHTS_DREAM,\n    cast: [\n      ACTORS.GWENDOLINE_CHRISITE,\n      ACTORS.DAVID_MOORST,\n      ACTORS.OLIVER_CHRIS,\n      ACTORS.HAMMED_ANIMASHAUN\n    ],\n    theatre: THEATRE_VENUES.BRIDGE,\n    date: new Date(\"2019-08-08\"),\n    company: [\n      FRIENDS.JHC,\n      FRIENDS.JERRY_EDWARDS,\n      FRIENDS.JOE_EDWARDS,\n      FRIENDS.LEWIS_STEADMAN\n    ]\n  },\n  {\n    play: PLAYS.SON_THE,\n    cast: [ACTORS.LAURIE_KYNASTON],\n    theatre: THEATRE_VENUES.DUKE_OF_YORKS,\n    date: new Date(\"2019-09-28\"),\n    company: [FRIENDS.MUM]\n  },\n  {\n    play: PLAYS.LOST_UNFOUND,\n    theatre: THEATRE_VENUES.WHITE_BEAR,\n    date: new Date(\"2019-10-09\"),\n    company: [\n      FRIENDS.JERRY_EDWARDS,\n      FRIENDS.LEWIS_STEADMAN,\n      FRIENDS.DOM_COYNE,\n      FRIENDS.JAMIE_HALKET\n    ]\n  },\n\n  {\n    play: PLAYS.LUNGS,\n    theatre: THEATRE_VENUES.OLD_VIC,\n    cast: [ACTORS.CLAIRE_FOY, ACTORS.MATT_SMITH],\n    date: new Date(\"2019-10-26\"),\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON],\n    favourite: true\n  },\n  {\n    play: PLAYS.AFTERGLOW,\n    cast: [ACTORS.PETER_MCPHERSON, ACTORS.ADI_CHUGH, ACTORS.BENJAMIN_ALUWIHARE],\n    theatre: THEATRE_VENUES.WATERLOO_EAST,\n    date: new Date(\"2019-11-30\"),\n    company: [FRIENDS.DAN_SPARROW]\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS, ACTORS } from \"@constants\";\n\nexport const THEATRE_2020: Array<ITheatreCard> = [\n  {\n    play: PLAYS.WAITRESS,\n    theatre: THEATRE_VENUES.ADELPHI,\n    date: new Date(\"2020-02-18\"),\n    company: [FRIENDS.DARREN_TAYLOR],\n    cast: [ACTORS.SARA_BAREILLES]\n  },\n  {\n    play: PLAYS.UNCLE_VANYA,\n    theatre: THEATRE_VENUES.HAROLD_PINTER,\n    date: new Date(\"2020-02-19\"),\n    cast: [ACTORS.AIMEE_LOU_WOOD],\n    company: [FRIENDS.MUM]\n  }\n  // {\n  //   play: PLAYS[\"4000_MILES\"],\n  //   theatre: THEATRE_VENUES.OLD_VIC,\n  //   date:new Date(\"2020-05-09\"),\n  //   cast: ACTORS.TIMOTHEE_CHALAMET,\n  //   company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  // }\n];\n","import { THEATRE_2016 } from \"./theatre-2016\";\nimport { THEATRE_2017 } from \"./theatre-2017\";\nimport { THEATRE_2018 } from \"./theatre-2018\";\nimport { THEATRE_2019 } from \"./theatre-2019\";\nimport { THEATRE_2020 } from \"./theatre-2020\";\n\nconst ALL: Array<ITheatreCard> = [\n  ...THEATRE_2016,\n  ...THEATRE_2017,\n  ...THEATRE_2018,\n  ...THEATRE_2019,\n  ...THEATRE_2020\n];\n\nconst SPLIT_BY_YEAR: Array<Array<ITheatreCard>> = [\n  THEATRE_2016,\n  THEATRE_2017,\n  THEATRE_2018,\n  THEATRE_2019,\n  THEATRE_2020\n];\n\nexport const DATA = { ALL, SPLIT_BY_YEAR };\n","import { ACTORS } from \"@constants\";\nimport { getItemCounts } from \"utils\";\n\nimport { DATA } from \"../data\";\n\nexport const ACTORS_LIST_ITEMS: Array<ICountedListItem> = Object.values(\n  ACTORS\n).map(\n  (actor: IActor): ICountedListItem => ({\n    text: actor.name,\n    favourite: actor.favourite,\n    ...getItemCounts({ item: { actor }, data: { theatreCards: DATA.ALL } })\n  })\n);\n","import { FRIENDS } from \"@constants\";\nimport { getItemCounts } from \"utils\";\n\nimport { DATA } from \"../data\";\n\nexport const FRIENDS_LIST_ITEMS: Array<ICountedListItem> = Object.values(\n  FRIENDS\n)\n  .filter(({ theatre }: IFriend): boolean => !!theatre)\n  .map(\n    (friend: IFriend): ICountedListItem => ({\n      text: friend.name,\n      ...getItemCounts({ item: { friend }, data: { theatreCards: DATA.ALL } })\n    })\n  );\n","import { DATA } from \"../data\";\n\nexport const FAVOURITES: Array<ITheatreCard> = DATA.ALL.filter(\n  item => item.favourite\n);\n","import { PLAYS } from \"@constants\";\nimport { getItemCounts } from \"utils\";\n\nimport { DATA } from \"../data\";\n\nimport { FAVOURITES } from \"./favourites\";\n\ninterface IPlayIsFavourited {\n  play: IPlay;\n  favouritedTheatreCards: Array<ITheatreCard>;\n}\n\nconst playIsFavourited = ({\n  play,\n  favouritedTheatreCards\n}: IPlayIsFavourited): boolean => {\n  let itemIsFavourited: boolean = false;\n\n  favouritedTheatreCards.forEach((theatreCard: ITheatreCard) => {\n    if (play === theatreCard.play) itemIsFavourited = true;\n  });\n\n  return itemIsFavourited;\n};\n\nexport const PLAYS_LIST_ITEMS: Array<ICountedListItem> = Object.values(\n  PLAYS\n).map(\n  (play: IPlay): ICountedListItem => ({\n    text: play.name,\n    favourite: playIsFavourited({ play, favouritedTheatreCards: FAVOURITES }),\n    ...getItemCounts({ item: { play }, data: { theatreCards: DATA.ALL } })\n  })\n);\n","import { THEATRE_VENUES } from \"@constants\";\nimport { getItemCounts } from \"utils\";\n\nimport { DATA } from \"../data\";\n\nexport const THEATRE_VENUES_LIST_ITEMS: Array<ICountedListItem> = Object.values(\n  THEATRE_VENUES\n).map(\n  (theatre: ITheatreVenue): ICountedListItem => ({\n    text: theatre.name,\n    ...getItemCounts({ item: { theatre }, data: { theatreCards: DATA.ALL } })\n  })\n);\n","import { isInFuture } from \"utils\";\n\nimport { DATA } from \"../data\";\n\nexport const UP_NEXT: Array<ITheatreCard> = DATA.ALL.filter(theatreTrip =>\n  isInFuture(theatreTrip.date)\n);\n","import { formatCountedListItems } from \"utils\";\n\nimport { ACTORS_LIST_ITEMS } from \"./actors\";\nimport { FRIENDS_LIST_ITEMS } from \"./friends\";\nimport { PLAYS_LIST_ITEMS } from \"./plays\";\nimport { THEATRE_VENUES_LIST_ITEMS } from \"./theatres\";\nimport { UP_NEXT } from \"./up-next\";\n\ninterface ITheatreFactory {\n  ACTORS: Array<ICountedListItem>;\n  FRIENDS: Array<ICountedListItem>;\n  PLAYS: Array<ICountedListItem>;\n  VENUES: Array<ICountedListItem>;\n  UP_NEXT: Array<ITheatreCard>;\n}\n\nexport const FACTORY: ITheatreFactory = {\n  ACTORS: formatCountedListItems({ countedListItems: ACTORS_LIST_ITEMS }),\n  FRIENDS: formatCountedListItems({\n    countedListItems: FRIENDS_LIST_ITEMS,\n    isLeaderboard: true\n  }),\n  PLAYS: formatCountedListItems({ countedListItems: PLAYS_LIST_ITEMS }),\n  VENUES: formatCountedListItems({\n    countedListItems: THEATRE_VENUES_LIST_ITEMS\n  }),\n  UP_NEXT\n};\n","import { PAGE_SECTION_TITLES } from \"@constants\";\nimport { SVG_ICON_STRINGS } from \"resources\";\nimport { isInFuture } from \"utils\";\n\nimport { FACTORY } from \"./factory\";\nimport { DATA } from \"./data\";\n\nconst SECTION_ACTORS: IPageSection = {\n  title: \"Actors\",\n  icon: SVG_ICON_STRINGS.ARTIST,\n  data: { countedListItems: FACTORY.ACTORS }\n};\n\nconst SECTION_FRIENDS_THEATRE: IPageSection = {\n  title: PAGE_SECTION_TITLES.FRIENDS,\n  icon: SVG_ICON_STRINGS.PEOPLE,\n  data: { countedListItems: FACTORY.FRIENDS }\n};\n\nconst SECTION_PLAYS: IPageSection = {\n  title: \"Plays\",\n  icon: SVG_ICON_STRINGS.BOOK,\n  data: { countedListItems: FACTORY.PLAYS },\n  count: FACTORY.PLAYS.length\n};\n\nconst SECTION_THEATRES: IPageSection = {\n  title: \"Theatres\",\n  icon: SVG_ICON_STRINGS.THEATRE,\n  data: { countedListItems: FACTORY.VENUES },\n  count: FACTORY.VENUES.length\n};\n\nconst SECTION_UP_NEXT_THEATRE: IPageSection = {\n  title: PAGE_SECTION_TITLES.UP_NEXT,\n  icon: SVG_ICON_STRINGS.NOTEPAD,\n  data: { theatreCards: FACTORY.UP_NEXT }\n};\n\nconst SECTIONS_YEARS: Array<IPageSection> = DATA.SPLIT_BY_YEAR.map(\n  (year: Array<ITheatreCard>): IPageSection => ({\n    title: year[0].date.getFullYear().toString(),\n    count: year.length,\n    data: {\n      theatreCards: year.filter(({ date }: ITheatreCard) => !isInFuture(date))\n    }\n  })\n);\n\nexport const sections: Array<IPageSection> = [\n  SECTION_ACTORS,\n  SECTION_FRIENDS_THEATRE,\n  SECTION_PLAYS,\n  SECTION_THEATRES,\n  SECTION_UP_NEXT_THEATRE,\n  ...SECTIONS_YEARS\n];\n","import { SvgTheatreMasks } from \"resources\";\nimport { PAGE_COLORS } from \"styles\";\n\nimport { sections } from \"./sections\";\n\nexport const PAGE_THEATRE: IPage = {\n  title: \"Theatre\",\n  path: \"/theatre\",\n  SvgIcon: SvgTheatreMasks,\n  sections,\n  color: PAGE_COLORS.THEATRE\n};\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_1997: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.SPAIN.islands.TENERIFE],\n    subtitle: [COUNTRIES.SPAIN],\n    dates: [new Date(\"1997-02-05\"), new Date(\"1997-02-12\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_1998: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.SPAIN.islands.LANZAROTE],\n    subtitle: [COUNTRIES.SPAIN],\n    dates: [new Date(\"1998-02-01\"), new Date(\"1998-02-14\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_1999: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.FRANCE.attractions.DISNEYLAND_PARIS],\n    subtitle: [COUNTRIES.FRANCE],\n    dates: [new Date(\"1999-05-27\"), new Date(\"1999-05-30\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  },\n  {\n    title: [COUNTRIES.SPAIN.islands.MINORCA],\n    subtitle: [COUNTRIES.SPAIN],\n    dates: [new Date(\"1999-07-23\"), new Date(\"1999-08-06\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2000: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.SPAIN.islands.MINORCA],\n    subtitle: [COUNTRIES.SPAIN],\n    dates: [new Date(\"2000-07-28\"), new Date(\"2000-08-11\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2001: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.SPAIN.islands.IBIZA],\n    subtitle: [COUNTRIES.SPAIN],\n    dates: [new Date(\"2001-08-20\"), new Date(\"2001-09-03\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2002: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.USA.states.FLORIDA],\n    subtitle: [COUNTRIES.USA],\n    hidden: [\n      COUNTRIES.USA.attractions.BUSCH_GARDENS_TAMPA,\n      COUNTRIES.USA.attractions.DISNEY_EPCOT,\n      COUNTRIES.USA.attractions.UNIVERSALS_ISLANDS_OF_ADVENTURE,\n      COUNTRIES.USA.attractions.UNIVERSAL_STUDIOS_FLORIDA,\n      COUNTRIES.USA.attractions.DISNEY_ANIMAL_KINGDOM,\n      COUNTRIES.USA.attractions.DISNEY_MGM_STUDIOS,\n      COUNTRIES.USA.attractions.DISNEY_MAGIC_KINGDOM,\n      COUNTRIES.USA.attractions.BLIZZARD_BEACH,\n      COUNTRIES.USA.attractions.SEAWORLD_ORLANDO\n    ],\n    dates: [new Date(\"2002-05-23\"), new Date(\"2002-06-12\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2003: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.PORTUGAL],\n    hidden: [COUNTRIES.PORTUGAL.attractions.ZOOMARINE],\n    dates: [new Date(\"2003-07-31\"), new Date(\"2003-08-14\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2004: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.USA],\n    subtitle: [\n      COUNTRIES.USA.cities.NEW_YORK_CITY,\n      COUNTRIES.CANADA.cities.NIAGARA_FALLS,\n      COUNTRIES.USA.cities.BOSTON_MASSACHUSETTS,\n      COUNTRIES.USA.cities.SPRINGFIELD_MASSACHUSETTS,\n      COUNTRIES.USA.regions.CAPE_COD,\n      COUNTRIES.USA.islands.MARTHAS_VINEYARD\n    ],\n    hidden: [\n      COUNTRIES.USA,\n      COUNTRIES.USA.attractions.CENTRAL_PARK,\n      COUNTRIES.USA.attractions.TIMES_SQUARE,\n      COUNTRIES.USA.attractions.BROOKLYN_BRIDGE,\n      COUNTRIES.USA.attractions.WORLD_TRADE_CENTER,\n      COUNTRIES.CANADA,\n      COUNTRIES.CANADA.attractions.NIAGARA_FALLS,\n      COUNTRIES.USA.attractions.SIX_FLAGS_NEW_ENGLAND\n    ],\n    dates: [new Date(\"2004-07-30\"), new Date(\"2004-08-17\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON, FRIENDS.DAD]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2005: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.SPAIN.attractions.PORTAVENTURA],\n    subtitle: [COUNTRIES.SPAIN],\n    dates: [new Date(\"2005-07-26\"), new Date(\"2005-08-02\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA_CODRINGTON]\n  },\n  {\n    title: [COUNTRIES.GREECE.regions.HALKIDIKI],\n    subtitle: [COUNTRIES.GREECE],\n    dates: [new Date(\"2005-08-18\"), new Date(\"2005-08-23\")],\n    company: [\n      FRIENDS.EMMA_CODRINGTON,\n      FRIENDS.LOUISE_BLACKBURN,\n      FRIENDS.MEGAN_BLACKBURN,\n      FRIENDS.MUM,\n      FRIENDS.CAMERON_BLACKBURN\n    ]\n  },\n  {\n    title: [COUNTRIES.UK.attractions.LAKE_DISTRICT],\n    notAbroad: true,\n    subtitle: [COUNTRIES.UK],\n    dates: [new Date(\"2005-10-22\"), new Date(\"2005-10-24\")],\n    company: [FRIENDS.EMMA_CODRINGTON, FRIENDS.MUM]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2006: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.USA.states.FLORIDA],\n    subtitle: [COUNTRIES.USA],\n    hidden: [\n      COUNTRIES.USA.attractions.BUSCH_GARDENS_TAMPA,\n      COUNTRIES.USA.attractions.VENICE_BEACH,\n      COUNTRIES.USA.attractions.UNIVERSALS_ISLANDS_OF_ADVENTURE,\n      COUNTRIES.USA.attractions.SEAWORLD_ORLANDO,\n      COUNTRIES.USA.attractions.DISNEY_MGM_STUDIOS,\n      COUNTRIES.USA.attractions.WET_N_WILD_ORLANDO\n    ],\n    dates: [new Date(\"2006-07-25\"), new Date(\"2006-08-05\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA_CODRINGTON]\n  },\n  {\n    title: [COUNTRIES.ITALY.towns.SORRENTO, COUNTRIES.ITALY.cities.POMPEII],\n    subtitle: [COUNTRIES.ITALY],\n    hidden: [\n      COUNTRIES.ITALY.attractions.VESUVIUS,\n      COUNTRIES.ITALY.cities.NAPLES\n    ],\n    dates: [new Date(\"2006-08-18\"), new Date(\"2006-08-25\")],\n    company: [\n      FRIENDS.MUM,\n      FRIENDS.EMMA_CODRINGTON,\n      FRIENDS.LOUISE_BLACKBURN,\n      FRIENDS.MEGAN_BLACKBURN,\n      FRIENDS.CAMERON_BLACKBURN\n    ]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2007: Array<ITravelCard> = [\n  {\n    title: [\n      COUNTRIES.USA.cities.SAN_FRANCISCO,\n      COUNTRIES.USA.cities.LOS_ANGELES\n    ],\n    subtitle: [COUNTRIES.USA],\n    hidden: [\n      COUNTRIES.USA.attractions.GOLDEN_GATE_BRIDGE,\n      COUNTRIES.USA.attractions.FISHERMANS_WHARF,\n      COUNTRIES.USA.attractions.ALCATRAZ_PRISON,\n      COUNTRIES.USA.attractions.KNOTTS_BERRY_FARM,\n      COUNTRIES.USA.attractions.HOLLYWOOD_WALK_OF_FAME,\n      COUNTRIES.USA.islands.ALCATRAZ,\n      COUNTRIES.USA.attractions.DISNEYLAND_CALIFORNIA_ADVENTURE\n    ],\n    dates: [new Date(\"2007-07-24\"), new Date(\"2007-08-05\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA_CODRINGTON]\n  },\n  {\n    title: [COUNTRIES.UK.regions.CORNWALL],\n    notAbroad: true,\n    subtitle: [COUNTRIES.UK],\n    dates: [new Date(\"2007-08-11\"), new Date(\"2007-08-18\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2008: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.ITALY.cities.ROME, COUNTRIES.ITALY.cities.VATICAN],\n    subtitle: [COUNTRIES.ITALY],\n    hidden: [\n      COUNTRIES.ITALY.attractions.COLOSSEUM,\n      COUNTRIES.ITALY.attractions.TREVI_FOUNTAIN\n    ],\n    dates: [new Date(\"2008-02-08\"), new Date(\"2008-02-10\")],\n    company: [FRIENDS.EMMA_CODRINGTON, FRIENDS.DAD]\n  },\n  {\n    title: [COUNTRIES.FRANCE.cities.PARIS],\n    subtitle: [COUNTRIES.FRANCE],\n    hidden: [\n      COUNTRIES.FRANCE.attractions.AIR_SPACE_MUSEUM,\n      COUNTRIES.FRANCE.attractions.ARC_DE_TRIOMPHE,\n      COUNTRIES.FRANCE.attractions.EIFFEL_TOWER,\n      COUNTRIES.FRANCE.attractions.LOUVRE,\n      COUNTRIES.FRANCE.attractions.SCIENCE_MUSEUM,\n      COUNTRIES.FRANCE.attractions.SACRE_COEUR,\n      COUNTRIES.FRANCE.attractions.PARC_ASTERIX,\n      COUNTRIES.FRANCE.attractions.AIR_SPACE_MUSEUM\n    ],\n    dates: [new Date(\"2008-04-15\"), new Date(\"2008-04-19\")],\n    company: [\n      FRIENDS.CFS,\n      FRIENDS.BLAINE_PEARSON,\n      FRIENDS.ELLIE_SPANOVIC,\n      FRIENDS.NAV_BHOGAL,\n      FRIENDS.ANNIE_BUTCHER,\n      FRIENDS.JUNAID_KHAN,\n      FRIENDS.GEMMA_GILDERTHORP,\n      FRIENDS.SARAH_WHITAKER\n    ]\n  },\n  {\n    title: [COUNTRIES.USA.cities.WASHINGTON_DC, COUNTRIES.USA.states.VIRGINIA],\n    subtitle: [COUNTRIES.USA],\n    hidden: [\n      COUNTRIES.USA.cities.VIRGINIA_BEACH,\n      COUNTRIES.USA.attractions.WASHINGTON_MONUMENT,\n      COUNTRIES.USA.attractions.SIX_FLAGS_AMERICA,\n      COUNTRIES.USA.attractions.LINCOLN_MEMORIAL,\n      COUNTRIES.USA.attractions.CAPITOL_BUILDING,\n      COUNTRIES.USA.attractions.WHITE_HOUSE,\n      COUNTRIES.USA.attractions.BUSCH_GARDENS_WILLIAMSBURG\n    ],\n    dates: [new Date(\"2008-07-13\"), new Date(\"2008-07-24\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA_CODRINGTON]\n  },\n  {\n    title: [COUNTRIES.PORTUGAL.towns.VILAMOURA],\n    subtitle: [COUNTRIES.PORTUGAL],\n    dates: [new Date(\"2008-08-07\"), new Date(\"2008-08-14\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2009: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.BELGIUM.attractions.BATTLEFIELDS],\n    subtitle: [COUNTRIES.BELGIUM],\n    hidden: [COUNTRIES.BELGIUM.cities.YPRES],\n    dates: [new Date(\"2009-06-12\"), new Date(\"2009-06-15\")],\n    company: [\n      FRIENDS.CFS,\n      FRIENDS.ELLIE_SPANOVIC,\n      FRIENDS.GRACE_HULME,\n      FRIENDS.BLAINE_PEARSON,\n      FRIENDS.POOJA_DHIR,\n      FRIENDS.ELLIE_GURKIN,\n      FRIENDS.GEORGE_LITTLEHALES,\n      FRIENDS.KIERAN_SAWFORD\n    ]\n  },\n  {\n    title: [\n      COUNTRIES.USA.cities.LAS_VEGAS,\n      COUNTRIES.USA.attractions.GRAND_CANYON,\n      COUNTRIES.USA.cities.LOS_ANGELES\n    ],\n    hidden: [\n      COUNTRIES.USA.attractions.HOLLYWOOD_WALK_OF_FAME,\n      COUNTRIES.USA.attractions.SIX_FLAGS_MAGIC_MOUNTAIN,\n      COUNTRIES.USA.attractions.FARMERS_MARKET\n    ],\n    subtitle: [COUNTRIES.USA],\n    dates: [new Date(\"2009-07-21\"), new Date(\"2009-07-31\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA_CODRINGTON]\n  },\n  {\n    title: [COUNTRIES.GREECE.islands.KOS],\n    subtitle: [COUNTRIES.GREECE],\n    dates: [new Date(\"2009-08-12\"), new Date(\"2009-08-19\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2010: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.UAE.cities.DUBAI],\n    subtitle: [COUNTRIES.UAE],\n    hidden: [\n      COUNTRIES.UAE.attractions.AQUAVENTURE,\n      COUNTRIES.UAE.attractions.BURJ_KHALIFA\n    ],\n    dates: [new Date(\"2010-07-26\"), new Date(\"2010-08-03\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA_CODRINGTON]\n  },\n  {\n    title: [COUNTRIES.PORTUGAL.towns.FERRAGUDO],\n    subtitle: [COUNTRIES.PORTUGAL],\n    dates: [new Date(\"2010-08-13\"), new Date(\"2010-08-18\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON],\n    hidden: [COUNTRIES.PORTUGAL.cities.PORTIMAO]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2011: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.UK.regions.CORNWALL],\n    notAbroad: true,\n    subtitle: [COUNTRIES.UK],\n    dates: [new Date(\"2011-07-01\"), new Date(\"2011-07-04\")],\n    company: [\n      FRIENDS.BLAINE_PEARSON,\n      FRIENDS.GRACE_HULME,\n      FRIENDS.POOJA_DHIR,\n      FRIENDS.JESS_SMITH,\n      FRIENDS.ELLIE_GURKIN,\n      FRIENDS.CARMEN_DALGLISH,\n      FRIENDS.KYLE_HOUGH\n    ]\n  },\n  {\n    title: [COUNTRIES.USA.regions.FLORIDA_KEYS],\n    subtitle: [COUNTRIES.USA.regions.ISLAMORADA, COUNTRIES.USA.cities.KEY_WEST],\n    dates: [new Date(\"2011-08-02\"), new Date(\"2011-08-10\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA_CODRINGTON],\n    hidden: [COUNTRIES.USA]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2012: Array<ITravelCard> = [\n  {\n    title: [\n      COUNTRIES.EGYPT.cities.SHARM_EL_SHEIKH,\n      COUNTRIES.EGYPT.cities.CAIRO\n    ],\n    subtitle: [COUNTRIES.EGYPT],\n    hidden: [COUNTRIES.EGYPT.attractions.GIZA_PYRAMIDS_SPHINX],\n    dates: [new Date(\"2012-07-22\"), new Date(\"2012-07-29\")],\n    company: [FRIENDS.DAD]\n  },\n  {\n    title: [COUNTRIES.ITALY.towns.JESOLO, COUNTRIES.ITALY.cities.VENICE],\n    subtitle: [COUNTRIES.ITALY],\n    dates: [new Date(\"2012-08-20\"), new Date(\"2012-08-26\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2013: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.CUBA],\n    subtitle: [COUNTRIES.CUBA.cities.HAVANA, COUNTRIES.CUBA.towns.VARADERO],\n    dates: [new Date(\"2013-08-16\"), new Date(\"2013-08-26\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA_CODRINGTON]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2014: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.BARBADOS],\n    dates: [new Date(\"2014-06-16\"), new Date(\"2014-06-24\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA_CODRINGTON],\n    hidden: [COUNTRIES.BARBADOS.attractions.HARRISONS_CAVE]\n  },\n  {\n    title: [COUNTRIES.THAILAND, COUNTRIES.LAOS],\n    subtitle: [\n      COUNTRIES.THAILAND.cities.BANGKOK,\n      COUNTRIES.THAILAND.islands.KOH_PHANGAN,\n      COUNTRIES.THAILAND.islands.KOH_TAO,\n      COUNTRIES.THAILAND.islands.KOH_PHI_PHI,\n      COUNTRIES.THAILAND.cities.CHIANG_MAI,\n      COUNTRIES.THAILAND.towns.PAI,\n      COUNTRIES.LAOS.cities.LUANG_PRABANG,\n      COUNTRIES.LAOS.cities.VIENTIANE\n    ],\n    hidden: [\n      COUNTRIES.THAILAND.attractions.SKY_BAR,\n      COUNTRIES.THAILAND.attractions.GRAND_PALACE,\n      COUNTRIES.THAILAND.attractions.TIGER_KINGDOM,\n      COUNTRIES.THAILAND.attractions.WHITE_TEMPLE,\n      COUNTRIES.LAOS.attractions.BUDDHA_PARK,\n      COUNTRIES.LAOS.attractions.ELEPHANT_VILLAGE,\n      COUNTRIES.THAILAND.attractions.MAYA_BAY,\n      COUNTRIES.THAILAND.towns.KRABI,\n      COUNTRIES.THAILAND.attractions.PAI_CANYON,\n      COUNTRIES.THAILAND.cities.CHIANG_RAI,\n      COUNTRIES.LAOS.attractions.KUANG_SI_FALLS\n    ],\n    dates: [new Date(\"2014-07-07\"), new Date(\"2014-08-04\")],\n    company: [FRIENDS.TONYA_FRANCE]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2015: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.FRANCE.cities.PARIS],\n    subtitle: [COUNTRIES.FRANCE],\n    hidden: [\n      COUNTRIES.FRANCE.attractions.SACRE_COEUR,\n      COUNTRIES.FRANCE.attractions.LOUVRE,\n      COUNTRIES.FRANCE.attractions.ARC_DE_TRIOMPHE,\n      COUNTRIES.FRANCE.attractions.NOTRE_DAME,\n      COUNTRIES.FRANCE.attractions.EIFFEL_TOWER,\n      COUNTRIES.FRANCE.attractions.NOTRE_DAME\n    ],\n    dates: [new Date(\"2015-03-21\"), new Date(\"2015-03-24\")],\n    company: [\n      FRIENDS.POOJA_DHIR,\n      FRIENDS.SONYA_PARDI,\n      FRIENDS.CARMEN_DALGLISH,\n      FRIENDS.TONYA_FRANCE,\n      FRIENDS.GRACE_HULME,\n      FRIENDS.ELLIE_GURKIN\n    ]\n  },\n  {\n    title: [COUNTRIES.UGANDA],\n    subtitle: [COUNTRIES.UGANDA.cities.JINJA],\n    hidden: [\n      COUNTRIES.UGANDA.attractions.NILE_SOURCE,\n      COUNTRIES.UGANDA.attractions.RAFTING_NALUBALE\n    ],\n    dates: [new Date(\"2015-08-04\"), new Date(\"2015-09-05\")],\n    company: [\n      FRIENDS.AMY_CALCUTT,\n      FRIENDS.HEATHER_CHILES,\n      FRIENDS.OSCAR_MURRAY,\n      FRIENDS.LEAH_SLATER_RADWAY,\n      FRIENDS.ELINORE_GILLESPIE,\n      FRIENDS.ELISE_MORLEY,\n      FRIENDS.SARAH_WALKER,\n      FRIENDS.HEATHER_CHILES,\n      FRIENDS.LEAH_SLATER_RADWAY,\n      FRIENDS.ROB_GALL,\n      FRIENDS.KATE_BOWMAR,\n      FRIENDS.COURTNEY_LAWSON\n    ]\n  },\n  {\n    title: [{ name: \"interrailing\" }],\n    subtitle: [\n      COUNTRIES.GERMANY.cities.BERLIN,\n      COUNTRIES.CZECH_REPUBLIC.cities.PRAGUE,\n      COUNTRIES.POLAND.cities.KRAKOW,\n      COUNTRIES.HUNGARY.cities.BUDAPEST\n    ],\n    hidden: [\n      COUNTRIES.GERMANY,\n      COUNTRIES.GERMANY.attractions.BERLIN_WALL,\n      COUNTRIES.GERMANY.attractions.BRANDENBURG_GATE,\n      COUNTRIES.GERMANY.attractions.EAST_SIDE_GALLERY,\n      COUNTRIES.GERMANY.attractions.HOLOCAUST_MEMORIAL,\n      COUNTRIES.GERMANY.attractions.REICHSTAG,\n      COUNTRIES.CZECH_REPUBLIC,\n      COUNTRIES.CZECH_REPUBLIC.attractions.JOHN_LENNON_WALL,\n      COUNTRIES.CZECH_REPUBLIC.attractions.VYSEHRAD,\n      COUNTRIES.POLAND,\n      COUNTRIES.POLAND.towns.WIELICZKA,\n      COUNTRIES.POLAND.attractions.WIELICZKA_SALT_MINE,\n      COUNTRIES.POLAND.attractions.AUSCHWITZ_BIRKENAU,\n      COUNTRIES.HUNGARY,\n      COUNTRIES.HUNGARY.attractions.CITADELLA,\n      COUNTRIES.HUNGARY.attractions.PARLIAMENT_BUILDING,\n      COUNTRIES.HUNGARY.attractions.THERMAL_BATH_SZECHENYI\n    ],\n    dates: [new Date(\"2015-09-10\"), new Date(\"2015-09-24\")],\n    company: [FRIENDS.SIAN_RODWAY_SMITH]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2016: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.IRELAND.cities.DUBLIN],\n    subtitle: [COUNTRIES.IRELAND],\n    dates: [new Date(\"2016-02-05\"), new Date(\"2016-02-07\")],\n    company: [FRIENDS.SIAN_RODWAY_SMITH],\n    hidden: [\n      COUNTRIES.IRELAND.attractions.DUBLIN_PRISON,\n      COUNTRIES.IRELAND.attractions.ST_STEPHENS_GREEN_PARK,\n      COUNTRIES.IRELAND.attractions.GUINNESS_STOREHOUSE\n    ]\n  },\n  {\n    title: [COUNTRIES.PORTUGAL.towns.TAVIRA],\n    subtitle: [COUNTRIES.PORTUGAL],\n    dates: [new Date(\"2016-06-09\"), new Date(\"2016-06-16\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA_CODRINGTON]\n  },\n  {\n    title: [COUNTRIES.ECUADOR, COUNTRIES.PERU],\n    subtitle: [\n      COUNTRIES.ECUADOR.cities.QUITO,\n      COUNTRIES.ECUADOR.cities.OTAVALO,\n      COUNTRIES.ECUADOR.attractions.COTOPAXI,\n      COUNTRIES.ECUADOR.cities.BANOS,\n      COUNTRIES.ECUADOR.islands.GALAPAGOS,\n      COUNTRIES.PERU.towns.MANCORA,\n      COUNTRIES.PERU.cities.HUARAZ,\n      COUNTRIES.PERU.cities.LIMA,\n      COUNTRIES.PERU.towns.PARACAS,\n      COUNTRIES.PERU.villages.HUACACHINA,\n      COUNTRIES.PERU.cities.AREQUIPA,\n      COUNTRIES.PERU.attractions.COLCA_CANYON,\n      COUNTRIES.PERU.cities.CUSCO,\n      COUNTRIES.PERU.attractions.MANU,\n      COUNTRIES.PERU.attractions.RAINBOW_MOUNTAIN,\n      COUNTRIES.PERU.attractions.MACHU_PICCHU\n    ],\n    hidden: [\n      COUNTRIES.ECUADOR.attractions.EQUATOR_MONUMENT,\n      COUNTRIES.ECUADOR.attractions.OTAVALO_MARKET,\n      COUNTRIES.ECUADOR.attractions.PAILON_DEL_DIABLO,\n      COUNTRIES.ECUADOR.cities.GUAYAQUIL,\n      COUNTRIES.ECUADOR.attractions.TORTOISE_PARK,\n      COUNTRIES.PERU.attractions.HUASCARAN_PARK,\n      COUNTRIES.PERU.attractions.LAGUNA_69,\n      COUNTRIES.PERU.attractions.HUACACHINA,\n      COUNTRIES.PERU.attractions.JUNGLE_ZIPLINE\n    ],\n    dates: [new Date(\"2016-10-03\"), new Date(\"2016-11-10\")],\n    company: [FRIENDS.SARAH_WHITAKER, FRIENDS.SIAN_RODWAY_SMITH]\n  },\n  {\n    title: [\n      COUNTRIES.BRAZIL.cities.RIO_DE_JANEIRO,\n      COUNTRIES.BRAZIL.islands.ILHA_GRANDE\n    ],\n    hidden: [\n      COUNTRIES.BRAZIL.attractions.HANG_GLIDING,\n      COUNTRIES.BRAZIL.attractions.MODERN_ART_MUSEUM_RIO,\n      COUNTRIES.BRAZIL.attractions.COPACABANA_BEACH,\n      COUNTRIES.BRAZIL.attractions.ROCINHA_FAVELA,\n      COUNTRIES.BRAZIL.attractions.PICO_DO_PAPAGAIO,\n      COUNTRIES.BRAZIL.attractions.SELARON_STEPS,\n      COUNTRIES.BRAZIL.attractions.CHRIST_THE_REDEEMER\n    ],\n    subtitle: [COUNTRIES.BRAZIL],\n    dates: [new Date(\"2016-12-01\"), new Date(\"2016-12-11\")],\n    company: [FRIENDS.SIAN_RODWAY_SMITH]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2017: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.ITALY.cities.MILAN],\n    subtitle: [COUNTRIES.ITALY],\n    dates: [new Date(\"2017-05-12\"), new Date(\"2017-05-14\")],\n    company: [\n      FRIENDS.AISHA_SAEED,\n      FRIENDS.JOE_EDWARDS,\n      FRIENDS.JAMIE_HALKET,\n      FRIENDS.PATRICIA_DIACONESCU,\n      FRIENDS.JAZZ_THIND,\n      FRIENDS.JHC\n    ],\n    hidden: [\n      COUNTRIES.ITALY.attractions.MILAN_MALL,\n      COUNTRIES.ITALY.attractions.SEMPIONE_PARK,\n      COUNTRIES.ITALY.attractions.ARCO_DELLA_PACE\n    ]\n  },\n  {\n    title: [COUNTRIES.SPAIN.cities.BARCELONA],\n    subtitle: [COUNTRIES.SPAIN],\n    dates: [new Date(\"2017-06-15\"), new Date(\"2017-06-18\")],\n    company: [\n      FRIENDS.SIAN_RODWAY_SMITH,\n      FRIENDS.LINDSEY_SKELTON,\n      FRIENDS.BETH_OAKES,\n      FRIENDS.ELLIE_FORMAN,\n      FRIENDS.HARRIET_KESTERTON\n    ],\n    hidden: [\n      COUNTRIES.SPAIN.attractions.PARK_GUELL,\n      COUNTRIES.SPAIN.attractions.CIUTADELLA_PARK\n    ]\n  },\n  {\n    title: [COUNTRIES.SPAIN.islands.TENERIFE],\n    subtitle: [COUNTRIES.SPAIN],\n    dates: [new Date(\"2017-06-15\"), new Date(\"2017-06-18\")],\n    company: [FRIENDS.LUKE_STERN],\n    hidden: [COUNTRIES.SPAIN.attractions.SIAM_PARK]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2018: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.DENMARK.cities.COPENHAGEN],\n    subtitle: [COUNTRIES.DENMARK],\n    dates: [new Date(\"2018-01-19\"), new Date(\"2018-01-22\")],\n    company: [FRIENDS.LUKE_STERN],\n    hidden: [COUNTRIES.DENMARK.attractions.LOUISIANA_ART_MUSEUM]\n  },\n  {\n    title: [COUNTRIES.CYPRUS.cities.PAPHOS],\n    subtitle: [COUNTRIES.CYPRUS],\n    dates: [new Date(\"2018-05-17\"), new Date(\"2018-05-21\")],\n    company: [FRIENDS.SIAN_RODWAY_SMITH],\n    hidden: [COUNTRIES.CYPRUS.attractions.PAPHOS_ARCHAEOLOGICAL_PARK]\n  },\n  {\n    title: [COUNTRIES.CROATIA.cities.DUBROVNIK],\n    subtitle: [COUNTRIES.CROATIA],\n    dates: [new Date(\"2018-06-02\"), new Date(\"2018-06-09\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA_CODRINGTON],\n    hidden: [\n      COUNTRIES.CROATIA.attractions.DUBROVNIK_WALLS,\n      COUNTRIES.CROATIA.attractions.DUBROVNIK_CABLE_CAR\n    ]\n  },\n  {\n    title: [COUNTRIES.NETHERLANDS.cities.GRONINGEN],\n    subtitle: [COUNTRIES.NETHERLANDS],\n    hidden: [COUNTRIES.NETHERLANDS.attractions.GRONINGEN_MUSEUM],\n    dates: [new Date(\"2018-07-14\"), new Date(\"2018-07-16\")],\n    company: [FRIENDS.CARMEN_DALGLISH]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\n\nexport const TRAVEL_2019: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.NETHERLANDS.cities.AMSTERDAM],\n    subtitle: [COUNTRIES.NETHERLANDS],\n    hidden: [\n      COUNTRIES.NETHERLANDS.attractions.SEX_MUSEUM,\n      COUNTRIES.NETHERLANDS.attractions.STEDELIJK_MUSEUM\n    ],\n    dates: [new Date(\"2019-02-01\"), new Date(\"2019-02-04\")],\n    company: [\n      FRIENDS.CAITLIN_MCCAIG,\n      FRIENDS.TONYA_FRANCE,\n      FRIENDS.RYAN_MILLS,\n      FRIENDS.TOM_CHINDA_COUTTS\n    ]\n  },\n  {\n    title: [COUNTRIES.PORTUGAL.cities.LISBON],\n    subtitle: [COUNTRIES.PORTUGAL],\n    hidden: [COUNTRIES.PORTUGAL.attractions.OCENARIO_DE_LISBOA],\n    dates: [new Date(\"2019-02-08\"), new Date(\"2019-02-10\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA_CODRINGTON]\n  },\n  {\n    title: [COUNTRIES.BELGIUM.cities.BRUGES],\n    subtitle: [COUNTRIES.BELGIUM],\n    hidden: [COUNTRIES.BELGIUM.attractions.BELFRY_OF_BRUGES],\n    dates: [new Date(\"2019-05-17\"), new Date(\"2019-05-19\")],\n    company: [FRIENDS.JAMIE_HALKET]\n  },\n  {\n    title: [COUNTRIES.ITALY.cities.CATANIA],\n    subtitle: [COUNTRIES.ITALY.regions.SICILY],\n    hidden: [COUNTRIES.ITALY, COUNTRIES.ITALY.attractions.ETNA],\n    dates: [new Date(\"2019-07-10\"), new Date(\"2019-07-15\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA_CODRINGTON]\n  },\n  {\n    title: [COUNTRIES.FRANCE.cities.NICE],\n    subtitle: [COUNTRIES.FRANCE],\n    hidden: [COUNTRIES.FRANCE.cities.MONACO],\n    dates: [new Date(\"2019-06-08\"), new Date(\"2019-06-14\")],\n    company: [FRIENDS.SIAN_RODWAY_SMITH]\n  }\n];\n","import { FRIENDS, COUNTRIES } from \"@constants\";\nimport { PHOTOS_TRAVEL } from \"resources\";\n\nexport const TRAVEL_2020: Array<ITravelCard> = [\n  {\n    title: [COUNTRIES.NORWAY.cities.OSLO],\n    subtitle: [COUNTRIES.NORWAY],\n    hidden: [\n      COUNTRIES.NORWAY.islands.HOVEDOYA,\n      COUNTRIES.NORWAY.attractions.OSLO_FJORD_SAUNA\n    ],\n    dates: [new Date(\"2020-02-27\"), new Date(\"2020-03-01\")],\n    company: [\n      FRIENDS.RYAN_MILLS,\n      FRIENDS.CAITLIN_MCCAIG,\n      FRIENDS.TOM_CHINDA_COUTTS,\n      FRIENDS.TONYA_FRANCE\n    ],\n    photos: PHOTOS_TRAVEL.OSLO\n  }\n  // {\n  //   title: [COUNTRIES.BELIZE, COUNTRIES.COSTA_RICA],\n  //   subtitle: [\n  //     COUNTRIES.BELIZE.islands.CAYE_CAULKER,\n  //     COUNTRIES.BELIZE.attractions.BARRIER_REEF,\n  //     COUNTRIES.COSTA_RICA.attractions.CORCOVADO,\n  //     COUNTRIES.COSTA_RICA.towns.MONTEVERDE,\n  //     COUNTRIES.COSTA_RICA.towns.PUERTO_VIEJO\n  //   ],\n  //   hidden: [\n  //     COUNTRIES.BELIZE.cities.BELIZE_CITY,\n  //     COUNTRIES.BELIZE.islands.AMBERGRIS_CAYE,\n  //     COUNTRIES.COSTA_RICA.cities.SAN_JOSE,\n  //     COUNTRIES.COSTA_RICA.attractions.JAGUAR_RESCUE_CENTER\n  //   ],\n  //   dates: [new Date(\"2020-05-14\"), new Date(\"2020-06-01\")],\n  //   company: FRIENDS.SIAN_RODWAY_SMITH\n  // },\n  // {\n  //   title: COUNTRIES.SPAIN.cities.MADRID,\n  //   subtitle: COUNTRIES.SPAIN,\n  //   hidden: [COUNTRIES.SPAIN.attractions.PARQUE_WARNER],\n  //   dates: [new Date(\"2020-07-07\"), new Date(\"2020-07-10\")],\n  //   company: FRIENDS.DAN_SPARROW\n  // }\n];\n","import { TRAVEL_1997 } from \"./travel-1997\";\nimport { TRAVEL_1998 } from \"./travel-1998\";\nimport { TRAVEL_1999 } from \"./travel-1999\";\nimport { TRAVEL_2000 } from \"./travel-2000\";\nimport { TRAVEL_2001 } from \"./travel-2001\";\nimport { TRAVEL_2002 } from \"./travel-2002\";\nimport { TRAVEL_2003 } from \"./travel-2003\";\nimport { TRAVEL_2004 } from \"./travel-2004\";\nimport { TRAVEL_2005 } from \"./travel-2005\";\nimport { TRAVEL_2006 } from \"./travel-2006\";\nimport { TRAVEL_2007 } from \"./travel-2007\";\nimport { TRAVEL_2008 } from \"./travel-2008\";\nimport { TRAVEL_2009 } from \"./travel-2009\";\nimport { TRAVEL_2010 } from \"./travel-2010\";\nimport { TRAVEL_2011 } from \"./travel-2011\";\nimport { TRAVEL_2012 } from \"./travel-2012\";\nimport { TRAVEL_2013 } from \"./travel-2013\";\nimport { TRAVEL_2014 } from \"./travel-2014\";\nimport { TRAVEL_2015 } from \"./travel-2015\";\nimport { TRAVEL_2016 } from \"./travel-2016\";\nimport { TRAVEL_2017 } from \"./travel-2017\";\nimport { TRAVEL_2018 } from \"./travel-2018\";\nimport { TRAVEL_2019 } from \"./travel-2019\";\nimport { TRAVEL_2020 } from \"./travel-2020\";\n\nconst ALL: Array<ITravelCard> = [\n  ...TRAVEL_1997,\n  ...TRAVEL_1998,\n  ...TRAVEL_1999,\n  ...TRAVEL_2000,\n  ...TRAVEL_2001,\n  ...TRAVEL_2002,\n  ...TRAVEL_2003,\n  ...TRAVEL_2004,\n  ...TRAVEL_2005,\n  ...TRAVEL_2006,\n  ...TRAVEL_2007,\n  ...TRAVEL_2008,\n  ...TRAVEL_2009,\n  ...TRAVEL_2010,\n  ...TRAVEL_2011,\n  ...TRAVEL_2012,\n  ...TRAVEL_2013,\n  ...TRAVEL_2014,\n  ...TRAVEL_2015,\n  ...TRAVEL_2016,\n  ...TRAVEL_2017,\n  ...TRAVEL_2018,\n  ...TRAVEL_2019,\n  ...TRAVEL_2020\n];\n\nconst SPLIT_BY_YEAR: Array<Array<ITravelCard>> = [\n  TRAVEL_1997,\n  TRAVEL_1998,\n  TRAVEL_1999,\n  TRAVEL_2000,\n  TRAVEL_2001,\n  TRAVEL_2002,\n  TRAVEL_2003,\n  TRAVEL_2004,\n  TRAVEL_2005,\n  TRAVEL_2006,\n  TRAVEL_2007,\n  TRAVEL_2008,\n  TRAVEL_2009,\n  TRAVEL_2010,\n  TRAVEL_2011,\n  TRAVEL_2012,\n  TRAVEL_2013,\n  TRAVEL_2014,\n  TRAVEL_2015,\n  TRAVEL_2016,\n  TRAVEL_2017,\n  TRAVEL_2018,\n  TRAVEL_2019,\n  TRAVEL_2020\n];\n\nexport const DATA = { ALL, SPLIT_BY_YEAR };\n","import { ATTRACTIONS } from \"@constants\";\nimport { getItemCounts } from \"utils\";\n\nimport { DATA } from \"../data\";\n\nconst attractions: Array<IAttraction> = Object.values(ATTRACTIONS);\n\nconst themeParks: Array<IAttraction> = attractions.filter(\n  ({ themePark }: IAttraction): boolean => !!themePark\n);\n\nconst highlights: Array<IAttraction> = attractions.filter(\n  ({ highlight }: IAttraction): boolean => !!highlight\n);\n\nexport const HIGHLIGHTS_LIST_ITEMS: Array<ICountedListItem> = highlights.map(\n  (highlight: IAttraction): ICountedListItem => ({\n    text: highlight.name,\n    ...getItemCounts({\n      item: { attraction: highlight },\n      data: { travelCards: DATA.ALL }\n    })\n  })\n);\n\nexport const THEME_PARKS_LIST_ITEMS: Array<ICountedListItem> = themeParks.map(\n  (themePark: IAttraction): ICountedListItem => ({\n    text: themePark.name,\n    ...getItemCounts({\n      item: { attraction: themePark },\n      data: { travelCards: DATA.ALL }\n    })\n  })\n);\n","import { CITIES } from \"@constants\";\nimport { getItemCounts } from \"utils\";\n\nimport { DATA } from \"../data\";\n\nconst cities: Array<ICity> = Object.values(CITIES);\n\nexport const citiesCounted: Array<ICityCounted> = cities.map(\n  (city: ICity): ICityCounted => ({\n    ...city,\n    ...getItemCounts({ item: { city }, data: { travelCards: DATA.ALL } })\n  })\n);\n\nexport const CITIES_LIST_ITEMS: Array<ICountedListItem> = citiesCounted.map(\n  ({\n    name,\n    capital,\n    pastCount,\n    insignificant,\n    futureCount\n  }: ICityCounted): ICountedListItem => ({\n    text: name,\n    star: capital,\n    countInfoIrrelevant: insignificant,\n    pastCount,\n    futureCount\n  })\n);\n","import { COUNTRIES } from \"@constants\";\nimport { getItemCounts } from \"utils\";\n\nimport { DATA } from \"../data\";\n\nexport const countries: Array<ICountryTemplate> = Object.values(COUNTRIES);\n\nexport const countriesCounted: Array<ICountryCounted> = countries.map(\n  (country: ICountryTemplate): ICountryCounted => ({\n    ...country,\n    ...getItemCounts({ item: { country }, data: { travelCards: DATA.ALL } })\n  })\n);\n\nexport const COUNTRIES_LIST_ITEMS: Array<ICountedListItem> = countriesCounted.map(\n  ({ name, pastCount, futureCount }: ICountryCounted): ICountedListItem => ({\n    text: name,\n    pastCount,\n    futureCount\n  })\n);\n","import { citiesCounted } from \"./cities\";\nimport { countriesCounted } from \"./countries\";\n\nconst countriesNotVisited: Array<ICountryCounted> = countriesCounted.filter(\n  ({ pastCount, futureCount }: ICountryCounted): boolean =>\n    pastCount === 0 && futureCount === 0\n);\n\nconst citiesNotVisited: Array<ICityCounted> = citiesCounted.filter(\n  ({ pastCount, futureCount }: ICityCounted): boolean =>\n    pastCount === 0 && futureCount === 0\n);\n\nconst countriesForBucketList: Array<ICountryCounted> = countriesNotVisited.filter(\n  ({ excludeFromBucketList }: ICountryCounted): boolean =>\n    !excludeFromBucketList\n);\n\nconst citiesForBucketList: Array<ICityCounted> = citiesNotVisited.filter(\n  ({ excludeFromBucketList, insignificant }: ICityCounted): boolean =>\n    !excludeFromBucketList && !insignificant\n);\n\nconst BUCKET_LIST_COUNTRIES: Array<ICountedListItem> = countriesForBucketList.map(\n  ({ name, pastCount, futureCount }: ICountryCounted): ICountedListItem => ({\n    text: name,\n    pastCount,\n    futureCount,\n    countInfoIrrelevant: true\n  })\n);\n\nconst BUCKET_LIST_CITIES: Array<ICountedListItem> = citiesForBucketList.map(\n  ({\n    name,\n    capital,\n    pastCount,\n    futureCount\n  }: ICityCounted): ICountedListItem => ({\n    text: name,\n    star: capital,\n    pastCount,\n    futureCount,\n    countInfoIrrelevant: true\n  })\n);\n\nexport const BUCKET_LIST_ITEMS: Array<ICountedListItem> = [\n  ...BUCKET_LIST_COUNTRIES,\n  ...BUCKET_LIST_CITIES\n];\n","import { FRIENDS } from \"@constants\";\nimport { getItemCounts } from \"utils\";\n\nimport { DATA } from \"../data\";\n\nexport const FRIENDS_LIST_ITEMS: Array<ICountedListItem> = Object.values(\n  FRIENDS\n)\n  .filter(({ travel }: IFriend): boolean => !!travel)\n  .map(\n    (friend: IFriend): ICountedListItem => ({\n      text: friend.name,\n      ...getItemCounts({ item: { friend }, data: { travelCards: DATA.ALL } })\n    })\n  );\n","import { ISLANDS } from \"@constants\";\nimport { getItemCounts } from \"utils\";\n\nimport { DATA } from \"../data\";\nimport { countries } from \"./countries\";\n\nconst islandsThatAreCountries: Array<ICountryTemplate> = countries.filter(\n  ({ island }: ICountryTemplate): boolean => !!island\n);\n\nconst islandsThatAreNotCountries: Array<IIsland> = Object.values(ISLANDS);\n\nconst islandsAll: Array<IIsland> = [\n  ...islandsThatAreCountries,\n  ...islandsThatAreNotCountries\n];\n\nexport const ISLANDS_LIST_ITEMS: Array<ICountedListItem> = islandsAll.map(\n  (island: IIsland): ICountedListItem => ({\n    text: island.name,\n    countInfoIrrelevant: island.insignificant,\n    ...getItemCounts({ item: { island }, data: { travelCards: DATA.ALL } })\n  })\n);\n","import { isInFuture, formatCountedListItems } from \"utils\";\n\nimport { DATA } from \"../data\";\n\nimport { HIGHLIGHTS_LIST_ITEMS, THEME_PARKS_LIST_ITEMS } from \"./attractions\";\nimport { BUCKET_LIST_ITEMS } from \"./bucket-list\";\nimport { CITIES_LIST_ITEMS } from \"./cities\";\nimport { COUNTRIES_LIST_ITEMS } from \"./countries\";\nimport { FRIENDS_LIST_ITEMS } from \"./friends\";\nimport { ISLANDS_LIST_ITEMS } from \"./islands\";\n\nconst UP_NEXT: Array<ITravelCard> = DATA.ALL.filter(\n  ({ dates }: ITravelCard): boolean => isInFuture(dates[0])\n);\n\nconst totalTripsAbroadEver: number = DATA.ALL.filter(item => !item.notAbroad)\n  .length;\nconst tripsInTheFuture: number = UP_NEXT.length;\nconst totalAbroadTripsSoFar: number = totalTripsAbroadEver - tripsInTheFuture;\n\ninterface ITravelFactory {\n  BUCKET_LIST: Array<ICountedListItem>;\n  CITIES: Array<ICountedListItem>;\n  COUNTRIES: Array<ICountedListItem>;\n  FRIENDS: Array<ICountedListItem>;\n  HIGHLIGHTS: Array<ICountedListItem>;\n  ISLANDS: Array<ICountedListItem>;\n  THEME_PARKS: Array<ICountedListItem>;\n  UP_NEXT: Array<ITravelCard>;\n  pageCount: number;\n}\n\nexport const FACTORY: ITravelFactory = {\n  BUCKET_LIST: formatCountedListItems({ countedListItems: BUCKET_LIST_ITEMS }),\n  CITIES: formatCountedListItems({ countedListItems: CITIES_LIST_ITEMS }),\n  COUNTRIES: formatCountedListItems({ countedListItems: COUNTRIES_LIST_ITEMS }),\n  FRIENDS: formatCountedListItems({\n    countedListItems: FRIENDS_LIST_ITEMS,\n    isLeaderboard: true\n  }),\n  HIGHLIGHTS: formatCountedListItems({\n    countedListItems: HIGHLIGHTS_LIST_ITEMS\n  }),\n  ISLANDS: formatCountedListItems({ countedListItems: ISLANDS_LIST_ITEMS }),\n  THEME_PARKS: formatCountedListItems({\n    countedListItems: THEME_PARKS_LIST_ITEMS\n  }),\n  UP_NEXT,\n\n  pageCount: totalAbroadTripsSoFar\n};\n","import { PAGE_SECTION_TITLES } from \"@constants\";\nimport { SVG_ICON_STRINGS } from \"resources\";\nimport { isInFuture } from \"utils\";\n\nimport { DATA } from \"./data\";\nimport { FACTORY } from \"./factory\";\n\nconst SECTION_BUCKET_LIST_TRAVEL: IPageSection = {\n  title: PAGE_SECTION_TITLES.BUCKET_LIST,\n  icon: SVG_ICON_STRINGS.STARS,\n  data: { countedListItems: FACTORY.BUCKET_LIST }\n};\n\nconst SECTION_CITIES: IPageSection = {\n  title: \"Cities\",\n  icon: SVG_ICON_STRINGS.CITY,\n  data: { countedListItems: FACTORY.CITIES },\n  count: FACTORY.CITIES.length,\n  starCount: FACTORY.CITIES.filter(city => city.star).length\n};\n\nconst SECTION_COUNTRIES: IPageSection = {\n  title: \"Countries\",\n  icon: SVG_ICON_STRINGS.FLAG,\n  data: { countedListItems: FACTORY.COUNTRIES },\n  count: FACTORY.COUNTRIES.length\n};\n\nconst SECTION_FRIENDS_TRAVEL: IPageSection = {\n  title: PAGE_SECTION_TITLES.FRIENDS,\n  icon: SVG_ICON_STRINGS.PEOPLE,\n  data: { countedListItems: FACTORY.FRIENDS }\n};\n\nconst SECTION_HIGHLIGHTS: IPageSection = {\n  title: \"Highlights\",\n  icon: SVG_ICON_STRINGS.MAP_PIN,\n  data: { countedListItems: FACTORY.HIGHLIGHTS }\n};\n\nconst SECTION_ISLANDS: IPageSection = {\n  title: \"Islands\",\n  icon: SVG_ICON_STRINGS.PALM_TREE,\n  data: { countedListItems: FACTORY.ISLANDS }\n};\n\nconst SECTION_THEME_PARKS: IPageSection = {\n  title: \"Theme Parks\",\n  icon: SVG_ICON_STRINGS.ROLLER_COASTER,\n  hide: true,\n  data: { countedListItems: FACTORY.THEME_PARKS },\n  count: FACTORY.THEME_PARKS.length\n};\n\nconst SECTION_UP_NEXT_TRAVEL: IPageSection = {\n  title: PAGE_SECTION_TITLES.UP_NEXT,\n  icon: SVG_ICON_STRINGS.NOTEPAD,\n  data: { travelCards: FACTORY.UP_NEXT }\n};\n\nconst SECTIONS_YEARS: Array<IPageSection> = DATA.SPLIT_BY_YEAR.map(\n  (year: Array<ITravelCard>): IPageSection => ({\n    title: year[0].dates[0].getFullYear().toString(),\n    count: year.length,\n    data: {\n      travelCards: year.filter(\n        ({ dates }: ITravelCard) => !isInFuture(dates[0])\n      )\n    }\n  })\n);\n\nexport const sections: Array<IPageSection> = [\n  SECTION_BUCKET_LIST_TRAVEL,\n  SECTION_CITIES,\n  SECTION_COUNTRIES,\n  SECTION_FRIENDS_TRAVEL,\n  SECTION_HIGHLIGHTS,\n  SECTION_ISLANDS,\n  SECTION_THEME_PARKS,\n  SECTION_UP_NEXT_TRAVEL,\n  ...SECTIONS_YEARS\n].filter((pageSection: IPageSection) => !pageSection.hide);\n","import { SvgTravel } from \"resources\";\nimport { PAGE_COLORS } from \"styles\";\n\nimport { FACTORY } from \"./factory\";\nimport { sections } from \"./sections\";\n\nexport const PAGE_TRAVEL: IPage = {\n  title: \"Travel\",\n  path: \"/travel\",\n  SvgIcon: SvgTravel,\n  count: FACTORY.pageCount,\n  sections,\n  color: PAGE_COLORS.TRAVEL\n};\n","import { MUSICIANS } from \"@constants\";\n\nconst vinyls: Array<IVinylCard | undefined> = Object.values(MUSICIANS)\n  .filter(({ albums }: IMusician): boolean => !!albums)\n  .map(\n    ({ name, albums }: IMusician): Array<IVinylCard> | undefined =>\n      albums &&\n      albums.map((album: IAlbum): IVinylCard => ({ artist: name, ...album }))\n  )\n  .flat()\n  .sort((a: IVinylCard | undefined, b: IVinylCard | undefined): number =>\n    a && b\n      ? a.year < b.year\n        ? 1\n        : a.year === b.year\n        ? a.artist < b.artist\n          ? -1\n          : 1\n        : -1\n      : 0\n  );\n\nconst WISH_LIST = vinyls.filter(\n  (vinyl: IVinylCard | undefined) => vinyl && !vinyl.purchased\n);\n\nconst COLLECTION = vinyls.filter(\n  (vinyl: IVinylCard | undefined) => vinyl && vinyl.purchased\n);\n\nexport const FACTORY = { WISH_LIST, COLLECTION };\n","import { PAGE_GIGS as GIGS } from \"./gigs\";\nimport { PAGE_RECIPES as RECIPES } from \"./recipes\";\nimport { PAGE_THEATRE as THEATRE } from \"./theatre\";\nimport { PAGE_TRAVEL as TRAVEL } from \"./travel\";\nimport { PAGE_VINYL as VINYL } from \"./vinyl\";\n\nexport const PAGES: Array<IPage> = [GIGS, RECIPES, THEATRE, TRAVEL, VINYL]\n  .filter((route: IPage) => !route.hide)\n  .sort((a: IPage, b: IPage) => (a.title > b.title ? 1 : -1));\n","import { SvgVinyl } from \"resources\";\nimport { PAGE_COLORS } from \"styles\";\n\nimport { sections } from \"./sections\";\n\nexport const PAGE_VINYL: IPage = {\n  title: \"Vinyl\",\n  path: \"/vinyl\",\n  SvgIcon: SvgVinyl,\n  sections,\n  color: PAGE_COLORS.VINYL\n};\n","import { FACTORY } from \"./factory\";\n\nconst SECTION_COLLECTION: IPageSection = {\n  title: \"collection\",\n  data: { vinylCards: FACTORY.COLLECTION },\n  count: FACTORY.COLLECTION.length,\n  onlyHeaderClickable: true,\n  autoExpandAlways: true,\n  staticIf2Columns: true\n};\n\nconst SECTION_WISHLIST: IPageSection = {\n  title: \"wish list\",\n  data: { vinylCards: FACTORY.WISH_LIST },\n  count: FACTORY.WISH_LIST.length,\n  onlyHeaderClickable: true,\n  autoExpandIf2Columns: true,\n  staticIf2Columns: true\n};\n\nexport const sections: Array<IPageSection> = [\n  SECTION_COLLECTION,\n  SECTION_WISHLIST\n];\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport { PageHeader, PageSectionsLayout, NavBar } from \"components\";\nimport { PAGES } from \"pages\";\n\nconst PageShell = styled.main(\n  ({ theme: { navBar, pageLayout } }: IThemeProp) => css`\n    padding: ${pageLayout.padding.all};\n    height: calc(100vh - ${navBar.icon.size} - 2 * ${navBar.padding.vertical});\n    overflow-y: auto;\n  `\n);\n\nexport const App: React.FC = () => (\n  <BrowserRouter>\n    <Switch>\n      {PAGES.map(({ title, path, count, sections }: IPage, index: number) => (\n        <Route key={index} path={path}>\n          <NavBar pages={PAGES} />\n\n          <PageShell data-test=\"page-content\">\n            <PageHeader titleText={title} count={count} />\n\n            <PageSectionsLayout pageSections={sections} />\n          </PageShell>\n        </Route>\n      ))}\n\n      <Redirect from=\"/\" to={PAGES[0].path} />\n    </Switch>\n  </BrowserRouter>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport { App } from \"app\";\nimport { THEME, GlobalStyle } from \"styles\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={THEME}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}