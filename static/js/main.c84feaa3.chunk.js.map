{"version":3,"sources":["resources/svg sync /^/.//.*/.svg$","resources/svg/artist.svg","resources/svg/book.svg","resources/svg/brain.svg","resources/svg/cake.svg","resources/svg/camera.svg","resources/svg/city.svg","resources/svg/cloche.svg","resources/svg/flag.svg","resources/svg/heart.svg","resources/svg/loading.svg","resources/svg/map_pin.svg","resources/svg/masks.svg","resources/svg/microphone.svg","resources/svg/notepad.svg","resources/svg/palm_tree.svg","resources/svg/peace_sign.svg","resources/svg/people.svg","resources/svg/roller_coaster.svg","resources/svg/stadium.svg","resources/svg/stars.svg","resources/svg/tent.svg","resources/svg/theatre.svg","resources/svg/toast.svg","resources/svg/town_hall.svg","resources/svg/travel.svg","resources/svg/veg_bowl.svg","resources/jpg sync /^/.//.*/.jpg$","resources/jpg/baked_beans.jpg","resources/jpg/banana_cake.jpg","resources/jpg/bolognese.jpg","resources/jpg/brownies.jpg","resources/jpg/carbonara.jpg","resources/jpg/crumble.jpg","resources/jpg/flapjacks.jpg","resources/jpg/kale_crispy.jpg","resources/jpg/lasagne.jpg","resources/jpg/mashed_potato.jpg","resources/jpg/piri_piri.jpg","resources/jpg/ratatouille.jpg","resources/jpg/rogan_josh.jpg","resources/jpg/shepherds_pie.jpg","primitives/Circle.ts","primitives/Flex.ts","primitives/Link.ts","primitives/SvgIcon.tsx","styles/colors.ts","styles/font-sizes.ts","styles/theme.ts","styles/GlobalStyle.ts","primitives/Text.ts","components/CentredOnPhone/index.ts","components/CountedListItem/index.tsx","constants/actors.ts","constants/diets.ts","constants/festivals.ts","constants/friends.ts","constants/locations.ts","constants/measurements.ts","constants/musicians.ts","constants/music-venues.ts","constants/ingredients/baking/flour.ts","constants/ingredients/baking/sugar.ts","constants/ingredients/baking/syrups.ts","constants/ingredients/baking/index.ts","constants/ingredients/carbs/pasta.ts","constants/ingredients/carbs/rice.ts","constants/ingredients/carbs/grains.ts","constants/ingredients/carbs/index.ts","constants/ingredients/carbs/bread.ts","constants/ingredients/dairy/milk.ts","constants/ingredients/dairy/index.ts","constants/ingredients/fruit/dried-fruit.ts","constants/ingredients/fruit/fresh-fruit.ts","constants/ingredients/fruit/frozen-fruit.ts","constants/ingredients/fruit/juice.ts","constants/ingredients/fruit/index.ts","constants/ingredients/herbs/dried-herbs.ts","constants/ingredients/herbs/fresh-herbs.ts","constants/ingredients/herbs/index.ts","constants/ingredients/protein/beans.ts","constants/ingredients/protein/seitan.ts","constants/ingredients/protein/index.ts","constants/ingredients/seasoning/dried-seasoning.ts","constants/ingredients/seasoning/oils.ts","constants/unicode.ts","constants/ingredients/seasoning/pastes.ts","constants/ingredients/seasoning/salt.ts","constants/ingredients/seasoning/sauces.ts","constants/ingredients/seasoning/vinegars.ts","constants/ingredients/seasoning/index.ts","constants/ingredients/nuts-seeds/nuts.ts","constants/ingredients/nuts-seeds/seeds.ts","constants/ingredients/nuts-seeds/index.ts","constants/ingredients/veg/canned-veg.ts","constants/ingredients/veg/fresh-veg.ts","constants/ingredients/veg/frozen-veg.ts","constants/ingredients/veg/index.ts","constants/ingredients/index.ts","constants/page-sections.ts","constants/plays.ts","constants/theatre-venues.ts","constants/ticket-types.ts","constants/index.ts","utils/local/numberToCurrencyString.ts","utils/local/concatenateQuantityAndMeasurement.ts","utils/local/calculateIngredientCost.ts","utils/local/convertIngredientQuantity.ts","utils/local/turnTheSuffixIntoPrefix.ts","utils/local/formatData.ts","utils/local/isInFuture.ts","utils/local/getPageSectionItemCounts.ts","utils/local/itemIsFavourited.ts","utils/global/calculateRecipeCost.ts","utils/global/generateChildItemsFromParentItems.ts","utils/global/generateIngredientListItem.ts","utils/local/convertDecimalToFraction.ts","utils/global/getServeWithListItem.ts","utils/global/generateSectionData.ts","utils/global/mapDataToEventCards.ts","utils/global/mapYearGroupsToSections.ts","utils/global/recipeMethodEntries.ts","components/EventCard/index.tsx","pages/gigs.ts","utils/global/daysToGo.ts","utils/global/getDisplayDateText.ts","utils/global/getCountdownText.ts","resources/index.ts","data/gigs/gigs-2006.ts","data/gigs/gigs-2007.ts","data/gigs/gigs-2008.ts","data/gigs/gigs-2009.ts","data/gigs/gigs-2010.ts","data/gigs/gigs-2011.ts","data/gigs/gigs-2012.ts","data/gigs/gigs-2013.ts","data/gigs/gigs-2014.ts","data/gigs/gigs-2015.ts","data/gigs/gigs-2016.ts","data/gigs/gigs-2017.ts","data/gigs/gigs-2018.ts","data/gigs/gigs-2019.ts","data/gigs/gigs-2020.ts","data/gigs/gigs-2021.ts","data/gigs/index.ts","data/recipes/mains/bolognese.ts","data/recipes/mains/carbonara.ts","data/recipes/mains/lasagne.ts","data/recipes/mains/risotto.ts","data/recipes/mains/rogan-josh.ts","data/recipes/mains/shepherds-pie.ts","data/recipes/mains/sweet-and-sour.ts","data/recipes/mains/index.ts","data/recipes/sauces/pesto.ts","data/recipes/sauces/piri-piri.ts","data/recipes/sauces/index.ts","data/recipes/sides/baked-beans.ts","data/recipes/sides/bang-bang-cauliflower.ts","data/recipes/sides/crispy-kale.ts","data/recipes/sides/mashed-potato.ts","data/recipes/sides/ratatouille.ts","data/recipes/sides/index.ts","data/recipes/sides/tofu-scramble.ts","data/recipes/sweets/banana-cake.ts","data/recipes/sweets/blueberry-pancakes.ts","data/recipes/sweets/brownies.ts","data/recipes/sweets/cookies.ts","data/recipes/sweets/crumble.ts","data/recipes/sweets/flapjacks.ts","data/recipes/sweets/lemon-drizzle.ts","data/recipes/sweets/scones.ts","data/recipes/index.ts","data/recipes/sweets/index.ts","data/recipes/recipes-coming-soon.ts","data/theatre/theatre-2016.ts","data/theatre/theatre-2017.ts","data/theatre/theatre-2018.ts","data/theatre/theatre-2019.ts","data/theatre/theatre-2020.ts","data/theatre/index.ts","data/travel/travel-1997.ts","data/travel/travel-1998.ts","data/travel/travel-1999.ts","data/travel/travel-2000.ts","data/travel/travel-2001.ts","data/travel/travel-2002.ts","data/travel/travel-2003.ts","data/travel/travel-2004.ts","data/travel/travel-2005.ts","data/travel/travel-2006.ts","data/travel/travel-2007.ts","data/travel/travel-2008.ts","data/travel/travel-2009.ts","data/travel/travel-2010.ts","data/travel/travel-2011.ts","data/travel/travel-2012.ts","data/travel/travel-2013.ts","data/travel/travel-2014.ts","data/travel/travel-2015.ts","data/travel/travel-2016.ts","data/travel/travel-2017.ts","data/travel/travel-2018.ts","data/travel/travel-2019.ts","data/travel/travel-2020.ts","data/travel/index.ts","data/travel/travel-bucket-list.ts","pages/theatre.ts","pages/recipes.ts","utils/global/mapRecipeGroupsToSections.ts","pages/travel.ts","pages/index.ts","routes/index.ts","components/HomePage/index.tsx","components/PageSection/PageSectionHeader.tsx","components/UnorderedList/index.tsx","components/VisibilityToggle/index.tsx","components/RecipeCard/index.tsx","utils/global/getIngredientsHeader.ts","components/PageSection/index.tsx","components/PageTitle/index.tsx","components/PageShell/index.tsx","app/index.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Circle","styled","div","size","fontSize","theme","css","circleBorder","invert","color","FlexRow","FlexColumn","Link","ReactRouterDomLink","StyledImage","img","props","SvgIcon","className","icon","data-test","src","COLORS","gainsboro","darkGreen","green","amethystSmoke","baliHai","gray","hillary","sprout","black","FONT_SIZES","BORDER_BLACK_THIN","BORDER_GRAY_THIN","SECTION_THEME","body","basicList","border","bottom","count","width","padding","vertical","eventCardList","borderRadius","boxShadow","rgba","margin","left","header","top","horizontal","fontFamily","THEME","animationDuration","fadedOpacity","textColor","breakpoints","phone","maxWidth","recipe","image","title","first","last","homePage","desktop","section","page","shell","colors","scrollbarSize","GlobalStyle","createGlobalStyle","normalize","P","p","P_M","P_S","P_XS","Span_M","span","Span_S","Span_SM","ZERO_MARGIN_AND_PADDING","Headers","H1","h1","H2","h2","H3","h3","Text","M","S","XS","Span","SM","CentredOnPhone","ListEntry","favourite","star","faded","PastCount","leaderboard","FutureCount","CountedListItem","listEntry","futureCount","pastCount","ignoreCountInfo","showFutureCount","showPastCount","ACTORS","ADAM_JAMES","name","ADI_CHUGH","AIMEE_LOU_WOOD","BENJAMIN_ALUWIHARE","CLAIRE_FOY","DAVID_MOORST","GWENDOLINE_CHRISITE","HAMMED_ANIMASHAUN","HATTY_JONES","JASON_WATKINS","JOHN_MCCREA","KATHERINE_PARKINSON","LAURIE_KYNASTON","LEE_INGLEBY","MATT_SMITH","MILLY_THOMAS","NINA_SOSANYA","OLIVER_CHRIS","PETER_MCPHERSON","SARA_BAREILLES","SIAN_CLIFFORD","SURANNE_JONES","TIMOTHEE_CHALAMET","DIETS","VEGAN","abbreviation","VEGETARIAN","FESTIVALS","AREA_10_NYE","BESTIVAL","festival","BRIGHTON_PRIDE","CHINGFEST","DECAYDANCE","DEFECTED_BRISTOL","FABRIC_NYE","GLASTONBURY","HOMOBLOC","KALEIDOSCOPE","LOVEBOX","MAD_COOL","MANCHESTER_PRIDE","MIGHTY_HOOPLA","NOTION_SUMMER_PARTY","ON_THE_RUN_II","PARKLIFE","TRANSMISSION","TRIBAL_SESSIONS","V_FESTIVAL","WAREHOUSE_PROJECT","FRIENDS","CFS","initials","JHC","AISHA","ALEX_FAYE","ALICE_R","AMY_B","AMY_C","ANNIE_B","ASH","BECKY","BETH_O","BETH_SH","BETH_SP","BLAINE","CAITY","CAITLIN","gigs","travel","CARMEN","CAMERON","CHELSEA","CHLOE","CHRISTELLE","COBY_B","COURTNEY","DAD","theatre","DARREN","DAN","DOM","ELLE_O","ELINORE_G","ELISE","ELLIE_F","ELLIE_G","ELLIE_P","ELLIE_S","EMMA","FANNY","GEMMA","GEORGE","GRACE","HANNA","HARRIET_B","HARRIET_K","HEATHER_C","JAIMINI","JAMIE","JAZZ","JERRY","JOE","JESS","JUNAID","KATE_B","KIERAN_S","KIRSTEN","KYLE","LAURA","LEAH","LEWIS","LINDSAY_A","LINDSEY_S","LOUISE","LUKE_J","LUKE_S","MARIA","MEGAN","MUM","NATALIE","NAV","OSCAR","PATRICIA","POOJA","POPPY","ROB_G","RYAN","SAM_B","SARAH_WA","SARAH_W","SIAN","SIMAN","SONYA","STEVE_R","THOM","TOM","TONYA","KEY_WEST","LOCATIONS","BARBADOS","island","attractions","HARRISONS_CAVE","BELGIUM","cities","BRUGES","YPRES","BATTLEFIELDS","BELFRY_OF_BRUGES","BRAZIL","RIO_DE_JANEIRO","MODERN_ART_MUSEUM_RIO","foreignName","COPACABANA_BEACH","ROCINHA_FAVELA","CHRIST_THE_REDEEMER","SELARON_STEPS","HANG_GLIDING","highlight","PICO_DO_PAPAGAIO","englishName","islands","ILHA_GRANDE","CANADA","NIAGARA_FALLS","CROATIA","DUBROVNIK","DUBROVNIK_CABLE_CAR","DUBROVNIK_WALLS","CUBA","HAVANA","capital","towns","VARADERO","CYPRUS","PAPHOS","PAPHOS_ARCHAEOLOGICAL_PARK","CZECH_REPUBLIC","PRAGUE","JOHN_LENNON_WALL","VYSEHRAD","DENMARK","COPENHAGEN","LOUISIANA_ART_MUSEUM","ECUADOR","BANOS","GUAYAQUIL","OTAVALO","QUITO","EQUATOR_MONUMENT","OTAVALO_MARKET","TORTOISE_PARK","PAILON_DEL_DIABLO","COTOPAXI","GALAPAGOS","EGYPT","CAIRO","SHARM_EL_SHEIKH","GIZA_PYRAMIDS_SPHINX","FRANCE","MONACO","NICE","PARIS","SACRE_COEUR","LOUVRE","ARC_DE_TRIOMPHE","AIR_SPACE_MUSEUM","SCIENCE_MUSEUM","EIFFEL_TOWER","NOTRE_DAME","DISNEYLAND_PARIS","themePark","PARC_ASTERIX","GERMANY","BERLIN","REICHSTAG","HOLOCAUST_MEMORIAL","BRANDENBURG_GATE","BERLIN_WALL","EAST_SIDE_GALLERY","GREECE","KOS","regions","HALKIDIKI","HUNGARY","BUDAPEST","PARLIAMENT_BUILDING","THERMAL_BATH_SZECHENYI","CITADELLA","IRELAND","ST_STEPHENS_GREEN_PARK","DUBLIN_PRISON","GUINNESS_STOREHOUSE","DUBLIN","ITALY","SICILY","NAPLES","MILAN","ROME","VATICAN","CATANIA","VENICE","POMPEII","JESOLO","SORRENTO","ARCO_DELLA_PACE","SEMPIONE_PARK","MILAN_MALL","COLOSSEUM","TREVI_FOUNTAIN","VESUVIUS","ETNA","LAOS","LUANG_PRABANG","VIENTIANE","KUANG_SI_FALLS","ELEPHANT_VILLAGE","BUDDHA_PARK","NETHERLANDS","AMSTERDAM","GRONINGEN","STEDELIJK_MUSEUM","SEX_MUSEUM","GRONINGEN_MUSEUM","NORWAY","OSLO","HOVEDOYA","PERU","AREQUIPA","CUSCO","LIMA","HUARAZ","COLCA_CANYON","LAGUNA_69","JUNGLE_ZIPLINE","MACHU_PICCHU","HUACACHINA","HUASCARAN_PARK","MANU","RAINBOW_MOUNTAIN","MANCORA","PARACAS","villages","POLAND","KRAKOW","AUSCHWITZ_BIRKENAU","WIELICZKA_SALT_MINE","WIELICZKA","PORTUGAL","LISBON","PORTIMAO","ZOOMARINE","OCENARIO_DE_LISBOA","FERRAGUDO","TAVIRA","VILAMOURA","SPAIN","BARCELONA","MADRID","CIUTADELLA_PARK","PARK_GUELL","PARQUE_WARNER","SIAM_PARK","PORTAVENTURA","TENERIFE","IBIZA","MINORCA","LANZAROTE","THAILAND","BANGKOK","CHIANG_MAI","CHIANG_RAI","KOH_PHI_PHI","KOH_PHANGAN","KOH_TAO","WHITE_TEMPLE","MAYA_BAY","PAI_CANYON","TIGER_KINGDOM","GRAND_PALACE","SKY_BAR","KRABI","PAI","UGANDA","JINJA","RAFTING_NALUBALE","NILE_SOURCE","UAE","DUBAI","AQUAVENTURE","BURJ_KHALIFA","UK","insignificant","ALTON_TOWERS","BLACKPOOL_PLEASURE_BEACH","WINTER_WONDERLAND","THORPE_PARK","EDEN_PROJECT","TATE_BRITAIN","LONDON_EYE","RICHMOND_PARK","SHERWOOD_FOREST","CALKE_ABBEY","BATTERSEA_PARK","CRYSTAL_PALACE_PARK","QUEEN_ELIZABETH_OLYMPIC_PARK","VICTORIA_PARK","GREENWICH_PARK","KEW_GARDENS","EPPING_FOREST","HAMPSTEAD_HEATH","V_A_MUSEUM","TATE_MODERN","NATURAL_HISTORY_MUSEUM","LAKE_DISTRICT","HADRIANS_WALL","ANGLESEY","BATH","BLACKPOOL","BRIGHTON","BRISTOL","BIRMINGHAM","CAMBRIDGE","COVENTRY","DERBY","HULL","LEEDS","LEICESTER","LINCOLN","LONDON","LIVERPOOL","MANCHESTER","NEWCASTLE","NORWICH","NOTTINGHAM","OXFORD","SHEFFIELD","WOLVERHAMPTON","YORK","CORNWALL","DONCASTER","HARROGATE","ILKLEY","MILTON_KEYNES","STRATFORD","MANSFIELD","NEWARK","NEWQUAY","PADSTOW","TENBY","SCARBOROUGH","USA","ALCATRAZ_PRISON","FISHERMANS_WHARF","FARMERS_MARKET","HOLLYWOOD_WALK_OF_FAME","WHITE_HOUSE","CAPITOL_BUILDING","WASHINGTON_MONUMENT","LINCOLN_MEMORIAL","TIMES_SQUARE","BROOKLYN_BRIDGE","WORLD_TRADE_CENTER","GOLDEN_GATE_BRIDGE","CENTRAL_PARK","VENICE_BEACH","DISNEYLAND_CALIFORNIA_ADVENTURE","DISNEY_MGM_STUDIOS","DISNEY_ANIMAL_KINGDOM","DISNEY_EPCOT","WET_N_WILD_ORLANDO","BLIZZARD_BEACH","DISNEY_MAGIC_KINGDOM","UNIVERSAL_STUDIOS_FLORIDA","UNIVERSALS_ISLANDS_OF_ADVENTURE","GRAND_CANYON","KNOTTS_BERRY_FARM","SEAWORLD_ORLANDO","BUSCH_GARDENS_WILLIAMSBURG","BUSCH_GARDENS_TAMPA","SIX_FLAGS_AMERICA","SIX_FLAGS_MAGIC_MOUNTAIN","SIX_FLAGS_NEW_ENGLAND","BOSTON_MASSACHUSETTS","LAS_VEGAS","VIRGINIA_BEACH","LOS_ANGELES","NEW_YORK_CITY","SAN_FRANCISCO","SPRINGFIELD_MASSACHUSETTS","WASHINGTON_DC","ALCATRAZ","MARTHAS_VINEYARD","CAPE_COD","FLORIDA_KEYS","ISLAMORADA","states","FLORIDA","NEW_YORK","MASSACHUSETTS","VIRGINIA","SAINSBURYS_SEASONING_COST","quantity","measurement","price","MEASUREMENTS","MUSICIANS","AURORA","THE_ACADEMY_IS","ALESSIA_CARA","ALEX_CHAPMAN","ALL_AMERICAN_REJECTS","ALLIE_X","ALL_TIME_LOW","ALMA","AMOS_LEE","ANNA_OF_THE_NORTH","ADELE","ANASTACIA","ANNE_MARIE","AQUILO","ARCTIC_MONKEYS","ARIANA_GRANDA","AUDITION","BAAUER","BANANARAMA","BANKS","BASTILLE","BAYNK","BEARS_DEN","BECKY_HILL","BEN_HOWARD","BETSY","BETTY_WHO","BEYONCE","BICEP","BILLIE_EILISH","BLACK_KIDS","B_O_B","BONDAX","BON_IVER","BONTAN","BORNS","BOYS_LIKE_GIRLS","BLONDE","BREACH","BRIGITTE_APHRODITE","BRITNEY_SPEARS","BROODS","BULOW","CAMILA_CABELLO","CARIBOU","CARLY_RAE_JEPSEN","CARL_COX","CAROLINE_POLACHEK","CELESTE","CHARLI_ADAMS","CHARLI_XCX","CHARLOTTE_CHURCH","CHELSEA_CUTLER","CHEMICAL_BROTHERS","CHERYL","CHRISTINE_AND_THE_QUEENS","CHRVCHES","CLAIRO","CLEAN_BANDIT","COBRA_STARSHIP","CODE","CRUEL_YOUTH","CUTE_IS_WHAT_WE_AIM_FOR","CYRIL_HAHN","DANIEL_AVERY","DAUGHTER","DAVID_RODIGAN","DIPLO","DISCLOSURE","DIZZEE_RASCAL","DRUMS","DUKE_DUMONT","DUA_LIPA","DUSKY","DYLAN","EARTHEATER","EATS_EVERYTHING","ELDERBROOK","ELIZA_DOOLITTLE","ELLA_EYRE","ELLIE_GOULDING","EMAROSA","FALL_OUT_BOY","FKA_TWIGS","FLEETWOOD_MAC","FLIGHT_FACILITIES","FLORENCE_AND_THE_MACHINE","FOREVER_THE_SICKEST_KIDS","FOURS","FOUR_TET","FOXES","FRANCES","FRANCIS_AND_THE_LIGHTS","FRANK_OCEAN","FREYA_RIDINGS","THE_FRIDAY_NIGHT_BOYS","FRIEND_WITHIN","FUN_LOVIN_CRIMINALS","GABRIELLE","GEORGE_EZRA","GEORGE_FITZGERALD","GEORGIA","G_FLIP","GLOWIE","GORGON_CITY","GRACEY","GREEN_VELVET","GRIMES","GROOVE_ARMADA","GRYFFIN","GYM_CLASS_HEROES","HAIM","HALSEY","HANNAH_WANTS","HAUX","HEIDI","HEY_MONDAY","HOLLY_HUMBERSTONE","HORSE_MEAT_DISCO","INCOGNITO","JAMES_BAY","JAMES_BLAKE","JAMIE_JONES","JAMIE_T","JAMIE_XX","JAX_JONES","JAY_Z","JEREMY_ZUCKER","JESS_GLYNNE","JESSIE_WARE","JOE_GODDARD","JOHNNY_MARR","JONAS_BLUE","JONES","JON_HOPKINS","JORIS_VOORN","JORJA_SMITH","JOSH_BUTLER","JOY_ORBISON","JOSEF_SALVAT","JULIA_MICHAELS","JULIO_BASHMORE","JUSTIN_BIEBER","JUSTIN_MARTIN","KAH_LO","KANYE_WEST","KATE_NASH","KATY_PERRY","KAYTRANADA","KESHA","KIASMOS","KIDNAP","KIDS_IN_GLASS_HOUSES","THE_KILLERS","KIM_PETRAS","KOLSCH","KYGO","LADY_GAGA","LADY_STARLIGHT","LANA_DEL_REY","LANE_8","LANY","LA_ROUX","LAUV","L_DEVINE","LELAND","LENNON_STELLA","LEON","LILY_ALLEN","LISSIE","LITTLE_COMETS","LITTLE_DRAGON","LONDON_GRAMMAR","LORDE","LUCY_ROSE","LYKKE_LI","LYVES","MACEO_PLEX","MALLRAT","MAGGIE_ROGERS","THE_MAINE","MAJOR_LAZER","MARY_J_BLIGE","MARINA","MARTIN_SOLVEIG","MELANIE_MARTINEZ","METRO_STATION","MICHAEL_KIWANUKA","MIDLAND","MIGUEL","MIKE_POSNER","MILEY_CYRUS","MISHA_B","M_0","MK","MNEK","MO","MUNA","MURA_MASA","NAAZ","NAO","NASTY_CHERRY","NATASHA_BEDINGFIELD","NAVVY","NICKI_MINAJ","NOEL_GALLAGHERS_HIGH_FLYING_BIRDS","OH_ANNIE_OH","OKAYWILL","PALE_WAVES","PALOMA_FAITH","PANIC_AT_THE_DISCO","PARAMORE","PAUL_WOOLFORD","PET_SHOP_BOYS","PHILIP_GEORGE","PRETENDERS","PVRIS","RAINBOW_KITTEN_SURPRISE","RALEIGH_RITCHIE","RALPH","REDLIGHT","RIHANNA","RINA_SAWAYAMA","RITON","RIXTON","ROBINSON","ROBYN","ROMY","ROOSEVELT","ROUTE_94","RYN_WEAVER","RUDIMENTAL","RUFUS_DU_SOL","RYAN_BEATTY","SABRINA_CLAUDIO","SAINT_JHN","SAM_SMITH","SASHA_SLOAN","SBTRKT","SEEB","SEGA_BODEGA","SEINABO_SEY","SEVDALIZA","SIA","SIGRID","SISTER_SLEDGE","SKY_FERREIRA","SLIIMY","SOFI_TUKKER","SOAK","SONIKKU","SOPHIE","SOPHIE_ELLIS_BEXTOR","SOUL_WAX","THE_SMYTHS","THE_SPILL_CANVAS","SKREAM","SUNDAY_GIRL","TAYLOR_SWIFT","TENSNAKE","TEN_WALLS","TERROR_JR","TOM_ODELL","TORI_KELLY","TOURIST","TOVE_LO","TROYE_SIVAN","TULISA","TWENTY_ONE_PILOTS","TWO_FEET","TYGA","VERITE","WE_THE_KINGS","WILL_YOUNG","THE_XX","YEARS_AND_YEARS","YOU_ME_AT_SIX","YOUSEF","ZARA_LARSSON","MUSIC_VENUES","ALEXANDRA_PALACE","ALEXANDRA_PALACE_THEATRE","BRIXTON_ACADEMY","BROCKWELL_PARK","CAMDEN_ASSEMBLY","CORSICA_STUDIOS","COURTYARD_THEATRE","DINGWALLS","THE_GARAGE","EARTH","EGG","ELECTRIC_BRIXTON","ELECTROWERKZ","FABRIC","FINSBURY_PARK","HAMMERSMITH_APOLLO","HEAVEN","HOXTON_HALL","HOXTON_SQUARE_BAR_AND_KITCHEN","ISLINGTON_ASSEMBLY_HALL","KENTISH_TOWN_FORUM","KOKO","LAFAYETTE","LAYLOW","LONDON_STADIUM","MINISTRY_OF_SOUND","MOTH_CLUB","OLD_BLUE_LAST","OMEARA","OSLO_HACKNEY","OVAL_SPACE","THE_O2","PRINTWORKS","QUEEN_OF_HOXTON","RIDGEWAY_PARK","ROUNDHOUSE","ROYAL_ALBERT_HALL","ROYAL_FESTIVAL_HALL","SCALA","SERVANT_JAZZ_QUARTERS","SHEPHERDS_BUSH_EMPIRE","ST_GILES_IN_THE_FIELD","TOTTENHAM_HOTSPUR_STADIUM","TWICKENHAM_STADIUM","TROXY","VILLAGE_UNDERGROUND","WEMBLEY_STADIUM","XOYO","ZIGFRID_VON_UNDERBELLY","ACADEMY_MANCHESTER","ACADEMY_2_MANCHESTER","ALBERT_HALL_MANCHESTER","APOLLO_MANCHESTER","ARENA_MANCHESTER","CASTLEFIELD_BOWL","DEAF_INSTITUTE","GORILLA","HEATON_PARK","MAYFIELD_DEPOT","RITZ_MANCHESTER","RUBY_LOUNGE","SANKEYS","STORE_STREET","BODEGA","ARENA_NOTTINGHAM","RESCUE_ROOMS","ROCK_CITY","TRENT_UNIVERSITY_NOTTINGHAM","ACADEMY_BIRMINGHAM","ACADEMY_2_BIRMINGHAM","ALEXANDRA_THEATRE","BARFLY_BIRMINGHAM","INSTITUTE_BIRMINGHAM","NEC_ARENA_BIRMINGHAM","NIA_ARENA_BIRMINGHAM","COCKPIT_LEEDS","DE_MONTFORT_HALL","ENGINE_SHED","IFEMA_MADRID","LULWORTH_ESTATE","MOTION","PRESTON_PARK","SCHWUZ","SHEFFIELD_ARENA","TRESOR","WESTON_PARK","WOLVERHAMPTON_CIVIC_HALL","WORTHY_FARM","FLOUR","CORNFLOUR","displayText","cost","FLOUR_PLAIN","FLOUR_SELF_RAISING","SUGAR","SUGAR_BROWN","SUGAR_BROWN_DARK","SUGAR_BROWN_LIGHT","SUGAR_CASTER_GOLDEN","SUGAR_DEMERARA","SUGAR_GRANULATED","SUGAR_ICING","SYRUPS","LEMON_EXTRACT","NECTAR_AGAVE","SYRUP_GOLDEN","VANILLA_EXTRACT","BAKING","BAKING_POWDER","BICARBONATE_OF_SODA","CHOCOLATE_DARK","COCOA_POWDER","PASTA","SPAGHETTI","PASTA_LASAGNE_SHEET_DRIED","RICE","RICE_BASMATI","RICE_BROWN","RICE_RISOTTO_ARBORIO","GRAINS","OATS","CARBS","BREAD_GARLIC","BREAD_SOURDOUGH","BREAD_SOURDOUGH_DARK","POPPADOMS","MILK","MILK_COCONUT_CANNED","MILK_ALMOND_UNSWEETENED","MILK_OAT","DAIRY","BUTTER_VEGAN","CREAM_OAT","CHEESE_VEGAN_SLICE","FRUIT_DRIED","APRICOTS_DRIED","BLUEBERRIES_DRIED","CRANBERRIES_DRIED","RAISINS","FRUIT_FRESH","APPLE_BRAMLEY","BANANA","BLACKBERRIES_FRESH","BLUEBERRIES_FRESH","LEMON","LEMON_LARGE","LIME","PINEAPPLE","RASPBERRIES_FRESH","FRUIT_FROZEN","BLACKBERRIES_FROZEN","RASPBERRIES_FROZEN","JUICE","LEMON_JUICE","LEMON_JUICE_FRESH","LIME_JUICE_FRESH","FRUIT","HERBS_DRIED","BASIL_DRIED","HERBS_MIXED_DRIED","OREGANO_DRIED","ROSEMARY_DRIED","THYME_DRIED","HERBS_FRESH","BASIL_FRESH","payFullAmountAlways","CORIANDER_FRESH","PARSLEY_FRESH","SAGE_FRESH","HERBS","BEANS","BEANS_BAKED","BEANS_HARICOT","BEANS_KIDNEY","SEITAN","GLUTEN_WHEAT_VITAL","PROTEIN","CHICKPEAS","EGGS","LENTIL_RED_DRY","TOFU","DRIED_SEASONING","PAPRIKA","ONION_POWDER","GARLIC_GRANULES","PAPRIKA_SMOKED","TURMERIC_GROUND","ALLSPICE_GROUND","CHILLI_POWDER","CINNAMON_GROUND","CHILLI_CRUSHED_DRIED","NUTMEG_GROUND","YEAST_NUTRITIONAL","STOCK_POWDER_VEGAN","OILS","OIL_OLIVE","OIL_SUNFLOWER","UNICODE","PASTES","CURRY_PASTE_MADRAS","CURRY_PASTE_ROGAN_JOSH","TOMATO_PUREE","SALT","SALT_BLACK","SALT_TABLE","SALT_ROCK_FRESH","SAUCES","LIQUID_SMOKE","SOY_SAUCE","KETCHUP_TOMATO","SRIRACHA","SWEET_CHILLI_SAUCE","VINEGARS","VINEGAR_BALSAMIC","VINEGAR_CIDER","VINEGAR_WHITE_WINE","SEASONING","PEPPER_BLACK_FRESH","PEPPER_BLACK_GROUND","WINE_RED","CHILLI_RED_FRESH","CHILLI_BIRD_EYE_FRESH","GINGER_FRESH","NUTMEG_FRESH","NUTS","NUTS_CASHEWS","NUTS_PINE","SEEDS","SEEDS_CHIA","SEEDS_POPPY","SEEDS_FLAX_GROUND","SEEDS_PUMPKIN","SEEDS_SESAME","SEEDS_SUNFLOWER","NUTS_AND_SEEDS","VEG_CANNED","TOMATO_CHOPPED","TOMATO_PASSATA","TOMATO_SUN_DRIED","VEG_FRESH","ASPARAGUS","AUBERGINE","BEANS_GREEN","BROCCOLI","BUTTERNUT_SQUASH","CARROT","CAULIFLOWER_REGULAR","CELERY_STICK","COURGETTE","GARLIC_CLOVE","KALE","LEEK","MUSHROOMS","MUSHROOMS_CHESTNUT","ONION_WHITE_MEDIUM","ONION_RED_MEDIUM","ONION_SPRING","PEPPER_RED","PEPPER_GREEN","PEPPER_ORANGE","PEPPER_MIXED","POTATO_MARIS_PIPER","POTATO_BAKING","POTATO_SWEET","SPINACH","VEG_FROZEN","PETITS_POIS_FROZEN","VEGETABLES_MIXED_FROZEN","VEG","INGREDIENTS","WATER","WATER_BOILING","PAGE_SECTION_TYPES","EVENT_CARD_TYPES","PAGE_SECTIONS","ACTOR","type","ATTRACTION","BUCKET_LIST","CITY","COUNTRY","FESTIVAL","FRIEND","ISLAND","HIGHLIGHT","MUSICIAN","REGION","PLAY","THEATRE_VENUES","THEME_PARK","TOWN","UP_NEXT","RECIPES_COMING_SOON","PLAYS","AFTERGLOW","CONSENT","DUST","EVERYBODYS_TALKING_ABOUT_JAMIE","FERRYMAN","FROZEN","HOME_IM_DARLING","INHERITANCE","KINKY_BOOTS","LEAVE_TO_REMAIN","LOST_UNFOUND","LUNGS","MATILDA","MIDSUMMER_NIGHTS_DREAM","SON","THAT_GIRL","UGLY_LIES_THE_BONE","UNCLE_VANYA","WAITRESS","WICKED","YOUNG_MARX","ADELPHI","APOLLO","APOLLO_VICTORIA","BRIDGE","DUKE_OF_YORKS","GIELGUD","HAROLD_PINTER","LYRIC","NATIONAL","NOEL_COWARD","OLD_RED_LION","OLD_VIC","PLAYHOUSE","ROYAL_HAYMARKET","TRAFALGAR_STUDIOS","WATERLOO_EAST","WHITE_BEAR","ROYAL_SHAKESPEARE","TICKET_TYPES","DAYS_OF_THE_WEEK","MONTHS","numberToCurrencyString","number","decimalPrecision","Math","round","toFixed","concatenateQuantityAndMeasurement","displayQuantity","parseInt","calculateIngredientCost","ingredient","ingredientQuantity","ingredientMeasurement","inventory","inventoryQuantity","inventoryMeasurement","inventoryPrice","alert","convertIngredientQuantity","turnTheSuffixIntoPrefix","word","slice","substring","length","formatData","inputData","Array","isArray","array","item","outputString","i","isInFuture","dates","valueOf","today","Date","setDate","getDate","yesterday","getPageSectionItemCounts","itemToCount","pageSectionTitle","data","dataItem","params","itemToMatch","headline","support","includes","lineup","musicianMatchExists","festivalMatchExists","company","friendMatchExists","venue","musicVenueMatchExists","play","playMatchExists","theatreVenueMatchExists","hidden","subtitle","countryCityTownMatchExists","cast","actorMatchExists","itemIsFavourited","itemToInspect","favouritedData","calculateRecipeCost","ingredients","yieldQuantity","recipeTitle","runningRecipeCost","ingredientSection","recipeIngredient","unitCost","displayCost","displayUnitCost","generateChildItemsFromParentItems","childItems","parentItems","parentFlag","parentObject","values","concat","apply","filter","generateIngredientListItem","optional","notes","ingredientText","decimal","toString","convertDecimalToFraction","displayIngredient","displayQuantityMeasurementIngredients","getServeWithListItem","serveWithItems","stringList","generateSectionData","items","allData","upcomingMode","bucketListMode","sort","a","b","toLowerCase","localeCompare","mapToListEntry","mapDataToEventCards","eventType","ticketType","disclaimer","mapDataToEventCard","mapYearGroupsToSections","years","year","getFullYear","details","showSectionLength","mapYearGroupToSection","recipeMethodEntries","FOLD_IN_FLOUR_MIX","LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN","MAKE_FLAX_EGG","bakeForAbout","minutes","skewer","wellRisen","defaultText","additionalText","preheatOven","degreesCelcius","bakingTray","ovenTemperature","transferToLoafTin","sunkenCentre","parms","Title","Subtitle","Body","Dates","ItalicFlexRow","Disclaimer","Countdown","EventCard","daysTilGig","secondsInADay","dateDifference","floor","daysToGo","stringifyDate","date","weekday","getDay","day","month","getMonth","getDisplayDateText","getCountdownText","requireSvg","require","requireJpg","photo","ICONS","ARTIST","BOOK","BRAIN","CAKE","CAMERA","CLOCHE","FLAG","HEART","MAP_PIN","MASKS","MICROPHONE","NOTEPAD","PALM_TREE","PEACE_SIGN","PEOPLE","ROLLER_COASTER","STADIUM","STARS","TENT","THEATRE","TOAST","TOWN_HALL","TRAVEL","VEG_BOWL","PHOTOS","BAKED_BEANS","BANANA_CAKE","BOLOGNESE","BROWNIES","CARBONARA","CRUMBLE","FLAPJACKS","KALE_CRISPY","LASAGNE","MASHED_POTATO","PIRI_PIRI","RATATOUILLE","ROGAN_JOSH","SHEPHERDS_PIE","GIGS_2006","GIGS_2007","GIGS_2008","GIGS_2009","GIGS_2010","GIGS_2011","GIGS_2012","GIGS_2013","GIGS_2014","GIGS_2015","GIGS_2016","GIGS_2017","GIGS_2018","GIGS_2019","GIGS_2020","GIGS_2021","ALL","ALL_GROUPED_BY_YEAR","FAVOURITES","generateSectionDataWrapper","UPCOMING","DATA_GIGS","VENUES","serveWith","method","makes","diet","hide","RISOTTO","SWEET_AND_SOUR","MAINS","category","PESTO","BANG_BANG_CAULIFLOWER","CRISPY_KALE","SIDES","BLUEBERRY_PANCAKES","COOKIES","LEMON_DRIZZLE","DATA_RECIPES","CATEGORISED","COMING_SOON","THEATRE_2016","THEATRE_2017","THEATRE_2018","THEATRE_2019","THEATRE_2020","DATA_THEATRE","TRAVEL_1997","TRAVEL_1998","TRAVEL_1999","TRAVEL_2000","TRAVEL_2001","TRAVEL_2002","TRAVEL_2003","TRAVEL_2004","TRAVEL_2005","notAbroad","TRAVEL_2006","TRAVEL_2007","TRAVEL_2008","TRAVEL_2009","TRAVEL_2010","TRAVEL_2011","TRAVEL_2012","TRAVEL_2013","TRAVEL_2014","TRAVEL_2015","TRAVEL_2016","TRAVEL_2017","TRAVEL_2018","TRAVEL_2019","TRAVEL_2020","countries","themeParks","highlights","DATA_TRAVEL","CITIES","TOWNS","ATTRACTIONS","THEME_PARKS","HIGLIGHTS","ISLANDS","COUNTRIES","statsSections","yearSections","PAGE_DATA_GIGS","sections","mapTheatreVisitToEventCards","PAGE_DATA_THEATRE","recipeGroupSections","expandedAutomatically","maprecipeGroupToSection","comingSoonSection","PAGE_DATA_RECIPES","mapTripToEventCards","PAGE_DATA","GIGS","RECIPES","HOMEPAGE_ROUTE","PAGE_ROUTES","dest","pageData","FlexContainer","GridContainer","StyledSvg","iconSizeDesktop","iconSizePhone","iconSizePadding","HomePage","index","key","to","Container","SectionCount","SectionSubcount","TextContainer","StyledIcon","PageSectionHeader","text","showCounts","dataTest","starredDataCount","useContext","ThemeContext","StyledLi","li","showBullets","addPaddingTop","Ul","ul","UnorderedList","ChildrenContainer","bodyHeight","ClickableRegion","VisibilityToggle","onlyHeaderClickable","headerComponent","children","React","useState","childIsVisible","switchChildVisibility","childrenContainerHeight","setChildrenContainerHeight","hiddenPanel","getChildrenContainerClass","ref","element","getBoundingClientRect","height","onClick","StyledH3","RecipeBody","UnitCostsContainer","RecipeCard","newRecipe","ingredientsHeader","defaultIngredientsHeader","quantitySpaceMeasurement","quantityAndMeasurement","getIngredientsHeader","ingredientsGroups","ingredientsWithPaddingFlags","ingredientsGroup","INDEX_HIGH","INDEX_LOW","push","mapIngredientsToListItemsWithPaddingFlags","PageSectionContainer","SectionBody","isEventCards","RecipeGroupBody","PageSection","isRecipes","isCountedList","TitleTextContainer","PaddedFlexRow","pageTitleMarginBottom","SvgContainer","PageTitle","titleText","StyledPageShell","PageShell","SectionsContainer","Page","App","route","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c84feaa3.chunk.js","sourcesContent":["var map = {\n\t\"./artist.svg\": 38,\n\t\"./book.svg\": 39,\n\t\"./brain.svg\": 40,\n\t\"./cake.svg\": 41,\n\t\"./camera.svg\": 42,\n\t\"./city.svg\": 43,\n\t\"./cloche.svg\": 44,\n\t\"./flag.svg\": 45,\n\t\"./heart.svg\": 46,\n\t\"./loading.svg\": 47,\n\t\"./map_pin.svg\": 48,\n\t\"./masks.svg\": 49,\n\t\"./microphone.svg\": 50,\n\t\"./notepad.svg\": 51,\n\t\"./palm_tree.svg\": 52,\n\t\"./peace_sign.svg\": 53,\n\t\"./people.svg\": 54,\n\t\"./roller_coaster.svg\": 55,\n\t\"./stadium.svg\": 56,\n\t\"./stars.svg\": 57,\n\t\"./tent.svg\": 58,\n\t\"./theatre.svg\": 59,\n\t\"./toast.svg\": 60,\n\t\"./town_hall.svg\": 61,\n\t\"./travel.svg\": 62,\n\t\"./veg_bowl.svg\": 63\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 37;","module.exports = __webpack_public_path__ + \"static/media/artist.7b2f9742.svg\";","module.exports = __webpack_public_path__ + \"static/media/book.76291941.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.09b4a667.svg\";","module.exports = __webpack_public_path__ + \"static/media/cake.fd8c22a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.90fcc14d.svg\";","module.exports = __webpack_public_path__ + \"static/media/city.c6cfa7a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloche.0db1256b.svg\";","module.exports = __webpack_public_path__ + \"static/media/flag.b4a08446.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.50bdf1aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.f1b12302.svg\";","module.exports = __webpack_public_path__ + \"static/media/map_pin.71135c81.svg\";","module.exports = __webpack_public_path__ + \"static/media/masks.d8da85e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/microphone.45f98fc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/notepad.4eca818e.svg\";","module.exports = __webpack_public_path__ + \"static/media/palm_tree.4f07f732.svg\";","module.exports = __webpack_public_path__ + \"static/media/peace_sign.05525562.svg\";","module.exports = __webpack_public_path__ + \"static/media/people.af13270c.svg\";","module.exports = __webpack_public_path__ + \"static/media/roller_coaster.6bcd9568.svg\";","module.exports = __webpack_public_path__ + \"static/media/stadium.5bff58bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/stars.86e33730.svg\";","module.exports = __webpack_public_path__ + \"static/media/tent.2c2dd363.svg\";","module.exports = __webpack_public_path__ + \"static/media/theatre.e5eaee16.svg\";","module.exports = __webpack_public_path__ + \"static/media/toast.df12ac4b.svg\";","module.exports = __webpack_public_path__ + \"static/media/town_hall.c00cc7ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/travel.d9baea5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/veg_bowl.ee16e10a.svg\";","var map = {\n\t\"./baked_beans.jpg\": 65,\n\t\"./banana_cake.jpg\": 66,\n\t\"./bolognese.jpg\": 67,\n\t\"./brownies.jpg\": 68,\n\t\"./carbonara.jpg\": 69,\n\t\"./crumble.jpg\": 70,\n\t\"./flapjacks.jpg\": 71,\n\t\"./kale_crispy.jpg\": 72,\n\t\"./lasagne.jpg\": 73,\n\t\"./mashed_potato.jpg\": 74,\n\t\"./piri_piri.jpg\": 75,\n\t\"./ratatouille.jpg\": 76,\n\t\"./rogan_josh.jpg\": 77,\n\t\"./shepherds_pie.jpg\": 78\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 64;","module.exports = __webpack_public_path__ + \"static/media/baked_beans.b17978e3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banana_cake.ae9fd9b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bolognese.b9573028.jpg\";","module.exports = __webpack_public_path__ + \"static/media/brownies.84692604.jpg\";","module.exports = __webpack_public_path__ + \"static/media/carbonara.9848608a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crumble.263fe8b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flapjacks.0d5f26e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kale_crispy.b5419d7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lasagne.8d8fb594.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mashed_potato.5c438d68.jpg\";","module.exports = __webpack_public_path__ + \"static/media/piri_piri.42719ce5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ratatouille.971440f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rogan_josh.904346f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shepherds_pie.d49c0165.jpg\";","import styled, { css } from \"styled-components\";\n\ninterface ICircle extends ThemeProps {\n  className?: string;\n  size: string;\n  fontSize: string;\n  invert: boolean;\n  color: string;\n}\n\nexport const Circle = styled.div`\n  border-radius: 50%;\n  text-align: center;\n\n  ${({ size, fontSize, theme }: ICircle) => css`\n    height: ${size};\n    width: ${size};\n    line-height: ${size};\n    border: ${theme.circleBorder};\n    font-size: ${fontSize};\n  `}\n\n  ${({ invert }: ICircle) =>\n    invert &&\n    css`\n      background: #777777;\n      color: white;\n      border-color: transparent;\n    `}\n\n  ${({ color }: ICircle) =>\n    color &&\n    css`\n      background: ${color};\n      color: white;\n      border-color: transparent;\n    `}\n`;\n","import styled from \"styled-components\";\n\nexport const FlexRow = styled.div`\n  display: flex;\n`;\n\nexport const FlexColumn = styled(FlexRow)`\n  flex-direction: column;\n`;\n","import { Link as ReactRouterDomLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Link = styled(ReactRouterDomLink)`\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  text-decoration: none;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface IStyledImage {\n  size: string;\n}\nconst StyledImage = styled.img`\n  height: ${(props: IStyledImage) => props.size};\n  width: ${(props: IStyledImage) => props.size};\n  margin: 0;\n`;\n\ninterface ISvgIcon {\n  className?: string;\n  icon: string;\n  size: string;\n}\n\nexport const SvgIcon = ({ className, icon, size }: ISvgIcon) => (\n  <StyledImage\n    className={className}\n    data-test=\"svg-icon\"\n    src={icon}\n    size={size}\n  />\n);\n","export const COLORS: IColors = {\n  gainsboro: \"gainsboro\",\n  darkGreen: \"darkGreen\",\n  green: \"green\",\n  amethystSmoke: \"#a186b0\",\n  baliHai: \"#86a3b0\",\n  gray: \"#808080\",\n  hillary: \"#b0a186\",\n  sprout: \"#b9d1a3\",\n  black: \"#000000\"\n};\n","export const FONT_SIZES: IFontSizes = {\n  XL: \"4.375rem\",\n  L: \"2rem\",\n  M: \"1.5rem\",\n  SM: \"1.25rem\",\n  S: \"1rem\",\n  XS: \"0.75rem\"\n};\n","import { rgba } from \"polished\";\n\nimport { COLORS } from \"./colors\";\n\nconst BORDER_BLACK_THIN: IBorder = `1px solid ${COLORS.black}`;\nconst BORDER_GRAY_THIN: IBorder = `1px solid ${COLORS.gray}`;\n\nconst HOME_PAGE_THEME: ITheme_Homepage = {\n  icon: { padding: \"1.5vmin\", size: { desktop: \"25vmin\", phone: \"42vmin\" } }\n};\n\nconst PAGE_THEME: ITheme_Page = {\n  count: { padding: \"12px 0 0 7px\" },\n  header: { margin: { bottom: \"30px\" } },\n  icon: { margin: { top: \"15px\" }, size: \"60px\" },\n  shell: { padding: \"25px 20px\" }\n};\n\nconst SECTION_THEME: ITheme_Section = {\n  body: {\n    basicList: {\n      border: { bottom: BORDER_GRAY_THIN },\n      count: { width: \"25px\" },\n      padding: { vertical: \"5px\" }\n    },\n    eventCardList: { padding: { vertical: \"10px\" } },\n    padding: { bottom: \"5px\" }\n  },\n  border: { bottom: BORDER_BLACK_THIN },\n  borderRadius: \"10px\",\n  boxShadow: `0 1px 2px ${rgba(COLORS.gray, 0.5)}`,\n  count: { margin: { left: \"5px\" } },\n  header: { padding: \"12px 0\" },\n  icon: { padding: { top: \"2px\" }, size: \"34px\" },\n  margin: { bottom: \"20px\" },\n  padding: { horizontal: \"12px\" }\n};\n\nconst RECIPES_THEME: ITheme_Recipes = {\n  border: { bottom: BORDER_GRAY_THIN },\n  image: { size: \"300px\" },\n  icon: { margin: { top: \"4px\" }, size: \"24px\" },\n  title: { padding: { vertical: \"15px\" } },\n  first: { padding: { top: \"10px\" } },\n  last: { padding: { bottom: \"20px\" } }\n};\n\nconst BREAKPOINTS: IBreakpoints = { phone: { maxWidth: \"480px\" } };\n\nexport const fontFamily: IFontFamily = \"-apple-system, Helvetica, sans-serif\";\nexport const scrollbarSize: IScrollbarSize = \"0.7rem\";\n\nexport const THEME: ITheme = {\n  animationDuration: 0.35,\n  fadedOpacity: 0.5,\n  circleBorder: BORDER_BLACK_THIN,\n  textColor: COLORS.black,\n\n  breakpoints: BREAKPOINTS,\n  recipe: RECIPES_THEME,\n  homePage: HOME_PAGE_THEME,\n  section: SECTION_THEME,\n  page: PAGE_THEME,\n\n  colors: COLORS,\n  scrollbarSize,\n  fontFamily\n};\n","import { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"polished\";\n\nimport { fontFamily, scrollbarSize } from \"./theme\";\n\nexport const GlobalStyle = createGlobalStyle`\n  ${normalize()}\n  \n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n  \n  ::-webkit-scrollbar {\n    width: ${scrollbarSize};\n    height: ${scrollbarSize};\n  }\n  \n  ::-webkit-scrollbar-track {\n    background: rgba(180, 178, 183, 0.3);\n    border: 1px solid rgba(180, 178, 183, 0.3);\n    border-radius: ${scrollbarSize};\n  }\n  \n  ::-webkit-scrollbar-thumb {\n    cursor: pointer;\n    background: rgba(0, 0, 0, 0.3);\n    border: 1px solid rgba(180, 178, 183, 0.3);\n    border-radius: ${scrollbarSize};\n  }\n  \n  ::-webkit-scrollbar-thumb:hover {\n    background: rgba(0, 0, 0, 0.5);\n    border-color: rgba(180, 178, 183, 0.5);\n  }\n  \n  ::-webkit-scrollbar-corner {\n    background-color: transparent;\n  }\n\n  body {\n    font-family: ${fontFamily};\n\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  \n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Old versions of Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none; /* Non-prefixed version, currently supported by Chrome, Opera and Firefox */\n  }\n  \n  body:before {\n    margin: 0;\n    content: \"\";\n    display: block;\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -10;\n    /* background: linear-gradient(white, lightGrey) no-repeat center center; */\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n  }\n  \n`;\n","import styled, { css } from \"styled-components\";\n\nimport { FONT_SIZES } from \"../styles\";\n\nconst P = styled.p`\n  margin: 0;\n`;\n\nconst P_M = styled(P)`\n  font-size: ${FONT_SIZES.M};\n`;\n\nconst P_S = styled(P)`\n  font-size: ${FONT_SIZES.S};\n`;\n\nconst P_XS = styled(P)`\n  font-size: ${FONT_SIZES.XS};\n`;\n\nconst Span_M = styled.span`\n  font-size: ${FONT_SIZES.M};\n`;\n\nconst Span_S = styled.span`\n  font-size: ${FONT_SIZES.S};\n`;\n\nconst Span_SM = styled.span`\n  font-size: ${FONT_SIZES.SM};\n`;\n\nconst ZERO_MARGIN_AND_PADDING = css`\n  margin: 0;\n  padding: 0;\n`;\n\nconst H1 = styled.h1`\n  font-size: ${FONT_SIZES.XL};\n  ${ZERO_MARGIN_AND_PADDING}\n`;\n\nconst H2 = styled.h2`\n  font-size: ${FONT_SIZES.L};\n  ${ZERO_MARGIN_AND_PADDING}\n`;\n\nconst H3 = styled.h3`\n  font-size: ${FONT_SIZES.M};\n  ${ZERO_MARGIN_AND_PADDING}\n`;\n\nexport const Headers = {\n  H1,\n  H2,\n  H3\n};\n\nexport const Text = {\n  P: { M: P_M, S: P_S, XS: P_XS },\n  Span: { M: Span_M, SM: Span_SM, S: Span_S }\n};\n","import styled from \"styled-components\";\n\nimport { FlexRow } from \"../../primitives\";\n\nexport const CentredOnPhone = styled(FlexRow)`\n  @media (max-width: ${props => props.theme.breakpoints.phone.maxWidth}) {\n    justify-content: center;\n    text-align: center;\n  }\n`;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { FlexRow, Text } from \"../../primitives\";\n\ninterface ListEntryProps extends ThemeProps {\n  favourite?: boolean;\n  star?: boolean;\n  faded?: boolean;\n}\nconst ListEntry = styled(Text.P.S)`\n  ${(props: ListEntryProps) =>\n    props.favourite &&\n    css`\n      ::before {\n        content: \"♥ \";\n      }\n    `}\n\n  ${(props: ListEntryProps) =>\n    props.star &&\n    css`\n      ::before {\n        content: \"★ \";\n      }\n    `}\n\n  flex: 1;\n  ${(props: ListEntryProps) =>\n    props.faded && `opacity: ${props.theme.fadedOpacity};`}\n`;\n\ninterface PastCountProps extends ThemeProps {\n  leaderboard: boolean;\n}\nconst PastCount = styled(Text.P.S)`\n  text-align: right;\n  margin-left: ${(props: PastCountProps) => (props.leaderboard ? \"10px\" : 0)};\n  width: ${(props: PastCountProps) =>\n    props.theme.section.body.basicList.count.width};\n  font-weight: bold;\n`;\n\nconst FutureCount = styled(PastCount)`\n  opacity: ${(props: ThemeProps) => props.theme.fadedOpacity};\n`;\n\nexport const CountedListItem: React.FC<ICountedListItem> = ({\n  listEntry,\n  favourite,\n  star,\n  futureCount,\n  pastCount,\n  ignoreCountInfo,\n  leaderboard = false\n}) => {\n  const showFutureCount = futureCount > 0 && (pastCount > 0 || leaderboard);\n  const showPastCount =\n    (leaderboard && pastCount > 0) ||\n    pastCount > 1 ||\n    (futureCount > 0 && pastCount > 0);\n\n  return (\n    <FlexRow>\n      <ListEntry\n        faded={!ignoreCountInfo && pastCount === 0}\n        favourite={favourite}\n        star={star}\n      >\n        {listEntry}\n      </ListEntry>\n\n      {!ignoreCountInfo && showFutureCount && (\n        // @ts-ignore\n        <FutureCount>{futureCount}</FutureCount>\n      )}\n      {!ignoreCountInfo && showPastCount && (\n        <PastCount leaderboard={leaderboard}>{pastCount}</PastCount>\n      )}\n    </FlexRow>\n  );\n};\n","export const ACTORS: IActors = {\n  // A\n  ADAM_JAMES: { name: \"Adam James\" },\n  ADI_CHUGH: { name: \"Adi Chugh\" },\n  AIMEE_LOU_WOOD: { name: \"Aimee Lou Wood\" },\n  // B\n  BENJAMIN_ALUWIHARE: { name: \"Benjamin Aluwihare\" },\n  // C\n  CLAIRE_FOY: { name: \"Claire Foy\", favourite: true },\n  //\n  DAVID_MOORST: { name: \"David Moorst\" },\n  // G\n  GWENDOLINE_CHRISITE: { name: \"Gwendoline Christie\" },\n  // H\n  HAMMED_ANIMASHAUN: { name: \"Hammed Animashaun\" },\n  HATTY_JONES: { name: \"Hatty Jones\" },\n  // J\n  JASON_WATKINS: { name: \"Jason Watkins\" },\n  JOHN_MCCREA: { name: \"John McCrea\" },\n  // K\n  KATHERINE_PARKINSON: { name: \"Katherine Parkinson\", favourite: true },\n  // L\n  LAURIE_KYNASTON: { name: \"Laurie Kynaston\", favourite: true },\n  LEE_INGLEBY: { name: \"Lee Ingleby\" },\n  // M\n  MATT_SMITH: { name: \"Matt Smith\" },\n  MILLY_THOMAS: { name: \"Milly Thomas\" },\n  // N\n  NINA_SOSANYA: { name: \"Nina Sosanya\" },\n  // O\n  OLIVER_CHRIS: { name: \"Oliver Chris\" },\n  // P\n  PETER_MCPHERSON: { name: \"Peter McPherson\" },\n  // S\n  SARA_BAREILLES: { name: \"Sara Bareilles\" },\n  SIAN_CLIFFORD: { name: \"Sian Clifford\", favourite: true },\n  SURANNE_JONES: { name: \"Suranne Jones\", favourite: true },\n  // T\n  TIMOTHEE_CHALAMET: { name: \"Timothée Chalamet\", favourite: true }\n};\n","import { COLORS } from \"../styles\";\n\ninterface IDiets {\n  VEGAN: IRecipeDiet;\n  VEGETARIAN: IRecipeDiet;\n}\n\nexport const DIETS: IDiets = {\n  VEGAN: { abbreviation: \"Ve\", color: COLORS.darkGreen },\n  VEGETARIAN: { abbreviation: \"V\", color: COLORS.green }\n};\n","export const FESTIVALS: IFestivals = {\n  // A\n  AREA_10_NYE: { name: \"Area 10 NYE\" },\n  // B\n  BESTIVAL: { name: \"Bestival\", festival: true },\n  BRIGHTON_PRIDE: { name: \"Brighton Pride\", festival: true },\n  // C\n  CHINGFEST: { name: \"Chingfest\" },\n  // D\n  DECAYDANCE: { name: \"Decaydance\", festival: true },\n  DEFECTED_BRISTOL: { name: \"Defected In the House Day & Night Party\" },\n  // F\n  FABRIC_NYE: { name: \"Fabric NYE\" },\n  // G\n  GLASTONBURY: { name: \"Glastonbury\", festival: true, favourite: true },\n  // H\n  HOMOBLOC: { name: \"Homobloc\", festival: true },\n  // K\n  KALEIDOSCOPE: { name: \"Kaleidoscope\", festival: true },\n  // L\n  LOVEBOX: { name: \"Lovebox\", festival: true },\n  // M\n  MAD_COOL: { name: \"Mad Cool\", festival: true },\n  MANCHESTER_PRIDE: { name: \"Manchester Pride\", festival: true },\n  MIGHTY_HOOPLA: { name: \"Mighty Hoopla\", festival: true },\n  // N\n  NOTION_SUMMER_PARTY: { name: \"Notion Summer Party\" },\n  // O\n  ON_THE_RUN_II: { name: \"On the Run II\" },\n  // P\n  PARKLIFE: { name: \"Parklife\", festival: true },\n  // T\n  TRANSMISSION: { name: \"Transmission\", festival: true },\n  TRIBAL_SESSIONS: { name: \"Tribal Sessions\" },\n  // V\n  V_FESTIVAL: { name: \"V Festival\", festival: true },\n  // W\n  WAREHOUSE_PROJECT: {\n    name: \"Warehouse Project\",\n    festival: true,\n    favourite: true\n  }\n};\n","type IFRIENDS = { [name: string]: IFriend };\n\nconst GROUPS: IFRIENDS = {\n  CFS: { name: \"Colonel Frank Seely\", initials: \"CFS\" },\n  JHC: { name: \"JHC\", initials: \"JHC\" }\n};\n\nexport const FRIENDS: IFRIENDS = {\n  ...GROUPS,\n  // A\n  AISHA: { name: \"Aisha Saeed\", initials: \"AS\" },\n  ALEX_FAYE: { name: \"Alex-Faye Grundy\", initials: \"AG\" },\n  ALICE_R: { name: \"Alice Roder\", initials: \"AR\" },\n  AMY_B: { name: \"Amy Bagni\", initials: \"AB\" },\n  AMY_C: { name: \"Amy Calcutt\", initials: \"AC\" },\n  ANNIE_B: { name: \"Annie Butcher\", initials: \"AB\" },\n  ASH: { name: \"Ash Moreton\", initials: \"AM\" },\n  // B\n  BECKY: { name: \"Becky Mills\", initials: \"BM\" },\n  BETH_O: { name: \"Beth Oakes\", initials: \"BO\" },\n  BETH_SH: { name: \"Beth Shears\", initials: \"BS\" },\n  BETH_SP: { name: \"Beth Speller\", initials: \"BS\" },\n  BLAINE: { name: \"Blaine Pearson\", initials: \"BP\" },\n  // C\n  CAITY: { name: \"Caity Dalby\", initials: \"CD\" },\n  CAITLIN: { name: \"Caitlin McCaig\", initials: \"CM\", gigs: true, travel: true },\n  CARMEN: { name: \"Carmen Dalglish\", initials: \"CD\", travel: true },\n  CAMERON: { name: \"Cameron Blackburn\", initials: \"CB\" },\n  CHELSEA: { name: \"Chelsea Cunningham\", initials: \"CC\" },\n  CHLOE: { name: \"Chloé White\", initials: \"CW\" },\n  CHRISTELLE: { name: \"Christelle Mutunda\", initials: \"CM\" },\n  COBY_B: { name: \"Coby Blackburn\", initials: \"CB\" },\n  COURTNEY: { name: \"Courtney Lawson\", initials: \"CL\" },\n  // D\n  DAD: { name: \"Dad\", initials: \"D\", gigs: true, theatre: true, travel: true },\n  DARREN: { name: \"Darren Taylor\", initials: \"DT\", gigs: true, theatre: true },\n  DAN: {\n    name: \"Dan Sparrow\",\n    initials: \"DS\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  DOM: { name: \"Dominic Coyne\", initials: \"DC\", theatre: true },\n  // E\n  ELLE_O: { name: \"Elle Oldroyd\", initials: \"EO\" },\n  ELINORE_G: { name: \"Elinore Gillespie\", initials: \"EG\" },\n  ELISE: { name: \"Elise Morley\", initials: \"EM\" },\n  ELLIE_F: { name: \"Ellie Forman\", initials: \"EF\" },\n  ELLIE_G: { name: \"Ellie Gurkin\", initials: \"EG\", travel: true },\n  ELLIE_P: { name: \"Ellie Pearce\", initials: \"EP\" },\n  ELLIE_S: { name: \"Ellie Spanovic\", initials: \"ES\" },\n  EMMA: {\n    name: \"Emma Codrington\",\n    initials: \"EC\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  // F\n  FANNY: { name: \"Fanny Lindqvist\", initials: \"FL\" },\n  // G\n  GEMMA: { name: \"Gemma Gilderthorp\", initials: \"GG\" },\n  GEORGE: { name: \"George Littlehales\", initials: \"GL\" },\n  GRACE: { name: \"Grace Hulme\", initials: \"GH\", travel: true },\n  // H\n  HANNA: { name: \"Hanna Frogner\", initials: \"HF\" },\n  HARRIET_B: { name: \"Harriet Boyle\", initials: \"HB\" },\n  HARRIET_K: { name: \"Harriet Kesterton\", initials: \"HK\" },\n  HEATHER_C: { name: \"Heather Chiles\", initials: \"HC\" },\n  // J\n  JAIMINI: { name: \"Jaimini Popat\", initials: \"JP\" },\n  JAMIE: {\n    name: \"Jamie Halket\",\n    initials: \"JH\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  JAZZ: { name: \"Jasminder Thind\", initials: \"JT\" },\n  JERRY: { name: \"Jerry Edwards\", initials: \"JE\", gigs: true, theatre: true },\n  JOE: { name: \"Joe Edwards\", initials: \"JE\", theatre: true },\n  JESS: { name: \"Jess Smith\", initials: \"JS\" },\n  JUNAID: { name: \"Junaid Khan\", initials: \"JK\" },\n  // K\n  KATE_B: { name: \"Kate Bowmar\", initials: \"KB\" },\n  KIERAN_S: { name: \"Kieran Sawford\", initials: \"KS\" },\n  KIRSTEN: { name: \"Kirsten Jackson\", initials: \"KJ\" },\n  KYLE: { name: \"Kyle Hough\", initials: \"KH\" },\n  // L\n  LAURA: { name: \"Laura Capece-Galeota\", initials: \"LC\" },\n  LEAH: { name: \"Leah Slater-Radway\", initials: \"LS\" },\n  LEWIS: { name: \"Lewis Steadman\", initials: \"LS\", gigs: true, theatre: true },\n  LINDSAY_A: { name: \"Lindsay Aspinall\", initials: \"LA\" },\n  LINDSEY_S: { name: \"Lindsey Skelton\", initials: \"LS\" },\n  LOUISE: { name: \"Louise Blackburn\", initials: \"LB\" },\n  LUKE_J: { name: \"Luke Jones\", initials: \"LJ\" },\n  LUKE_S: { name: \"Luke Stern\", initials: \"LS\" },\n  // M\n  MARIA: { name: \"Maria Taylor\", initials: \"MT\", theatre: true },\n  MEGAN: { name: \"Megan Blackburn\", initials: \"MB\", gigs: true },\n  MUM: { name: \"Mum\", initials: \"M\", gigs: true, theatre: true, travel: true },\n  // N\n  NATALIE: { name: \"Natalie Lambert\", initials: \"NL\" },\n  NAV: { name: \"Navneet Bhogal\", initials: \"NB\" },\n  // O\n  OSCAR: { name: \"Oscar Murray\", initials: \"OM\" },\n  // P\n  PATRICIA: { name: \"Patricia Diaconescu\", initials: \"PD\" },\n  POOJA: { name: \"Pooja Dhir\", initials: \"PD\", travel: true },\n  POPPY: { name: \"Poppy Smith\", initials: \"PS\", gigs: true },\n  // R\n  ROB_G: { name: \"Robert Gall\", initials: \"RG\" },\n  RYAN: { name: \"Ryan Mills\", initials: \"RM\", gigs: true, travel: true },\n  // S\n  SAM_B: { name: \"Sam Berrie\", initials: \"SB\" },\n  SARAH_WA: { name: \"Sarah Walker\", initials: \"SW\" },\n  SARAH_W: { name: \"Sarah Whitaker\", initials: \"SW\" },\n  SIAN: {\n    name: \"Sian Rodway-Smith\",\n    initials: \"SR\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  SIMAN: { name: \"Siman Pone\", initials: \"SP\" },\n  SONYA: { name: \"Sonya Pardi\", initials: \"SP\", gigs: true },\n  STEVE_R: { name: \"Steve Richards\", initials: \"SR\" },\n  // T\n  THOM: { name: \"Thom Stephanakis\", initials: \"TS\" },\n  TOM: { name: \"Tom Chinda-Coutts\", initials: \"TC\", gigs: true, travel: true },\n  TONYA: { name: \"Tonya France\", initials: \"TF\", gigs: true, travel: true }\n};\n","const KEY_WEST = { name: \"Key West\" };\n\nexport const LOCATIONS: IAllCountries = {\n  // B\n  BARBADOS: {\n    name: \"Barbados\",\n    island: true,\n    attractions: { HARRISONS_CAVE: { name: \"Harrison's Cave\" } }\n  },\n  BELGIUM: {\n    name: \"Belgium\",\n    cities: { BRUGES: { name: \"Bruges\" }, YPRES: { name: \"Ypres\" } },\n    attractions: {\n      BATTLEFIELDS: { name: \"Battlefields\" },\n      BELFRY_OF_BRUGES: { name: \"Belfry of Bruges\" }\n    }\n  },\n  // BELIZE: {\n  //   name: \"Belize\",\n  //   cities: {\n  //     BELIZE_CITY: { name: \"Belize City\" },\n  //     capital: true\n  //   },\n  //   islands: {\n  //     AMBERGRIS_CAYE: { name: \"Ambergris Caye\" },\n  //     CAYE_CAULKER: { name: \"Caye Caulker\" }\n  //   },\n  //   attractions: {\n  //     BARRIER_REEF: { name: \"Belize Barrier Reef\", highlight: true }\n  //   }\n  // },\n  BRAZIL: {\n    name: \"Brazil\",\n    cities: { RIO_DE_JANEIRO: { name: \"Rio de Janeiro\" } },\n    attractions: {\n      MODERN_ART_MUSEUM_RIO: {\n        name: \"Modern Art Museum Rio\",\n        foreignName: \"Museu de Arte Moderna do Rio de Janeiro\"\n      },\n      COPACABANA_BEACH: { name: \"Copacabana Beach\" },\n      ROCINHA_FAVELA: { name: \"Rocinha Favela\" },\n      CHRIST_THE_REDEEMER: { name: \"Cristo Redentor\" },\n      SELARON_STEPS: {\n        name: \"Selarón Steps\",\n        foreignName: \"Escadaria Selarón\"\n      },\n      HANG_GLIDING: { name: \"São Conrado Hang-Gliding\", highlight: true },\n      PICO_DO_PAPAGAIO: {\n        name: \"Pico do Papagaio\",\n        englishName: \"Parrot's Peak\",\n        foreignName: \"Pico do Papagaio\",\n        highlight: true\n      }\n    },\n    islands: { ILHA_GRANDE: { name: \"Ilha Grande\" } }\n  },\n  // C\n  CANADA: {\n    name: \"Canada\",\n    cities: { NIAGARA_FALLS: { name: \"Niagara Falls\" } },\n    attractions: { NIAGARA_FALLS: { name: \"Niagara Falls\", highlight: true } }\n  },\n  // COSTA_RICA: {\n  //   name: \"Costa Rica\",\n  //   cities: {\n  //     SAN_JOSE: { name: \"San Jose\", capital: true }\n  //   },\n  //   towns: {\n  //     MONTEVERDE: { name: \"Monteverde\" },\n  //     PUERTO_VIEJO: { name: \"Puerto Viejo\" }\n  //   },\n  //   attractions: {\n  //     CORCOVADO: { name: \"Corcovado National Park\", highlight: true },\n  //     JAGUAR_RESCUE_CENTER: { name: \"Jaguar Rescue Center\" }\n  //   }\n  // },\n  CROATIA: {\n    name: \"Croatia\",\n    cities: { DUBROVNIK: { name: \"Dubrovnik\" } },\n    attractions: {\n      DUBROVNIK_CABLE_CAR: { name: \"Dubrovnik Cable Car\" },\n      DUBROVNIK_WALLS: { name: \"Walls of Dubrovnik\", highlight: true }\n    }\n  },\n  CUBA: {\n    name: \"Cuba\",\n    island: true,\n    cities: { HAVANA: { name: \"Havana\", capital: true } },\n    towns: { VARADERO: { name: \"Varadero\" } }\n  },\n  CYPRUS: {\n    name: \"Cyprus\",\n    cities: { PAPHOS: { name: \"Paphos\" } },\n    attractions: {\n      PAPHOS_ARCHAEOLOGICAL_PARK: { name: \"Paphos Archaeological Park\" }\n    }\n  },\n  CZECH_REPUBLIC: {\n    name: \"Czech Republic\",\n    cities: { PRAGUE: { name: \"Prague\", capital: true } },\n    attractions: {\n      JOHN_LENNON_WALL: { name: \"John Lennon Wall\" },\n      VYSEHRAD: { name: \"Vyšehrad\" }\n    }\n  },\n  // D\n  DENMARK: {\n    name: \"Denmark\",\n    cities: { COPENHAGEN: { name: \"Copenhagen\" } },\n    attractions: {\n      LOUISIANA_ART_MUSEUM: { name: \"Louisiana Museum of Modern Art\" }\n    }\n  },\n  // E\n  ECUADOR: {\n    name: \"Ecuador\",\n    cities: {\n      BANOS: { name: \"Baños\" },\n      GUAYAQUIL: { name: \"Guayaquil\" },\n      OTAVALO: { name: \"Otavalo\" },\n      QUITO: { name: \"Quito\", capital: true }\n    },\n    attractions: {\n      EQUATOR_MONUMENT: {\n        name: \"Equator Monument\",\n        foreignName: \"Ciudad Mitad del Mundo\"\n      },\n      OTAVALO_MARKET: { name: \"Otavalo Market\" },\n      TORTOISE_PARK: {\n        name: \"Giant Tortoise Reserve\",\n        foreignName: \"Reserva el Chato\"\n      },\n      PAILON_DEL_DIABLO: { name: \"Pailon del Diablo\", highlight: true },\n      COTOPAXI: { name: \"Cotopaxi Volcano\", highlight: true }\n    },\n    islands: { GALAPAGOS: { name: \"Galápagos Islands\" } }\n  },\n  EGYPT: {\n    name: \"Egypt\",\n    cities: {\n      CAIRO: { name: \"Cairo\", capital: true },\n      SHARM_EL_SHEIKH: { name: \"Sharm El Sheikh\" }\n    },\n    attractions: {\n      GIZA_PYRAMIDS_SPHINX: {\n        name: \"Giza Pyramids & Great Sphinx\",\n        highlight: true\n      }\n    }\n  },\n  // F\n  FRANCE: {\n    name: \"France\",\n    cities: {\n      MONACO: { name: \"Monaco\" },\n      NICE: { name: \"Nice\" },\n      PARIS: { name: \"Paris\", capital: true }\n    },\n    attractions: {\n      SACRE_COEUR: { name: \"Sacré-Cœur\" },\n      LOUVRE: { name: \"Louvre\" },\n      ARC_DE_TRIOMPHE: { name: \"Arc de Triomphe\" },\n      AIR_SPACE_MUSEUM: { name: \"National Air and Space Museum of France\" },\n      SCIENCE_MUSEUM: { name: \"Paris Science Museum\" },\n      EIFFEL_TOWER: { name: \"Eiffel Tower\" },\n      NOTRE_DAME: { name: \"Notre-Dame de Paris\" },\n      DISNEYLAND_PARIS: { name: \"Disneyland Paris\", themePark: true },\n      PARC_ASTERIX: { name: \"Parc Astérix\", themePark: true }\n    }\n  },\n  // G\n  GERMANY: {\n    name: \"Germany\",\n    cities: { BERLIN: { name: \"Berlin\", capital: true } },\n    attractions: {\n      REICHSTAG: { name: \"Reichstag Building\" },\n      HOLOCAUST_MEMORIAL: { name: \"Holocaust Memorial\" },\n      BRANDENBURG_GATE: { name: \"Brandenburg Gate\" },\n      BERLIN_WALL: { name: \"Berlin Wall\" },\n      EAST_SIDE_GALLERY: { name: \"East Side Gallery\" }\n    }\n  },\n  GREECE: {\n    name: \"Greece\",\n    islands: { KOS: { name: \"Kos\" } },\n    regions: { HALKIDIKI: { name: \"Halkidiki\" } }\n  },\n  // H\n  HUNGARY: {\n    name: \"Hungary\",\n    cities: { BUDAPEST: { name: \"Budapest\", capital: true } },\n    attractions: {\n      PARLIAMENT_BUILDING: { name: \"Hungarian Parliament Building\" },\n      THERMAL_BATH_SZECHENYI: { name: \"Széchenyi Thermal Bath\" },\n      CITADELLA: { name: \"Citadella\" }\n    }\n  },\n  // I\n  IRELAND: {\n    name: \"Ireland\",\n    attractions: {\n      ST_STEPHENS_GREEN_PARK: { name: \"St. Stephen's Green Park\" },\n      DUBLIN_PRISON: { name: \"Kilmainham Gaol\" },\n      GUINNESS_STOREHOUSE: { name: \"Guinness Storehouse\" }\n    },\n    cities: { DUBLIN: { name: \"Dublin\", capital: true } }\n  },\n  ITALY: {\n    name: \"Italy\",\n    regions: {\n      SICILY: { name: \"Sicily\" }\n    },\n    cities: {\n      NAPLES: { name: \"Naples\" },\n      MILAN: { name: \"Milan\" },\n      ROME: { name: \"Rome\", capital: true },\n      VATICAN: { name: \"Vatican City\" },\n      CATANIA: { name: \"Catania\" },\n      VENICE: { name: \"Venice\" },\n      POMPEII: { name: \"Pompeii\" }\n    },\n    towns: { JESOLO: { name: \"Jesolo\" }, SORRENTO: { name: \"Sorrento\" } },\n    attractions: {\n      ARCO_DELLA_PACE: { name: \"Arco della Pace\" },\n      SEMPIONE_PARK: { name: \"Sempione Park\" },\n      MILAN_MALL: { name: \"Galleria Vittorio Emanuele II\" },\n      COLOSSEUM: { name: \"Colosseum\" },\n      TREVI_FOUNTAIN: { name: \"Trevi Fountain\" },\n      VESUVIUS: { name: \"Mount Vesuvius\" },\n      ETNA: { name: \"Mount Etna\" }\n    }\n  },\n  // L\n  LAOS: {\n    name: \"Laos\",\n    cities: {\n      LUANG_PRABANG: { name: \"Luang Prabang\" },\n      VIENTIANE: { name: \"Vientiane\", capital: true }\n    },\n    attractions: {\n      KUANG_SI_FALLS: { name: \"Kuang Si Falls\", highlight: true },\n      ELEPHANT_VILLAGE: { name: \"Elephant Village\" },\n      BUDDHA_PARK: { name: \"Buddha Park\" }\n    }\n  },\n  // N\n  NETHERLANDS: {\n    name: \"Netherlands\",\n    cities: {\n      AMSTERDAM: { name: \"Amsterdam\", capital: true },\n      GRONINGEN: { name: \"Groningen\" }\n    },\n    attractions: {\n      STEDELIJK_MUSEUM: { name: \"Stedelijk Museum Amsterdam\" },\n      SEX_MUSEUM: { name: \"Venustempel Sex Museum\" },\n      GRONINGEN_MUSEUM: { name: \"Groninger Museum\" }\n    }\n  },\n  NORWAY: {\n    name: \"Norway\",\n    cities: { OSLO: { name: \"Oslo\", capital: true } },\n    islands: { HOVEDOYA: { name: \"Hovedøya\" } }\n  },\n  // P\n  PERU: {\n    name: \"Peru\",\n    cities: {\n      AREQUIPA: { name: \"Arequipa\" },\n      CUSCO: { name: \"Cusco\" },\n      LIMA: { name: \"Lima\", capital: true },\n      HUARAZ: { name: \"Huaraz\" }\n    },\n    attractions: {\n      COLCA_CANYON: { name: \"Colca Canyon\" },\n      LAGUNA_69: { name: \"Laguna 69\", highlight: true },\n      JUNGLE_ZIPLINE: {\n        name: \"Santa Teresa Vertikal Zipline\",\n        highlight: true\n      },\n      MACHU_PICCHU: { name: \"Machu Picchu\", highlight: true },\n      HUACACHINA: { name: \"Huacachina Sand Dunes\", highlight: true },\n      HUASCARAN_PARK: { name: \"Huascaran National Park\" },\n      MANU: { name: \"Manú National Park\" },\n      RAINBOW_MOUNTAIN: { name: \"Rainbow Mountain\", highlight: true }\n    },\n    towns: { MANCORA: { name: \"Mancora\" }, PARACAS: { name: \"Paracas\" } },\n    villages: { HUACACHINA: { name: \"Huacachina\" } }\n  },\n  POLAND: {\n    name: \"Poland\",\n    cities: { KRAKOW: { name: \"Kraków\" } },\n    attractions: {\n      AUSCHWITZ_BIRKENAU: { name: \"Auschwitz-Birkenau\", highlight: true },\n      WIELICZKA_SALT_MINE: { name: \"Wieliczka Salt Mine\" }\n    },\n    towns: { WIELICZKA: { name: \"Wieliczka\" } }\n  },\n  PORTUGAL: {\n    name: \"Portugal\",\n    cities: {\n      LISBON: { name: \"Lisbon\", capital: true },\n      PORTIMAO: { name: \"Portimão\" }\n    },\n    attractions: {\n      ZOOMARINE: { name: \"Zoomarine Algarve\" },\n      OCENARIO_DE_LISBOA: {\n        name: \"Lisbon Oceanarium\",\n        foreignName: \"Oceanário de Lisboa\"\n      }\n    },\n    towns: {\n      FERRAGUDO: { name: \"Ferragudo\" },\n      TAVIRA: { name: \"Tavira\" },\n      VILAMOURA: { name: \"Vilamoura\" }\n    }\n  },\n  // S\n  SPAIN: {\n    name: \"Spain\",\n    cities: {\n      BARCELONA: { name: \"Barcelona\" },\n      MADRID: { name: \"Madrid\", capital: true }\n    },\n    attractions: {\n      CIUTADELLA_PARK: { name: \"Ciutadella Park\" },\n      PARK_GUELL: { name: \"Park Güell\", highlight: true },\n      PARQUE_WARNER: { name: \"Parque Warner Madrid\", themePark: true },\n      SIAM_PARK: { name: \"Siam Park\", themePark: true },\n      PORTAVENTURA: { name: \"PortAventura\", themePark: true }\n    },\n    islands: {\n      TENERIFE: { name: \"Tenerife\" },\n      IBIZA: { name: \"Ibiza\" },\n      MINORCA: { name: \"Minorca\" },\n      LANZAROTE: { name: \"Lanzarote\" }\n    }\n  },\n  // T\n  THAILAND: {\n    name: \"Thailand\",\n    cities: {\n      BANGKOK: { name: \"Bangkok\", capital: true },\n      CHIANG_MAI: { name: \"Chiang Mai\" },\n      CHIANG_RAI: { name: \"Chiang Rai\" }\n    },\n    islands: {\n      KOH_PHI_PHI: { name: \"Koh Phi Phi\" },\n      KOH_PHANGAN: { name: \"Koh Phangan\" },\n      KOH_TAO: { name: \"Koh Tao\" }\n    },\n    attractions: {\n      WHITE_TEMPLE: { name: \"Wat Rong Khun\" },\n      MAYA_BAY: { name: \"Maya Bay\" },\n      PAI_CANYON: { name: \"Pai Canyon\", highlight: true },\n      TIGER_KINGDOM: { name: \"Tiger Kingdom\" },\n      GRAND_PALACE: { name: \"Grand Palace Bangkok\", highlight: true },\n      SKY_BAR: { name: \"Sky Bar Bangkok\" }\n    },\n    towns: { KRABI: { name: \"Krabi\" }, PAI: { name: \"Pai\" } }\n  },\n  // U\n  UGANDA: {\n    name: \"Uganda\",\n    cities: { JINJA: { name: \"Jinja\" } },\n    attractions: {\n      RAFTING_NALUBALE: {\n        name: \"River Nile Nalubale Rafting\",\n        highlight: true\n      },\n      NILE_SOURCE: { name: \"Source of the Nile\" }\n    }\n  },\n  UAE: {\n    name: \"United Arab Emirates\",\n    cities: { DUBAI: { name: \"Dubai\" } },\n    attractions: {\n      AQUAVENTURE: { name: \"Aquaventure Waterpark\", themePark: true },\n      BURJ_KHALIFA: { name: \"Burj Khalifa\" }\n    }\n  },\n  UK: {\n    name: \"United Kingdom\",\n    insignificant: true,\n    attractions: {\n      ALTON_TOWERS: {\n        name: \"Alton Towers\",\n        insignificant: true,\n        themePark: true\n      },\n      BLACKPOOL_PLEASURE_BEACH: {\n        name: \"Blackpool Pleasure Beach\",\n        insignificant: true,\n        themePark: true\n      },\n      WINTER_WONDERLAND: {\n        name: \"Winter Wonderland\",\n        insignificant: true,\n        themePark: true\n      },\n      THORPE_PARK: {\n        name: \"Thorpe Park\",\n        insignificant: true,\n        themePark: true\n      },\n      EDEN_PROJECT: { name: \"Eden Project\", insignificant: true },\n      TATE_BRITAIN: { name: \"Tate Britain\", insignificant: true },\n      LONDON_EYE: { name: \"London Eye\", insignificant: true },\n      RICHMOND_PARK: { name: \"Richmond Park\", insignificant: true },\n      SHERWOOD_FOREST: { name: \"Sherwood Forest\", insignificant: true },\n      CALKE_ABBEY: { name: \"Calke Abbey\", insignificant: true },\n      BATTERSEA_PARK: { name: \"Battersea Park\", insignificant: true },\n      CRYSTAL_PALACE_PARK: { name: \"Crystal Palace Park\", insignificant: true },\n      QUEEN_ELIZABETH_OLYMPIC_PARK: {\n        name: \"Queen Elizabeth Olympic Park\",\n        insignificant: true\n      },\n      VICTORIA_PARK: { name: \"Victoria Park\", insignificant: true },\n      GREENWICH_PARK: { name: \"Greenwich Park\", insignificant: true },\n      KEW_GARDENS: { name: \"Kew Gardens\", insignificant: true },\n      EPPING_FOREST: { name: \"Epping Forest\", insignificant: true },\n      HAMPSTEAD_HEATH: { name: \"Hampstead Heath\", insignificant: true },\n      V_A_MUSEUM: {\n        name: \"Victoria and Albert Museum\",\n        insignificant: true\n      },\n      SCIENCE_MUSEUM: { name: \"Science Museum\", insignificant: true },\n      TATE_MODERN: { name: \"Tate Modern\", insignificant: true },\n      NATURAL_HISTORY_MUSEUM: {\n        name: \"Natural History Museum London\",\n        insignificant: true\n      },\n      LAKE_DISTRICT: { name: \"Lake District\" },\n      HADRIANS_WALL: { name: \"Hadrian's Wall\", insignificant: true }\n    },\n    islands: {\n      ANGLESEY: { name: \"Anglesey\", insignificant: true }\n    },\n    cities: {\n      BATH: { name: \"Bath\", insignificant: true },\n      BLACKPOOL: { name: \"Blackpool\", insignificant: true },\n      BRIGHTON: { name: \"Brighton\", insignificant: true },\n      BRISTOL: { name: \"Bristol\", insignificant: true },\n      BIRMINGHAM: { name: \"Birmingham\", insignificant: true },\n      CAMBRIDGE: { name: \"Cambridge\", insignificant: true },\n      COVENTRY: { name: \"Coventry\", insignificant: true },\n      DERBY: { name: \"Derby\", insignificant: true },\n      HULL: { name: \"Hull\", insignificant: true },\n      LEEDS: { name: \"Leeds\", insignificant: true },\n      LEICESTER: { name: \"Leicester\", insignificant: true },\n      LINCOLN: { name: \"Lincoln\", insignificant: true },\n      LONDON: { name: \"London\", insignificant: true },\n      LIVERPOOL: { name: \"Liverpool\", insignificant: true },\n      MANCHESTER: { name: \"Manchester\", insignificant: true },\n      NEWCASTLE: { name: \"Newcastle\", insignificant: true },\n      NORWICH: { name: \"Norwich\", insignificant: true },\n      NOTTINGHAM: { name: \"Nottingham\", insignificant: true },\n      OXFORD: { name: \"Oxford\", insignificant: true },\n      SHEFFIELD: { name: \"Sheffield\", insignificant: true },\n      WOLVERHAMPTON: { name: \"Wolverhampton\", insignificant: true },\n      YORK: { name: \"York\", insignificant: true }\n    },\n    regions: { CORNWALL: { name: \"Cornwall\" } },\n    towns: {\n      DONCASTER: { name: \"Doncaster\", insignificant: true },\n      HARROGATE: { name: \"Harrogate\", insignificant: true },\n      ILKLEY: { name: \"Ilkley\", insignificant: true },\n      MILTON_KEYNES: { name: \"Milton Keynes\", insignificant: true },\n      STRATFORD: { name: \"Stratford-upon-Avon\", insignificant: true },\n      MANSFIELD: { name: \"Mansfield\", insignificant: true },\n      NEWARK: { name: \"Newark\", insignificant: true },\n      NEWQUAY: { name: \"Newquay\", insignificant: true },\n      PADSTOW: { name: \"Padstow\", insignificant: true },\n      TENBY: { name: \"Tenby\", insignificant: true },\n      SCARBOROUGH: { name: \"Scarborough\", insignificant: true }\n    }\n  },\n  USA: {\n    name: \"United States\",\n\n    attractions: {\n      ALCATRAZ_PRISON: {\n        name: \"Alcatraz Federal Penitentiary\",\n        highlight: true\n      },\n      FISHERMANS_WHARF: { name: \"Fisherman's Wharf\" },\n      FARMERS_MARKET: { name: \"Farmers Market\" },\n      HOLLYWOOD_WALK_OF_FAME: { name: \"Hollywood Walk of Fame\" },\n      WHITE_HOUSE: { name: \"White House\" },\n      CAPITOL_BUILDING: { name: \"Capitol Building\" },\n      WASHINGTON_MONUMENT: { name: \"Washington Monument\" },\n      LINCOLN_MEMORIAL: { name: \"Lincoln Memorial\" },\n      TIMES_SQUARE: { name: \"Times Square\" },\n      BROOKLYN_BRIDGE: { name: \"Brooklyn Bridge\" },\n      WORLD_TRADE_CENTER: { name: \"World Trade Center\" },\n      GOLDEN_GATE_BRIDGE: { name: \"Golden Gate Bridge\", highlight: true },\n      CENTRAL_PARK: { name: \"Central Park\", highlight: true },\n      // CLEARWATER_BEACH: { name: \"Clearwater Beach\" },\n      VENICE_BEACH: { name: \"Venice Beach\" },\n      DISNEYLAND_CALIFORNIA_ADVENTURE: {\n        name: \"Disneyland California Adventure\",\n        themePark: true\n      },\n      DISNEY_MGM_STUDIOS: { name: \"Disney-MGM Studios\", themePark: true },\n      DISNEY_ANIMAL_KINGDOM: {\n        name: \"Disney's Animal Kingdom\",\n        themePark: true\n      },\n      DISNEY_EPCOT: { name: \"Epcot\", themePark: true },\n      WET_N_WILD_ORLANDO: { name: \"Wet 'n Wild Orlando\", themePark: true },\n      BLIZZARD_BEACH: { name: \"Blizzard Beach Water Park\", themePark: true },\n      DISNEY_MAGIC_KINGDOM: { name: \"Magic Kingdom Park\", themePark: true },\n      UNIVERSAL_STUDIOS_FLORIDA: {\n        name: \"Universal Studios Florida\",\n        themePark: true\n      },\n      UNIVERSALS_ISLANDS_OF_ADVENTURE: {\n        name: \"Universal's Islands of Adventure\",\n        themePark: true\n      },\n      GRAND_CANYON: { name: \"Grand Canyon\", highlight: true },\n      KNOTTS_BERRY_FARM: { name: \"Knott's Berry Farm\", themePark: true },\n      SEAWORLD_ORLANDO: { name: \"SeaWorld Orlando\", themePark: true },\n      BUSCH_GARDENS_WILLIAMSBURG: {\n        name: \"Busch Gardens Williamsburg\",\n        themePark: true\n      },\n      BUSCH_GARDENS_TAMPA: { name: \"Busch Gardens Tampa\", themePark: true },\n      SIX_FLAGS_AMERICA: { name: \"Six Flags America\", themePark: true },\n      SIX_FLAGS_MAGIC_MOUNTAIN: {\n        name: \"Six Flags Magic Mountain\",\n        themePark: true\n      },\n      SIX_FLAGS_NEW_ENGLAND: { name: \"Six Flags New England\", themePark: true }\n    },\n    cities: {\n      BOSTON_MASSACHUSETTS: { name: \"Boston\" },\n      KEY_WEST,\n      LAS_VEGAS: { name: \"Las Vegas\" },\n      VIRGINIA_BEACH: { name: \"Virginia Beach\" },\n      LOS_ANGELES: { name: \"Los Angeles\" },\n      NEW_YORK_CITY: { name: \"New York City\" },\n      SAN_FRANCISCO: { name: \"San Francisco\" },\n      SPRINGFIELD_MASSACHUSETTS: { name: \"Springfield\" },\n      WASHINGTON_DC: { name: \"Washington DC\", capital: true }\n    },\n    islands: {\n      KEY_WEST,\n      ALCATRAZ: { name: \"Alcatraz\" },\n      MARTHAS_VINEYARD: { name: \"Martha's Vineyard\" }\n    },\n    regions: {\n      CAPE_COD: { name: \"Cape Cod\" },\n      FLORIDA_KEYS: { name: \"Florida Keys\" },\n      ISLAMORADA: { name: \"Islamorada\" }\n    },\n    states: {\n      FLORIDA: { name: \"Florida\" },\n      NEW_YORK: { name: \"New York\" },\n      MASSACHUSETTS: { name: \"Massachusetts\" },\n      VIRGINIA: { name: \"Virginia\" }\n    }\n  }\n};\n","const TABLESPOON: string = \"tbsp\";\n\nexport const SAINSBURYS_SEASONING_COST: IIngredientCost = {\n  quantity: 6,\n  measurement: TABLESPOON,\n  price: 1\n};\n\nexport const MEASUREMENTS: IMeasurements = {\n  // WEIGHT\n  GRAM: \"g\",\n  KILOGRAM: \"kg\",\n\n  // SPOONS\n  TEASPOON: \"tsp\",\n  TABLESPOON,\n\n  // CAPACITY\n  MILLILITRE: \"ml\",\n  LITRE: \"L\",\n\n  // LENGTH\n  CENTIMETRE: \"cm\",\n\n  // COLLOQUIAL\n  CAN: \"can\",\n  SPRIG: \"sprig\",\n  SLICE: \"slice\",\n  JAR: \"jar\",\n  PORTION: \"portion\",\n  SERVING: \"serving\",\n  CHUNK: \"chunk\",\n  SEGMENT: \"segment\",\n  PANCAKE: \"pancake\"\n};\n","export const MUSICIANS: IMusicians = {\n  // 123\n  \"1975\": { name: \"1975, The\" },\n  \"100_GECS\": { name: \"100 gecs\" },\n  // A\n  AURORA: { name: \"Aurora\" },\n  THE_ACADEMY_IS: { name: \"Academy Is..., The\" },\n  ALESSIA_CARA: { name: \"Alessia Cara\" },\n  ALEX_CHAPMAN: { name: \"Alex Chapman\" },\n  ALL_AMERICAN_REJECTS: { name: \"All-American Rejects, The\" },\n  ALLIE_X: { name: \"Allie X\" },\n  ALL_TIME_LOW: { name: \"All Time Low\" },\n  ALMA: { name: \"Alma\" },\n  AMOS_LEE: { name: \"Amos Lee\" },\n  ANNA_OF_THE_NORTH: { name: \"Anna of the North\" },\n  ADELE: { name: \"Adele\" },\n  ANASTACIA: { name: \"Anastacia\" },\n  ANNE_MARIE: { name: \"Anne-Marie\" },\n  AQUILO: { name: \"Aquilo\" },\n  ARCTIC_MONKEYS: { name: \"Arctic Monkeys\" },\n  ARIANA_GRANDA: { name: \"Ariana Grande\" },\n  AUDITION: { name: \"Audition, The\" },\n  // B\n  BAAUER: { name: \"Baauer\" },\n  BANANARAMA: { name: \"Bananarama\" },\n  BANKS: { name: \"Banks\" },\n  BASTILLE: { name: \"Bastille\" },\n  BAYNK: { name: \"BAYNK\" },\n  BEARS_DEN: { name: \"Bear's Den\" },\n  BECKY_HILL: { name: \"Becky Hill\" },\n  BEN_HOWARD: { name: \"Ben Howard\" },\n  BETSY: { name: \"Betsy\" },\n  BETTY_WHO: { name: \"Betty Who\" },\n  BEYONCE: { name: \"Beyoncé\" },\n  BICEP: { name: \"Bicep\" },\n  BILLIE_EILISH: { name: \"Billie Eilish\" },\n  BLACK_KIDS: { name: \"Black Kids\" },\n  B_O_B: { name: \"B.o.B\" },\n  BONDAX: { name: \"Bondax\" },\n  BON_IVER: { name: \"Bon Iver\" },\n  BONTAN: { name: \"Bontan\" },\n  BORNS: { name: \"BØRNS\" },\n  BOYS_LIKE_GIRLS: { name: \"Boys Like Girls\" },\n  BLONDE: { name: \"Blonde\" },\n  BREACH: { name: \"Breach\" },\n  BRIGITTE_APHRODITE: { name: \"Brigitte Aphrodite\" },\n  BRITNEY_SPEARS: { name: \"Britney Spears\" },\n  BROODS: { name: \"Broods\" },\n  BULOW: { name: \"bülow\" },\n  // C\n  CAMILA_CABELLO: { name: \"Camila Cabello\" },\n  CARIBOU: { name: \"Caribou\" },\n  CARLY_RAE_JEPSEN: { name: \"Carly Rae Jepsen\" },\n  CARL_COX: { name: \"Carl Cox\" },\n  CAROLINE_POLACHEK: { name: \"Caroline Polachek\" },\n  CELESTE: { name: \"Celeste\" },\n  CHARLI_ADAMS: { name: \"Charli Adams\" },\n  CHARLI_XCX: { name: \"Charli XCX\" },\n  CHARLOTTE_CHURCH: { name: \"Charlotte Church\" },\n  CHELSEA_CUTLER: { name: \"Chelsea Cutler\" },\n  CHEMICAL_BROTHERS: { name: \"Chemical Brothers, The\" },\n  CHERYL: { name: \"Cheryl\" },\n  CHRISTINE_AND_THE_QUEENS: { name: \"Christine and the Queens\" },\n  CHRVCHES: { name: \"CHVRCHES\" },\n  CLAIRO: { name: \"Clairo\" },\n  CLEAN_BANDIT: { name: \"Clean Bandit\" },\n  COBRA_STARSHIP: { name: \"Cobra Starship\" },\n  CODE: { name: \"Code, The\" },\n  CRUEL_YOUTH: { name: \"Cruel Youth\", favourite: true },\n  CUTE_IS_WHAT_WE_AIM_FOR: { name: \"Cute Is What We Aim for\" },\n  CYRIL_HAHN: { name: \"Cyril Hahn\" },\n  // D\n  DANIEL_AVERY: { name: \"Daniel Avery\" },\n  DAUGHTER: { name: \"Daughter\" },\n  DAVID_RODIGAN: { name: \"David Rodigan\" },\n  DIPLO: { name: \"Diplo\" },\n  DISCLOSURE: { name: \"Disclosure\" },\n  DIZZEE_RASCAL: { name: \"Dizzee Rascal\" },\n  DRUMS: { name: \"Drums, The\" },\n  DUKE_DUMONT: { name: \"Duke Dumont\" },\n  DUA_LIPA: { name: \"Dua Lipa\" },\n  DUSKY: { name: \"Dusky\" },\n  DYLAN: { name: \"Dylan\" },\n  // E\n  EARTHEATER: { name: \"Eartheater\" },\n  EATS_EVERYTHING: { name: \"Eats Everything\" },\n  ELDERBROOK: { name: \"Elderbrook\" },\n  ELIZA_DOOLITTLE: { name: \"Eliza Doolittle\" },\n  ELLA_EYRE: { name: \"Ella Eyre\" },\n  ELLIE_GOULDING: { name: \"Ellie Goulding\" },\n  EMAROSA: { name: \"Emarosa\" },\n  // F\n  FALL_OUT_BOY: { name: \"Fall Out Boy\" },\n  FKA_TWIGS: { name: \"FKA twigs\" },\n  FLEETWOOD_MAC: { name: \"Fleetwood Mac\" },\n  FLIGHT_FACILITIES: { name: \"Flight Facilities\" },\n  FLORENCE_AND_THE_MACHINE: { name: \"Florence + the Machine\" },\n  FOREVER_THE_SICKEST_KIDS: { name: \"Forever the Sickest Kids\" },\n  FOURS: { name: \"Fours\" },\n  FOUR_TET: { name: \"Four Tet\" },\n  FOXES: { name: \"Foxes\" },\n  FRANCES: { name: \"Frances\" },\n  FRANCIS_AND_THE_LIGHTS: { name: \"Francis and the Lights\" },\n  FRANK_OCEAN: { name: \"Frank Ocean\" },\n  FREYA_RIDINGS: { name: \"Freya Ridings\" },\n  THE_FRIDAY_NIGHT_BOYS: { name: \"Friday Night Boys, The\" },\n  FRIEND_WITHIN: { name: \"Friend Within\" },\n  FUN_LOVIN_CRIMINALS: { name: \"Fun Lovin' Criminals\" },\n  // G\n  GABRIELLE: { name: \"Gabrielle\" },\n  GEORGE_EZRA: { name: \"George Ezra\" },\n  GEORGE_FITZGERALD: { name: \"George FitzGerald\" },\n  GEORGIA: { name: \"Georgia\" },\n  G_FLIP: { name: \"G Flip\" },\n  GLOWIE: { name: \"Glowie\" },\n  GORGON_CITY: { name: \"Gorgon City\" },\n  GRACEY: { name: \"GRACEY\" },\n  GREEN_VELVET: { name: \"Green Velvet\" },\n  GRIMES: { name: \"Grimes\" },\n  GROOVE_ARMADA: { name: \"Groove Armada\" },\n  GRYFFIN: { name: \"Gryffin\" },\n  GYM_CLASS_HEROES: { name: \"Gym Class Heroes\" },\n  // H\n  HAIM: { name: \"HAIM\" },\n  HALSEY: { name: \"Halsey\" },\n  HANNAH_WANTS: { name: \"Hannah Wants\" },\n  HAUX: { name: \"Haux\" },\n  HEIDI: { name: \"Heidi\" },\n  HEY_MONDAY: { name: \"Hey Monday\" },\n  HOLLY_HUMBERSTONE: { name: \"Holly Humberstone\" },\n  HORSE_MEAT_DISCO: { name: \"Horse Meat Disco\" },\n  // I\n  INCOGNITO: { name: \"Incognito\" },\n  // J\n  JAMES_BAY: { name: \"James Bay\" },\n  JAMES_BLAKE: { name: \"James Blake\" },\n  JAMIE_JONES: { name: \"Jamie Jones\" },\n  JAMIE_T: { name: \"Jamie T\" },\n  JAMIE_XX: { name: \"Jamie xx\" },\n  JAX_JONES: { name: \"Jax Jones\" },\n  JAY_Z: { name: \"JAY Z\" },\n  JEREMY_ZUCKER: { name: \"Jeremy Zucker\" },\n  JESS_GLYNNE: { name: \"Jess Glynne\" },\n  JESSIE_WARE: { name: \"Jessie Ware\" },\n  JOE_GODDARD: { name: \"Joe Goddard\" },\n  JOHNNY_MARR: { name: \"Johnny Marr\" },\n  JONAS_BLUE: { name: \"Jonas Blue\" },\n  JONES: { name: \"Jones\" },\n  JON_HOPKINS: { name: \"Jon Hopkins\" },\n  JORIS_VOORN: { name: \"Joris Voorn\" },\n  JORJA_SMITH: { name: \"Jorja Smith\" },\n  JOSH_BUTLER: { name: \"Josh Butler\" },\n  JOY_ORBISON: { name: \"Joy Orbison\" },\n  JOSEF_SALVAT: { name: \"Josef Salvat\" },\n  JULIA_MICHAELS: { name: \"Julia Michaels\" },\n  JULIO_BASHMORE: { name: \"Julio Bashmore\" },\n  JUSTIN_BIEBER: { name: \"Justin Bieber\" },\n  JUSTIN_MARTIN: { name: \"Justin Martin\" },\n  // K\n  KAH_LO: { name: \"Kah-Lo\" },\n  KANYE_WEST: { name: \"Kanye West\" },\n  KATE_NASH: { name: \"Kate Nash\" },\n  KATY_PERRY: { name: \"Katy Perry\" },\n  KAYTRANADA: { name: \"Kaytranada\" },\n  KESHA: { name: \"Kesha\" },\n  KIASMOS: { name: \"Kiasmos\" },\n  KIDNAP: { name: \"Kidnap\" },\n  KIDS_IN_GLASS_HOUSES: { name: \"Kids In Glass Houses\" },\n  THE_KILLERS: { name: \"Killers, The\" },\n  KIM_PETRAS: { name: \"Kim Petras\" },\n  KOLSCH: { name: \"Kölsch\" },\n  KYGO: { name: \"Kygo\" },\n  // L\n  LADY_GAGA: { name: \"Lady Gaga\" },\n  LADY_STARLIGHT: { name: \"Lady Starlight\" },\n  LANA_DEL_REY: { name: \"Lana Del Rey\", favourite: true },\n  LANE_8: { name: \"Lane 8\" },\n  LANY: { name: \"LANY\" },\n  LA_ROUX: { name: \"La Roux\" },\n  LAUV: { name: \"Lauv\" },\n  L_DEVINE: { name: \"L Devine\" },\n  LELAND: { name: \"Leland\" },\n  LENNON_STELLA: { name: \"Lennon Stella\" },\n  LEON: { name: \"LÉON\" },\n  LILY_ALLEN: { name: \"Lily Allen\" },\n  LISSIE: { name: \"Lissie\" },\n  LITTLE_COMETS: { name: \"Little Comets\" },\n  LITTLE_DRAGON: { name: \"Little Dragon\" },\n  LONDON_GRAMMAR: { name: \"London Grammar\" },\n  LORDE: { name: \"Lorde\" },\n  LUCY_ROSE: { name: \"Lucy Rose\" },\n  LYKKE_LI: { name: \"Lykke Li\" },\n  LYVES: { name: \"Lyves\" },\n  // M\n  MACEO_PLEX: { name: \"Maceo Plex\" },\n  MALLRAT: { name: \"Mallrat\" },\n  MAGGIE_ROGERS: { name: \"Maggie Rogers\" },\n  THE_MAINE: { name: \"Maine, The\" },\n  MAJOR_LAZER: { name: \"Major Lazer\" },\n  MARY_J_BLIGE: { name: \"Mary J. Blige\" },\n  MARINA: { name: \"MARINA\" },\n  MARTIN_SOLVEIG: { name: \"Martin Solveig\" },\n  MELANIE_MARTINEZ: { name: \"Melanie Martinez\" },\n  METRO_STATION: { name: \"Metro Station\" },\n  MICHAEL_KIWANUKA: { name: \"Michael Kiwanuka\" },\n  MIDLAND: { name: \"Midland\" },\n  MIGUEL: { name: \"Miguel\" },\n  MIKE_POSNER: { name: \"Mike Posner\" },\n  MILEY_CYRUS: { name: \"Miley Cyrus\" },\n  MISHA_B: { name: \"Misha B\" },\n  M_0: { name: \"M.O\" },\n  MK: { name: \"MK\" },\n  MNEK: { name: \"MNEK\" },\n  MO: { name: \"MØ\" },\n  MUNA: { name: \"MUNA\" },\n  MURA_MASA: { name: \"Mura Masa\" },\n  // N\n  NAAZ: { name: \"Naaz\" },\n  NAO: { name: \"Nao\" },\n  NASTY_CHERRY: { name: \"Nasty Cherry\" },\n  NATASHA_BEDINGFIELD: { name: \"Natasha Bedingfield\" },\n  NAVVY: { name: \"Navvy\" },\n  NICKI_MINAJ: { name: \"Nicki Minaj\" },\n  NOEL_GALLAGHERS_HIGH_FLYING_BIRDS: {\n    name: \"Noel Gallagher's High Flying Birds\"\n  },\n  // O\n  OH_ANNIE_OH: { name: \"Oh Annie Oh\" },\n  OKAYWILL: { name: \"okaywill\" },\n  // P\n  PALE_WAVES: { name: \"Pale Waves\" },\n  PALOMA_FAITH: { name: \"Paloma Faith\" },\n  PANIC_AT_THE_DISCO: { name: \"Panic! At the Disco\" },\n  PARAMORE: { name: \"Paramore\" },\n  PAUL_WOOLFORD: { name: \"Paul Woolford\" },\n  PET_SHOP_BOYS: { name: \"Pet Shop Boys\" },\n  PHILIP_GEORGE: { name: \"Philip George\" },\n  PRETENDERS: { name: \"Pretenders\" },\n  PVRIS: { name: \"PVRIS\" },\n  // R\n  RAINBOW_KITTEN_SURPRISE: { name: \"Rainbow Kitten Surprise\" },\n  RALEIGH_RITCHIE: { name: \"Raleigh Ritchie\" },\n  RALPH: { name: \"Ralph\" },\n  REDLIGHT: { name: \"Redlight\" },\n  RIHANNA: { name: \"Rihanna\" },\n  RINA_SAWAYAMA: { name: \"Rina Sawayama\" },\n  RITON: { name: \"Riton\" },\n  RIXTON: { name: \"Rixton\" },\n  ROBINSON: { name: \"Robinson\" },\n  ROBYN: { name: \"Robyn\" },\n  ROMY: { name: \"Romy\" },\n  ROOSEVELT: { name: \"Roosevelt\" },\n  ROUTE_94: { name: \"Route 94\" },\n  RYN_WEAVER: { name: \"Ryn Weaver\", favourite: true },\n  RUDIMENTAL: { name: \"Rudimental\" },\n  RUFUS_DU_SOL: { name: \"RÜFÜS DU SOL\" },\n  RYAN_BEATTY: { name: \"Ryan Beatty\" },\n  // S\n  SABRINA_CLAUDIO: { name: \"Sabrina Claudio\" },\n  SAINT_JHN: { name: \"SAINt JHN\" },\n  SAM_SMITH: { name: \"Sam Smith\" },\n  SASHA_SLOAN: { name: \"Sasha Sloan\" },\n  SBTRKT: { name: \"SBTRKT\" },\n  SEEB: { name: \"Seeb\" },\n  SEGA_BODEGA: { name: \"Sega Bodega\" },\n  SEINABO_SEY: { name: \"Seinabo Sey\" },\n  SEVDALIZA: { name: \"Sevdaliza\" },\n  SIA: { name: \"Sia\" },\n  SIGRID: { name: \"Sigrid\" },\n  SISTER_SLEDGE: { name: \"Sister Sledge\" },\n  SKY_FERREIRA: { name: \"Sky Ferreira\", favourite: true },\n  SLIIMY: { name: \"Sliimy\" },\n  SOFI_TUKKER: { name: \"Sofi Tukker\" },\n  SOAK: { name: \"SOAK\" },\n  SONIKKU: { name: \"SONIKKU\" },\n  SOPHIE: { name: \"SOPHIE\" },\n  SOPHIE_ELLIS_BEXTOR: { name: \"Sophie Ellis-Bextor\" },\n  SOUL_WAX: { name: \"Soul Wax\" },\n  THE_SMYTHS: { name: \"Smyths, The\" },\n  THE_SPILL_CANVAS: { name: \"Spill Canvas, The\" },\n  SKREAM: { name: \"Skream\" },\n  SUNDAY_GIRL: { name: \"Sunday Girl\" },\n  // T\n  TAYLOR_SWIFT: { name: \"Taylor Swift\" },\n  TENSNAKE: { name: \"Tensnake\" },\n  TEN_WALLS: { name: \"Ten Walls\" },\n  TERROR_JR: { name: \"Terror Jr\" },\n  TOM_ODELL: { name: \"Tom Odell\" },\n  TORI_KELLY: { name: \"Tori Kelly\" },\n  TOURIST: { name: \"Tourist\" },\n  TOVE_LO: { name: \"Tove Lo\" },\n  TROYE_SIVAN: { name: \"Troye Sivan\" },\n  TULISA: { name: \"Tulisa\" },\n  TWENTY_ONE_PILOTS: { name: \"Twenty One Pilots\" },\n  TWO_FEET: { name: \"Two Feet\" },\n  TYGA: { name: \"Tyga\" },\n  // V\n  VERITE: { name: \"VÉRITÉ\" },\n  // W\n  WE_THE_KINGS: { name: \"We the Kings\" },\n  WILL_YOUNG: { name: \"Will Young\" },\n  // X\n  THE_XX: { name: \"xx, The\" },\n  // Y\n  YEARS_AND_YEARS: { name: \"Years & Years\" },\n  YOU_ME_AT_SIX: { name: \"You Me At Six\" },\n  YOUSEF: { name: \"Yousef\" },\n  // Z\n  ZARA_LARSSON: { name: \"Zara Larsson\" }\n};\n","const MUSIC_VENUES_LONDON: IMusicVenues = {\n  // A\n  ALEXANDRA_PALACE: { name: \"Alexandra Palace\" },\n  ALEXANDRA_PALACE_THEATRE: {\n    name: \"Alexandra Palace Theatre\",\n    favourite: true\n  },\n  // B\n  BRIXTON_ACADEMY: { name: \"Brixton Academy\", favourite: true },\n  BROCKWELL_PARK: { name: \"Brockwell Park\" },\n  // C\n  CAMDEN_ASSEMBLY: { name: \"Camden Assembly\" },\n  CORSICA_STUDIOS: { name: \"Corsica Studios\" },\n  COURTYARD_THEATRE: { name: \"Courtyard Theatre\" },\n  // D\n  DINGWALLS: { name: \"Dingwalls\" },\n  THE_GARAGE: { name: \"Garage, The\" },\n  // E\n  EARTH: { name: \"EartH\" },\n  EGG: { name: \"Egg\" },\n  ELECTRIC_BRIXTON: { name: \"Electric Brixton\" },\n  ELECTROWERKZ: { name: \"Electrowerkz\" },\n  // F\n  FABRIC: { name: \"Fabric\" },\n  FINSBURY_PARK: { name: \"Finsbury Park\" },\n  // H\n  HAMMERSMITH_APOLLO: { name: \"Hammersmith Apollo\" },\n  HEAVEN: { name: \"Heaven\" },\n  HOXTON_HALL: { name: \"Hoxton Hall\" },\n  HOXTON_SQUARE_BAR_AND_KITCHEN: { name: \"Hoxton Square Bar & Kitchen\" },\n  // I\n  ISLINGTON_ASSEMBLY_HALL: { name: \"Islington Assembly Hall\", favourite: true },\n  // K\n  KENTISH_TOWN_FORUM: { name: \"Kentish Town Forum\" },\n  KOKO: { name: \"Koko\", favourite: true },\n  // L\n  LAFAYETTE: { name: \"Lafayette\" },\n  LAYLOW: { name: \"Laylow\" },\n  LONDON_STADIUM: { name: \"London Stadium\" },\n  // M\n  MINISTRY_OF_SOUND: { name: \"Ministry of Sound\" },\n  MOTH_CLUB: { name: \"Moth Club\", favourite: true },\n  // O\n  OLD_BLUE_LAST: { name: \"Old Blue Last\", favourite: true },\n  OMEARA: { name: \"Omeara\" },\n  OSLO_HACKNEY: { name: \"Oslo Hackney\" },\n  OVAL_SPACE: { name: \"Oval Space\" },\n  THE_O2: { name: \"O2, The\" },\n  // P\n  PRINTWORKS: { name: \"Printworks\", favourite: true },\n  // Q\n  QUEEN_OF_HOXTON: { name: \"Queen of Hoxton\" },\n  // R\n  RIDGEWAY_PARK: { name: \"Ridgeway Park\" },\n  ROUNDHOUSE: { name: \"Roundhouse\", favourite: true },\n  ROYAL_ALBERT_HALL: { name: \"Royal Albert Hall\", favourite: true },\n  ROYAL_FESTIVAL_HALL: { name: \"Royal Festival Hall\", favourite: true },\n  // S\n  SCALA: { name: \"Scala\" },\n  SERVANT_JAZZ_QUARTERS: { name: \"Servant Jazz Quarters\" },\n  SHEPHERDS_BUSH_EMPIRE: { name: \"Shepherd's Bush Empire\" },\n  ST_GILES_IN_THE_FIELD: { name: \"St Giles-in-the-Fields\" },\n  // T\n  TOTTENHAM_HOTSPUR_STADIUM: { name: \"Tottenham Hotspur Stadium\" },\n  TWICKENHAM_STADIUM: { name: \"Twickenham Stadium\" },\n  TROXY: { name: \"Troxy\" },\n  // V\n  VICTORIA_PARK: { name: \"Victoria Park\" },\n  VILLAGE_UNDERGROUND: { name: \"Village Underground\" },\n  // W\n  WEMBLEY_STADIUM: { name: \"Wembley Stadium\" },\n  // X\n  XOYO: { name: \"XOYO\" },\n  // Z\n  ZIGFRID_VON_UNDERBELLY: { name: \"Zigfrid von Underbelly\" }\n};\n\nconst MUSIC_VENUES_BIRMINGHAM: IMusicVenues = {\n  // A\n  ACADEMY_BIRMINGHAM: { name: \"Birmingham Academy\" },\n  ACADEMY_2_BIRMINGHAM: { name: \"Birmingham Academy 2\" },\n  ALEXANDRA_THEATRE: { name: \"Alexandra Theatre\" },\n  // B\n  BARFLY_BIRMINGHAM: { name: \"Birmingham Barfly\" },\n  // I\n  INSTITUTE_BIRMINGHAM: { name: \"Birmingham Institute\" },\n  // N\n  NEC_ARENA_BIRMINGHAM: { name: \"Birmingham NEC Arena\" },\n  NIA_ARENA_BIRMINGHAM: { name: \"Birmingham NIA Arena\" }\n};\n\nconst MUSIC_VENUES_NOTTINGHAM: IMusicVenues = {\n  // B\n  BODEGA: { name: \"Bodega\" },\n  ARENA_NOTTINGHAM: { name: \"Nottingham Arena\" },\n  // R\n  RESCUE_ROOMS: { name: \"Rescue Rooms\" },\n  ROCK_CITY: { name: \"Rock City\" },\n  // T\n  TRENT_UNIVERSITY_NOTTINGHAM: { name: \"Nottingham Trent University\" }\n};\n\nconst MUSIC_VENUES_MANCHESTER: IMusicVenues = {\n  // A\n  ACADEMY_MANCHESTER: { name: \"Manchester Academy\" },\n  ACADEMY_2_MANCHESTER: { name: \"Manchester Academy 2\" },\n  ALBERT_HALL_MANCHESTER: { name: \"Manchester Albert Hall\", favourite: true },\n  APOLLO_MANCHESTER: { name: \"Manchester Apollo\" },\n  ARENA_MANCHESTER: { name: \"Manchester Arena\" },\n  // C\n  CASTLEFIELD_BOWL: { name: \"Castlefield Bowl\" },\n  // D\n  DEAF_INSTITUTE: { name: \"Deaf Institute\" },\n  // G\n  GORILLA: { name: \"Gorilla\" },\n  // H\n  HEATON_PARK: { name: \"Heaton Park\" },\n  // R\n  MAYFIELD_DEPOT: { name: \"Mayfield Depot\" },\n  // R\n  RITZ_MANCHESTER: { name: \"Manchester Ritz\" },\n  RUBY_LOUNGE: { name: \"Ruby Lounge\" },\n  // S\n  SANKEYS: { name: \"Sankeys\" },\n  STORE_STREET: { name: \"Store Street\" }\n};\n\nconst MUSIC_VENUES_ELSEWHERE: IMusicVenues = {\n  // C\n  COCKPIT_LEEDS: { name: \"The Cockpit Leeds\" },\n  // D\n  DE_MONTFORT_HALL: { name: \"Leicester De Montfort Hall\" },\n  // E\n  ENGINE_SHED: { name: \"Lincoln Engine Shed\" },\n  // I\n  IFEMA_MADRID: { name: \"IFEMA\" },\n  // L\n  LULWORTH_ESTATE: { name: \"Lulworth Estate\" },\n  // M\n  MOTION: { name: \"Motion\" },\n  // P\n  PRESTON_PARK: { name: \"Preston Park\" },\n  // S\n  SCHWUZ: { name: \"SchwuZ Berlin\", insignificant: true },\n  SHEFFIELD_ARENA: { name: \"Sheffield Arena\" },\n  // T\n  TRESOR: { name: \"Tresor Berlin\", insignificant: true },\n  // W\n  WESTON_PARK: { name: \"Weston Park\" },\n  WOLVERHAMPTON_CIVIC_HALL: { name: \"Wolverhampton Civic Hall\" },\n  WORTHY_FARM: { name: \"Worthy Farm\", favourite: true }\n};\n\nexport const MUSIC_VENUES: IMusicVenues = {\n  ...MUSIC_VENUES_LONDON,\n  ...MUSIC_VENUES_MANCHESTER,\n  ...MUSIC_VENUES_NOTTINGHAM,\n  ...MUSIC_VENUES_BIRMINGHAM,\n  ...MUSIC_VENUES_ELSEWHERE\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FLOUR: IInventoryIngredients = {\n  CORNFLOUR: {\n    displayText: \"cornflour\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.3 }\n  },\n  FLOUR_PLAIN: {\n    displayText: \"plain flour\",\n    cost: { quantity: 1.5, measurement: MEASUREMENTS.KILOGRAM, price: 0.75 }\n  },\n  FLOUR_SELF_RAISING: {\n    displayText: \"self-raising flour\",\n    cost: { quantity: 1.5, measurement: MEASUREMENTS.KILOGRAM, price: 0.75 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SUGAR: IInventoryIngredients = {\n  SUGAR_BROWN: {\n    displayText: \"brown sugar (light or dark)\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  SUGAR_BROWN_DARK: {\n    displayText: \"dark brown sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  SUGAR_BROWN_LIGHT: {\n    displayText: \"light brown sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  SUGAR_CASTER_GOLDEN: {\n    displayText: \"golden caster sugar\",\n    cost: { quantity: 1000, measurement: MEASUREMENTS.GRAM, price: 1.9 }\n  },\n  SUGAR_DEMERARA: {\n    displayText: \"demerara sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  SUGAR_GRANULATED: {\n    displayText: \"granulated sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.55 }\n  },\n  SUGAR_ICING: {\n    displayText: \"icing sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SYRUPS: IInventoryIngredients = {\n  LEMON_EXTRACT: {\n    displayText: \"lemon extract\",\n    cost: { quantity: 38, measurement: MEASUREMENTS.MILLILITRE, price: 1.5 }\n  },\n  NECTAR_AGAVE: {\n    displayText: \"agave nectar\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.MILLILITRE, price: 4 }\n  },\n  SYRUP_GOLDEN: {\n    displayText: \"golden syrup\",\n    cost: { quantity: 600, measurement: MEASUREMENTS.GRAM, price: 1.9 }\n  },\n  VANILLA_EXTRACT: {\n    displayText: \"vanilla extract\",\n    cost: { quantity: 35, measurement: MEASUREMENTS.MILLILITRE, price: 1.3 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nimport { FLOUR } from \"./flour\";\nimport { SUGAR } from \"./sugar\";\nimport { SYRUPS } from \"./syrups\";\n\nexport const BAKING: IInventoryIngredients = {\n  ...FLOUR,\n  ...SUGAR,\n  ...SYRUPS,\n\n  BAKING_POWDER: {\n    displayText: \"baking powder\",\n    cost: { quantity: 170, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  BICARBONATE_OF_SODA: {\n    displayText: \"bicarbonate of soda\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  CHOCOLATE_DARK: {\n    displayText: \"dark chocolate\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 1.7 }\n  },\n  COCOA_POWDER: {\n    displayText: \"cocoa powder\",\n    cost: { quantity: 190, measurement: MEASUREMENTS.GRAM, price: 2.75 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const PASTA: IInventoryIngredients = {\n  SPAGHETTI: {\n    displayText: \"spaghetti\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.6 }\n  },\n  PASTA: { displayText: \"pasta\" },\n  PASTA_LASAGNE_SHEET_DRIED: {\n    displayText: \"dried lasagne sheet\",\n    cost: { quantity: 20, price: 0.7 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const RICE: IInventoryIngredients = {\n  RICE: { displayText: \"rice\" },\n  RICE_BASMATI: {\n    displayText: \"basmati rice\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.1 }\n  },\n  RICE_BROWN: {\n    displayText: \"brown rice\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.85 }\n  },\n  RICE_RISOTTO_ARBORIO: {\n    displayText: \"arborio risotto rice\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.25 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const GRAINS: IInventoryIngredients = {\n  OATS: {\n    displayText: \"oats\",\n    cost: { quantity: 2000, measurement: MEASUREMENTS.GRAM, price: 3 }\n  }\n};\n","import { BREAD } from \"./bread\";\nimport { PASTA } from \"./pasta\";\nimport { RICE } from \"./rice\";\nimport { GRAINS } from \"./grains\";\n\nexport const CARBS: IInventoryIngredients = {\n  ...BREAD,\n  ...PASTA,\n  ...RICE,\n  ...GRAINS,\n\n  POPPADOMS: { displayText: \"poppadoms\" }\n};\n","export const BREAD: IInventoryIngredients = {\n  BREAD_GARLIC: { displayText: \"garlic bread\" },\n  BREAD_SOURDOUGH: { displayText: \"sourdough\" },\n  BREAD_SOURDOUGH_DARK: { displayText: \"dark sourdough\" }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const MILK: IInventoryIngredients = {\n  MILK_COCONUT_CANNED: {\n    displayText: \"coconut milk\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 1 }\n  },\n  MILK_ALMOND_UNSWEETENED: {\n    displayText: \"unsweetened almond milk\",\n    cost: { quantity: 750, measurement: MEASUREMENTS.MILLILITRE, price: 2 }\n  },\n  MILK_OAT: {\n    displayText: \"Oatly\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.LITRE, price: 1.8 }\n  },\n  MILK: {\n    displayText: \"milk\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.LITRE, price: 1 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nimport { MILK } from \"./milk\";\n\nexport const DAIRY: IInventoryIngredients = {\n  ...MILK,\n\n  BUTTER_VEGAN: {\n    displayText: \"dairy-free buttery spread\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  CREAM_OAT: {\n    displayText: \"oat cream\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.MILLILITRE, price: 0.95 }\n  },\n  CHEESE_VEGAN_SLICE: {\n    displayText: \"vegan cheese slices\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 2.6 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FRUIT_DRIED: IInventoryIngredients = {\n  APRICOTS_DRIED: {\n    displayText: \"dried apricots\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 2.7 }\n  },\n  BLUEBERRIES_DRIED: {\n    displayText: \"dried blueberries\",\n    cost: { quantity: 75, measurement: MEASUREMENTS.GRAM, price: 2.25 }\n  },\n  CRANBERRIES_DRIED: {\n    displayText: \"dried cranberries\",\n    cost: { quantity: 75, measurement: MEASUREMENTS.GRAM, price: 1.15 }\n  },\n  RAISINS: {\n    displayText: \"raisins\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.8 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FRUIT_FRESH: IInventoryIngredients = {\n  APPLE_BRAMLEY: {\n    displayText: \"Bramley apple\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.KILOGRAM, price: 2 }\n  },\n  BANANA: {\n    displayText: \"banana\",\n    cost: { quantity: 1, price: 0.2 }\n  },\n  BLACKBERRIES_FRESH: {\n    displayText: \"fresh blackberries\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  },\n  BLUEBERRIES_FRESH: {\n    displayText: \"fresh blueberries\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  LEMON: {\n    displayText: \"lemon\",\n    cost: { quantity: 1, price: 0.3 }\n  },\n  LEMON_LARGE: {\n    displayText: \"large lemon\",\n    cost: { quantity: 1, price: 0.4 }\n  },\n  LIME: {\n    displayText: \"lime\",\n    cost: { quantity: 1, price: 0.3 }\n  },\n  PINEAPPLE: {\n    displayText: \"pineapple\",\n    cost: { quantity: 1, price: 1.1 }\n  },\n  RASPBERRIES_FRESH: {\n    displayText: \"fresh raspberries\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FRUIT_FROZEN: IInventoryIngredients = {\n  BLACKBERRIES_FROZEN: {\n    displayText: \"frozen blackberries\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  RASPBERRIES_FROZEN: {\n    displayText: \"frozen raspberries\",\n    cost: { quantity: 350, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const JUICE = {\n  LEMON_JUICE: {\n    displayText: \"lemon juice\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.MILLILITRE, price: 0.7 }\n  },\n  LEMON_JUICE_FRESH: {\n    displayText: \"fresh lemon juice\",\n    cost: { quantity: 3, measurement: MEASUREMENTS.TABLESPOON, price: 0.3 }\n  },\n  LIME_JUICE_FRESH: {\n    displayText: \"fresh lime juice\",\n    cost: { quantity: 3, measurement: MEASUREMENTS.TABLESPOON, price: 0.5 }\n  }\n};\n","import { FRUIT_DRIED } from \"./dried-fruit\";\nimport { FRUIT_FRESH } from \"./fresh-fruit\";\nimport { FRUIT_FROZEN } from \"./frozen-fruit\";\nimport { JUICE } from \"./juice\";\n\nexport const FRUIT = {\n  ...FRUIT_DRIED,\n  ...FRUIT_FRESH,\n  ...FRUIT_FROZEN,\n  ...JUICE\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const HERBS_DRIED: IInventoryIngredients = {\n  BASIL_DRIED: {\n    displayText: \"dried basil\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  },\n  HERBS_MIXED_DRIED: {\n    displayText: \"dried mixed herbs\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 0.75 }\n  },\n  OREGANO_DRIED: {\n    displayText: \"dried oregano\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  },\n  ROSEMARY_DRIED: {\n    displayText: \"dried rosemary\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  },\n  THYME_DRIED: {\n    displayText: \"dried thyme\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const HERBS_FRESH: IInventoryIngredients = {\n  BASIL_FRESH: {\n    displayText: \"fresh basil\",\n    cost: {\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM,\n      price: 0.75,\n      payFullAmountAlways: true\n    }\n  },\n  CORIANDER_FRESH: {\n    displayText: \"fresh coriander\",\n    cost: {\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM,\n      price: 0.75,\n      payFullAmountAlways: true\n    }\n  },\n  PARSLEY_FRESH: {\n    displayText: \"fresh parsley\",\n    cost: {\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM,\n      price: 0.75,\n      payFullAmountAlways: true\n    }\n  },\n  SAGE_FRESH: {\n    displayText: \"fresh sage\"\n  }\n};\n","import { HERBS_DRIED } from \"./dried-herbs\";\nimport { HERBS_FRESH } from \"./fresh-herbs\";\n\nexport const HERBS: IInventoryIngredients = { ...HERBS_DRIED, ...HERBS_FRESH };\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const BEANS: IInventoryIngredients = {\n  BEANS_BAKED: { displayText: \"baked beans\" },\n  BEANS_HARICOT: {\n    displayText: \"haricot beans\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 0.55 }\n  },\n  BEANS_KIDNEY: {\n    displayText: \"kidney beans\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 0.55 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SEITAN: IInventoryIngredients = {\n  GLUTEN_WHEAT_VITAL: {\n    displayText: \"vital wheat gluten\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.99 }\n  },\n  SEITAN: { displayText: \"seitan\" }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nimport { BEANS } from \"./beans\";\nimport { SEITAN } from \"./seitan\";\n\nexport const PROTEIN: IInventoryIngredients = {\n  ...BEANS,\n  ...SEITAN,\n\n  CHICKPEAS: {\n    displayText: \"chickpeas\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 1 }\n  },\n  EGGS: { displayText: \"egg\", cost: { quantity: 6, price: 2.1 } },\n  LENTIL_RED_DRY: {\n    displayText: \"dry red lentils\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.15 }\n  },\n  TOFU: {\n    displayText: \"tofu\",\n    cost: { quantity: 280, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS, SAINSBURYS_SEASONING_COST } from \"../../measurements\";\n\nexport const DRIED_SEASONING: IInventoryIngredients = {\n  PAPRIKA: {\n    displayText: \"paprika\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  ONION_POWDER: {\n    displayText: \"onion powder\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  GARLIC_GRANULES: {\n    displayText: \"garlic granules\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  PAPRIKA_SMOKED: {\n    displayText: \"smoked paprika\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  TURMERIC_GROUND: {\n    displayText: \"ground turmeric\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  ALLSPICE_GROUND: {\n    displayText: \"ground allspice\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  CHILLI_POWDER: {\n    displayText: \"chilli powder\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  CINNAMON_GROUND: {\n    displayText: \"ground cinnamon\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  CHILLI_CRUSHED_DRIED: {\n    displayText: \"dried crushed chillis\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  NUTMEG_GROUND: {\n    displayText: \"ground nutmeg\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  YEAST_NUTRITIONAL: {\n    displayText: \"nutritional yeast flakes\",\n    cost: { quantity: 125, measurement: MEASUREMENTS.GRAM, price: 3.4 }\n  },\n  STOCK_POWDER_VEGAN: {\n    displayText: \"vegan stock powder\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const OILS: IInventoryIngredients = {\n  OIL_OLIVE: {\n    displayText: \"olive oil\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.MILLILITRE, price: 3 }\n  },\n  OIL_SUNFLOWER: {\n    displayText: \"sunflower oil\",\n    cost: { quantity: 1000, measurement: MEASUREMENTS.MILLILITRE, price: 1.2 }\n  }\n};\n","export const UNICODE: { [character: string]: string } = {\n  // INGREDIENTS\n  JALAPENOS: \"jalape\\u00f1os\",\n  TOMATO_PUREE: \"tomato pur\\u00e9e\",\n\n  // FRACTIONS\n  QUARTER: \"\\u00bc\",\n  THIRD: \"\\u2153\",\n  HALF: \"\\u00bd\",\n  TWO_THIRDS: \"\\u2154\",\n  THREE_QUARTERS: \"\\u00be\",\n\n  // MISC\n  DEGREES_CELCIUS: \"\\u00b0C\"\n};\n","import { MEASUREMENTS } from \"../../measurements\";\nimport { UNICODE } from \"../../unicode\";\n\nexport const PASTES: IInventoryIngredients = {\n  CURRY_PASTE_MADRAS: {\n    displayText: \"Madras curry paste\",\n    cost: { quantity: 283, measurement: MEASUREMENTS.GRAM, price: 2.25 }\n  },\n  CURRY_PASTE_ROGAN_JOSH: {\n    displayText: \"Rogan Josh curry paste\",\n    cost: { quantity: 283, measurement: MEASUREMENTS.GRAM, price: 2.3 }\n  },\n  TOMATO_PUREE: {\n    displayText: UNICODE.TOMATO_PUREE,\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 0.5 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SALT: IInventoryIngredients = {\n  SALT_BLACK: {\n    displayText: \"black salt (kala namak)\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 2.9 }\n  },\n  SALT_TABLE: {\n    displayText: \"table salt\",\n    cost: { price: 0 }\n  },\n  SALT_ROCK_FRESH: {\n    displayText: \"freshly ground rock salt\",\n    cost: { price: 0 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SAUCES: IInventoryIngredients = {\n  LIQUID_SMOKE: {\n    displayText: \"liquid smoke\",\n    cost: { quantity: 475, measurement: MEASUREMENTS.MILLILITRE, price: 6.7 }\n  },\n  SOY_SAUCE: {\n    displayText: \"soy sauce\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.MILLILITRE, price: 0.7 }\n  },\n  KETCHUP_TOMATO: {\n    displayText: \"tomato ketchup\",\n    cost: { quantity: 570, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  SRIRACHA: {\n    displayText: \"sriracha\",\n    cost: { quantity: 455, measurement: MEASUREMENTS.MILLILITRE, price: 3.1 }\n  },\n  SWEET_CHILLI_SAUCE: {\n    displayText: \"sweet chilli sauce\",\n    cost: { quantity: 230, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VINEGARS: IInventoryIngredients = {\n  VINEGAR_BALSAMIC: {\n    displayText: \"balsamic vinegar\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.MILLILITRE, price: 2 }\n  },\n  VINEGAR_CIDER: {\n    displayText: \"cider vinegar\",\n    cost: { quantity: 350, measurement: MEASUREMENTS.MILLILITRE, price: 1.6 }\n  },\n  VINEGAR_WHITE_WINE: {\n    displayText: \"white wine vinegar\",\n    cost: { quantity: 350, measurement: MEASUREMENTS.MILLILITRE, price: 1.6 }\n  }\n};\n","import { MEASUREMENTS, SAINSBURYS_SEASONING_COST } from \"../../measurements\";\n\nimport { DRIED_SEASONING } from \"./dried-seasoning\";\nimport { OILS } from \"./oils\";\nimport { PASTES } from \"./pastes\";\nimport { SALT } from \"./salt\";\nimport { SAUCES } from \"./sauces\";\nimport { VINEGARS } from \"./vinegars\";\n\nexport const SEASONING: IInventoryIngredients = {\n  ...DRIED_SEASONING,\n  ...OILS,\n  ...PASTES,\n  ...SALT,\n  ...SAUCES,\n  ...VINEGARS,\n\n  PEPPER_BLACK_FRESH: {\n    displayText: \"freshly ground black pepper\",\n    cost: { price: 0 }\n  },\n  PEPPER_BLACK_GROUND: {\n    displayText: \"ground black pepper\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  WINE_RED: {\n    displayText: \"red wine\",\n    cost: { quantity: 750, measurement: MEASUREMENTS.MILLILITRE, price: 6.5 }\n  },\n  CHILLI_RED_FRESH: {\n    displayText: \"fresh red chilli\",\n    cost: { quantity: 2, price: 0.6 }\n  },\n  CHILLI_BIRD_EYE_FRESH: {\n    displayText: \"bird eye chillies\",\n    cost: { quantity: 20, measurement: MEASUREMENTS.GRAM, price: 0.7 }\n  },\n  GINGER_FRESH: {\n    displayText: \"fresh ginger\",\n    cost: { payFullAmountAlways: true, price: 0.3 }\n  },\n  NUTMEG_FRESH: {\n    displayText: \"freshly grated whole nutmeg\",\n    cost: SAINSBURYS_SEASONING_COST\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const NUTS: IInventoryIngredients = {\n  NUTS_CASHEWS: {\n    displayText: \"cashew nuts\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 3 }\n  },\n  NUTS_PINE: {\n    displayText: \"pine nuts\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 3.6 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SEEDS: IInventoryIngredients = {\n  SEEDS_CHIA: {\n    displayText: \"chia seeds\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  },\n  SEEDS_POPPY: {\n    displayText: \"poppy seeds\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 0.9 }\n  },\n  SEEDS_FLAX_GROUND: {\n    displayText: \"ground flax seeds\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 4 }\n  },\n  SEEDS_PUMPKIN: {\n    displayText: \"pumpkin seeds\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  SEEDS_SESAME: {\n    displayText: \"sesame seeds\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  SEEDS_SUNFLOWER: {\n    displayText: \"sunflower seeds\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 1 }\n  }\n};\n","import { NUTS } from \"./nuts\";\nimport { SEEDS } from \"./seeds\";\n\nexport const NUTS_AND_SEEDS: IInventoryIngredients = { ...NUTS, ...SEEDS };\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VEG_CANNED: IInventoryIngredients = {\n  TOMATO_CHOPPED: {\n    displayText: \"chopped tomatoes\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 0.5 }\n  },\n  TOMATO_PASSATA: {\n    displayText: \"passata\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.45 }\n  },\n  TOMATO_SUN_DRIED: {\n    displayText: \"sun dried tomatoes\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.JAR, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VEG_FRESH: IInventoryIngredients = {\n  ASPARAGUS: { displayText: \"asparagus\" },\n  AUBERGINE: { displayText: \"aubergine\", cost: { quantity: 1, price: 0.7 } },\n  BEANS_GREEN: {\n    displayText: \"green beans\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  BROCCOLI: { displayText: \"broccoli\", cost: { quantity: 1, price: 0.7 } },\n  BUTTERNUT_SQUASH: {\n    displayText: \"butternut squash\",\n    cost: { quantity: 1, price: 1.5 }\n  },\n  CARROT: { displayText: \"carrot\", cost: { quantity: 1, price: 0.12 } },\n  CAULIFLOWER_REGULAR: {\n    displayText: \"cauliflower\",\n    cost: { quantity: 1, price: 1 }\n  },\n  CELERY_STICK: {\n    displayText: \"celery stick\",\n    cost: { quantity: 1, price: 0.3 }\n  },\n  COURGETTE: { displayText: \"courgette\", cost: { quantity: 1, price: 0.35 } },\n  GARLIC_CLOVE: {\n    displayText: \"garlic clove\",\n    cost: { quantity: 10, price: 0.3 }\n  },\n  KALE: {\n    displayText: \"kale\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1.05 }\n  },\n  LEEK: { displayText: \"leek\", cost: { quantity: 1, price: 0.7 } },\n  MUSHROOMS: {\n    displayText: \"mushrooms\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  MUSHROOMS_CHESTNUT: {\n    displayText: \"chestnut mushrooms\",\n    cost: { quantity: 300, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  ONION_WHITE_MEDIUM: {\n    displayText: \"white onion\",\n    cost: { quantity: 1, price: 0.2 }\n  },\n  ONION_RED_MEDIUM: {\n    displayText: \"red onion\",\n    cost: { quantity: 1, price: 0.25 }\n  },\n  ONION_SPRING: {\n    displayText: \"spring onion\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 0.55 }\n  },\n  PEPPER_RED: { displayText: \"red pepper\", cost: { quantity: 1, price: 0.5 } },\n  PEPPER_GREEN: {\n    displayText: \"green pepper\",\n    cost: { quantity: 1, price: 0.5 }\n  },\n  PEPPER_ORANGE: {\n    displayText: \"orange pepper\",\n    cost: { quantity: 1, price: 0.5 }\n  },\n  PEPPER_MIXED: {\n    displayText: \"mixed pepper\",\n    cost: { quantity: 3, price: 1.3 }\n  },\n  POTATO_MARIS_PIPER: { displayText: \"Maris Piper potatoes\" },\n  POTATO_BAKING: {\n    displayText: \"baking potato\",\n    cost: { quantity: 1, price: 0.4 }\n  },\n  POTATO_SWEET: {\n    displayText: \"sweet potato\",\n    cost: { quantity: 1, price: 0.5 }\n  },\n  SPINACH: {\n    displayText: \"spinach\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VEG_FROZEN: IInventoryIngredients = {\n  PETITS_POIS_FROZEN: {\n    displayText: \"frozen petits pois\",\n    cost: { quantity: 910, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  },\n  VEGETABLES_MIXED_FROZEN: {\n    displayText: \"frozen mixed vegetables\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.KILOGRAM, price: 1.3 }\n  }\n};\n","import { VEG_CANNED } from \"./canned-veg\";\nimport { VEG_FRESH } from \"./fresh-veg\";\nimport { VEG_FROZEN } from \"./frozen-veg\";\n\nexport const VEG: IInventoryIngredients = {\n  ...VEG_CANNED,\n  ...VEG_FRESH,\n  ...VEG_FROZEN\n};\n","import { BAKING } from \"./baking\";\nimport { CARBS } from \"./carbs\";\nimport { DAIRY } from \"./dairy\";\nimport { FRUIT } from \"./fruit\";\nimport { HERBS } from \"./herbs\";\nimport { PROTEIN } from \"./protein\";\nimport { SEASONING } from \"./seasoning\";\nimport { NUTS_AND_SEEDS } from \"./nuts-seeds\";\nimport { VEG } from \"./veg\";\n\nexport const INGREDIENTS: IInventoryIngredients = {\n  ...BAKING,\n  ...CARBS,\n  ...DAIRY,\n  ...FRUIT,\n  ...HERBS,\n  ...NUTS_AND_SEEDS,\n  ...PROTEIN,\n  ...SEASONING,\n  ...VEG,\n\n  WATER: { displayText: \"water\", cost: { price: 0 } },\n  WATER_BOILING: { displayText: \"boiling water\", cost: { price: 0 } }\n};\n","interface I_PAGE_SECTION_TYPES {\n  RECIPES: IPageSecionType;\n  COUNTED_LIST: IPageSecionType;\n  EVENT_CARDS: IPageSecionType;\n}\n\nexport const PAGE_SECTION_TYPES: I_PAGE_SECTION_TYPES = {\n  RECIPES: \"recipes\",\n  COUNTED_LIST: \"counted-list\",\n  EVENT_CARDS: \"event-cards\"\n};\n\ninterface IEventCardTypes {\n  GIG: IEventCardType;\n  THEATRE: IEventCardType;\n  TRIP: IEventCardType;\n}\n\nexport const EVENT_CARD_TYPES: IEventCardTypes = {\n  GIG: \"gig\",\n  THEATRE: \"theatre\",\n  TRIP: \"trip\"\n};\n\ninterface AllPageSectionTitles {\n  ACTOR: IPageSectionDetails;\n  ATTRACTION: IPageSectionDetails;\n  BUCKET_LIST: IPageSectionDetails;\n  CITY: IPageSectionDetails;\n  COUNTRY: IPageSectionDetails;\n  FESTIVAL: IPageSectionDetails;\n  HIGHLIGHT: IPageSectionDetails;\n  ISLAND: IPageSectionDetails;\n  FRIEND: IPageSectionDetails;\n  MUSICIAN: IPageSectionDetails;\n  MUSIC_VENUES: IPageSectionDetails;\n  REGION: IPageSectionDetails;\n  PLAY: IPageSectionDetails;\n  THEATRE_VENUES: IPageSectionDetails;\n  TOWN: IPageSectionDetails;\n  THEME_PARK: IPageSectionDetails;\n  UP_NEXT: IPageSectionDetails;\n  RECIPES_COMING_SOON: IPageSectionDetails;\n}\n\nconst actor: string = \"actors\";\nconst attraction: string = \"attractions\";\nconst city: string = \"cities\";\nconst country: string = \"countries\";\nconst festival: string = \"festivals\";\nconst friend: string = \"friends\";\nconst highlight: string = \"highlights\";\nconst island: string = \"islands\";\nconst musician: string = \"artists\";\nconst musicVenue: string = \"venues\";\nconst play: string = \"plays\";\nconst region: string = \"regions\";\nconst theatreVenue: string = \"theatres\";\nconst town: string = \"towns\";\n\nexport const PAGE_SECTIONS: AllPageSectionTitles = {\n  ACTOR: { title: actor, id: actor, type: PAGE_SECTION_TYPES.COUNTED_LIST },\n  ATTRACTION: {\n    title: attraction,\n    id: attraction,\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  },\n  BUCKET_LIST: {\n    title: \"bucket list\",\n    id: \"bucket-list\",\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  },\n  CITY: { title: city, id: city, type: PAGE_SECTION_TYPES.COUNTED_LIST },\n  COUNTRY: {\n    title: country,\n    id: country,\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  },\n  FESTIVAL: {\n    title: festival,\n    id: festival,\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  },\n  FRIEND: { title: friend, id: friend, type: PAGE_SECTION_TYPES.COUNTED_LIST },\n  ISLAND: { title: island, id: island, type: PAGE_SECTION_TYPES.COUNTED_LIST },\n  HIGHLIGHT: {\n    title: highlight,\n    id: highlight,\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  },\n  MUSICIAN: {\n    title: musician,\n    id: musician,\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  },\n  MUSIC_VENUES: {\n    title: musicVenue,\n    id: musicVenue,\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  },\n  REGION: { title: region, id: region, type: PAGE_SECTION_TYPES.COUNTED_LIST },\n  PLAY: { title: play, id: play, type: PAGE_SECTION_TYPES.COUNTED_LIST },\n  THEATRE_VENUES: {\n    title: theatreVenue,\n    id: theatreVenue,\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  },\n  THEME_PARK: {\n    title: \"theme parks\",\n    id: \"theme-parks\",\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  },\n  TOWN: { title: town, id: town, type: PAGE_SECTION_TYPES.COUNTED_LIST },\n  UP_NEXT: {\n    title: \"up next\",\n    id: \"up-next\",\n    type: PAGE_SECTION_TYPES.EVENT_CARDS\n  },\n  RECIPES_COMING_SOON: {\n    title: \"coming soon\",\n    id: \"coming-soon\",\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  }\n};\n","export const PLAYS: IPlays = {\n  // 123\n  \"1984\": { name: \"1984\" },\n  \"4000_MILES\": { name: \"4000 Miles\" },\n  // A\n  AFTERGLOW: { name: \"Afterglow\" },\n  // C\n  CONSENT: { name: \"Consent\" },\n  // D\n  DUST: { name: \"Dust\" },\n  // E\n  EVERYBODYS_TALKING_ABOUT_JAMIE: { name: \"Everybody's Talking About Jamie\" },\n  // F\n  FERRYMAN: { name: \"Ferryman, The\" },\n  FROZEN: { name: \"Frozen\" },\n  // H\n  HOME_IM_DARLING: { name: \"Home, I'm Darling\" },\n  // I\n  INHERITANCE: { name: \"Inheritance, The\" },\n  // K\n  KINKY_BOOTS: { name: \"Kinky Boots\" },\n  // L\n  LEAVE_TO_REMAIN: { name: \"Leave to Remain\" },\n  LOST_UNFOUND: { name: \"Lost Unfound\" },\n  LUNGS: { name: \"Lungs\" },\n  // M\n  MATILDA: { name: \"Matilda\" },\n  MIDSUMMER_NIGHTS_DREAM: { name: \"A Midsummer Night's Dream\" },\n  // S\n  SON: { name: \"The Son\" },\n  // T\n  THAT_GIRL: { name: \"That Girl\" },\n  // U\n  UGLY_LIES_THE_BONE: { name: \"Ugly Lies the Bone\" },\n  UNCLE_VANYA: { name: \"Uncle Vanya\" },\n  // W\n  WAITRESS: { name: \"Waitress\" },\n  WICKED: { name: \"Wicked\" },\n  // Y\n  YOUNG_MARX: { name: \"Young Marx\" }\n};\n","const LONDON: ITheatreVenues = {\n  // A\n  ADELPHI: { name: \"Adelphi Theatre\" },\n  APOLLO: { name: \"Apollo Theatre\" },\n  APOLLO_VICTORIA: { name: \"Apollo Victoria Theatre\" },\n  // B\n  BRIDGE: { name: \"Bridge Theatre\" },\n  // C\n  CAMBRIDGE: { name: \"Cambridge Theatre\" },\n  // D\n  DUKE_OF_YORKS: { name: \"Duke of York's Theatre\" },\n  // G\n  GIELGUD: { name: \"Gielgud Theatre\" },\n  // H\n  HAROLD_PINTER: { name: \"Harold Pinter Theatre\" },\n  // L\n  LYRIC: { name: \"Lyric Hammersmith\" },\n  // N\n  NATIONAL: { name: \"National Theatre\" },\n  NOEL_COWARD: { name: \"Noël Coward Theatre\" },\n  // O\n  OLD_RED_LION: { name: \"Old Red Lion Theatre\" },\n  OLD_VIC: { name: \"The Old Vic\" },\n  // P\n  PLAYHOUSE: { name: \"Playhouse Theatre\" },\n  // R\n  ROYAL_HAYMARKET: { name: \"Theatre Royal Haymarket\" },\n  // T\n  TRAFALGAR_STUDIOS: { name: \"Trafalgar Studios\" },\n  // W\n  WATERLOO_EAST: { name: \"Waterloo East Theatre\" },\n  WHITE_BEAR: { name: \"White Bear Theatre\" }\n};\n\nconst STRATFORD: ITheatreVenues = {\n  ROYAL_SHAKESPEARE: { name: \"Royal Shakespeare Theatre\" }\n};\n\nexport const THEATRE_VENUES: ITheatreVenues = {\n  ...LONDON,\n  ...STRATFORD\n};\n","export const TICKET_TYPES: ITicketTypes = {\n  // A\n  AXS_MOBILE_APP: \"AXS app ticket\",\n  // D\n  DICE: \"Dice mobile ticket\",\n  // F\n  FESTICKET_PDF: \"Festicket e-Ticket PDF\",\n  // G\n  GIGS_AND_TOURS_POSTAL: \"Gigs and Tours postal ticket\",\n  // K\n  KABOODLE_ETICKET: \"Kaboodle eTicket\",\n  // S\n  SEE_TICKETS_PRINT_AT_HOME: \"SeeTickets print-at-home\",\n  // T\n  TICKETWEB: `Ticketweb PDF`,\n  TICKETMASTER_ETICKET: \"Ticketmaster eTicket\"\n};\n","export { ACTORS } from \"./actors\";\nexport { DIETS } from \"./diets\";\nexport { FESTIVALS } from \"./festivals\";\nexport { FRIENDS } from \"./friends\";\nexport { LOCATIONS } from \"./locations\";\nexport { MEASUREMENTS, SAINSBURYS_SEASONING_COST } from \"./measurements\";\nexport { MUSICIANS } from \"./musicians\";\nexport { MUSIC_VENUES } from \"./music-venues\";\nexport { INGREDIENTS } from \"./ingredients\";\nexport {\n  PAGE_SECTIONS,\n  EVENT_CARD_TYPES,\n  PAGE_SECTION_TYPES\n} from \"./page-sections\";\nexport { PLAYS } from \"./plays\";\nexport { THEATRE_VENUES } from \"./theatre-venues\";\nexport { TICKET_TYPES } from \"./ticket-types\";\nexport { UNICODE } from \"./unicode\";\n\nexport const NO_UNIT_COST_FOR_RECIPE_EXISTS: string =\n  \"NO_UNIT_COST_FOR_RECIPE_EXISTS\";\n\nexport const DAYS_OF_THE_WEEK: Array<string> = [\n  \"Sun\",\n  \"Mon\",\n  \"Tue\",\n  \"Wed\",\n  \"Thu\",\n  \"Fri\",\n  \"Sat\"\n];\n\nexport const MONTHS: Array<string> = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\"\n];\n","export const numberToCurrencyString = (\n  number: number,\n  decimalPrecision?: number\n): string => {\n  if (decimalPrecision && decimalPrecision === 1)\n    return `£${(Math.round(number * 10) / 10).toFixed(2)}`;\n\n  // Default to 2dp (£1.89)\n  return `£${(Math.round(number * 100) / 100).toFixed(2)}`;\n};\n","import { MEASUREMENTS } from \"../../constants\";\n\nexport const concatenateQuantityAndMeasurement = (\n  displayQuantity: string,\n  measurement: IIngredientMeasurement\n) => {\n  if (\n    measurement === MEASUREMENTS.GRAM ||\n    measurement === MEASUREMENTS.KILOGRAM ||\n    measurement === MEASUREMENTS.MILLILITRE ||\n    measurement === MEASUREMENTS.CENTIMETRE ||\n    measurement === MEASUREMENTS.LITRE\n  ) {\n    // 2 + g = 2g\n    return displayQuantity + measurement;\n  }\n\n  if (\n    measurement === MEASUREMENTS.TEASPOON ||\n    measurement === MEASUREMENTS.TABLESPOON\n  ) {\n    // 2 + tsp = 2 tsp\n    return displayQuantity + \" \" + measurement;\n  }\n\n  if (measurement === MEASUREMENTS.JAR || measurement === MEASUREMENTS.CAN) {\n    if (parseInt(displayQuantity) > 1)\n      return displayQuantity + \" \" + measurement + \"s\";\n    return displayQuantity + \" \" + measurement;\n  }\n\n  return displayQuantity;\n};\n","import { convertIngredientQuantity } from \"./convertIngredientQuantity\";\n\ntype ICalculateIngredientCost = {\n  ingredient: IInventoryIngredient;\n  quantity?: IIngredientQuantity;\n  measurement: IIngredientMeasurement;\n};\n\nexport const calculateIngredientCost = ({\n  ingredient,\n  quantity,\n  measurement\n}: ICalculateIngredientCost): number => {\n  if (!quantity) return 0;\n\n  let [ingredientQuantity, ingredientMeasurement] = [quantity, measurement];\n\n  // Extract the attached inventory cost information\n  const inventory = ingredient.cost;\n  const inventoryQuantity = inventory && inventory.quantity;\n  const inventoryMeasurement = inventory && inventory.measurement;\n  const inventoryPrice = inventory && inventory.price;\n\n  // Charge nothing for zero-cost items or items (water, salt, pepper)\n  if (inventoryPrice === 0 || (!ingredientQuantity && !ingredientMeasurement))\n    return 0;\n\n  // Certain items like fresh herbs will cost the full amount always\n  //@ts-ignore\n  if (inventory && inventory.payFullAmountAlways) return inventoryPrice;\n\n  // If ingredient and inventory MEASUREMENTS don't already match, attempt to make them match\n  if (ingredientMeasurement !== inventoryMeasurement) {\n    ingredientQuantity = convertIngredientQuantity(\n      ingredientQuantity,\n      ingredientMeasurement,\n      inventoryMeasurement\n    );\n\n    ingredientMeasurement = inventoryMeasurement;\n  }\n\n  // Now the ingredient and inventory MEASUREMENTS should match, perform simple proportion calculation\n  if (\n    ingredientMeasurement === inventoryMeasurement ||\n    (!ingredientMeasurement && !inventoryMeasurement)\n  )\n    //@ts-ignore\n    return (ingredientQuantity / inventoryQuantity) * inventoryPrice;\n\n  // If the ingredient and inventory MEASUREMENTS still don't match, throw a deliberate error\n  alert(\"ERROR\");\n  return 0;\n};\n","import { MEASUREMENTS } from \"../../constants\";\n\nexport const convertIngredientQuantity = (\n  ingredientQuantity: IIngredientQuantity,\n  ingredientMeasurement: IIngredientMeasurement,\n  inventoryMeasurement: IIngredientMeasurement\n): number => {\n  switch (true) {\n    // 1 tsp = 5.9ml\n    case ingredientMeasurement === MEASUREMENTS.TEASPOON &&\n      inventoryMeasurement === MEASUREMENTS.MILLILITRE:\n      return ingredientQuantity * 5.9;\n\n    // 1 tbsp = 17.8ml\n    case ingredientMeasurement === MEASUREMENTS.TABLESPOON &&\n      inventoryMeasurement === MEASUREMENTS.MILLILITRE:\n      return ingredientQuantity * 17.8;\n\n    // 1000g = 1kg, 1000 ml = 1L\n    case (ingredientMeasurement === MEASUREMENTS.GRAM &&\n      inventoryMeasurement === MEASUREMENTS.KILOGRAM) ||\n      (ingredientMeasurement === MEASUREMENTS.MILLILITRE &&\n        inventoryMeasurement === MEASUREMENTS.LITRE):\n      return ingredientQuantity / 1000;\n\n    // 1kg = 1000g, 1L = 1000ml\n    case (ingredientMeasurement === MEASUREMENTS.KILOGRAM &&\n      inventoryMeasurement === MEASUREMENTS.GRAM) ||\n      (ingredientMeasurement === MEASUREMENTS.LITRE &&\n        inventoryMeasurement === MEASUREMENTS.MILLILITRE):\n      return ingredientQuantity * 1000;\n\n    // 1 tbsp = 3tsp\n    case ingredientMeasurement === MEASUREMENTS.TABLESPOON &&\n      inventoryMeasurement === MEASUREMENTS.TEASPOON:\n      return ingredientQuantity * 3;\n\n    // 3 tsp = 1 tsp\n    case ingredientMeasurement === MEASUREMENTS.TEASPOON &&\n      inventoryMeasurement === MEASUREMENTS.TABLESPOON:\n      return ingredientQuantity / 3;\n\n    // ROUGH ESTIMATE: 1 tbsp = 12g\n    case ingredientMeasurement === MEASUREMENTS.TABLESPOON &&\n      inventoryMeasurement === MEASUREMENTS.GRAM:\n      return ingredientQuantity * 12;\n\n    // ROUGH ESTIMATE: 1 tsp = 4g\n    case ingredientMeasurement === MEASUREMENTS.TEASPOON &&\n      inventoryMeasurement === MEASUREMENTS.GRAM:\n      return ingredientQuantity * 4;\n\n    default:\n      alert(\"ERROR!\");\n      return 0;\n  }\n};\n","export const turnTheSuffixIntoPrefix = (word: string): string => {\n  const THE_SUFFIX = \", The\";\n\n  if (word.slice(-5) === THE_SUFFIX)\n    return `The ${word.substring(0, word.length - THE_SUFFIX.length)}`;\n\n  return word;\n};\n","import { turnTheSuffixIntoPrefix } from \"./turnTheSuffixIntoPrefix\";\n\nexport const formatData = (inputData: any | Array<any>): string | null => {\n  if (!inputData) return null;\n\n  if (!Array.isArray(inputData))\n    return inputData.name && turnTheSuffixIntoPrefix(inputData.name);\n\n  const array = inputData.map(\n    item => item.name && turnTheSuffixIntoPrefix(item.name)\n  );\n\n  if (array.length === 2) return array[0] + \" & \" + array[1];\n  if (array.length === 3) return array[0] + \", \" + array[1] + \" & \" + array[2];\n\n  let outputString: string = \"\";\n\n  for (let i = 0; i < array.length; i++) {\n    outputString += i === array.length - 1 ? array[i] : `${array[i]}, `;\n  }\n\n  return outputString;\n};\n","const yesterday = (): number => {\n  const today: Date = new Date();\n  return today.setDate(today.getDate() - 1);\n};\n\nexport const isInFuture = (dates: Array<Date>): boolean => {\n  const dateToCompare: number = dates[0].valueOf();\n  return dateToCompare > yesterday();\n};\n","import { PAGE_SECTIONS } from \"../../constants\";\n\nimport { isInFuture } from \"./isInFuture\";\n\ninterface ILookupFunction {\n  dataItem: UnknownTypeDataItem;\n  pageSectionTitle: IPageSectionDetails;\n  itemToMatch: any;\n}\nconst musicianMatchExists = ({\n  dataItem,\n  itemToMatch,\n  pageSectionTitle\n}: ILookupFunction): boolean =>\n  pageSectionTitle === PAGE_SECTIONS.MUSICIAN &&\n  (dataItem.headline === itemToMatch ||\n    (dataItem.support && dataItem.support.includes(itemToMatch)) ||\n    (dataItem.lineup && dataItem.lineup.includes(itemToMatch)));\n\nconst actorMatchExists = ({\n  dataItem,\n  itemToMatch,\n  pageSectionTitle\n}: ILookupFunction): boolean =>\n  pageSectionTitle === PAGE_SECTIONS.ACTOR &&\n  dataItem.cast &&\n  dataItem.cast.includes(itemToMatch);\n\nconst playMatchExists = ({\n  dataItem,\n  itemToMatch,\n  pageSectionTitle\n}: ILookupFunction): boolean =>\n  pageSectionTitle === PAGE_SECTIONS.PLAY && dataItem.play === itemToMatch;\n\nconst friendMatchExists = ({\n  dataItem,\n  itemToMatch,\n  pageSectionTitle\n}: ILookupFunction): boolean =>\n  pageSectionTitle === PAGE_SECTIONS.FRIEND &&\n  dataItem.company &&\n  dataItem.company.includes(itemToMatch);\n\nconst theatreVenueMatchExists = ({\n  dataItem,\n  itemToMatch,\n  pageSectionTitle\n}: ILookupFunction): boolean =>\n  pageSectionTitle === PAGE_SECTIONS.THEATRE_VENUES &&\n  dataItem.theatre === itemToMatch;\n\nconst festivalMatchExists = ({\n  dataItem,\n  itemToMatch,\n  pageSectionTitle\n}: ILookupFunction): boolean =>\n  pageSectionTitle === PAGE_SECTIONS.FESTIVAL &&\n  dataItem.festival === itemToMatch;\n\nconst musicVenueMatchExists = ({\n  dataItem,\n  itemToMatch,\n  pageSectionTitle\n}: ILookupFunction): boolean =>\n  pageSectionTitle === PAGE_SECTIONS.MUSIC_VENUES &&\n  dataItem.venue === itemToMatch;\n\nconst countryCityTownMatchExists = ({\n  dataItem,\n  itemToMatch,\n  pageSectionTitle\n}: ILookupFunction): boolean =>\n  (pageSectionTitle === PAGE_SECTIONS.COUNTRY ||\n    pageSectionTitle === PAGE_SECTIONS.ATTRACTION ||\n    pageSectionTitle === PAGE_SECTIONS.REGION ||\n    pageSectionTitle === PAGE_SECTIONS.TOWN ||\n    pageSectionTitle === PAGE_SECTIONS.ISLAND ||\n    pageSectionTitle === PAGE_SECTIONS.CITY) &&\n  ((dataItem.title && dataItem.title.includes(itemToMatch)) ||\n    (dataItem.hidden && dataItem.hidden.includes(itemToMatch)) ||\n    (dataItem.subtitle && dataItem.subtitle.includes(itemToMatch)));\n\ninterface IGetPageSectionItemCounts {\n  itemToCount: any;\n  pageSectionTitle: IPageSectionDetails;\n  data: Array<UnknownTypeDataItem>;\n}\n\ntype UnknownTypeDataItem = any;\n\nexport const getPageSectionItemCounts = ({\n  itemToCount,\n  pageSectionTitle,\n  data\n}: IGetPageSectionItemCounts) => {\n  let pastCount: number = 0;\n  let futureCount: number = 0;\n\n  data.map((dataItem: UnknownTypeDataItem) => {\n    const params: ILookupFunction = {\n      pageSectionTitle,\n      dataItem,\n      itemToMatch: itemToCount\n    };\n\n    if (\n      musicianMatchExists(params) ||\n      festivalMatchExists(params) ||\n      friendMatchExists(params) ||\n      musicVenueMatchExists(params) ||\n      playMatchExists(params) ||\n      theatreVenueMatchExists(params) ||\n      countryCityTownMatchExists(params) ||\n      actorMatchExists(params)\n    ) {\n      if (isInFuture(dataItem.dates)) {\n        futureCount += 1;\n      } else {\n        pastCount += 1;\n      }\n    }\n\n    return null;\n  });\n\n  return { futureCount, pastCount };\n};\n","import { PAGE_SECTIONS } from \"../../constants\";\n\ntype UnknownTypeDataItem = any;\ninterface IItemIsFavourited {\n  itemToInspect: any;\n  pageSectionTitle: IPageSectionDetails;\n  favouritedData: Array<UnknownTypeDataItem>;\n}\n\nexport const itemIsFavourited = ({\n  itemToInspect,\n  pageSectionTitle,\n  favouritedData\n}: IItemIsFavourited) => {\n  let itemIsFavourited = false;\n\n  favouritedData.map((dataItem: UnknownTypeDataItem) => {\n    if (\n      (pageSectionTitle === PAGE_SECTIONS.MUSICIAN &&\n        itemToInspect === dataItem.headline) ||\n      (pageSectionTitle === PAGE_SECTIONS.PLAY &&\n        itemToInspect === dataItem.play)\n    )\n      itemIsFavourited = true;\n    return null;\n  });\n\n  return itemIsFavourited;\n};\n","import { CONSOLE_LOG_RECIPE_COST_CALCULATIONS } from \"../../config\";\nimport { NO_UNIT_COST_FOR_RECIPE_EXISTS } from \"../../constants\";\n\nimport {\n  numberToCurrencyString,\n  consoleLogCostedIngredient,\n  consoleLogRecipeTitle,\n  calculateIngredientCost\n} from \"../local\";\n\ninterface ICalculateRecipeCost {\n  ingredients: Array<Array<IRecipeIngredient>>;\n  yieldQuantity?: IIngredientQuantity;\n  recipeTitle: string;\n}\n\nexport const calculateRecipeCost = ({\n  ingredients,\n  yieldQuantity,\n  recipeTitle\n}: ICalculateRecipeCost): { displayCost: string; displayUnitCost: string } => {\n  if (CONSOLE_LOG_RECIPE_COST_CALCULATIONS) consoleLogRecipeTitle(recipeTitle);\n\n  let runningRecipeCost: number = 5;\n\n  ingredients.map(ingredientSection => {\n    ingredientSection.map(recipeIngredient => {\n      // @ts-ignore\n      runningRecipeCost += calculateIngredientCost(recipeIngredient);\n\n      if (CONSOLE_LOG_RECIPE_COST_CALCULATIONS) {\n        const { quantity, measurement, ingredient } = recipeIngredient;\n        //@ts-ignore\n        consoleLogCostedIngredient({ cost, quantity, measurement, ingredient });\n      }\n\n      return null;\n    });\n    return null;\n  });\n\n  const unitCost: number | undefined =\n    yieldQuantity && runningRecipeCost / yieldQuantity;\n  const displayCost: string = numberToCurrencyString(runningRecipeCost, 1);\n  const displayUnitCost: string = unitCost\n    ? numberToCurrencyString(unitCost, 1)\n    : NO_UNIT_COST_FOR_RECIPE_EXISTS;\n\n  return { displayCost, displayUnitCost };\n};\n","interface IGenerateChildItemsFromParentItems {\n  childItems: string;\n  parentItems: Object;\n  parentFlag?: string;\n}\n\nexport const generateChildItemsFromParentItems = ({\n  childItems,\n  parentItems,\n  parentFlag\n}: IGenerateChildItemsFromParentItems) => {\n  const parentObject: Array<any> = Object.values(parentItems);\n\n  return (\n    [].concat\n      .apply(\n        [],\n        //@ts-ignore\n        parentObject\n          .filter(item => item[childItems])\n          .map(item =>\n            //@ts-ignore\n            Object.values(item[childItems]).filter(item => item.name)\n          )\n      )\n      //@ts-ignore\n      .concat(parentObject.filter(item => item[parentFlag]))\n  );\n};\n","import {\n  convertDecimalToFraction,\n  concatenateQuantityAndMeasurement\n} from \"../local\";\n\nconst POTATO = \"potato\";\n\nexport const generateIngredientListItem = ({\n  quantity,\n  measurement,\n  ingredient,\n  optional,\n  notes\n}: IRecipeIngredient): string => {\n  const ingredientText: string = ingredient.displayText;\n\n  // Can we return the ingredient with no measurement, i.e. \"freshly ground rock salt\"\n  if (!quantity && !measurement) return ingredientText;\n\n  // Do we need to turn a decimal to a more aesthetically-pleasing fraction?\n  //@ts-ignore\n  const displayQuantity: string = convertDecimalToFraction(quantity);\n\n  // Ensure it says \"2 limes\" instead of \"2 lime\" or \"3 potatoes\" instead of \"3 potato\"\n  const displayIngredient: string =\n    //@ts-ignore\n    quantity > 1 && !measurement\n      ? ingredientText.slice(-POTATO.length) === POTATO\n        ? ingredientText + \"es\"\n        : ingredientText + \"s\"\n      : ingredientText;\n\n  // Establish if there will be a space between the quantity and the unit of measurement\n  const displayQuantityMeasurement = concatenateQuantityAndMeasurement(\n    displayQuantity,\n    measurement\n  );\n\n  // Concatenate the quantity and measurement with the ingredient itself\n  const displayQuantityMeasurementIngredients =\n    displayQuantityMeasurement + \" \" + displayIngredient;\n\n  // Append the ingredient notes or \"optional\" text if required\n  return optional\n    ? displayQuantityMeasurementIngredients + \" (optional)\"\n    : notes\n    ? `${displayQuantityMeasurementIngredients} (${notes})`\n    : displayQuantityMeasurementIngredients;\n};\n","import { UNICODE } from \"../../constants\";\n\nexport const convertDecimalToFraction = (decimal: number): string => {\n  switch (decimal) {\n    case 0.25:\n      return UNICODE.QUARTER;\n    case 0.5:\n      return UNICODE.HALF;\n    case 1.5:\n      return 1 + UNICODE.HALF;\n    case 2.5:\n      return 2 + UNICODE.HALF;\n    case 3.5:\n      return 3 + UNICODE.HALF;\n    default:\n      return decimal.toString();\n  }\n};\n","export const getServeWithListItem = (\n  serveWithItems: Array<IRecipeIngredient>\n): string => {\n  let stringList = serveWithItems[0].ingredient.displayText;\n\n  for (let i = 1; i < serveWithItems.length; i++) {\n    const ingredient = serveWithItems[i].ingredient.displayText;\n    if (i === serveWithItems.length - 1) {\n      stringList += ` or ${ingredient}`;\n    } else {\n      stringList += `, ${ingredient}`;\n    }\n  }\n  return stringList;\n};\n","import { PAGE_SECTIONS } from \"../../constants\";\n\nimport {\n  isInFuture,\n  formatData,\n  getPageSectionItemCounts,\n  itemIsFavourited\n} from \"../local\";\n\ninterface IGenerateSectionData {\n  items: any;\n  pageSectionTitle: IPageSectionDetails;\n  filter: IFilter;\n  allData: Array<any>;\n  favouritedData: Array<any>;\n  upcomingMode: boolean;\n  bucketListMode: boolean;\n}\n\nexport const generateSectionData = ({\n  items,\n  pageSectionTitle,\n  filter,\n  allData,\n  favouritedData,\n  upcomingMode,\n  bucketListMode\n}: IGenerateSectionData) => {\n  //@ts-ignore\n  if (upcomingMode) return allData.filter(item => isInFuture(item.dates));\n\n  //@ts-ignore\n  const mapToListEntry = item => {\n    const { pastCount, futureCount } = getPageSectionItemCounts({\n      itemToCount: item,\n      pageSectionTitle,\n      data: allData\n    });\n\n    return {\n      listEntry: formatData(item),\n      ignoreCountInfo: item.insignificant || bucketListMode,\n      pastCount,\n      futureCount,\n      favourite:\n        item.favourite ||\n        itemIsFavourited({\n          itemToInspect: item,\n          pageSectionTitle,\n          favouritedData\n        }),\n      star: item.capital\n    };\n  };\n\n  const data = Object.values(items)\n    //@ts-ignore\n    .filter(item => (filter ? item[filter] : true))\n    .sort((a, b) =>\n      //@ts-ignore\n      (a.name ? a.name : a)\n        .toLowerCase()\n        //@ts-ignore\n        .localeCompare((b.name ? b.name : b).toLowerCase())\n    )\n    .map(item => mapToListEntry(item))\n    .filter(({ futureCount, pastCount }) =>\n      bucketListMode ? futureCount === 0 && pastCount === 0 : true\n    )\n    // DO NOT INCLUDE VENUES I'VE NEVER GONE TO ON THE WEBSITE, e.g. \"Lafayette\" venu\n    .filter(\n      ({ futureCount, ignoreCountInfo, pastCount }) =>\n        ignoreCountInfo || futureCount !== 0 || pastCount !== 0\n    );\n\n  return pageSectionTitle === PAGE_SECTIONS.FRIEND\n    ? data\n        .sort((a, b) => (a.futureCount > b.futureCount ? -1 : 1))\n        .sort((a, b) => (a.pastCount > b.pastCount ? -1 : 1))\n    : data;\n};\n","import { EVENT_CARD_TYPES } from \"../../constants\";\n\nimport { formatData, isInFuture } from \"../local\";\n\ninterface IMapDataToEventCards {\n  data: Array<UnformattedEventItem>;\n  eventType: IEventCardType;\n}\n\ntype UnformattedEventItem = any;\n\nexport const mapDataToEventCards = ({\n  data,\n  eventType\n}: IMapDataToEventCards): Array<IEventCard> => {\n  const mapDataToEventCard = ({\n    title,\n    subtitle,\n    headline,\n    festival,\n    support,\n    lineup,\n    dates,\n    venue,\n    favourite,\n    company,\n    ticketType,\n    play,\n    cast,\n    theatre\n  }: any): IEventCard => ({\n    //@ts-ignore\n    title: formatData(\n      title\n        ? title\n        : eventType === EVENT_CARD_TYPES.GIG\n        ? headline\n          ? headline\n          : festival\n        : eventType === EVENT_CARD_TYPES.THEATRE\n        ? play\n        : null\n    ),\n    //@ts-ignore\n    subtitle: formatData(\n      subtitle\n        ? subtitle\n        : eventType === EVENT_CARD_TYPES.GIG\n        ? lineup\n          ? lineup\n          : support\n        : eventType === EVENT_CARD_TYPES.THEATRE\n        ? cast\n        : null\n    ),\n    //@ts-ignore\n    body: formatData(\n      eventType === EVENT_CARD_TYPES.GIG\n        ? venue\n        : eventType === EVENT_CARD_TYPES.THEATRE\n        ? theatre\n        : null\n    ),\n    dates,\n    company: company.sort((a: IFriend, b: IFriend) =>\n      a.initials > b.initials ? 1 : -1\n    ),\n    eventType,\n    favourite,\n    disclaimer:\n      eventType === EVENT_CARD_TYPES.GIG && isInFuture(dates) && ticketType\n  });\n\n  return data.map((item: UnformattedEventItem) => mapDataToEventCard(item));\n};\n","import { PAGE_SECTION_TYPES } from \"../../constants\";\n\nimport { isInFuture } from \"../local\";\n\nimport { mapDataToEventCards } from \"./mapDataToEventCards\";\n\ntype SingleYearData = Array<any>;\ntype IMapYearGroupsToSections = {\n  years: Array<SingleYearData>;\n  eventType: IEventCardType;\n};\n\nexport const mapYearGroupsToSections = ({\n  years,\n  eventType\n}: IMapYearGroupsToSections): Array<IPageSection> => {\n  const mapYearGroupToSection = (year: SingleYearData): IPageSection => {\n    const title = year[0].dates[0].getFullYear();\n\n    return {\n      details: { id: title, title, type: PAGE_SECTION_TYPES.EVENT_CARDS },\n      showSectionLength: true,\n      data: mapDataToEventCards({ data: year, eventType }).filter(\n        (item: any) => !isInFuture(item.dates)\n      )\n    };\n  };\n\n  return years.map((year: any) => mapYearGroupToSection(year));\n};\n","import { UNICODE } from \"../../constants\";\n\ninterface IBakeForAbout {\n  minutes: number;\n  skewer?: boolean;\n  wellRisen?: boolean;\n}\ninterface IPreheatOven {\n  degreesCelcius: number;\n  bakingTray?: boolean;\n}\ninterface ITransferToLoafTin {\n  sunkenCentre?: boolean;\n}\ninterface IRecipeMethodEntries {\n  FOLD_IN_FLOUR_MIX: string;\n  LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN: string;\n  MAKE_FLAX_EGG: string;\n  bakeForAbout: (parms: IBakeForAbout) => string;\n  preheatOven: (parms: IPreheatOven) => string;\n  transferToLoafTin: (parms: ITransferToLoafTin) => string;\n}\n\nexport const recipeMethodEntries = (): IRecipeMethodEntries => {\n  const FOLD_IN_FLOUR_MIX: string =\n    \"in small batches, sieve the flour mix into the mixture and gently fold in until there are no more flour pockets\";\n  const LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN: string =\n    \"leave to cool before removing from loaf tin\";\n  const MAKE_FLAX_EGG: string =\n    \"make flax egg by stirring ground flax seeds with water and leaving to rest for at least 5 minutes until it thickens\";\n\n  const bakeForAbout = ({\n    minutes,\n    skewer = false,\n    wellRisen = false\n  }: IBakeForAbout): string => {\n    const defaultText = `bake for about ${minutes} minutes`;\n    const additionalText =\n      (skewer && \"just until skewer runs clean\") ||\n      (wellRisen && \"until well-risen and slightly golden\");\n\n    if (!additionalText) return defaultText;\n    return `${defaultText} (${additionalText})`;\n  };\n\n  const preheatOven = ({\n    degreesCelcius,\n    bakingTray = false\n  }: IPreheatOven): string => {\n    const ovenTemperature = degreesCelcius + UNICODE.DEGREES_CELCIUS;\n\n    if (!bakingTray) return \"preheat oven to \" + ovenTemperature;\n    return \"preheat baking tray in oven at \" + ovenTemperature;\n  };\n\n  const transferToLoafTin = ({\n    sunkenCentre = false\n  }: ITransferToLoafTin): string => {\n    const defaultText = \"transfer mixture to non-stick loaf tin\";\n    const additionalText =\n      sunkenCentre &&\n      \"create slightly sunken centre to help the cake rise more evenly\";\n\n    if (!additionalText) return defaultText;\n    return `${defaultText} (${additionalText})`;\n  };\n\n  return {\n    FOLD_IN_FLOUR_MIX,\n    LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN,\n    MAKE_FLAX_EGG,\n    bakeForAbout,\n    preheatOven,\n    transferToLoafTin\n  };\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { FlexColumn, FlexRow, Text } from \"../../primitives\";\nimport {\n  daysToGo,\n  getDisplayDateText,\n  getCountdownText\n} from \"../../utils/global\";\n\ntype EventCardTitleProps = {\n  favourite: boolean;\n};\nconst Title = styled(Text.P.M)`\n  ${({ favourite }: EventCardTitleProps) =>\n    favourite &&\n    css`\n      ::before {\n        content: \"♥ \";\n      }\n    `}\n\n  font-weight: bold;\n  text-transform: uppercase;\n`;\n\nconst Subtitle = styled(Text.P.S)`\n  font-weight: bold;\n  text-transform: uppercase;\n`;\n\nconst Body = styled(Text.P.S)`\n  padding: 1px 0 3px;\n`;\n\nconst Dates = styled(Text.P.XS)``;\n\nconst ItalicFlexRow = styled(FlexRow)`\n  font-style: italic;\n`;\n\nconst Disclaimer = styled(Text.P.XS)`\n  margin: 8px 0 0 4px;\n`;\n\nconst Countdown = styled(Text.P.S)`\n  font-weight: bold;\n  margin-top: 5px;\n  text-align: left;\n`;\n\nexport const EventCard: React.FC<IEventCard> = ({\n  title,\n  subtitle,\n  favourite,\n  body,\n  dates,\n  disclaimer\n}) => {\n  const daysTilGig: number = daysToGo(dates);\n\n  return (\n    <FlexColumn data-test=\"event-card-container\">\n      <Title data-test=\"event-card-title\" favourite={favourite}>\n        {title}\n      </Title>\n\n      {subtitle && (\n        <Subtitle data-test=\"event-card-subtitle\">{subtitle}</Subtitle>\n      )}\n\n      {body && <Body data-test=\"event-card-body\">{body}</Body>}\n\n      <Dates data-test=\"event-card-date\">{getDisplayDateText(dates)}</Dates>\n\n      {daysTilGig >= 0 && (\n        <ItalicFlexRow>\n          <Countdown>{getCountdownText(daysTilGig)}</Countdown>\n\n          {disclaimer && <Disclaimer>({disclaimer})</Disclaimer>}\n        </ItalicFlexRow>\n      )}\n    </FlexColumn>\n  );\n};\n","import { EVENT_CARD_TYPES, PAGE_SECTIONS } from \"../constants\";\nimport { DATA_GIGS } from \"../data\";\nimport { ICONS } from \"../resources\";\nimport { mapDataToEventCards, mapYearGroupsToSections } from \"../utils/global\";\n\nconst eventType = EVENT_CARD_TYPES.GIG;\n\n//@ts-ignore\nconst mapGigsToEventCards = parms =>\n  mapDataToEventCards({ ...parms, eventType });\n\nconst { pastCount, futureCount } = DATA_GIGS;\n\nconst statsSections: Array<IPageSection> = [\n  {\n    details: PAGE_SECTIONS.MUSICIAN,\n    icon: ICONS.ARTIST,\n    data: DATA_GIGS.MUSICIANS,\n    showSectionLength: true\n  },\n  {\n    details: PAGE_SECTIONS.BUCKET_LIST,\n    icon: ICONS.STARS,\n    data: DATA_GIGS.BUCKET_LIST,\n    showSectionLength: true\n  },\n  {\n    details: PAGE_SECTIONS.FESTIVAL,\n    showSectionLength: true,\n    icon: ICONS.PEACE_SIGN,\n    data: DATA_GIGS.FESTIVALS\n  },\n  {\n    details: PAGE_SECTIONS.FRIEND,\n    icon: ICONS.PEOPLE,\n    showSectionLength: false,\n    data: DATA_GIGS.FRIENDS,\n    leaderboard: true\n  },\n  {\n    details: PAGE_SECTIONS.UP_NEXT,\n    icon: ICONS.NOTEPAD,\n    data: mapGigsToEventCards({ data: DATA_GIGS.UPCOMING }),\n    showSectionLength: true\n  },\n  {\n    details: PAGE_SECTIONS.MUSIC_VENUES,\n    icon: ICONS.STADIUM,\n    data: DATA_GIGS.VENUES,\n    showSectionLength: true\n  }\n];\n\nconst yearSections: Array<IPageSection> = mapYearGroupsToSections({\n  years: DATA_GIGS.ALL_GROUPED_BY_YEAR,\n  eventType\n});\n\nconst sections: Array<IPageSection> = [...statsSections, ...yearSections];\n\nexport const PAGE_DATA_GIGS: IPageData = {\n  pastCount,\n  futureCount,\n  sections\n};\n","export const daysToGo = (dates: Array<Date>, id: string = \"\"): number => {\n  const secondsInADay: number = 24 * 60 * 60;\n  const dateDifference: number = dates[0].valueOf() - new Date().valueOf();\n\n  return Math.floor(dateDifference / (secondsInADay * 1000) + 1);\n};\n","import { DAYS_OF_THE_WEEK, MONTHS } from \"../../constants\";\n\nexport const getDisplayDateText = (dates: Array<Date>): string => {\n  const stringifyDate = (date: Date): string => {\n    const weekday: number = date.getDay();\n    const day: number = date.getDate();\n    const month: number = date.getMonth();\n    const year: number = date.getFullYear();\n\n    return `${DAYS_OF_THE_WEEK[weekday]} ${day} ${MONTHS[month]} ${year}`;\n  };\n\n  return dates.length > 1\n    ? `${stringifyDate(dates[0])} to ${stringifyDate(dates[1])}`\n    : stringifyDate(dates[0]);\n};\n","export const getCountdownText = (daysToGo: number): string => {\n  if (daysToGo === 0) return \"TODAY\";\n  if (daysToGo === 1) return daysToGo + \" DAY TO GO\";\n  return daysToGo + \" DAYS TO GO\";\n};\n","const requireSvg = (icon: string): IImageSrc => require(`./svg/${icon}.svg`);\nconst requireJpg = (photo: string): IImageSrc => require(`./jpg/${photo}.jpg`);\n\nexport const ICONS: IconsObject = {\n  // A\n  ARTIST: requireSvg(\"artist\"),\n  // B\n  BOOK: requireSvg(\"book\"),\n  BRAIN: requireSvg(\"brain\"),\n  // C\n  CAKE: requireSvg(\"cake\"),\n  CAMERA: requireSvg(\"camera\"),\n  CITY: requireSvg(\"city\"),\n  CLOCHE: requireSvg(\"cloche\"),\n  // F\n  FLAG: requireSvg(\"flag\"),\n  // H\n  HEART: requireSvg(\"heart\"),\n  // M\n  MAP_PIN: requireSvg(\"map_pin\"),\n  MASKS: requireSvg(\"masks\"),\n  MICROPHONE: requireSvg(\"microphone\"),\n  // N\n  NOTEPAD: requireSvg(\"notepad\"),\n  // P\n  PALM_TREE: requireSvg(\"palm_tree\"),\n  PEACE_SIGN: requireSvg(\"peace_sign\"),\n  PEOPLE: requireSvg(\"people\"),\n  // R\n  ROLLER_COASTER: requireSvg(\"roller_coaster\"),\n  // S\n  STADIUM: requireSvg(\"stadium\"),\n  STARS: requireSvg(\"stars\"),\n  // T\n  TENT: requireSvg(\"tent\"),\n  THEATRE: requireSvg(\"theatre\"),\n  TOAST: requireSvg(\"toast\"),\n  TOWN_HALL: requireSvg(\"town_hall\"),\n  TRAVEL: requireSvg(\"travel\"),\n  // V\n  VEG_BOWL: requireSvg(\"veg_bowl\")\n};\n\nexport const PHOTOS: PhotosObject = {\n  // B\n  BAKED_BEANS: requireJpg(\"baked_beans\"),\n  BANANA_CAKE: requireJpg(\"banana_cake\"),\n  BOLOGNESE: requireJpg(\"bolognese\"),\n  BROWNIES: requireJpg(\"brownies\"),\n  // C\n  CARBONARA: requireJpg(\"carbonara\"),\n  CRUMBLE: requireJpg(\"crumble\"),\n  // F\n  FLAPJACKS: requireJpg(\"flapjacks\"),\n  // K\n  KALE_CRISPY: requireJpg(\"kale_crispy\"),\n  // L\n  LASAGNE: requireJpg(\"lasagne\"),\n  // M\n  MASHED_POTATO: requireJpg(\"mashed_potato\"),\n  // P\n  PIRI_PIRI: requireJpg(\"piri_piri\"),\n  // R\n  RATATOUILLE: requireJpg(\"ratatouille\"),\n  ROGAN_JOSH: requireJpg(\"rogan_josh\"),\n  // S\n  SHEPHERDS_PIE: requireJpg(\"shepherds_pie\")\n};\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2006: Array<IGigData> = [\n  {\n    headline: MUSICIANS.ALL_AMERICAN_REJECTS,\n    dates: [new Date(\"2006-09-23\")],\n    venue: MUSIC_VENUES.APOLLO_MANCHESTER,\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2007: Array<IGigData> = [\n  {\n    headline: MUSICIANS.FALL_OUT_BOY,\n    support: [MUSICIANS.COBRA_STARSHIP],\n    dates: [new Date(\"2007-04-03\")],\n    venue: MUSIC_VENUES.APOLLO_MANCHESTER,\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    festival: FESTIVALS.DECAYDANCE,\n    lineup: [\n      MUSICIANS.COBRA_STARSHIP,\n      MUSICIANS.THE_ACADEMY_IS,\n      MUSICIANS.GYM_CLASS_HEROES,\n      MUSICIANS.PANIC_AT_THE_DISCO,\n      MUSICIANS.FALL_OUT_BOY\n    ],\n    dates: [new Date(\"2007-08-22\")],\n    venue: MUSIC_VENUES.HAMMERSMITH_APOLLO,\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN],\n    favourite: true\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2008: Array<IGigData> = [\n  {\n    headline: MUSICIANS.KATE_NASH,\n    support: [MUSICIANS.BLACK_KIDS],\n    venue: MUSIC_VENUES.WOLVERHAMPTON_CIVIC_HALL,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2008-03-01\")]\n  },\n  {\n    headline: MUSICIANS.PANIC_AT_THE_DISCO,\n    support: [MUSICIANS.METRO_STATION],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.MEGAN, FRIENDS.MUM, FRIENDS.EMMA],\n    dates: [new Date(\"2008-03-15\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.ADELE,\n    venue: MUSIC_VENUES.ALEXANDRA_THEATRE,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2008-05-04\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BOYS_LIKE_GIRLS,\n    support: [MUSICIANS.WE_THE_KINGS, MUSICIANS.CUTE_IS_WHAT_WE_AIM_FOR],\n    venue: MUSIC_VENUES.ACADEMY_2_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN],\n    dates: [new Date(\"2008-05-31\")]\n  },\n  {\n    headline: MUSICIANS.THE_ACADEMY_IS,\n    support: [MUSICIANS.WE_THE_KINGS, MUSICIANS.THE_MAINE],\n    venue: MUSIC_VENUES.BARFLY_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.MEGAN, FRIENDS.EMMA],\n    dates: [new Date(\"2008-09-20\")]\n  },\n  {\n    headline: MUSICIANS.FALL_OUT_BOY,\n    support: [MUSICIANS.BOYS_LIKE_GIRLS, MUSICIANS.YOU_ME_AT_SIX],\n    venue: MUSIC_VENUES.NEC_ARENA_BIRMINGHAM,\n    dates: [new Date(\"2008-10-19\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2009: Array<IGigData> = [\n  {\n    headline: MUSICIANS.FALL_OUT_BOY,\n    support: [MUSICIANS.HEY_MONDAY, MUSICIANS.KIDS_IN_GLASS_HOUSES],\n    dates: [new Date(\"2009-03-05\")],\n    company: [FRIENDS.MUM, FRIENDS.MEGAN, FRIENDS.EMMA],\n    venue: MUSIC_VENUES.ARENA_MANCHESTER\n  },\n  {\n    headline: MUSICIANS.YOU_ME_AT_SIX,\n    support: [MUSICIANS.EMAROSA, MUSICIANS.THE_SPILL_CANVAS],\n    dates: [new Date(\"2009-03-07\")],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.MEGAN, FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.KATY_PERRY,\n    support: [MUSICIANS.SLIIMY],\n    favourite: true,\n    dates: [new Date(\"2009-08-25\")],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.LOUISE, FRIENDS.MEGAN, FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    support: [MUSICIANS.THE_XX],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    dates: [new Date(\"2009-09-20\")],\n    favourite: true,\n    company: [FRIENDS.DAD]\n  },\n  {\n    headline: MUSICIANS.ALL_TIME_LOW,\n    support: [MUSICIANS.THE_FRIDAY_NIGHT_BOYS, MUSICIANS.AUDITION],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    dates: [new Date(\"2009-10-02\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.ARCTIC_MONKEYS,\n    dates: [new Date(\"2009-11-22\")],\n    company: [FRIENDS.MUM, FRIENDS.DAD],\n    venue: MUSIC_VENUES.ARENA_NOTTINGHAM\n  },\n  {\n    headline: MUSICIANS.PARAMORE,\n    support: [MUSICIANS.YOU_ME_AT_SIX],\n    venue: MUSIC_VENUES.NIA_ARENA_BIRMINGHAM,\n    dates: [new Date(\"2009-12-11\")],\n    company: [FRIENDS.MEGAN, FRIENDS.EMMA, FRIENDS.MUM]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2010: Array<IGigData> = [\n  {\n    headline: MUSICIANS.YOU_ME_AT_SIX,\n    support: [MUSICIANS.WE_THE_KINGS, MUSICIANS.FOREVER_THE_SICKEST_KIDS],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    dates: [new Date(\"2010-03-09\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    support: [MUSICIANS.DRUMS],\n    venue: MUSIC_VENUES.WOLVERHAMPTON_CIVIC_HALL,\n    company: [FRIENDS.DAD, FRIENDS.EMMA, FRIENDS.MUM],\n    dates: [new Date(\"2010-05-10\")]\n  },\n  {\n    headline: MUSICIANS.PALOMA_FAITH,\n    support: [MUSICIANS.ELIZA_DOOLITTLE],\n    venue: MUSIC_VENUES.DE_MONTFORT_HALL,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2010-11-05\")]\n  },\n  {\n    headline: MUSICIANS.MARINA,\n    venue: MUSIC_VENUES.TRENT_UNIVERSITY_NOTTINGHAM,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2010-11-07\")]\n  },\n  {\n    headline: MUSICIANS.ELLIE_GOULDING,\n    support: [MUSICIANS.SUNDAY_GIRL],\n    venue: MUSIC_VENUES.ENGINE_SHED,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2010-11-08\")]\n  },\n  {\n    headline: MUSICIANS.PARAMORE,\n    support: [MUSICIANS.B_O_B],\n    venue: MUSIC_VENUES.SHEFFIELD_ARENA,\n    company: [FRIENDS.EMMA, FRIENDS.MEGAN, FRIENDS.MUM],\n    dates: [new Date(\"2010-11-11\")]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2011: Array<IGigData> = [\n  {\n    headline: MUSICIANS.KATE_NASH,\n    support: [MUSICIANS.BRIGITTE_APHRODITE],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.TONYA, FRIENDS.KIRSTEN],\n    dates: [new Date(\"2011-03-22\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.KATY_PERRY,\n    venue: MUSIC_VENUES.ARENA_NOTTINGHAM,\n    company: [FRIENDS.JESS, FRIENDS.BLAINE, FRIENDS.ELLIE_S, FRIENDS.POOJA],\n    dates: [new Date(\"2011-03-30\")]\n  },\n  {\n    headline: MUSICIANS.ADELE,\n    support: [MUSICIANS.MICHAEL_KIWANUKA],\n    venue: MUSIC_VENUES.INSTITUTE_BIRMINGHAM,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2011-04-18\")]\n  },\n  {\n    headline: MUSICIANS.ADELE,\n    support: [MUSICIANS.AMOS_LEE],\n    venue: MUSIC_VENUES.DE_MONTFORT_HALL,\n    company: [FRIENDS.EMMA, FRIENDS.MUM],\n    dates: [new Date(\"2011-09-13\")]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2012: Array<IGigData> = [\n  {\n    headline: MUSICIANS.SBTRKT,\n    support: [MUSICIANS.DISCLOSURE],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2012-02-28\")]\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    venue: MUSIC_VENUES.NEC_ARENA_BIRMINGHAM,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2012-03-13\")]\n  },\n  {\n    headline: MUSICIANS.LITTLE_COMETS,\n    venue: MUSIC_VENUES.COCKPIT_LEEDS,\n    company: [FRIENDS.EMMA],\n    dates: [new Date(\"2012-04-23\")]\n  },\n  {\n    headline: MUSICIANS.KATE_NASH,\n    venue: MUSIC_VENUES.BODEGA,\n    company: [FRIENDS.TONYA, FRIENDS.SONYA, FRIENDS.KIRSTEN],\n    dates: [new Date(\"2012-06-22\")]\n  },\n  {\n    headline: MUSICIANS.MARINA,\n    venue: MUSIC_VENUES.INSTITUTE_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    dates: [new Date(\"2012-06-29\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.LADY_GAGA,\n    venue: MUSIC_VENUES.TWICKENHAM_STADIUM,\n    company: [FRIENDS.EMMA],\n    dates: [new Date(\"2012-09-08\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.NICKI_MINAJ,\n    support: [MUSICIANS.MISHA_B, MUSICIANS.TYGA],\n    venue: MUSIC_VENUES.ARENA_NOTTINGHAM,\n    company: [FRIENDS.ELLIE_S, FRIENDS.BLAINE],\n    dates: [new Date(\"2012-10-21\")]\n  },\n  {\n    headline: MUSICIANS.LITTLE_COMETS,\n    venue: MUSIC_VENUES.RESCUE_ROOMS,\n    company: [FRIENDS.SARAH_W, FRIENDS.BETH_SH],\n    dates: [new Date(\"2012-10-31\")]\n  },\n  {\n    headline: MUSICIANS.THE_KILLERS,\n    venue: MUSIC_VENUES.SHEFFIELD_ARENA,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2012-11-08\")]\n  },\n  {\n    headline: MUSICIANS.BEN_HOWARD,\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.STEVE_R],\n    dates: [new Date(\"2012-11-22\")]\n  },\n  {\n    headline: MUSICIANS.ELLIE_GOULDING,\n    venue: MUSIC_VENUES.ROCK_CITY,\n    favourite: true,\n    company: [FRIENDS.BLAINE, FRIENDS.JESS, FRIENDS.ELLIE_G],\n    dates: [new Date(\"2012-12-11\")]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2013: Array<IGigData> = [\n  {\n    headline: MUSICIANS.BASTILLE,\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2013-03-21\")]\n  },\n  {\n    headline: MUSICIANS.RIHANNA,\n    venue: MUSIC_VENUES.NEC_ARENA_BIRMINGHAM,\n    company: [FRIENDS.JESS],\n    dates: [new Date(\"2013-07-18\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.CHRVCHES,\n    venue: MUSIC_VENUES.RITZ_MANCHESTER,\n    company: [FRIENDS.SIMAN],\n    dates: [new Date(\"2013-10-14\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2014: Array<IGigData> = [\n  {\n    headline: MUSICIANS.FOXES,\n    venue: MUSIC_VENUES.RUBY_LOUNGE,\n    company: [FRIENDS.SIMAN],\n    dates: [new Date(\"2014-03-08\")]\n  },\n  {\n    headline: MUSICIANS.CLEAN_BANDIT,\n    venue: MUSIC_VENUES.ACADEMY_2_MANCHESTER,\n    company: [FRIENDS.SIAN],\n    dates: [new Date(\"2014-05-07\")]\n  },\n  {\n    headline: MUSICIANS.LORDE,\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2014-06-05\")]\n  },\n  {\n    festival: FESTIVALS.PARKLIFE,\n    lineup: [\n      MUSICIANS.FOXES,\n      MUSICIANS.ROUTE_94,\n      MUSICIANS.REDLIGHT,\n      MUSICIANS.BREACH,\n      MUSICIANS.RUDIMENTAL,\n      MUSICIANS.ELLA_EYRE,\n      MUSICIANS.CLEAN_BANDIT,\n      MUSICIANS.SAM_SMITH,\n      MUSICIANS.LONDON_GRAMMAR,\n      MUSICIANS.BASTILLE,\n      MUSICIANS.DISCLOSURE\n    ],\n    venue: MUSIC_VENUES.HEATON_PARK,\n    company: [FRIENDS.JESS, FRIENDS.POOJA, FRIENDS.TONYA],\n    dates: [new Date(\"2014-06-07\"), new Date(\"2014-06-08\")]\n  },\n  {\n    headline: MUSICIANS.SBTRKT,\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.THOM],\n    dates: [new Date(\"2014-09-30\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [\n      MUSICIANS.JAX_JONES,\n      MUSICIANS.DUKE_DUMONT,\n      MUSICIANS.CYRIL_HAHN,\n      MUSICIANS.FRIEND_WITHIN\n    ],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2014-10-04\")]\n  },\n  {\n    headline: MUSICIANS.CLEAN_BANDIT,\n    support: [MUSICIANS.YEARS_AND_YEARS],\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.SIAN],\n    dates: [new Date(\"2014-10-17\")]\n  },\n  {\n    headline: MUSICIANS.LADY_GAGA,\n    venue: MUSIC_VENUES.ARENA_MANCHESTER,\n    company: [FRIENDS.SIMAN],\n    dates: [new Date(\"2014-10-21\")]\n  },\n  {\n    headline: MUSICIANS.SAM_SMITH,\n    support: [MUSICIANS.TORI_KELLY],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2014-10-28\")]\n  },\n  {\n    headline: MUSICIANS.CHRVCHES,\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.SIMAN],\n    dates: [new Date(\"2014-11-06\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [\n      MUSICIANS.KIDNAP,\n      MUSICIANS.BONDAX,\n      MUSICIANS.GORGON_CITY,\n      MUSICIANS.REDLIGHT\n    ],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.AMY_B, FRIENDS.ELLE_O],\n    dates: [new Date(\"2014-11-07\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [\n      MUSICIANS.GEORGE_FITZGERALD,\n      MUSICIANS.SKREAM,\n      MUSICIANS.PAUL_WOOLFORD,\n      MUSICIANS.GREEN_VELVET\n    ],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.ALEX_FAYE],\n    dates: [new Date(\"2014-11-15\")]\n  },\n  {\n    headline: MUSICIANS.LA_ROUX,\n    venue: MUSIC_VENUES.RITZ_MANCHESTER,\n    company: [FRIENDS.EMMA],\n    dates: [new Date(\"2014-11-16\")]\n  },\n  {\n    headline: MUSICIANS.LADY_GAGA,\n    support: [MUSICIANS.LADY_STARLIGHT],\n    venue: MUSIC_VENUES.SHEFFIELD_ARENA,\n    company: [FRIENDS.GRACE],\n    dates: [new Date(\"2014-11-20\")]\n  },\n  {\n    headline: MUSICIANS.LILY_ALLEN,\n    venue: MUSIC_VENUES.APOLLO_MANCHESTER,\n    company: [FRIENDS.SIAN],\n    dates: [new Date(\"2014-11-25\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [MUSICIANS.MIDLAND, MUSICIANS.JOY_ORBISON, MUSICIANS.DUSKY],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.EMMA, FRIENDS.BECKY, FRIENDS.NATALIE],\n    dates: [new Date(\"2014-12-06\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2015: Array<IGigData> = [\n  {\n    festival: FESTIVALS.TRANSMISSION,\n    lineup: [MUSICIANS.TEN_WALLS, MUSICIANS.DUSKY, MUSICIANS.YOUSEF],\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.CHLOE, FRIENDS.AMY_B, FRIENDS.BETH_SP],\n    dates: [new Date(\"2015-02-07\")]\n  },\n  {\n    festival: FESTIVALS.TRIBAL_SESSIONS,\n    lineup: [MUSICIANS.JOSH_BUTLER, MUSICIANS.BONTAN, MUSICIANS.GREEN_VELVET],\n    venue: MUSIC_VENUES.SANKEYS,\n    company: [FRIENDS.TONYA, FRIENDS.ALEX_FAYE],\n    dates: [new Date(\"2015-02-13\")]\n  },\n  {\n    festival: FESTIVALS.TRANSMISSION,\n    lineup: [MUSICIANS.JAX_JONES, MUSICIANS.DUKE_DUMONT, MUSICIANS.BLONDE],\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.BETH_SP],\n    dates: [new Date(\"2015-02-27\")]\n  },\n  {\n    festival: FESTIVALS.TRANSMISSION,\n    lineup: [MUSICIANS.EATS_EVERYTHING, MUSICIANS.CARL_COX],\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.SONYA, FRIENDS.TONYA, FRIENDS.ALEX_FAYE],\n    dates: [new Date(\"2015-04-03\")]\n  },\n  {\n    headline: MUSICIANS.ARIANA_GRANDA,\n    support: [MUSICIANS.RIXTON],\n    venue: MUSIC_VENUES.ARENA_MANCHESTER,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2015-06-04\")]\n  },\n  {\n    festival: FESTIVALS.PARKLIFE,\n    lineup: [\n      MUSICIANS.BONDAX,\n      MUSICIANS.JUSTIN_MARTIN,\n      MUSICIANS.JULIO_BASHMORE,\n      MUSICIANS.TENSNAKE,\n      MUSICIANS.JAMES_BAY,\n      MUSICIANS.MK,\n      MUSICIANS.DANIEL_AVERY,\n      MUSICIANS.BAAUER,\n      MUSICIANS.DUSKY,\n      MUSICIANS.DAVID_RODIGAN,\n      MUSICIANS.GEORGE_FITZGERALD,\n      MUSICIANS.KAYTRANADA,\n      MUSICIANS.TEN_WALLS\n    ],\n    venue: MUSIC_VENUES.HEATON_PARK,\n    company: [\n      FRIENDS.SONYA,\n      FRIENDS.TONYA,\n      FRIENDS.AMY_B,\n      FRIENDS.ELLE_O,\n      FRIENDS.CHLOE\n    ],\n    dates: [new Date(\"2015-06-06\"), new Date(\"2015-06-07\")]\n  },\n  {\n    festival: FESTIVALS.GLASTONBURY,\n    lineup: [\n      MUSICIANS.JAMES_BAY,\n      MUSICIANS.MARY_J_BLIGE,\n      MUSICIANS.SBTRKT,\n      MUSICIANS.CARIBOU,\n      MUSICIANS.FLORENCE_AND_THE_MACHINE,\n      MUSICIANS.MACEO_PLEX,\n      MUSICIANS.DUSKY,\n      MUSICIANS.SKREAM,\n      MUSICIANS.GEORGE_EZRA,\n      MUSICIANS.YEARS_AND_YEARS,\n      MUSICIANS.JESSIE_WARE,\n      MUSICIANS.BEN_HOWARD,\n      MUSICIANS.KANYE_WEST,\n      MUSICIANS.JAMIE_JONES,\n      MUSICIANS.FOUR_TET,\n      MUSICIANS.THE_SMYTHS,\n      MUSICIANS.SOAK,\n      MUSICIANS.SEINABO_SEY,\n      MUSICIANS.CHARLI_XCX,\n      MUSICIANS.GROOVE_ARMADA,\n      MUSICIANS.JAMIE_T,\n      MUSICIANS.CHEMICAL_BROTHERS\n    ],\n    venue: MUSIC_VENUES.WORTHY_FARM,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.GRACE,\n      FRIENDS.ELLIE_G,\n      FRIENDS.EMMA,\n      FRIENDS.THOM,\n      FRIENDS.FANNY,\n      FRIENDS.HANNA\n    ],\n    dates: [new Date(\"2015-06-26\"), new Date(\"2015-06-28\")]\n  },\n  {\n    headline: MUSICIANS.NOEL_GALLAGHERS_HIGH_FLYING_BIRDS,\n    support: [MUSICIANS.JOHNNY_MARR],\n    venue: MUSIC_VENUES.CASTLEFIELD_BOWL,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2015-07-11\")]\n  },\n  {\n    headline: MUSICIANS.MIGUEL,\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.SIAN],\n    dates: [new Date(\"2015-10-18\")]\n  },\n  {\n    headline: MUSICIANS.CHRVCHES,\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2015-11-19\")]\n  },\n  {\n    headline: MUSICIANS.LISSIE,\n    venue: MUSIC_VENUES.ACADEMY_2_MANCHESTER,\n    dates: [new Date(\"2015-12-05\")],\n    company: [],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.FABRIC_NYE,\n    lineup: [MUSICIANS.GEORGE_FITZGERALD, MUSICIANS.EATS_EVERYTHING],\n    venue: MUSIC_VENUES.FABRIC,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.SONYA,\n      FRIENDS.FANNY,\n      FRIENDS.HANNA,\n      FRIENDS.LAURA\n    ],\n    dates: [new Date(\"2015-12-31\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2016: Array<IGigData> = [\n  {\n    headline: MUSICIANS.HALSEY,\n    support: [MUSICIANS.BORNS],\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2016-02-22\")]\n  },\n  {\n    headline: MUSICIANS.JOSEF_SALVAT,\n    venue: MUSIC_VENUES.GORILLA,\n    favourite: true,\n    company: [],\n    dates: [new Date(\"2016-03-06\")]\n  },\n  {\n    headline: MUSICIANS.TROYE_SIVAN,\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2016-04-18\")]\n  },\n  {\n    headline: MUSICIANS.TOURIST,\n    venue: MUSIC_VENUES.DEAF_INSTITUTE,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2016-05-10\")]\n  },\n  {\n    festival: FESTIVALS.GLASTONBURY,\n    lineup: [\n      MUSICIANS.NAO,\n      MUSICIANS.CHRISTINE_AND_THE_QUEENS,\n      MUSICIANS.AURORA,\n      MUSICIANS.DAUGHTER,\n      MUSICIANS.DISCLOSURE,\n      MUSICIANS.CARL_COX,\n      MUSICIANS.FOUR_TET,\n      MUSICIANS.MACEO_PLEX,\n      MUSICIANS.ALESSIA_CARA,\n      MUSICIANS.TOM_ODELL,\n      MUSICIANS[1975],\n      MUSICIANS.WILL_YOUNG,\n      MUSICIANS.ADELE,\n      MUSICIANS.RALEIGH_RITCHIE,\n      MUSICIANS.YEARS_AND_YEARS,\n      MUSICIANS.ELLIE_GOULDING,\n      MUSICIANS.GRIMES\n    ],\n    venue: MUSIC_VENUES.WORTHY_FARM,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.ELLIE_G,\n      FRIENDS.GRACE,\n      FRIENDS.CAITLIN,\n      FRIENDS.ELLIE_P,\n      FRIENDS.THOM\n    ],\n    dates: [new Date(\"2016-06-24\"), new Date(\"2016-06-26\")]\n  },\n  {\n    headline: MUSICIANS.BEYONCE,\n    venue: MUSIC_VENUES.WEMBLEY_STADIUM,\n    company: [FRIENDS.EMMA],\n    dates: [new Date(\"2016-07-03\")],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.LOVEBOX,\n    lineup: [\n      MUSICIANS.MO,\n      MUSICIANS.RITON,\n      MUSICIANS.DIPLO,\n      MUSICIANS.PAUL_WOOLFORD,\n      MUSICIANS.HEIDI,\n      MUSICIANS.HANNAH_WANTS,\n      MUSICIANS.JORIS_VOORN,\n      MUSICIANS.MAJOR_LAZER\n    ],\n    venue: MUSIC_VENUES.VICTORIA_PARK,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.LAURA,\n      FRIENDS.LUKE_J,\n      FRIENDS.ALICE_R\n    ],\n    dates: [new Date(\"2016-07-15\")]\n  },\n  {\n    festival: FESTIVALS.DEFECTED_BRISTOL,\n    lineup: [MUSICIANS.MK],\n    venue: MUSIC_VENUES.MOTION,\n    dates: [new Date(\"2016-07-30\")],\n    company: [FRIENDS.CHELSEA, FRIENDS.SARAH_W]\n  },\n  {\n    festival: FESTIVALS.BRIGHTON_PRIDE,\n    lineup: [\n      MUSICIANS.DUA_LIPA,\n      MUSICIANS.CARLY_RAE_JEPSEN,\n      MUSICIANS.SISTER_SLEDGE\n    ],\n    venue: MUSIC_VENUES.PRESTON_PARK,\n    company: [\n      FRIENDS.ELLIE_G,\n      FRIENDS.POOJA,\n      FRIENDS.GRACE,\n      FRIENDS.SIAN,\n      FRIENDS.TONYA,\n      FRIENDS.ALICE_R\n    ],\n    dates: [new Date(\"2016-08-06\")]\n  },\n  {\n    festival: FESTIVALS.V_FESTIVAL,\n    lineup: [\n      MUSICIANS.MIKE_POSNER,\n      MUSICIANS.MNEK,\n      MUSICIANS.ZARA_LARSSON,\n      MUSICIANS.PHILIP_GEORGE,\n      MUSICIANS.JESS_GLYNNE,\n      MUSICIANS.FLIGHT_FACILITIES,\n      MUSICIANS.SIA,\n      MUSICIANS.JUSTIN_BIEBER\n    ],\n    venue: MUSIC_VENUES.WESTON_PARK,\n    company: [FRIENDS.SARAH_W, FRIENDS.CHELSEA],\n    dates: [new Date(\"2016-08-21\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [MUSICIANS.DUSKY, MUSICIANS.DANIEL_AVERY],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2016-09-30\")]\n  },\n  {\n    headline: MUSICIANS.ROOSEVELT,\n    venue: MUSIC_VENUES.XOYO,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2016-11-24\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2017: Array<IGigData> = [\n  {\n    headline: MUSICIANS.JONAS_BLUE,\n    venue: MUSIC_VENUES.MINISTRY_OF_SOUND,\n    dates: [new Date(\"2017-01-28\")],\n    company: [\n      FRIENDS.ALICE_R,\n      FRIENDS.TONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.LAURA\n    ]\n  },\n  {\n    headline: MUSICIANS.LYVES,\n    venue: MUSIC_VENUES.SERVANT_JAZZ_QUARTERS,\n    dates: [new Date(\"2017-02-20\")],\n    company: []\n  },\n  {\n    headline: MUSICIANS.DUSKY,\n    venue: MUSIC_VENUES.ELECTRIC_BRIXTON,\n    dates: [new Date(\"2017-02-24\")],\n    favourite: true,\n    company: [FRIENDS.TONYA, FRIENDS.TOM, FRIENDS.CAITLIN, FRIENDS.RYAN]\n  },\n  {\n    headline: MUSICIANS.MARTIN_SOLVEIG,\n    support: [MUSICIANS.JAX_JONES],\n    dates: [new Date(\"2017-03-10\")],\n    venue: MUSIC_VENUES.EGG,\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.BANKS,\n    dates: [new Date(\"2017-03-13\")],\n    venue: MUSIC_VENUES.ROUNDHOUSE,\n    company: [FRIENDS.BECKY, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.TOVE_LO,\n    support: [MUSICIANS.BROODS],\n    dates: [new Date(\"2017-03-17\")],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    company: [FRIENDS.DAN]\n  },\n  {\n    headline: MUSICIANS.MUNA,\n    dates: [new Date(\"2017-03-28\")],\n    venue: MUSIC_VENUES.HOXTON_SQUARE_BAR_AND_KITCHEN,\n    company: [FRIENDS.LUKE_S],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.JORJA_SMITH,\n    dates: [new Date(\"2017-04-03\")],\n    venue: MUSIC_VENUES.VILLAGE_UNDERGROUND,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.VERITE,\n    dates: [new Date(\"2017-04-06\")],\n    venue: MUSIC_VENUES.ELECTROWERKZ,\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.FRANCES,\n    dates: [new Date(\"2017-04-07\")],\n    venue: MUSIC_VENUES.INSTITUTE_BIRMINGHAM,\n    company: [FRIENDS.EMMA, FRIENDS.MUM]\n  },\n  {\n    headline: MUSICIANS.JONES,\n    dates: [new Date(\"2017-05-03\")],\n    venue: MUSIC_VENUES.HOXTON_HALL,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.BETSY,\n    dates: [new Date(\"2017-05-15\")],\n    venue: MUSIC_VENUES.MOTH_CLUB,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.ALMA,\n    dates: [new Date(\"2017-05-16\")],\n    venue: MUSIC_VENUES.OSLO_HACKNEY,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.BETTY_WHO,\n    dates: [new Date(\"2017-05-17\")],\n    venue: MUSIC_VENUES.ZIGFRID_VON_UNDERBELLY,\n    company: [FRIENDS.SIAN]\n  },\n  {\n    headline: MUSICIANS.PARAMORE,\n    dates: [new Date(\"2017-06-19\")],\n    venue: MUSIC_VENUES.ROYAL_ALBERT_HALL,\n    company: [FRIENDS.LUKE_S],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.LOVEBOX,\n    lineup: [\n      MUSICIANS.JOE_GODDARD,\n      MUSICIANS.RUFUS_DU_SOL,\n      MUSICIANS.BICEP,\n      MUSICIANS.JAMIE_XX,\n      MUSICIANS.EATS_EVERYTHING,\n      MUSICIANS.FRANK_OCEAN\n    ],\n    dates: [new Date(\"2017-07-14\")],\n    venue: MUSIC_VENUES.VICTORIA_PARK,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.CAITLIN,\n      FRIENDS.ALICE_R\n    ]\n  },\n  {\n    festival: FESTIVALS.BRIGHTON_PRIDE,\n    lineup: [MUSICIANS.BECKY_HILL, MUSICIANS.YEARS_AND_YEARS],\n    dates: [new Date(\"2017-08-05\")],\n    venue: MUSIC_VENUES.PRESTON_PARK,\n    company: [\n      FRIENDS.LUKE_S,\n      FRIENDS.TONYA,\n      FRIENDS.SONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.LAURA\n    ]\n  },\n  {\n    festival: FESTIVALS.BESTIVAL,\n    lineup: [\n      MUSICIANS.ALMA,\n      MUSICIANS.LITTLE_DRAGON,\n      MUSICIANS.KOLSCH,\n      MUSICIANS.THE_XX,\n      MUSICIANS.MACEO_PLEX,\n      MUSICIANS.JOE_GODDARD,\n      MUSICIANS.FOURS,\n      MUSICIANS.ANNA_OF_THE_NORTH,\n      MUSICIANS.LUCY_ROSE,\n      MUSICIANS.DIZZEE_RASCAL,\n      MUSICIANS.DUSKY,\n      MUSICIANS.CHARLOTTE_CHURCH,\n      MUSICIANS.SOUL_WAX,\n      MUSICIANS.PET_SHOP_BOYS\n    ],\n    dates: [new Date(\"2017-09-08\"), new Date(\"2017-09-10\")],\n    venue: MUSIC_VENUES.LULWORTH_ESTATE,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.RYAN,\n      FRIENDS.DAN,\n      FRIENDS.MARIA,\n      FRIENDS.CAITLIN,\n      FRIENDS.CAITY\n    ]\n  },\n  {\n    headline: MUSICIANS.SIGRID,\n    dates: [new Date(\"2017-09-13\")],\n    venue: MUSIC_VENUES.SCALA,\n    company: [FRIENDS.SIAN]\n  },\n  {\n    headline: MUSICIANS.ALLIE_X,\n    dates: [new Date(\"2017-09-18\")],\n    venue: MUSIC_VENUES.OMEARA,\n    company: [FRIENDS.SIAN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.LORDE,\n    dates: [new Date(\"2017-09-27\")],\n    favourite: true,\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE,\n    company: [FRIENDS.LUKE_S, FRIENDS.CAITLIN, FRIENDS.CAITY]\n  },\n  {\n    headline: MUSICIANS.MURA_MASA,\n    dates: [new Date(\"2017-10-19\")],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.FREYA_RIDINGS,\n    dates: [new Date(\"2017-10-26\")],\n    venue: MUSIC_VENUES.ST_GILES_IN_THE_FIELD,\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.PVRIS,\n    dates: [new Date(\"2017-11-30\")],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    company: [FRIENDS.LUKE_S]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2018: Array<IGigData> = [\n  {\n    headline: MUSICIANS.KYGO,\n    support: [MUSICIANS.GRYFFIN, MUSICIANS.SEEB],\n    venue: MUSIC_VENUES.THE_O2,\n    dates: [new Date(\"2018-02-25\")],\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.CODE,\n    venue: MUSIC_VENUES.CORSICA_STUDIOS,\n    dates: [new Date(\"2018-03-07\")],\n    company: [FRIENDS.JERRY, FRIENDS.JAMIE, FRIENDS.DOM]\n  },\n  {\n    headline: MUSICIANS.GEORGE_FITZGERALD,\n    venue: MUSIC_VENUES.ISLINGTON_ASSEMBLY_HALL,\n    dates: [new Date(\"2018-03-27\")],\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.AQUILO,\n    venue: MUSIC_VENUES.OVAL_SPACE,\n    dates: [new Date(\"2018-04-19\")],\n    company: [FRIENDS.JAMIE]\n  },\n  {\n    headline: MUSICIANS.TWO_FEET,\n    venue: MUSIC_VENUES.ELECTROWERKZ,\n    dates: [new Date(\"2018-05-24\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.KIM_PETRAS,\n    venue: MUSIC_VENUES.COURTYARD_THEATRE,\n    dates: [new Date(\"2018-05-25\")],\n    company: [FRIENDS.JERRY],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.HAIM,\n    support: [MUSICIANS.MAGGIE_ROGERS],\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE,\n    dates: [new Date(\"2018-06-15\")],\n    company: [FRIENDS.EMMA, FRIENDS.BECKY, FRIENDS.CAITLIN]\n  },\n  {\n    festival: FESTIVALS.ON_THE_RUN_II,\n    lineup: [MUSICIANS.JAY_Z, MUSICIANS.BEYONCE],\n    venue: MUSIC_VENUES.LONDON_STADIUM,\n    dates: [new Date(\"2018-06-16\")],\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.TAYLOR_SWIFT,\n    support: [MUSICIANS.CHARLI_XCX, MUSICIANS.CAMILA_CABELLO],\n    venue: MUSIC_VENUES.WEMBLEY_STADIUM,\n    dates: [new Date(\"2018-06-22\")],\n    company: [FRIENDS.DAN],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.NOTION_SUMMER_PARTY,\n    lineup: [\n      MUSICIANS.M_0,\n      MUSICIANS.BONDAX,\n      MUSICIANS.RITON,\n      MUSICIANS.KAH_LO,\n      MUSICIANS.ANNE_MARIE,\n      MUSICIANS.MO\n    ],\n    venue: MUSIC_VENUES.TROXY,\n    dates: [new Date(\"2018-07-27\")],\n    company: [FRIENDS.LUKE_J]\n  },\n  {\n    festival: FESTIVALS.BRIGHTON_PRIDE,\n    lineup: [MUSICIANS.BRITNEY_SPEARS],\n    venue: MUSIC_VENUES.PRESTON_PARK,\n    dates: [new Date(\"2018-08-04\")],\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.SONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.SIAN\n    ]\n  },\n  {\n    headline: MUSICIANS.SOFI_TUKKER,\n    venue: MUSIC_VENUES.KOKO,\n    dates: [new Date(\"2018-09-17\")],\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.LAUV,\n    venue: MUSIC_VENUES.KOKO,\n    dates: [new Date(\"2018-09-18\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.RALPH,\n    venue: MUSIC_VENUES.OLD_BLUE_LAST,\n    dates: [new Date(\"2018-10-15\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.RAINBOW_KITTEN_SURPRISE,\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2018-10-31\")],\n    company: [FRIENDS.JAMIE]\n  },\n  {\n    headline: MUSICIANS.LYKKE_LI,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2018-11-04\")],\n    company: [FRIENDS.EMMA],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    venue: MUSIC_VENUES.THE_O2,\n    dates: [new Date(\"2018-11-21\")],\n    company: [FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.YOU_ME_AT_SIX,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2018-12-03\")],\n    company: [FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2019: Array<IGigData> = [\n  {\n    headline: MUSICIANS[1975],\n    venue: MUSIC_VENUES.THE_O2,\n    dates: [new Date(\"2019-01-19\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.MAGGIE_ROGERS,\n    support: [MUSICIANS.MALLRAT],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-02-19\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.TROYE_SIVAN,\n    support: [MUSICIANS.LELAND],\n    venue: MUSIC_VENUES.HAMMERSMITH_APOLLO,\n    dates: [new Date(\"2019-02-28\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.LANY,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-03-12\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.LEON,\n    venue: MUSIC_VENUES.ISLINGTON_ASSEMBLY_HALL,\n    dates: [new Date(\"2019-04-08\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BULOW,\n    venue: MUSIC_VENUES.COURTYARD_THEATRE,\n    dates: [new Date(\"2019-04-11\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.ROBYN,\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE,\n    dates: [new Date(\"2019-04-12\")],\n    company: [FRIENDS.DAN, FRIENDS.RYAN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BEARS_DEN,\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-04-23\")],\n    company: [FRIENDS.JAMIE]\n  },\n  {\n    headline: MUSICIANS.MARINA,\n    venue: MUSIC_VENUES.ROYAL_ALBERT_HALL,\n    dates: [new Date(\"2019-05-03\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.SASHA_SLOAN,\n    venue: MUSIC_VENUES.DINGWALLS,\n    dates: [new Date(\"2019-05-07\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.G_FLIP,\n    venue: MUSIC_VENUES.THE_GARAGE,\n    dates: [new Date(\"2019-05-15\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.FKA_TWIGS,\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE_THEATRE,\n    dates: [new Date(\"2019-05-28\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.FLEETWOOD_MAC,\n    support: [MUSICIANS.PRETENDERS],\n    venue: MUSIC_VENUES.WEMBLEY_STADIUM,\n    dates: [new Date(\"2019-06-16\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.SOPHIE,\n    favourite: true,\n    venue: MUSIC_VENUES.ROYAL_FESTIVAL_HALL,\n    dates: [new Date(\"2019-08-10\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    festival: FESTIVALS.MANCHESTER_PRIDE,\n    lineup: [\n      MUSICIANS.BECKY_HILL,\n      MUSICIANS.BANANARAMA,\n      MUSICIANS.TULISA,\n      MUSICIANS.CHERYL,\n      MUSICIANS.ARIANA_GRANDA\n    ],\n    venue: MUSIC_VENUES.MAYFIELD_DEPOT,\n    dates: [new Date(\"2019-08-25\")],\n    company: [\n      FRIENDS.DAN,\n      FRIENDS.MARIA,\n      FRIENDS.ASH,\n      FRIENDS.SAM_B,\n      FRIENDS.LINDSAY_A\n    ]\n  },\n  {\n    headline: MUSICIANS.KIM_PETRAS,\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2019-08-27\")],\n    company: [FRIENDS.DARREN, FRIENDS.JERRY]\n  },\n  {\n    festival: FESTIVALS.CHINGFEST,\n    lineup: [MUSICIANS.INCOGNITO, MUSICIANS.NAO],\n    venue: MUSIC_VENUES.RIDGEWAY_PARK,\n    dates: [new Date(\"2019-08-31\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.MUNA,\n    venue: MUSIC_VENUES.VILLAGE_UNDERGROUND,\n    dates: [new Date(\"2019-09-10\")],\n    company: [FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.JULIA_MICHAELS,\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-09-17\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.ELDERBROOK,\n    venue: MUSIC_VENUES.EARTH,\n    dates: [new Date(\"2019-10-12\")],\n    company: [FRIENDS.TONYA, FRIENDS.SONYA, FRIENDS.LAURA]\n  },\n  {\n    headline: MUSICIANS.CHARLI_XCX,\n    support: [MUSICIANS.RINA_SAWAYAMA],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-10-31\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BANKS,\n    support: [MUSICIANS.GLOWIE],\n    venue: MUSIC_VENUES.ROUNDHOUSE,\n    dates: [new Date(\"2019-11-04\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.LAUV,\n    support: [MUSICIANS.CHELSEA_CUTLER],\n    venue: MUSIC_VENUES.KENTISH_TOWN_FORUM,\n    dates: [new Date(\"2019-11-05\")],\n    company: [FRIENDS.JERRY, FRIENDS.POPPY]\n  },\n  {\n    festival: FESTIVALS.HOMOBLOC,\n    lineup: [MUSICIANS.ROMY, MUSICIANS.ROBYN, MUSICIANS.HORSE_MEAT_DISCO],\n    venue: MUSIC_VENUES.MAYFIELD_DEPOT,\n    dates: [new Date(\"2019-11-09\")],\n    company: [FRIENDS.DAN, FRIENDS.MARIA]\n  },\n  {\n    headline: MUSICIANS.SABRINA_CLAUDIO,\n    support: [MUSICIANS.OH_ANNIE_OH],\n    venue: MUSIC_VENUES.ELECTRIC_BRIXTON,\n    dates: [new Date(\"2019-11-19\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.ROBINSON,\n    support: [MUSICIANS.NAVVY],\n    venue: MUSIC_VENUES.QUEEN_OF_HOXTON,\n    dates: [new Date(\"2019-11-20\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.FKA_TWIGS,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-11-25\")],\n    company: [FRIENDS.DARREN, FRIENDS.CAITLIN, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.NAAZ,\n    support: [MUSICIANS.DYLAN],\n    venue: MUSIC_VENUES.CAMDEN_ASSEMBLY,\n    dates: [new Date(\"2019-11-27\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.MUNA,\n    support: [MUSICIANS.L_DEVINE],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-12-03\")],\n    company: [FRIENDS.LEWIS, FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.MELANIE_MARTINEZ,\n    support: [MUSICIANS.NAAZ],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-12-09\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    festival: FESTIVALS.AREA_10_NYE,\n    lineup: [MUSICIANS.MK],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-12-31\")],\n    company: [FRIENDS.TOM, FRIENDS.TONYA, FRIENDS.SONYA]\n  }\n];\n","import {\n  FRIENDS,\n  MUSICIANS,\n  TICKET_TYPES,\n  MUSIC_VENUES\n} from \"../../constants\";\n\nexport const GIGS_2020: Array<IGigData> = [\n  {\n    headline: MUSICIANS.GRACEY,\n    venue: MUSIC_VENUES.LAYLOW,\n    dates: [new Date(\"2020-01-28\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.JOSEF_SALVAT,\n    venue: MUSIC_VENUES.MOTH_CLUB,\n    dates: [new Date(\"2020-02-05\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.KIM_PETRAS,\n    support: [MUSICIANS.ALEX_CHAPMAN],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2020-02-11\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.NASTY_CHERRY,\n    venue: MUSIC_VENUES.THE_GARAGE,\n    dates: [new Date(\"2020-03-03\")],\n    company: [FRIENDS.DARREN, FRIENDS.MEGAN],\n    ticketType: TICKET_TYPES.SEE_TICKETS_PRINT_AT_HOME\n  },\n  {\n    headline: MUSICIANS.CHRISTINE_AND_THE_QUEENS,\n    venue: MUSIC_VENUES.MOTH_CLUB,\n    dates: [new Date(\"2020-03-07\")],\n    favourite: true,\n    company: [FRIENDS.DARREN],\n    ticketType: TICKET_TYPES.GIGS_AND_TOURS_POSTAL\n  },\n  {\n    headline: MUSICIANS.CAROLINE_POLACHEK,\n    support: [MUSICIANS.SEGA_BODEGA],\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2020-03-11\")],\n    company: [FRIENDS.DARREN],\n    ticketType: TICKET_TYPES.DICE\n  },\n  {\n    headline: MUSICIANS.GEORGIA,\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2020-03-12\")],\n    company: [FRIENDS.DARREN],\n    ticketType: TICKET_TYPES.DICE\n  },\n  // {\n  //   headline: MUSICIANS.ALLIE_X,\n  //   venue: MUSIC_VENUES.HEAVEN,\n  //   dates: [new Date(\"2020-06-04\"),\n  //   company: FRIENDS.DARREN,\n  //   ticketType: TICKET_TYPES.DICE,\n  // },\n  // {\n  //   festival: FESTIVALS.MAD_COOL,\n  //   lineup: [MUSICIANS.TWENTY_ONE_PILOTS],\n  //   venue: MUSIC_VENUES.IFEMA_MADRID,\n  //   dates: [new Date(\"2020-07-08\")],\n  //   company: [FRIENDS.DAN],\n  //   ticketType: TICKET_TYPES.FESTICKET_PDF\n  // },\n  // {\n  //   headline: MUSICIANS.LADY_GAGA,\n  //   venue: MUSIC_VENUES.TOTTENHAM_HOTSPUR_STADIUM,\n  //   dates: [new Date(\"2020-07-30\")],\n  //   company: [FRIENDS.RYAN, FRIENDS.DAN, FRIENDS.TOM]\n  // },\n  {\n    headline: MUSICIANS.CARIBOU,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2020-09-13\")],\n    company: [FRIENDS.DARREN],\n    ticketType: TICKET_TYPES.TICKETMASTER_ETICKET\n  },\n  {\n    headline: MUSICIANS.SOPHIE,\n    support: [MUSICIANS.EARTHEATER],\n    venue: MUSIC_VENUES.OVAL_SPACE,\n    dates: [new Date(\"2020-10-17\")],\n    company: [FRIENDS.LEWIS, FRIENDS.JERRY],\n    ticketType: TICKET_TYPES.DICE\n  },\n  {\n    headline: MUSICIANS.LANE_8,\n    venue: MUSIC_VENUES.PRINTWORKS,\n    dates: [new Date(\"2020-10-25\")],\n    company: [FRIENDS.TONYA],\n    ticketType: TICKET_TYPES.DICE\n  },\n  {\n    headline: MUSICIANS.JON_HOPKINS,\n    venue: MUSIC_VENUES.ROYAL_ALBERT_HALL,\n    dates: [new Date(\"2020-12-04\")],\n    company: [FRIENDS.TONYA]\n  }\n];\n","import {\n  FRIENDS,\n  FESTIVALS,\n  MUSICIANS,\n  TICKET_TYPES,\n  MUSIC_VENUES\n} from \"../../constants\";\n\nexport const GIGS_2021: Array<IGigData> = [\n  {\n    festival: FESTIVALS.MIGHTY_HOOPLA,\n    venue: MUSIC_VENUES.BROCKWELL_PARK,\n    dates: [new Date(\"2021-06-05\")],\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.MARIA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.DARREN,\n      FRIENDS.SIAN,\n      FRIENDS.CAITLIN,\n      FRIENDS.DAN\n    ],\n    ticketType: TICKET_TYPES.KABOODLE_ETICKET\n  },\n  {\n    headline: MUSICIANS[1975],\n    venue: MUSIC_VENUES.FINSBURY_PARK,\n    dates: [new Date(\"2021-07-10\")],\n    company: [\n      FRIENDS.DAN,\n      FRIENDS.LEWIS,\n      FRIENDS.JERRY,\n      FRIENDS.CAITLIN,\n      FRIENDS.COBY_B\n    ],\n    ticketType: TICKET_TYPES.TICKETMASTER_ETICKET\n  }\n];\n","import {\n  MUSIC_VENUES,\n  FRIENDS,\n  MUSICIANS,\n  PAGE_SECTIONS,\n  FESTIVALS\n} from \"../../constants\";\nimport { generateSectionData } from \"../../utils/global\";\n\nimport { GIGS_2006 } from \"./gigs-2006\";\nimport { GIGS_2007 } from \"./gigs-2007\";\nimport { GIGS_2008 } from \"./gigs-2008\";\nimport { GIGS_2009 } from \"./gigs-2009\";\nimport { GIGS_2010 } from \"./gigs-2010\";\nimport { GIGS_2011 } from \"./gigs-2011\";\nimport { GIGS_2012 } from \"./gigs-2012\";\nimport { GIGS_2013 } from \"./gigs-2013\";\nimport { GIGS_2014 } from \"./gigs-2014\";\nimport { GIGS_2015 } from \"./gigs-2015\";\nimport { GIGS_2016 } from \"./gigs-2016\";\nimport { GIGS_2017 } from \"./gigs-2017\";\nimport { GIGS_2018 } from \"./gigs-2018\";\nimport { GIGS_2019 } from \"./gigs-2019\";\nimport { GIGS_2020 } from \"./gigs-2020\";\nimport { GIGS_2021 } from \"./gigs-2021\";\n\nconst ALL: Array<IGigData> = [\n  ...GIGS_2006,\n  ...GIGS_2007,\n  ...GIGS_2008,\n  ...GIGS_2009,\n  ...GIGS_2010,\n  ...GIGS_2011,\n  ...GIGS_2012,\n  ...GIGS_2013,\n  ...GIGS_2014,\n  ...GIGS_2015,\n  ...GIGS_2016,\n  ...GIGS_2017,\n  ...GIGS_2018,\n  ...GIGS_2019,\n  ...GIGS_2020,\n  ...GIGS_2021\n];\n\nconst ALL_GROUPED_BY_YEAR: Array<Array<IGigData>> = [\n  GIGS_2006,\n  GIGS_2007,\n  GIGS_2008,\n  GIGS_2009,\n  GIGS_2010,\n  GIGS_2011,\n  GIGS_2012,\n  GIGS_2013,\n  GIGS_2014,\n  GIGS_2015,\n  GIGS_2016,\n  GIGS_2017,\n  GIGS_2018,\n  GIGS_2019,\n  GIGS_2020,\n  GIGS_2021\n];\n\nconst FAVOURITES: Array<IGigData> = ALL.filter(item => item.favourite);\n\n//@ts-ignore\nconst generateSectionDataWrapper = parms =>\n  generateSectionData({\n    ...parms,\n    allData: ALL,\n    favouritedData: FAVOURITES\n  });\n\nconst UPCOMING = generateSectionDataWrapper({ upcomingMode: true });\n\nexport const DATA_GIGS = {\n  pastCount: ALL.length - UPCOMING.length,\n  futureCount: UPCOMING.length,\n\n  ALL,\n\n  ALL_GROUPED_BY_YEAR,\n\n  BUCKET_LIST: generateSectionDataWrapper({\n    bucketListMode: true,\n    items: MUSICIANS,\n    pageSectionTitle: PAGE_SECTIONS.MUSICIAN\n  }),\n\n  FAVOURITES,\n\n  FESTIVALS: generateSectionDataWrapper({\n    items: FESTIVALS,\n    pageSectionTitle: PAGE_SECTIONS.FESTIVAL,\n    filter: \"festival\"\n  }),\n\n  FRIENDS: generateSectionDataWrapper({\n    items: FRIENDS,\n    pageSectionTitle: PAGE_SECTIONS.FRIEND,\n    filter: \"gigs\"\n  }),\n\n  MUSICIANS: generateSectionDataWrapper({\n    items: MUSICIANS,\n    pageSectionTitle: PAGE_SECTIONS.MUSICIAN\n  }),\n\n  UPCOMING,\n\n  VENUES: generateSectionDataWrapper({\n    items: MUSIC_VENUES,\n    pageSectionTitle: PAGE_SECTIONS.MUSIC_VENUES\n  })\n};\n","import { INGREDIENTS, MEASUREMENTS, UNICODE, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.CHILLI_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.LIQUID_SMOKE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOFU,\n      quantity: 280,\n      measurement: MEASUREMENTS.GRAM\n    },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.CARROT, quantity: 4 },\n    { ingredient: INGREDIENTS.CELERY_STICK, quantity: 4 },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BASIL_FRESH,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OREGANO_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PUREE,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [\n    { ingredient: INGREDIENTS.SPAGHETTI },\n    { ingredient: INGREDIENTS.RICE_BROWN }\n  ],\n  [{ ingredient: INGREDIENTS.BREAD_GARLIC }]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 180 }),\n  \"make paste from yeast, soy, oil, crushed garlic, chilli powder, liquid smoke\",\n  \"drain tofu, use both fingers to crumble into small pieces\",\n  \"mix tofu with smokey paste until evenly covered\",\n  \"bake for 40 minutes in a non-stick loaf tin (stir tofu twice throughout, do not let it burn)\",\n  \"set tofu aside\",\n  \"fry onion in water so it never sticks or burns\",\n  \"when the onion has softened and the water has reduced, pour over some olive oil\",\n  \"add grated carrot, grated celery and finely diced mushrooms to frying pan\",\n  `meanwhile, blend basil with stock, ${UNICODE.TOMATO_PUREE}, black pepper, oregano and some water`,\n  \"pour blend over the frying vegetables, fry for about 10 minutes until water reduces\",\n  \"pour over chopped tomatoes\",\n  \"cover, simmer for around 30 minutes (stirring regularly)\",\n  \"stir in tofu, remove from heat\"\n];\n\nconst title: IRecipeTitle = \"bolognese\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst image: IImageSrc = PHOTOS.BOLOGNESE;\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const BOLOGNESE: IRecipeCard = {\n  title,\n  ingredients,\n  favourite: true,\n  makes,\n  serveWith,\n  diet,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.TOMATO_SUN_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.JAR\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.LIQUID_SMOKE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 750,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.SPINACH,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.NUTS_CASHEWS,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_BLACK,\n      quantity: 1.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.SPAGHETTI,\n      quantity: 400,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.ONION_WHITE_MEDIUM,\n      quantity: 2\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 7\n    },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS_CHESTNUT,\n      quantity: 300,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"thoroughly drain sun dried tomatoes from oil\",\n  \"chop tomatoes into many smaller pieces\",\n  \"marinade tomatoes in soy sauce and liquid smoke\",\n  \"chop the onion, mushroom and garlic\",\n  `blend almond milk with spinach, cashews, yeast, cornflour, salt and pepper`,\n  \"fry diced onion, crushed garlic, sliced mushrooms and thyme in butter (and some water) until softened\",\n  \"cook spaghetti as per packet instructions, drain and set aside\",\n  \"pour green sauce over frying vegetables, stirring until it thickens\",\n  \"remove from heat and stir in spaghetti and tomatoes until evenly covered\"\n];\n\nconst title: IRecipeTitle = \"carbonara\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.CARBONARA;\n\nexport const CARBONARA: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  method,\n  hide: true,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, UNICODE, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.PEPPER_MIXED, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS_CHESTNUT,\n      quantity: 300,\n      measurement: MEASUREMENTS.GRAM\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 5 },\n    {\n      ingredient: INGREDIENTS.BASIL_FRESH,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.HERBS_MIXED_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_BALSAMIC,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PUREE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.SPINACH,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.LENTIL_RED_DRY,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 5,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 1,\n      measurement: MEASUREMENTS.LITRE\n    },\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ],\n  [\n    { ingredient: INGREDIENTS.PASTA_LASAGNE_SHEET_DRIED, quantity: 10 },\n    { ingredient: INGREDIENTS.COURGETTE, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.CHEESE_VEGAN_SLICE,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.BREAD_GARLIC }]\n];\n\nconst method: IRecipeMethod = [\n  \"fry diced onion in oil and water for at least 5 minutes\",\n  \"add diced peppers, mushrooms, crushed garlic and fry for at least 10 minutes (replenishing the water to prevent burning)\",\n  `blend basil with stock powder, dried herbs, soy sauce, black pepper, balsamic vinegar, ${UNICODE.TOMATO_PUREE}, sugar and some water`,\n  \"pour basil blend into fried vegetables and stir throughly\",\n  \"add spinach and allow it to reduce\",\n  \"stir in chopped tomatoes and lentils\",\n  \"reduce heat, cover and simmer for at least 30 minutes\",\n  \"soak lasagne sheets in cold water\",\n  \"stir flour into medium hot olive oil\",\n  \"pour in the milk and whisk until it thickens (never give up, great arm workout)\",\n  \"remove from heat, season with salt and pepper\",\n  preheatOven({ degreesCelcius: 190 }),\n  `spoon ${UNICODE.THIRD} of each into an oven-proof dish (in the following order): ragu, lasagne sheets, white sauce, sliced raw courgettes`,\n  \"repeat previous step twice\",\n  \"seal the dish with vegan cheese slices\",\n  \"bake for 35 minutes\"\n];\nconst title: IRecipeTitle = \"lasagne\";\nconst makes: IRecipeMakes = { quantity: 6, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.LASAGNE;\n\nexport const LASAGNE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  diet,\n  serveWith,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.BUTTERNUT_SQUASH,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.ONION_WHITE_MEDIUM,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.LEEK,\n      quantity: 2\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 5\n    },\n    {\n      ingredient: INGREDIENTS.RICE_RISOTTO_ARBORIO,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 1,\n      measurement: MEASUREMENTS.LITRE\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BEANS_GREEN,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH },\n    { ingredient: INGREDIENTS.SAGE_FRESH, notes: \"crispy\" }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 200 }),\n  \"roast evenly-cubed squash for 40 minutes (in some olive oil, salt and pepper)\",\n  \"fry diced onion and leek with crushed garlic in half the butter (and some water) for about 10 minutes until soft\",\n  \"toss in uncooked rice and stir for 2 minutes\",\n  \"boil water, then add 200ml at a time, replenishing as soon as the rice becomes almost dry\",\n  \"stir constantly and be patient\",\n  \"add finely sliced green beans shortly into the rice cooking\",\n  \"remove from heat, stir in squash, yeast, salt, pepper, remaining butter\"\n];\nconst title: IRecipeTitle = \"risotto\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const RISOTTO: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  method\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.ONION_RED_MEDIUM, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.CURRY_PASTE_ROGAN_JOSH,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.GINGER_FRESH,\n      quantity: 3,\n      measurement: MEASUREMENTS.CENTIMETRE\n    },\n    {\n      ingredient: INGREDIENTS.CORIANDER_FRESH,\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.POTATO_SWEET,\n      quantity: 1,\n      notes: \"large\"\n    },\n    {\n      ingredient: INGREDIENTS.CHICKPEAS,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.PETITS_POIS_FROZEN,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK_COCONUT_CANNED,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.SPINACH,\n      quantity: 260,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.RICE }],\n  [{ ingredient: INGREDIENTS.KALE }, { ingredient: INGREDIENTS.POPPADOMS }]\n];\n\nconst method: IRecipeMethod = [\n  \"fry diced onion in oil, curry paste and some water on a medium heat for at least 10 minutes\",\n  \"meanwhile, blend coriander with some water\",\n  \"add grated ginger, diced sweet potato, drained chickpeas and blended coriander to frying pan\",\n  \"fry for about 20 minutes, regularly replenishing the water\",\n  \"add chopped tomatoes, bring to the boil\",\n  \"reduce heat and simmer for at least 30 minutes\",\n  \"stir in petit pois, coconut milk and spinach\"\n];\nconst title: IRecipeTitle = \"rogan josh\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.ROGAN_JOSH;\n\nexport const ROGAN_JOSH: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, UNICODE, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven, bakeForAbout } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.POTATO_BAKING, quantity: 3 },\n    { ingredient: INGREDIENTS.POTATO_SWEET, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 100,\n      measurement: MEASUREMENTS.MILLILITRE\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 5 },\n    { ingredient: INGREDIENTS.CARROT, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS_CHESTNUT,\n      quantity: 300,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.ROSEMARY_DRIED,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PUREE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.WINE_RED,\n      quantity: 250,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.PETITS_POIS_FROZEN,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON,\n      optional: true\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.ASPARAGUS, notes: \"pan-fried\" }]\n];\n\nconst method: IRecipeMethod = [\n  \"peel and chop potato into smallish chunks (it cooks quicker and makes it easier to mash)\",\n  \"boil potatoes for about 25 minutes until soft and easily mashable\",\n  \"mash potato, then stir in butter, salt, pepper and some water to loosen it\",\n  \"elsewhere, fry diced onion with crushed garlic, sliced mushrooms and diced carrot all together in the oil and some water\",\n  \"shower vegetables in salt, pepper and dried herbs\",\n  \"keep replenishing the vegetables with splashes of water so they never or stick to the saucepan\",\n  `add ${UNICODE.TOMATO_PUREE} and stock powder`,\n  // \"once softened, add red wine (and lentils)\",\n  \"once softened, stir in red wine\",\n  // \"stir continuously whilst simmering for at least 30 minutes, adding water where necessary\",\n  \"simmer for at least 30 minutes, adding water where necessary\",\n  preheatOven({ degreesCelcius: 180 }),\n  \"remove from heat, stir in cornflour, yeast flakes and peas\",\n  \"transfer filling to oven-proof dish, cover with mashed potato and fork lines onto the topping\",\n  bakeForAbout({ minutes: 40 })\n];\n\nconst title: IRecipeTitle = \"shepherd's pie\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.SHEPHERDS_PIE;\nconst makes: IRecipeMakes = { quantity: 7, measurement: MEASUREMENTS.PORTION };\n\nexport const SHEPHERDS_PIE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  hide: true,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 5 },\n    {\n      ingredient: INGREDIENTS.GINGER_FRESH,\n      quantity: 3,\n      measurement: MEASUREMENTS.CENTIMETRE\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_WHITE_WINE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 4,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.KETCHUP_TOMATO,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.CHILLI_CRUSHED_DRIED,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 300,\n      measurement: MEASUREMENTS.MILLILITRE\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 1.5,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOFU,\n      quantity: 280,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.CARROT, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_RED, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_GREEN, quantity: 1 },\n    { ingredient: INGREDIENTS.PINEAPPLE, quantity: 1 }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.RICE_BASMATI }]\n];\n\nconst method: IRecipeMethod = [\n  \"mix cornflour with water, set solution aside\",\n  \"fry crushed garlic and grated ginger in a small saucepan for 1 minute\",\n  \"pour over soy, vinegar, ketchup, crushed chillis and water\",\n  \"add cornflour solution, stir for about 10 minutes until the sauce thickens, remove from heat\",\n  \"drain the tofu, chop into bite-sized chunks\",\n  \"mix cornflour with salt, pepper and oil\",\n  \"coat sides of tofu chunks in cornflour paste\",\n  \"fry tofu on medium-high heat for 5 minutes, set aside\",\n  \"chop pineapple, pepper and onion chunkily but slice carrot very thinly\",\n  \"fry vegetables in oil and some water until charred\",\n  \"toss in the pineapple, tofu and pour over the sauce\",\n  \"simmer for at least 5 minutes to let the flavours infuse, serve\"\n];\nconst title: IRecipeTitle = \"sweet and sour\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const SWEET_AND_SOUR: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  method\n};\n","import { BOLOGNESE } from \"./bolognese\";\nimport { CARBONARA } from \"./carbonara\";\nimport { LASAGNE } from \"./lasagne\";\nimport { RISOTTO } from \"./risotto\";\nimport { ROGAN_JOSH } from \"./rogan-josh\";\nimport { SHEPHERDS_PIE } from \"./shepherds-pie\";\nimport { SWEET_AND_SOUR } from \"./sweet-and-sour\";\n\nexport const MAINS: IRecipeGroup = {\n  category: \"mains\",\n  data: [\n    BOLOGNESE,\n    CARBONARA,\n    LASAGNE,\n    RISOTTO,\n    ROGAN_JOSH,\n    SHEPHERDS_PIE,\n    SWEET_AND_SOUR\n  ]\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.BASIL_FRESH,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.NUTS_PINE,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 4,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 3\n    },\n    {\n      ingredient: INGREDIENTS.LEMON_JUICE_FRESH,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_CIDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 50,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 25,\n      measurement: MEASUREMENTS.MILLILITRE\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"transfer all ingredients to blender\",\n  \"blend until smooth\",\n  \"store in refrigerator for up to 1 week\"\n];\n\nconst title: IRecipeTitle = \"pesto\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst makes: IRecipeMakes = { quantity: 100, measurement: MEASUREMENTS.GRAM };\n\nexport const PESTO: IRecipeCard = {\n  title,\n  ingredients,\n  diet,\n  makes,\n  method\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.PEPPER_RED, quantity: 1 },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 1 },\n\n    {\n      ingredient: INGREDIENTS.CHILLI_BIRD_EYE_FRESH,\n      quantity: 20,\n      measurement: MEASUREMENTS.GRAM,\n      notes: \"stalk removed\"\n    },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_WHITE_WINE,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 10 },\n    { ingredient: INGREDIENTS.LEMON, quantity: 1, notes: \"zest and juice\" },\n    {\n      ingredient: INGREDIENTS.PAPRIKA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.OREGANO_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"transfer all ingredients to blender and blitz until smooth\",\n  \"transfer to a saucepan and heat on low for about 20 minutes\",\n  \"remove from heat, leave to cool\",\n  \"keep refrigerated in a jar for up to 2 weeks\"\n];\n\nconst title: IRecipeTitle = \"piri piri\";\nconst makes: IRecipeMakes = { quantity: 475, measurement: MEASUREMENTS.GRAM };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.PIRI_PIRI;\n\nexport const PIRI_PIRI: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { PESTO } from \"./pesto\";\nimport { PIRI_PIRI } from \"./piri-piri\";\n\nexport const SAUCES: IRecipeGroup = {\n  category: \"sauces\",\n  data: [PESTO, PIRI_PIRI]\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.ONION_WHITE_MEDIUM,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 3\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_RED,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.BEANS_HARICOT,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PASSATA,\n      quantity: 500,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 1,\n      optional: true,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA_SMOKED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.ALLSPICE_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"fry diced onion, garlic and pepper in oil (and some water if need be) for 5-10 minutes\",\n  \"transfer to slow cooker along with passata and seasoning\",\n  \"cook on low for 8 hours or medium for 5 hours\"\n];\n\nconst title: IRecipeTitle = \"baked beans\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.BAKED_BEANS;\n\nexport const BAKED_BEANS: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.CAULIFLOWER_REGULAR, quantity: 1 },\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 200,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TURMERIC_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.SWEET_CHILLI_SAUCE,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.LIME_JUICE_FRESH,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SRIRACHA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 2 },\n    { ingredient: INGREDIENTS.ONION_SPRING },\n    { ingredient: INGREDIENTS.SEEDS_SESAME }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 200 }),\n  \"mix flour, almond milk, salt, pepper, turmeric, paprika in large bowl to make batter\",\n  \"remove all leaves from cauliflower, cut vertically around the stem to release florets\",\n  \"cover all florets in the batter\",\n  \"use tongs to transfer each floret to baking tray\",\n  \"roast the cauliflower for 25 minutes\",\n  \"make bang bang sauce by mixing sweet chilli, soy, lime juice, sriracha, crushed garlic\",\n  \"toss sauce over cauliflower in a heated wok\",\n  \"pour over fried spring onion and sesame seeds\"\n];\n\nconst title: IRecipeTitle = \"bang bang cauliflower\";\nconst makes: IRecipeMakes = { quantity: 2, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const BANG_BANG_CAULIFLOWER: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.KALE,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA_SMOKED,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.CHILLI_POWDER,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 100 }),\n  \"wash and dry kale thoroughly, discard large stems, transfer to large mixing bowl\",\n  \"mix oil with seasoning in a small jug\",\n  \"pour seasoning over kale, toss thoroughly until evenly distributed\",\n  \"transfer seasoned kale to 2 baking trays\",\n  \"bake for 20 minutes, one tray on top of the other\",\n  \"switch tray positions, bake for further 15 minutes\",\n  \"remove from oven, leave to cool\"\n];\n\nconst title: IRecipeTitle = \"crispy kale\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.KALE_CRISPY;\nconst makes: IRecipeMakes = { quantity: 2, measurement: MEASUREMENTS.SERVING };\n\nexport const CRISPY_KALE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  image,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.POTATO_BAKING, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"peel potatoes and chop into small-ish chunks (to speed up the boiling process)\",\n  \"submerge potato chunks in boiling water for at least 25 minutes (until soft enough to easily mash)\",\n  \"drain the boiling water, then use a masher to break down the potato\",\n  \"dissolve salt in the water, then stir into the potato\",\n  \"stir in the butter, then season with black pepper\"\n];\n\nconst title: IRecipeTitle = \"mashed potato\";\nconst makes: IRecipeMakes = { quantity: 2, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.MASHED_POTATO;\n\nexport const MASHED_POTATO: IRecipeCard = {\n  ingredients,\n  title,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.AUBERGINE, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_RED, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_ORANGE, quantity: 1 },\n    { ingredient: INGREDIENTS.COURGETTE, quantity: 2 },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.OREGANO_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.LEMON_JUICE,\n      quantity: 2,\n      optional: true,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 1,\n      optional: true,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 180 }),\n  \"chunkily chop the aubergine, courgette, peppers and onions and distribute evenly across 2 baking trays\",\n  \"drizzle the vegetables in oil, ensuring they are evenly coated, plus season with salt and pepper\",\n  \"roast the vegetables for 1 hour, shaking the veg half way through and switching the position of the trays in the oven\",\n  \"heat oil, lightly fry garlic in a sauceapan for 1 minute\",\n  \"add chopped tomatoes and dried herbs\",\n  \"cover and simmer for 45 minutes\",\n  \"remove sauce from heat, stir in lemon juice, sugar, salt and pepper\",\n  \"transfer all roasted veg to the deeper of the 2 baking trays, pour tomato sauce all over and ensure it is evenly coated\",\n  \"bake for a final 10 minutes\"\n];\n\nconst title: IRecipeTitle = \"ratatouille\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.RATATOUILLE;\n\nexport const RATATOUILLE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image,\n  favourite: true\n};\n","import { BAKED_BEANS } from \"./baked-beans\";\nimport { BANG_BANG_CAULIFLOWER } from \"./bang-bang-cauliflower\";\nimport { CRISPY_KALE } from \"./crispy-kale\";\nimport { MASHED_POTATO } from \"./mashed-potato\";\nimport { RATATOUILLE } from \"./ratatouille\";\nimport { TOFU_SCRAMBLE } from \"./tofu-scramble\";\n\nexport const SIDES: IRecipeGroup = {\n  category: \"sides\",\n  data: [\n    BAKED_BEANS,\n    BANG_BANG_CAULIFLOWER,\n    CRISPY_KALE,\n    MASHED_POTATO,\n    RATATOUILLE,\n    TOFU_SCRAMBLE\n  ]\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.TOFU,\n      quantity: 280,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TURMERIC_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA_SMOKED,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_BLACK,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"drain tofu, crumble into small pieces (using both fingers) into a large mixing bowl\",\n  \"in a small jug, make paste from yeast, turmeric, paprika, salt, pepper, thyme, water and oil\",\n  \"pour the paste over the crumbled tofu and stir until evenly covered\",\n  \"heat the butter over a medium heat in a small saucepan\",\n  \"fry tofu until heated through\"\n];\n\nconst title: IRecipeTitle = \"tofu scramble\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const TOFU_SCRAMBLE: IRecipeCard = {\n  ingredients,\n  makes,\n  method,\n  title,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst {\n  preheatOven,\n  LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN,\n  FOLD_IN_FLOUR_MIX,\n  bakeForAbout,\n  transferToLoafTin\n} = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.BANANA, quantity: 4, notes: \"very ripe\" },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 75,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.FLOUR_SELF_RAISING,\n      quantity: 225,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BICARBONATE_OF_SODA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.CINNAMON_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.NUTMEG_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_ICING,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"blend (peeled) bananas with butter, sugar, oil and vanilla\",\n  \"in a small mixing bowl, weigh flour and stir in the baking powder, bicarbonate of soda, cinnamon and nutmeg\",\n  FOLD_IN_FLOUR_MIX,\n  transferToLoafTin({ sunkenCentre: true }),\n  bakeForAbout({ minutes: 40, skewer: true }),\n  LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN,\n  \"make butter icing by whisking butter with icing sugar and water\",\n  \"evenly spread icing over the cake\"\n];\n\nconst title: IRecipeTitle = \"banana cake\";\nconst makes: IRecipeMakes = { quantity: 10, measurement: MEASUREMENTS.SLICE };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.BANANA_CAKE;\n\nexport const BANANA_CAKE: IRecipeCard = {\n  title,\n  favourite: true,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.EGGS,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_SELF_RAISING,\n      quantity: 175,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK,\n      quantity: 200,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.BLUEBERRIES_FRESH,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.BANANA }],\n  [{ ingredient: INGREDIENTS.RASPBERRIES_FRESH }],\n  [\n    { ingredient: INGREDIENTS.NECTAR_AGAVE },\n    { ingredient: INGREDIENTS.SYRUP_GOLDEN }\n  ],\n  [{ ingredient: INGREDIENTS.SUGAR_ICING }],\n  [{ ingredient: INGREDIENTS.CINNAMON_GROUND }]\n];\n\nconst method: IRecipeMethod = [\n  \"whisk all ingredients except blueberries\",\n  \"fold blueberries into pancake batter\",\n  \"brush frying pan with sunflower oil and heat\",\n  \"drop dessertspoonfuls of batter onto frying pan\",\n  \"flip pancakes once bases are golden brown\",\n  \"remove from heat and serve\"\n];\n\nconst title: IRecipeTitle = \"blueberry pancakes\";\nconst diet: IRecipeDiet = DIETS.VEGETARIAN;\n\nexport const BLUEBERRY_PANCAKES: IRecipeCard = {\n  title,\n  ingredients,\n  serveWith,\n  method,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven, FOLD_IN_FLOUR_MIX, bakeForAbout } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.CHOCOLATE_DARK,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.COCOA_POWDER,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 200,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.RASPBERRIES_FRESH,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"in a large mixing bowl, add chocolate (broken into chunks), oil and butter\",\n  \"rest the large mixing bowl over a small saucepan of hot (not boiling) water and stir until melted, then remove from heat\",\n  \"in a small mixing bowl, weigh flour and combine with sugar and cocoa powder\",\n  \"stir in almond milk and vanilla to the melted chocolate\",\n  FOLD_IN_FLOUR_MIX,\n  \"gently introduce the raspberries to the mixture\",\n  \"transfer to a non-stick baking tin\",\n  bakeForAbout({ minutes: 40, skewer: true }),\n  \"transfer to fridge for 1 hour to speed up cooling and increase fudginess\",\n  \"store in airtight container\"\n];\n\nconst title: IRecipeTitle = \"brownies\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.BROWNIES;\n\nexport const BROWNIES: IRecipeCard = {\n  ingredients,\n  method,\n  diet,\n  image,\n  title,\n  hide: true\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 125,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.CINNAMON_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BICARBONATE_OF_SODA,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 115,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    { ingredient: INGREDIENTS.EGGS, quantity: 1 },\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.OATS,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.RAISINS,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst title: IRecipeTitle = \"cookies\";\nconst makes: IRecipeMakes = { quantity: 20, measurement: \"cookie\" };\nconst diet: IRecipeDiet = DIETS.VEGETARIAN;\n\nexport const COOKIES: IRecipeCard = {\n  ingredients,\n  title,\n  makes,\n  favourite: true,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 350,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 175,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 175,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.APPLE_BRAMLEY,\n      quantity: 1,\n      measurement: MEASUREMENTS.KILOGRAM,\n      notes: \"weighs nearer 700g after peeling and coring\"\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 350,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.RASPBERRIES_FROZEN,\n      quantity: 350,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BLACKBERRIES_FROZEN,\n      quantity: 500,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.CINNAMON_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_DEMERARA,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.CREAM_OAT }]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 160 }),\n  \"mix sieved flour and sieved caster sugar\",\n  \"introduce chunks of butter, use fingertips to form light crumble but don't overwork\",\n  \"blind bake the crumble topping for 40 minutes (shaking half way through)\",\n  \"peel, core and chop the apples into medium chunks\",\n  \"stew apple in the water until softened, remove from heat\",\n  \"stir in demerara sugar, raspberries, blackberries and cinnamon\",\n  \"transfer fruit to oven dish and cover with the crumble topping\",\n  \"bake for 20 minutes\",\n  \"remove from oven, leave to cool for at least 5 minutes before serving\"\n];\n\nconst makes: IRecipeMakes = { quantity: 8, measurement: MEASUREMENTS.PORTION };\nconst title: IRecipeTitle = \"crumble\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.CRUMBLE;\n\nexport const CRUMBLE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  favourite: true,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.APRICOTS_DRIED,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BLUEBERRIES_DRIED,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.CRANBERRIES_DRIED,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OATS,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 140,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SYRUP_GOLDEN,\n      quantity: 90,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"in a large mixing bowl, stir finely chopped fruit and salt into the oats\",\n  \"melt butter in a saucepan with golden syrup and sugar\",\n  \"add melted butter mix to oat mix and stir thoroughly\",\n  \"transfer mixture to non-stick loaf tin, flatten to cover the whole base\",\n  \"bake for 15-20 minutes (depending how gooey you like it, remembering it will solidify more overnight)\",\n  \"leave to cool before cutting into suitably-sized chunks\"\n];\n\nconst title: IRecipeTitle = \"flapjacks\";\nconst makes: IRecipeMakes = { quantity: 12, measurement: MEASUREMENTS.CHUNK };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.FLAPJACKS;\n\nexport const FLAPJACKS: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst {\n  preheatOven,\n  FOLD_IN_FLOUR_MIX,\n  transferToLoafTin,\n  bakeForAbout\n} = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.MILK_COCONUT_CANNED,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 100,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    { ingredient: INGREDIENTS.LEMON_LARGE, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.LEMON_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.FLOUR_SELF_RAISING,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BICARBONATE_OF_SODA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    { ingredient: INGREDIENTS.LEMON_LARGE, quantity: 1 },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"in a large mixing bowl, whisk the coconut milk with the sugar, oil and lemon juice for at least 3 minutes\",\n  \"stir in the lemon zest, vanilla extract and lemon extract\",\n  \"in a small mixing bowl, weigh flour and combine with baking powder, bicarbonate of soda and salt\",\n  FOLD_IN_FLOUR_MIX,\n  transferToLoafTin({}),\n  bakeForAbout({ minutes: 40, skewer: true }),\n  \"make drizzle topping from zest and juice of lemon plus sugar\",\n  \"leave cake to cool for at least 30 minutes, prod a few holes in the cake\",\n  \"evenly coat drizzle topping\"\n];\n\nconst title: IRecipeTitle = \"lemon drizzle\";\nconst makes: IRecipeMakes = { quantity: 10, measurement: MEASUREMENTS.SLICE };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const LEMON_DRIZZLE: IRecipeCard = {\n  title,\n  ingredients,\n  diet,\n  makes,\n  method,\n  hide: true\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven, bakeForAbout } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 165,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK_OAT,\n      quantity: 85,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.RAISINS,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 200, bakingTray: true }),\n  \"sieve flour and baking powder, combine with sugar and salt\",\n  \"add butter, use fingertips to form fine crumbs\",\n  \"dust the kitchen worktop with flour\",\n  \"slightly warm the milk and pour into the flour mix, use a knife to combine the ingredients\",\n  \"fold in the the raisins\",\n  \"roll out the dough on the worktop to a suitable thickness\",\n  \"cut out scone shapes and place on a baking tray\",\n  bakeForAbout({ minutes: 10, wellRisen: true })\n];\n\nconst title: IRecipeTitle = \"scones\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const SCONES: IRecipeCard = {\n  ingredients,\n  method,\n  diet,\n  title\n};\n","import { MAINS } from \"./mains\";\nimport { SAUCES } from \"./sauces\";\nimport { SIDES } from \"./sides\";\nimport { SWEETS } from \"./sweets\";\nimport { RECIPES_COMING_SOON } from \"./recipes-coming-soon\";\n\ninterface IRecipesData {\n  CATEGORISED: Array<IRecipeGroup>;\n  COMING_SOON: Array<ICountedListItem>;\n}\n\nexport const DATA_RECIPES: IRecipesData = {\n  CATEGORISED: [MAINS, SIDES, SAUCES, SWEETS],\n  COMING_SOON: RECIPES_COMING_SOON\n};\n","import { BANANA_CAKE } from \"./banana-cake\";\nimport { BLUEBERRY_PANCAKES } from \"./blueberry-pancakes\";\nimport { BROWNIES } from \"./brownies\";\nimport { COOKIES } from \"./cookies\";\nimport { CRUMBLE } from \"./crumble\";\nimport { FLAPJACKS } from \"./flapjacks\";\nimport { LEMON_DRIZZLE } from \"./lemon-drizzle\";\nimport { SCONES } from \"./scones\";\n\nexport const SWEETS: IRecipeGroup = {\n  category: \"sweets\",\n  data: [\n    BANANA_CAKE,\n    BLUEBERRY_PANCAKES,\n    BROWNIES,\n    COOKIES,\n    CRUMBLE,\n    FLAPJACKS,\n    LEMON_DRIZZLE,\n    SCONES\n  ]\n};\n","const recipeComingSoon: Array<string> = [\n  \"gingerbread\",\n  \"spinach sweet potato hash\",\n  \"shortbread\",\n  \"courgette rösti fritters\",\n  \"key lime pie\",\n  \"meatball tagine\",\n  \"aubergine teriyaki\",\n  \"loaded potato skins\",\n  \"mushroom stroganoff\",\n  \"carrot and ginger cake\",\n  \"jackfruit mac\",\n  \"lemon meringue pie\",\n  \"chilli sin carne\",\n  \"passionfruit cheesecake\",\n  \"victoria sponge\",\n  \"thai green curry\",\n  \"dahl\"\n];\n\nexport const RECIPES_COMING_SOON: Array<ICountedListItem> = recipeComingSoon\n  .sort((a, b) => (a > b ? 1 : -1))\n  .map(item => ({\n    listEntry: item,\n    ignoreCountInfo: true,\n    futureCount: 0,\n    pastCount: 0\n  }));\n","import { PLAYS, THEATRE_VENUES, FRIENDS } from \"../../constants\";\n\nexport const THEATRE_2016: Array<ITheatreData> = [\n  {\n    play: PLAYS.MIDSUMMER_NIGHTS_DREAM,\n    theatre: THEATRE_VENUES.ROYAL_SHAKESPEARE,\n    dates: [new Date(\"2016-06-17\")],\n    company: [FRIENDS.SIAN]\n  },\n  {\n    play: PLAYS[1984],\n    theatre: THEATRE_VENUES.PLAYHOUSE,\n    dates: [new Date(\"2016-08-13\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    favourite: true\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS } from \"../../constants\";\n\nexport const THEATRE_2017: Array<ITheatreData> = [\n  {\n    play: PLAYS.UGLY_LIES_THE_BONE,\n    theatre: THEATRE_VENUES.NATIONAL,\n    dates: [new Date(\"2017-03-25\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    play: PLAYS.KINKY_BOOTS,\n    theatre: THEATRE_VENUES.ADELPHI,\n    dates: [new Date(\"2017-05-23\")],\n    company: [FRIENDS.SIAN]\n  },\n  {\n    play: PLAYS.MATILDA,\n    theatre: THEATRE_VENUES.CAMBRIDGE,\n    dates: [new Date(\"2017-06-07\")],\n    company: [FRIENDS.SIAN, FRIENDS.LUKE_S]\n  },\n  {\n    play: PLAYS.YOUNG_MARX,\n    theatre: THEATRE_VENUES.BRIDGE,\n    dates: [new Date(\"2017-10-24\")],\n    company: [FRIENDS.JHC, FRIENDS.JOE, FRIENDS.JAMIE, FRIENDS.AISHA]\n  },\n  {\n    play: PLAYS.FERRYMAN,\n    favourite: true,\n    theatre: THEATRE_VENUES.GIELGUD,\n    dates: [new Date(\"2017-11-26\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS, ACTORS } from \"../../constants\";\n\nexport const THEATRE_2018: Array<ITheatreData> = [\n  {\n    play: PLAYS.FROZEN,\n    theatre: THEATRE_VENUES.ROYAL_HAYMARKET,\n    dates: [new Date(\"2018-04-14\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    cast: [ACTORS.SURANNE_JONES, ACTORS.NINA_SOSANYA, ACTORS.JASON_WATKINS]\n  },\n  {\n    play: PLAYS.EVERYBODYS_TALKING_ABOUT_JAMIE,\n    cast: [ACTORS.JOHN_MCCREA],\n    theatre: THEATRE_VENUES.APOLLO,\n    dates: [new Date(\"2018-05-12\")],\n    company: [FRIENDS.SIAN]\n  },\n  {\n    play: PLAYS.CONSENT,\n    cast: [ACTORS.SIAN_CLIFFORD, ACTORS.ADAM_JAMES, ACTORS.LEE_INGLEBY],\n    theatre: THEATRE_VENUES.HAROLD_PINTER,\n    dates: [new Date(\"2018-06-30\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    play: PLAYS.THAT_GIRL,\n    cast: [ACTORS.HATTY_JONES],\n    theatre: THEATRE_VENUES.OLD_RED_LION,\n    dates: [new Date(\"2018-09-05\")],\n    company: [\n      FRIENDS.JHC,\n      FRIENDS.JOE,\n      FRIENDS.JAMIE,\n      FRIENDS.LEWIS,\n      FRIENDS.DOM\n    ]\n  },\n  {\n    play: PLAYS.DUST,\n    theatre: THEATRE_VENUES.TRAFALGAR_STUDIOS,\n    cast: [ACTORS.MILLY_THOMAS],\n    dates: [new Date(\"2018-10-08\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    favourite: true\n  },\n  {\n    play: PLAYS.INHERITANCE,\n    theatre: THEATRE_VENUES.NOEL_COWARD,\n    dates: [new Date(\"2018-10-27\")],\n    company: [FRIENDS.MUM],\n    favourite: true\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS, ACTORS } from \"../../constants\";\n\nexport const THEATRE_2019: Array<ITheatreData> = [\n  {\n    play: PLAYS.WICKED,\n    theatre: THEATRE_VENUES.APOLLO_VICTORIA,\n    dates: [new Date(\"2019-01-12\")],\n    company: [FRIENDS.DAN, FRIENDS.MARIA]\n  },\n  {\n    play: PLAYS.LEAVE_TO_REMAIN,\n    theatre: THEATRE_VENUES.LYRIC,\n    dates: [new Date(\"2019-01-22\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    play: PLAYS.HOME_IM_DARLING,\n    cast: [ACTORS.KATHERINE_PARKINSON],\n    theatre: THEATRE_VENUES.DUKE_OF_YORKS,\n    dates: [new Date(\"2019-03-04\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    play: PLAYS.MIDSUMMER_NIGHTS_DREAM,\n    cast: [\n      ACTORS.GWENDOLINE_CHRISITE,\n      ACTORS.DAVID_MOORST,\n      ACTORS.OLIVER_CHRIS,\n      ACTORS.HAMMED_ANIMASHAUN\n    ],\n    theatre: THEATRE_VENUES.BRIDGE,\n    dates: [new Date(\"2019-08-08\")],\n    company: [FRIENDS.JHC, FRIENDS.JERRY, FRIENDS.JOE, FRIENDS.LEWIS]\n  },\n  {\n    play: PLAYS.SON,\n    cast: [ACTORS.LAURIE_KYNASTON],\n    theatre: THEATRE_VENUES.DUKE_OF_YORKS,\n    dates: [new Date(\"2019-09-28\")],\n    company: [FRIENDS.MUM]\n  },\n  {\n    play: PLAYS.LOST_UNFOUND,\n    theatre: THEATRE_VENUES.WHITE_BEAR,\n    dates: [new Date(\"2019-10-09\")],\n    company: [FRIENDS.JERRY, FRIENDS.LEWIS, FRIENDS.DOM, FRIENDS.JAMIE]\n  },\n\n  {\n    play: PLAYS.LUNGS,\n    theatre: THEATRE_VENUES.OLD_VIC,\n    cast: [ACTORS.CLAIRE_FOY, ACTORS.MATT_SMITH],\n    dates: [new Date(\"2019-10-26\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    favourite: true\n  },\n  {\n    play: PLAYS.AFTERGLOW,\n    cast: [ACTORS.PETER_MCPHERSON, ACTORS.ADI_CHUGH, ACTORS.BENJAMIN_ALUWIHARE],\n    theatre: THEATRE_VENUES.WATERLOO_EAST,\n    dates: [new Date(\"2019-11-30\")],\n    company: [FRIENDS.DAN]\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS, ACTORS } from \"../../constants\";\n\nexport const THEATRE_2020: Array<ITheatreData> = [\n  {\n    play: PLAYS.WAITRESS,\n    theatre: THEATRE_VENUES.ADELPHI,\n    dates: [new Date(\"2020-02-18\")],\n    company: [FRIENDS.DARREN],\n    cast: [ACTORS.SARA_BAREILLES]\n  },\n  {\n    play: PLAYS.UNCLE_VANYA,\n    theatre: THEATRE_VENUES.HAROLD_PINTER,\n    dates: [new Date(\"2020-02-19\")],\n    cast: [ACTORS.AIMEE_LOU_WOOD],\n    company: [FRIENDS.MUM]\n  }\n  // {\n  //   play: PLAYS[\"4000_MILES\"],\n  //   theatre: THEATRE_VENUES.OLD_VIC,\n  //   dates: [new Date(\"2020-05-09\"),\n  //   cast: ACTORS.TIMOTHEE_CHALAMET,\n  //   company: [FRIENDS.MUM, FRIENDS.EMMA]\n  // }\n];\n","import {\n  ACTORS,\n  FRIENDS,\n  PLAYS,\n  PAGE_SECTIONS,\n  THEATRE_VENUES\n} from \"../../constants\";\nimport { generateSectionData } from \"../../utils/global\";\n\nimport { THEATRE_2016 } from \"./theatre-2016\";\nimport { THEATRE_2017 } from \"./theatre-2017\";\nimport { THEATRE_2018 } from \"./theatre-2018\";\nimport { THEATRE_2019 } from \"./theatre-2019\";\nimport { THEATRE_2020 } from \"./theatre-2020\";\n\nconst ALL: Array<ITheatreData> = [\n  ...THEATRE_2016,\n  ...THEATRE_2017,\n  ...THEATRE_2018,\n  ...THEATRE_2019,\n  ...THEATRE_2020\n];\nconst ALL_GROUPED_BY_YEAR: Array<Array<ITheatreData>> = [\n  THEATRE_2016,\n  THEATRE_2017,\n  THEATRE_2018,\n  THEATRE_2019,\n  THEATRE_2020\n];\nconst FAVOURITES: Array<ITheatreData> = ALL.filter(item => item.favourite);\n\n//@ts-ignore\nconst generateSectionDataWrapper = parms =>\n  generateSectionData({\n    ...parms,\n    allData: ALL,\n    favouritedData: FAVOURITES\n  });\n\nconst UPCOMING = generateSectionDataWrapper({ upcomingMode: true });\n\nexport const DATA_THEATRE = {\n  ALL,\n\n  ALL_GROUPED_BY_YEAR,\n\n  ACTORS: generateSectionDataWrapper({\n    items: ACTORS,\n    pageSectionTitle: PAGE_SECTIONS.ACTOR\n  }),\n\n  FAVOURITES,\n\n  FRIENDS: generateSectionDataWrapper({\n    items: FRIENDS,\n    pageSectionTitle: PAGE_SECTIONS.FRIEND,\n    filter: \"theatre\"\n  }),\n\n  PLAYS: generateSectionDataWrapper({\n    items: PLAYS,\n    pageSectionTitle: PAGE_SECTIONS.PLAY\n  }),\n\n  VENUES: generateSectionDataWrapper({\n    items: THEATRE_VENUES,\n    pageSectionTitle: PAGE_SECTIONS.THEATRE_VENUES\n  }),\n\n  UPCOMING\n};\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_1997: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.SPAIN.islands.TENERIFE],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"1997-02-05\"), new Date(\"1997-02-12\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_1998: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.SPAIN.islands.LANZAROTE],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"1998-02-01\"), new Date(\"1998-02-14\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_1999: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.FRANCE.attractions.DISNEYLAND_PARIS],\n    subtitle: [LOCATIONS.FRANCE],\n    dates: [new Date(\"1999-05-27\"), new Date(\"1999-05-30\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.SPAIN.islands.MINORCA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"1999-07-23\"), new Date(\"1999-08-06\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2000: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.SPAIN.islands.MINORCA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2000-07-28\"), new Date(\"2000-08-11\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2001: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.SPAIN.islands.IBIZA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2001-08-20\"), new Date(\"2001-09-03\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2002: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.USA.states.FLORIDA],\n    subtitle: [LOCATIONS.USA],\n    hidden: [\n      LOCATIONS.USA.attractions.BUSCH_GARDENS_TAMPA,\n      LOCATIONS.USA.attractions.DISNEY_EPCOT,\n      LOCATIONS.USA.attractions.UNIVERSALS_ISLANDS_OF_ADVENTURE,\n      LOCATIONS.USA.attractions.UNIVERSAL_STUDIOS_FLORIDA,\n      LOCATIONS.USA.attractions.DISNEY_ANIMAL_KINGDOM,\n      LOCATIONS.USA.attractions.DISNEY_MGM_STUDIOS,\n      LOCATIONS.USA.attractions.DISNEY_MAGIC_KINGDOM,\n      LOCATIONS.USA.attractions.BLIZZARD_BEACH,\n      LOCATIONS.USA.attractions.SEAWORLD_ORLANDO\n    ],\n    dates: [new Date(\"2002-05-23\"), new Date(\"2002-06-12\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2003: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.PORTUGAL],\n    hidden: [LOCATIONS.PORTUGAL.attractions.ZOOMARINE],\n    dates: [new Date(\"2003-07-31\"), new Date(\"2003-08-14\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2004: Array<ITravelData> = [\n  {\n    title: [\n      LOCATIONS.USA.states.NEW_YORK,\n      LOCATIONS.CANADA.cities.NIAGARA_FALLS,\n      LOCATIONS.USA.states.MASSACHUSETTS\n    ],\n    subtitle: [\n      LOCATIONS.USA.cities.NEW_YORK_CITY,\n      LOCATIONS.CANADA.cities.NIAGARA_FALLS,\n      LOCATIONS.USA.cities.BOSTON_MASSACHUSETTS,\n      LOCATIONS.USA.cities.SPRINGFIELD_MASSACHUSETTS,\n      LOCATIONS.USA.regions.CAPE_COD,\n      LOCATIONS.USA.islands.MARTHAS_VINEYARD\n    ],\n    hidden: [\n      LOCATIONS.USA,\n      LOCATIONS.USA.attractions.CENTRAL_PARK,\n      LOCATIONS.USA.attractions.TIMES_SQUARE,\n      LOCATIONS.USA.attractions.BROOKLYN_BRIDGE,\n      LOCATIONS.USA.attractions.WORLD_TRADE_CENTER,\n      LOCATIONS.CANADA,\n      LOCATIONS.CANADA.attractions.NIAGARA_FALLS,\n      LOCATIONS.USA.attractions.SIX_FLAGS_NEW_ENGLAND\n    ],\n    dates: [new Date(\"2004-07-30\"), new Date(\"2004-08-17\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.DAD]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2005: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.SPAIN.attractions.PORTAVENTURA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2005-07-26\"), new Date(\"2005-08-02\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.GREECE.regions.HALKIDIKI],\n    subtitle: [LOCATIONS.GREECE],\n    dates: [new Date(\"2005-08-18\"), new Date(\"2005-08-23\")],\n    company: [\n      FRIENDS.EMMA,\n      FRIENDS.LOUISE,\n      FRIENDS.MEGAN,\n      FRIENDS.MUM,\n      FRIENDS.CAMERON\n    ]\n  },\n  {\n    title: [LOCATIONS.UK.attractions.LAKE_DISTRICT],\n    notAbroad: true,\n    subtitle: [LOCATIONS.UK],\n    dates: [new Date(\"2005-10-22\"), new Date(\"2005-10-24\")],\n    company: [FRIENDS.EMMA, FRIENDS.MUM]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2006: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.USA.states.FLORIDA],\n    subtitle: [LOCATIONS.USA],\n    hidden: [\n      LOCATIONS.USA.attractions.BUSCH_GARDENS_TAMPA,\n      LOCATIONS.USA.attractions.VENICE_BEACH,\n      LOCATIONS.USA.attractions.UNIVERSALS_ISLANDS_OF_ADVENTURE,\n      LOCATIONS.USA.attractions.SEAWORLD_ORLANDO,\n      LOCATIONS.USA.attractions.DISNEY_MGM_STUDIOS,\n      LOCATIONS.USA.attractions.WET_N_WILD_ORLANDO\n    ],\n    dates: [new Date(\"2006-07-25\"), new Date(\"2006-08-05\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.ITALY.towns.SORRENTO, LOCATIONS.ITALY.cities.POMPEII],\n    subtitle: [LOCATIONS.ITALY],\n    hidden: [\n      LOCATIONS.ITALY.attractions.VESUVIUS,\n      LOCATIONS.ITALY.cities.NAPLES\n    ],\n    dates: [new Date(\"2006-08-18\"), new Date(\"2006-08-25\")],\n    company: [\n      FRIENDS.MUM,\n      FRIENDS.EMMA,\n      FRIENDS.LOUISE,\n      FRIENDS.MEGAN,\n      FRIENDS.CAMERON\n    ]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2007: Array<ITravelData> = [\n  {\n    title: [\n      LOCATIONS.USA.cities.SAN_FRANCISCO,\n      LOCATIONS.USA.cities.LOS_ANGELES\n    ],\n    subtitle: [LOCATIONS.USA],\n    hidden: [\n      LOCATIONS.USA.attractions.GOLDEN_GATE_BRIDGE,\n      LOCATIONS.USA.attractions.FISHERMANS_WHARF,\n      LOCATIONS.USA.attractions.ALCATRAZ_PRISON,\n      LOCATIONS.USA.attractions.KNOTTS_BERRY_FARM,\n      LOCATIONS.USA.attractions.HOLLYWOOD_WALK_OF_FAME,\n      LOCATIONS.USA.islands.ALCATRAZ,\n      LOCATIONS.USA.attractions.DISNEYLAND_CALIFORNIA_ADVENTURE\n    ],\n    dates: [new Date(\"2007-07-24\"), new Date(\"2007-08-05\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.UK.regions.CORNWALL],\n    notAbroad: true,\n    subtitle: [LOCATIONS.UK],\n    dates: [new Date(\"2007-08-11\"), new Date(\"2007-08-18\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2008: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.ITALY.cities.ROME, LOCATIONS.ITALY.cities.VATICAN],\n    subtitle: [LOCATIONS.ITALY],\n    hidden: [\n      LOCATIONS.ITALY.attractions.COLOSSEUM,\n      LOCATIONS.ITALY.attractions.TREVI_FOUNTAIN\n    ],\n    dates: [new Date(\"2008-02-08\"), new Date(\"2008-02-10\")],\n    company: [FRIENDS.EMMA, FRIENDS.DAD]\n  },\n  {\n    title: [LOCATIONS.FRANCE.cities.PARIS],\n    subtitle: [LOCATIONS.FRANCE],\n    hidden: [\n      LOCATIONS.FRANCE.attractions.AIR_SPACE_MUSEUM,\n      LOCATIONS.FRANCE.attractions.ARC_DE_TRIOMPHE,\n      LOCATIONS.FRANCE.attractions.EIFFEL_TOWER,\n      LOCATIONS.FRANCE.attractions.LOUVRE,\n      LOCATIONS.FRANCE.attractions.SCIENCE_MUSEUM,\n      LOCATIONS.FRANCE.attractions.SACRE_COEUR,\n      LOCATIONS.FRANCE.attractions.PARC_ASTERIX,\n      LOCATIONS.FRANCE.attractions.AIR_SPACE_MUSEUM\n    ],\n    dates: [new Date(\"2008-04-15\"), new Date(\"2008-04-19\")],\n    company: [\n      FRIENDS.CFS,\n      FRIENDS.BLAINE,\n      FRIENDS.ELLIE_S,\n      FRIENDS.NAV,\n      FRIENDS.ANNIE_B,\n      FRIENDS.JUNAID,\n      FRIENDS.GEMMA,\n      FRIENDS.SARAH_W\n    ]\n  },\n  {\n    title: [LOCATIONS.USA.cities.WASHINGTON_DC, LOCATIONS.USA.states.VIRGINIA],\n    subtitle: [LOCATIONS.USA],\n    hidden: [\n      LOCATIONS.USA.cities.VIRGINIA_BEACH,\n      LOCATIONS.USA.attractions.WASHINGTON_MONUMENT,\n      LOCATIONS.USA.attractions.SIX_FLAGS_AMERICA,\n      LOCATIONS.USA.attractions.LINCOLN_MEMORIAL,\n      LOCATIONS.USA.attractions.CAPITOL_BUILDING,\n      LOCATIONS.USA.attractions.WHITE_HOUSE,\n      LOCATIONS.USA.attractions.BUSCH_GARDENS_WILLIAMSBURG\n    ],\n    dates: [new Date(\"2008-07-13\"), new Date(\"2008-07-24\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.PORTUGAL.towns.VILAMOURA],\n    subtitle: [LOCATIONS.PORTUGAL],\n    dates: [new Date(\"2008-08-07\"), new Date(\"2008-08-14\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2009: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.BELGIUM.attractions.BATTLEFIELDS],\n    subtitle: [LOCATIONS.BELGIUM],\n    hidden: [LOCATIONS.BELGIUM.cities.YPRES],\n    dates: [new Date(\"2009-06-12\"), new Date(\"2009-06-15\")],\n    company: [\n      FRIENDS.CFS,\n      FRIENDS.ELLIE_S,\n      FRIENDS.GRACE,\n      FRIENDS.BLAINE,\n      FRIENDS.POOJA,\n      FRIENDS.ELLIE_G,\n      FRIENDS.GEORGE,\n      FRIENDS.KIERAN_S\n    ]\n  },\n  {\n    title: [\n      LOCATIONS.USA.cities.LAS_VEGAS,\n      LOCATIONS.USA.attractions.GRAND_CANYON,\n      LOCATIONS.USA.cities.LOS_ANGELES\n    ],\n    hidden: [\n      LOCATIONS.USA.attractions.HOLLYWOOD_WALK_OF_FAME,\n      LOCATIONS.USA.attractions.SIX_FLAGS_MAGIC_MOUNTAIN,\n      LOCATIONS.USA.attractions.FARMERS_MARKET\n    ],\n    subtitle: [LOCATIONS.USA],\n    dates: [new Date(\"2009-07-21\"), new Date(\"2009-07-31\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.GREECE.islands.KOS],\n    subtitle: [LOCATIONS.GREECE],\n    dates: [new Date(\"2009-08-12\"), new Date(\"2009-08-19\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2010: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.UAE.cities.DUBAI],\n    subtitle: [LOCATIONS.UAE],\n    hidden: [\n      LOCATIONS.UAE.attractions.AQUAVENTURE,\n      LOCATIONS.UAE.attractions.BURJ_KHALIFA\n    ],\n    dates: [new Date(\"2010-07-26\"), new Date(\"2010-08-03\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.PORTUGAL.towns.FERRAGUDO],\n    subtitle: [LOCATIONS.PORTUGAL],\n    dates: [new Date(\"2010-08-13\"), new Date(\"2010-08-18\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    hidden: [LOCATIONS.PORTUGAL.cities.PORTIMAO]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2011: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.UK.regions.CORNWALL],\n    notAbroad: true,\n    subtitle: [LOCATIONS.UK],\n    dates: [new Date(\"2011-07-01\"), new Date(\"2011-07-04\")],\n    company: [\n      FRIENDS.BLAINE,\n      FRIENDS.GRACE,\n      FRIENDS.POOJA,\n      FRIENDS.JESS,\n      FRIENDS.ELLIE_G,\n      FRIENDS.CARMEN,\n      FRIENDS.KYLE\n    ]\n  },\n  {\n    title: [LOCATIONS.USA.regions.FLORIDA_KEYS],\n    subtitle: [LOCATIONS.USA.regions.ISLAMORADA, LOCATIONS.USA.cities.KEY_WEST],\n    dates: [new Date(\"2011-08-02\"), new Date(\"2011-08-10\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA],\n    hidden: [LOCATIONS.USA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2012: Array<ITravelData> = [\n  {\n    title: [\n      LOCATIONS.EGYPT.cities.SHARM_EL_SHEIKH,\n      LOCATIONS.EGYPT.cities.CAIRO\n    ],\n    subtitle: [LOCATIONS.EGYPT],\n    hidden: [LOCATIONS.EGYPT.attractions.GIZA_PYRAMIDS_SPHINX],\n    dates: [new Date(\"2012-07-22\"), new Date(\"2012-07-29\")],\n    company: [FRIENDS.DAD]\n  },\n  {\n    title: [LOCATIONS.ITALY.towns.JESOLO, LOCATIONS.ITALY.cities.VENICE],\n    subtitle: [LOCATIONS.ITALY],\n    dates: [new Date(\"2012-08-20\"), new Date(\"2012-08-26\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2013: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.CUBA],\n    subtitle: [LOCATIONS.CUBA.cities.HAVANA, LOCATIONS.CUBA.towns.VARADERO],\n    dates: [new Date(\"2013-08-16\"), new Date(\"2013-08-26\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2014: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.BARBADOS],\n    dates: [new Date(\"2014-06-16\"), new Date(\"2014-06-24\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA],\n    hidden: [LOCATIONS.BARBADOS.attractions.HARRISONS_CAVE]\n  },\n  {\n    title: [LOCATIONS.THAILAND, LOCATIONS.LAOS],\n    subtitle: [\n      LOCATIONS.THAILAND.cities.BANGKOK,\n      LOCATIONS.THAILAND.islands.KOH_PHANGAN,\n      LOCATIONS.THAILAND.islands.KOH_TAO,\n      LOCATIONS.THAILAND.islands.KOH_PHI_PHI,\n      LOCATIONS.THAILAND.cities.CHIANG_MAI,\n      LOCATIONS.THAILAND.towns.PAI,\n      LOCATIONS.LAOS.cities.LUANG_PRABANG,\n      LOCATIONS.LAOS.cities.VIENTIANE\n    ],\n    hidden: [\n      LOCATIONS.THAILAND.attractions.SKY_BAR,\n      LOCATIONS.THAILAND.attractions.GRAND_PALACE,\n      LOCATIONS.THAILAND.attractions.TIGER_KINGDOM,\n      LOCATIONS.THAILAND.attractions.WHITE_TEMPLE,\n      LOCATIONS.LAOS.attractions.BUDDHA_PARK,\n      LOCATIONS.LAOS.attractions.ELEPHANT_VILLAGE,\n      LOCATIONS.THAILAND.attractions.MAYA_BAY,\n      LOCATIONS.THAILAND.towns.KRABI,\n      LOCATIONS.THAILAND.attractions.PAI_CANYON,\n      LOCATIONS.THAILAND.cities.CHIANG_RAI,\n      LOCATIONS.LAOS.attractions.KUANG_SI_FALLS\n    ],\n    dates: [new Date(\"2014-07-07\"), new Date(\"2014-08-04\")],\n    company: [FRIENDS.TONYA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2015: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.FRANCE.cities.PARIS],\n    subtitle: [LOCATIONS.FRANCE],\n    hidden: [\n      LOCATIONS.FRANCE.attractions.SACRE_COEUR,\n      LOCATIONS.FRANCE.attractions.LOUVRE,\n      LOCATIONS.FRANCE.attractions.ARC_DE_TRIOMPHE,\n      LOCATIONS.FRANCE.attractions.NOTRE_DAME,\n      LOCATIONS.FRANCE.attractions.EIFFEL_TOWER,\n      LOCATIONS.FRANCE.attractions.NOTRE_DAME\n    ],\n    dates: [new Date(\"2015-03-21\"), new Date(\"2015-03-24\")],\n    company: [\n      FRIENDS.POOJA,\n      FRIENDS.SONYA,\n      FRIENDS.CARMEN,\n      FRIENDS.TONYA,\n      FRIENDS.GRACE,\n      FRIENDS.ELLIE_G\n    ]\n  },\n  {\n    title: [LOCATIONS.UGANDA],\n    subtitle: [LOCATIONS.UGANDA.cities.JINJA],\n    hidden: [\n      LOCATIONS.UGANDA.attractions.NILE_SOURCE,\n      LOCATIONS.UGANDA.attractions.RAFTING_NALUBALE\n    ],\n    dates: [new Date(\"2015-08-04\"), new Date(\"2015-09-05\")],\n    company: [\n      FRIENDS.AMY_C,\n      FRIENDS.HEATHER_C,\n      FRIENDS.OSCAR,\n      FRIENDS.LEAH,\n      FRIENDS.ELINORE_G,\n      FRIENDS.ELISE,\n      FRIENDS.SARAH_WA,\n      FRIENDS.HEATHER_C,\n      FRIENDS.LEAH,\n      FRIENDS.ROB_G,\n      FRIENDS.KATE_B,\n      FRIENDS.COURTNEY\n    ]\n  },\n  {\n    title: [{ name: \"interrailing\" }],\n    subtitle: [\n      LOCATIONS.GERMANY.cities.BERLIN,\n      LOCATIONS.CZECH_REPUBLIC.cities.PRAGUE,\n      LOCATIONS.POLAND.cities.KRAKOW,\n      LOCATIONS.HUNGARY.cities.BUDAPEST\n    ],\n    hidden: [\n      LOCATIONS.GERMANY,\n      LOCATIONS.GERMANY.attractions.BERLIN_WALL,\n      LOCATIONS.GERMANY.attractions.BRANDENBURG_GATE,\n      LOCATIONS.GERMANY.attractions.EAST_SIDE_GALLERY,\n      LOCATIONS.GERMANY.attractions.HOLOCAUST_MEMORIAL,\n      LOCATIONS.GERMANY.attractions.REICHSTAG,\n      LOCATIONS.CZECH_REPUBLIC,\n      LOCATIONS.CZECH_REPUBLIC.attractions.JOHN_LENNON_WALL,\n      LOCATIONS.CZECH_REPUBLIC.attractions.VYSEHRAD,\n      LOCATIONS.POLAND,\n      LOCATIONS.POLAND.towns.WIELICZKA,\n      LOCATIONS.POLAND.attractions.WIELICZKA_SALT_MINE,\n      LOCATIONS.POLAND.attractions.AUSCHWITZ_BIRKENAU,\n      LOCATIONS.HUNGARY,\n      LOCATIONS.HUNGARY.attractions.CITADELLA,\n      LOCATIONS.HUNGARY.attractions.PARLIAMENT_BUILDING,\n      LOCATIONS.HUNGARY.attractions.THERMAL_BATH_SZECHENYI\n    ],\n    dates: [new Date(\"2015-09-10\"), new Date(\"2015-09-24\")],\n    company: [FRIENDS.SIAN]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2016: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.IRELAND.cities.DUBLIN],\n    subtitle: [LOCATIONS.IRELAND],\n    dates: [new Date(\"2016-02-05\"), new Date(\"2016-02-07\")],\n    company: [FRIENDS.SIAN],\n    hidden: [\n      LOCATIONS.IRELAND.attractions.DUBLIN_PRISON,\n      LOCATIONS.IRELAND.attractions.ST_STEPHENS_GREEN_PARK,\n      LOCATIONS.IRELAND.attractions.GUINNESS_STOREHOUSE\n    ]\n  },\n  {\n    title: [LOCATIONS.PORTUGAL.towns.TAVIRA],\n    subtitle: [LOCATIONS.PORTUGAL],\n    dates: [new Date(\"2016-06-09\"), new Date(\"2016-06-16\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.ECUADOR, LOCATIONS.PERU],\n    subtitle: [\n      LOCATIONS.ECUADOR.cities.QUITO,\n      LOCATIONS.ECUADOR.cities.OTAVALO,\n      LOCATIONS.ECUADOR.attractions.COTOPAXI,\n      LOCATIONS.ECUADOR.cities.BANOS,\n      LOCATIONS.ECUADOR.islands.GALAPAGOS,\n      LOCATIONS.PERU.towns.MANCORA,\n      LOCATIONS.PERU.cities.HUARAZ,\n      LOCATIONS.PERU.cities.LIMA,\n      LOCATIONS.PERU.towns.PARACAS,\n      LOCATIONS.PERU.villages.HUACACHINA,\n      LOCATIONS.PERU.cities.AREQUIPA,\n      LOCATIONS.PERU.attractions.COLCA_CANYON,\n      LOCATIONS.PERU.cities.CUSCO,\n      LOCATIONS.PERU.attractions.MANU,\n      LOCATIONS.PERU.attractions.RAINBOW_MOUNTAIN,\n      LOCATIONS.PERU.attractions.MACHU_PICCHU\n    ],\n    hidden: [\n      LOCATIONS.ECUADOR.attractions.EQUATOR_MONUMENT,\n      LOCATIONS.ECUADOR.attractions.OTAVALO_MARKET,\n      LOCATIONS.ECUADOR.attractions.PAILON_DEL_DIABLO,\n      LOCATIONS.ECUADOR.cities.GUAYAQUIL,\n      LOCATIONS.ECUADOR.attractions.TORTOISE_PARK,\n      LOCATIONS.PERU.attractions.HUASCARAN_PARK,\n      LOCATIONS.PERU.attractions.LAGUNA_69,\n      LOCATIONS.PERU.attractions.HUACACHINA,\n      LOCATIONS.PERU.attractions.JUNGLE_ZIPLINE\n    ],\n    dates: [new Date(\"2016-10-03\"), new Date(\"2016-11-10\")],\n    company: [FRIENDS.SARAH_W, FRIENDS.SIAN]\n  },\n  {\n    title: [\n      LOCATIONS.BRAZIL.cities.RIO_DE_JANEIRO,\n      LOCATIONS.BRAZIL.islands.ILHA_GRANDE\n    ],\n    hidden: [\n      LOCATIONS.BRAZIL.attractions.HANG_GLIDING,\n      LOCATIONS.BRAZIL.attractions.MODERN_ART_MUSEUM_RIO,\n      LOCATIONS.BRAZIL.attractions.COPACABANA_BEACH,\n      LOCATIONS.BRAZIL.attractions.ROCINHA_FAVELA,\n      LOCATIONS.BRAZIL.attractions.PICO_DO_PAPAGAIO,\n      LOCATIONS.BRAZIL.attractions.SELARON_STEPS,\n      LOCATIONS.BRAZIL.attractions.CHRIST_THE_REDEEMER\n    ],\n    subtitle: [LOCATIONS.BRAZIL],\n    dates: [new Date(\"2016-12-01\"), new Date(\"2016-12-11\")],\n    company: [FRIENDS.SIAN]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2017: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.ITALY.cities.MILAN],\n    subtitle: [LOCATIONS.ITALY],\n    dates: [new Date(\"2017-05-12\"), new Date(\"2017-05-14\")],\n    company: [\n      FRIENDS.AISHA,\n      FRIENDS.JOE,\n      FRIENDS.JAMIE,\n      FRIENDS.PATRICIA,\n      FRIENDS.JAZZ,\n      FRIENDS.JHC\n    ],\n    hidden: [\n      LOCATIONS.ITALY.attractions.MILAN_MALL,\n      LOCATIONS.ITALY.attractions.SEMPIONE_PARK,\n      LOCATIONS.ITALY.attractions.ARCO_DELLA_PACE\n    ]\n  },\n  {\n    title: [LOCATIONS.SPAIN.cities.BARCELONA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2017-05-12\"), new Date(\"2017-05-14\")],\n    company: [\n      FRIENDS.SIAN,\n      FRIENDS.LINDSEY_S,\n      FRIENDS.BETH_O,\n      FRIENDS.ELLIE_F,\n      FRIENDS.HARRIET_K\n    ],\n    hidden: [\n      LOCATIONS.SPAIN.attractions.PARK_GUELL,\n      LOCATIONS.SPAIN.attractions.CIUTADELLA_PARK\n    ]\n  },\n  {\n    title: [LOCATIONS.SPAIN.islands.TENERIFE],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2017-06-15\"), new Date(\"2017-06-18\")],\n    company: [FRIENDS.LUKE_S],\n    hidden: [LOCATIONS.SPAIN.attractions.SIAM_PARK]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2018: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.DENMARK.cities.COPENHAGEN],\n    subtitle: [LOCATIONS.DENMARK],\n    dates: [new Date(\"2018-01-19\"), new Date(\"2018-01-22\")],\n    company: [FRIENDS.LUKE_S],\n    hidden: [LOCATIONS.DENMARK.attractions.LOUISIANA_ART_MUSEUM]\n  },\n  {\n    title: [LOCATIONS.CYPRUS.cities.PAPHOS],\n    subtitle: [LOCATIONS.CYPRUS],\n    dates: [new Date(\"2018-05-17\"), new Date(\"2018-05-21\")],\n    company: [FRIENDS.SIAN],\n    hidden: [LOCATIONS.CYPRUS.attractions.PAPHOS_ARCHAEOLOGICAL_PARK]\n  },\n  {\n    title: [LOCATIONS.CROATIA.cities.DUBROVNIK],\n    subtitle: [LOCATIONS.CROATIA],\n    dates: [new Date(\"2018-06-02\"), new Date(\"2018-06-09\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA],\n    hidden: [\n      LOCATIONS.CROATIA.attractions.DUBROVNIK_WALLS,\n      LOCATIONS.CROATIA.attractions.DUBROVNIK_CABLE_CAR\n    ]\n  },\n  {\n    title: [LOCATIONS.NETHERLANDS.cities.GRONINGEN],\n    subtitle: [LOCATIONS.NETHERLANDS],\n    hidden: [LOCATIONS.NETHERLANDS.attractions.GRONINGEN_MUSEUM],\n    dates: [new Date(\"2018-07-14\"), new Date(\"2018-07-16\")],\n    company: [FRIENDS.CARMEN]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2019: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.NETHERLANDS.cities.AMSTERDAM],\n    subtitle: [LOCATIONS.NETHERLANDS],\n    hidden: [\n      LOCATIONS.NETHERLANDS.attractions.SEX_MUSEUM,\n      LOCATIONS.NETHERLANDS.attractions.STEDELIJK_MUSEUM\n    ],\n    dates: [new Date(\"2019-02-01\"), new Date(\"2019-02-04\")],\n    company: [FRIENDS.CAITLIN, FRIENDS.TONYA, FRIENDS.RYAN, FRIENDS.TOM]\n  },\n  {\n    title: [LOCATIONS.PORTUGAL.cities.LISBON],\n    subtitle: [LOCATIONS.PORTUGAL],\n    hidden: [LOCATIONS.PORTUGAL.attractions.OCENARIO_DE_LISBOA],\n    dates: [new Date(\"2019-02-08\"), new Date(\"2019-02-10\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.BELGIUM.cities.BRUGES],\n    subtitle: [LOCATIONS.BELGIUM],\n    hidden: [LOCATIONS.BELGIUM.attractions.BELFRY_OF_BRUGES],\n    dates: [new Date(\"2019-05-17\"), new Date(\"2019-05-19\")],\n    company: [FRIENDS.JAMIE]\n  },\n  {\n    title: [LOCATIONS.ITALY.cities.CATANIA],\n    subtitle: [LOCATIONS.ITALY.regions.SICILY],\n    hidden: [LOCATIONS.ITALY, LOCATIONS.ITALY.attractions.ETNA],\n    dates: [new Date(\"2019-07-10\"), new Date(\"2019-07-15\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.FRANCE.cities.NICE],\n    subtitle: [LOCATIONS.FRANCE],\n    hidden: [LOCATIONS.FRANCE.cities.MONACO],\n    dates: [new Date(\"2019-06-08\"), new Date(\"2019-06-14\")],\n    company: [FRIENDS.SIAN]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2020: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.NORWAY.cities.OSLO],\n    subtitle: [LOCATIONS.NORWAY],\n    hidden: [LOCATIONS.NORWAY.islands.HOVEDOYA],\n    dates: [new Date(\"2020-02-27\"), new Date(\"2020-03-01\")],\n    company: [FRIENDS.RYAN, FRIENDS.CAITLIN, FRIENDS.TOM, FRIENDS.TONYA]\n  }\n  // {\n  //   title: [LOCATIONS.BELIZE, LOCATIONS.COSTA_RICA],\n  //   subtitle: [\n  //     LOCATIONS.BELIZE.islands.CAYE_CAULKER,\n  //     LOCATIONS.BELIZE.attractions.BARRIER_REEF,\n  //     LOCATIONS.COSTA_RICA.attractions.CORCOVADO,\n  //     LOCATIONS.COSTA_RICA.towns.MONTEVERDE,\n  //     LOCATIONS.COSTA_RICA.towns.PUERTO_VIEJO\n  //   ],\n  //   hidden: [\n  //     LOCATIONS.BELIZE.cities.BELIZE_CITY,\n  //     LOCATIONS.BELIZE.islands.AMBERGRIS_CAYE,\n  //     LOCATIONS.COSTA_RICA.cities.SAN_JOSE,\n  //     LOCATIONS.COSTA_RICA.attractions.JAGUAR_RESCUE_CENTER\n  //   ],\n  //   dates: [new Date(\"2020-05-14\"), new Date(\"2020-06-01\")],\n  //   company: FRIENDS.SIAN\n  // },\n  // {\n  //   title: LOCATIONS.SPAIN.cities.MADRID,\n  //   subtitle: LOCATIONS.SPAIN,\n  //   hidden: [LOCATIONS.SPAIN.attractions.PARQUE_WARNER],\n  //   dates: [new Date(\"2020-07-07\"), new Date(\"2020-07-10\")],\n  //   company: FRIENDS.DAN\n  // }\n];\n","import {\n  generateSectionData,\n  generateChildItemsFromParentItems\n} from \"../../utils/global\";\nimport { FRIENDS, PAGE_SECTIONS, LOCATIONS } from \"../../constants\";\n\nimport { TRAVEL_1997 } from \"./travel-1997\";\nimport { TRAVEL_1998 } from \"./travel-1998\";\nimport { TRAVEL_1999 } from \"./travel-1999\";\nimport { TRAVEL_2000 } from \"./travel-2000\";\nimport { TRAVEL_2001 } from \"./travel-2001\";\nimport { TRAVEL_2002 } from \"./travel-2002\";\nimport { TRAVEL_2003 } from \"./travel-2003\";\nimport { TRAVEL_2004 } from \"./travel-2004\";\nimport { TRAVEL_2005 } from \"./travel-2005\";\nimport { TRAVEL_2006 } from \"./travel-2006\";\nimport { TRAVEL_2007 } from \"./travel-2007\";\nimport { TRAVEL_2008 } from \"./travel-2008\";\nimport { TRAVEL_2009 } from \"./travel-2009\";\nimport { TRAVEL_2010 } from \"./travel-2010\";\nimport { TRAVEL_2011 } from \"./travel-2011\";\nimport { TRAVEL_2012 } from \"./travel-2012\";\nimport { TRAVEL_2013 } from \"./travel-2013\";\nimport { TRAVEL_2014 } from \"./travel-2014\";\nimport { TRAVEL_2015 } from \"./travel-2015\";\nimport { TRAVEL_2016 } from \"./travel-2016\";\nimport { TRAVEL_2017 } from \"./travel-2017\";\nimport { TRAVEL_2018 } from \"./travel-2018\";\nimport { TRAVEL_2019 } from \"./travel-2019\";\nimport { TRAVEL_2020 } from \"./travel-2020\";\nimport { TRAVEL_BUCKET_LIST } from \"./travel-bucket-list\";\n\nconst ALL: Array<ITravelData> = [\n  ...TRAVEL_1997,\n  ...TRAVEL_1998,\n  ...TRAVEL_1999,\n  ...TRAVEL_2000,\n  ...TRAVEL_2001,\n  ...TRAVEL_2002,\n  ...TRAVEL_2003,\n  ...TRAVEL_2004,\n  ...TRAVEL_2005,\n  ...TRAVEL_2006,\n  ...TRAVEL_2007,\n  ...TRAVEL_2008,\n  ...TRAVEL_2009,\n  ...TRAVEL_2010,\n  ...TRAVEL_2011,\n  ...TRAVEL_2012,\n  ...TRAVEL_2013,\n  ...TRAVEL_2014,\n  ...TRAVEL_2015,\n  ...TRAVEL_2016,\n  ...TRAVEL_2017,\n  ...TRAVEL_2018,\n  ...TRAVEL_2019,\n  ...TRAVEL_2020\n];\n\nconst ALL_GROUPED_BY_YEAR: Array<Array<ITravelData>> = [\n  TRAVEL_1997,\n  TRAVEL_1998,\n  TRAVEL_1999,\n  TRAVEL_2000,\n  TRAVEL_2001,\n  TRAVEL_2002,\n  TRAVEL_2003,\n  TRAVEL_2004,\n  TRAVEL_2005,\n  TRAVEL_2006,\n  TRAVEL_2007,\n  TRAVEL_2008,\n  TRAVEL_2009,\n  TRAVEL_2010,\n  TRAVEL_2011,\n  TRAVEL_2012,\n  TRAVEL_2013,\n  TRAVEL_2014,\n  TRAVEL_2015,\n  TRAVEL_2016,\n  TRAVEL_2017,\n  TRAVEL_2018,\n  TRAVEL_2019,\n  TRAVEL_2020\n];\n\nconst FAVOURITES: Array<ITravelData> = ALL.filter(item => item.favourite);\n\nconst countries = Object.values(LOCATIONS);\n\nconst cities: Array<ICity> = generateChildItemsFromParentItems({\n  childItems: \"cities\",\n  parentItems: LOCATIONS\n});\n\nconst towns: Array<ITown> = generateChildItemsFromParentItems({\n  childItems: \"towns\",\n  parentItems: LOCATIONS\n});\n\nconst islands: Array<IIsland> = generateChildItemsFromParentItems({\n  childItems: \"islands\",\n  parentItems: LOCATIONS,\n  parentFlag: \"island\"\n});\n\nconst attractions: Array<IAttraction> = generateChildItemsFromParentItems({\n  childItems: \"attractions\",\n  parentItems: LOCATIONS\n});\n\nconst themeParks: Array<IAttraction> = attractions.filter(\n  item => item.themePark\n);\nconst highlights: Array<IAttraction> = attractions.filter(\n  item => item.highlight\n);\n\n//@ts-ignore\nconst generateSectionDataWrapper = parms =>\n  generateSectionData({\n    ...parms,\n    allData: ALL,\n    favouritedData: FAVOURITES\n  });\n\nconst UPCOMING = generateSectionDataWrapper({ upcomingMode: true });\n\nexport const DATA_TRAVEL = {\n  pastCount: ALL.filter(item => !item.notAbroad).length - UPCOMING.length,\n  futureCount: UPCOMING.length,\n\n  ALL,\n\n  ALL_GROUPED_BY_YEAR,\n\n  BUCKET_LIST: generateSectionDataWrapper({\n    bucketListMode: true,\n    items: TRAVEL_BUCKET_LIST\n  }),\n\n  CITIES: generateSectionDataWrapper({\n    items: cities,\n    pageSectionTitle: PAGE_SECTIONS.CITY\n  }),\n\n  TOWNS: generateSectionDataWrapper({\n    items: towns,\n    pageSectionTitle: PAGE_SECTIONS.TOWN\n  }),\n\n  ATTRACTIONS: generateSectionDataWrapper({\n    items: attractions.filter(item => !item.themePark && !item.highlight),\n    pageSectionTitle: PAGE_SECTIONS.ATTRACTION\n  }),\n\n  THEME_PARKS: generateSectionDataWrapper({\n    items: themeParks,\n    pageSectionTitle: PAGE_SECTIONS.ATTRACTION\n  }),\n\n  HIGLIGHTS: generateSectionDataWrapper({\n    items: highlights,\n    pageSectionTitle: PAGE_SECTIONS.ATTRACTION\n  }),\n\n  ISLANDS: generateSectionDataWrapper({\n    items: islands,\n    pageSectionTitle: PAGE_SECTIONS.ISLAND\n  }),\n\n  COUNTRIES: generateSectionDataWrapper({\n    items: countries,\n    pageSectionTitle: PAGE_SECTIONS.COUNTRY\n  }),\n\n  FAVOURITES,\n\n  FRIENDS: generateSectionDataWrapper({\n    items: FRIENDS,\n    pageSectionTitle: PAGE_SECTIONS.FRIEND,\n    filter: \"travel\"\n  }),\n\n  UPCOMING\n};\n","export const TRAVEL_BUCKET_LIST: Array<INameFavourite> = [\n  // ATTRACTIONS\n  { name: \"Victoria Falls\" },\n\n  // CITIES\n  { name: \"Buenos Aires\", favourite: true },\n  { name: \"Edinburgh\", favourite: true },\n  { name: \"Stockholm\" },\n  { name: \"Porto\" },\n  { name: \"Florence\" },\n  { name: \"Valencia\" },\n  { name: \"Vienna\" },\n\n  // COUNTIRES\n  { name: \"Australia\" },\n  { name: \"Bolivia\" },\n  { name: \"Colombia\" },\n  { name: \"Indonesia\" },\n  { name: \"Japan\", favourite: true },\n  { name: \"Mexico\" },\n  { name: \"New Zealand\" },\n  { name: \"Philippines\", favourite: true },\n  { name: \"Tanzania\" }\n];\n","import { DATA_THEATRE } from \"../data\";\nimport { ICONS } from \"../resources\";\nimport { EVENT_CARD_TYPES, PAGE_SECTIONS } from \"../constants\";\nimport { mapDataToEventCards, mapYearGroupsToSections } from \"../utils/global\";\n\nconst eventType = EVENT_CARD_TYPES.THEATRE;\n//@ts-ignore\nconst mapTheatreVisitToEventCards = parms =>\n  mapDataToEventCards({ ...parms, eventType });\n\nconst statsSections: Array<IPageSection> = [\n  {\n    details: PAGE_SECTIONS.ACTOR,\n    icon: ICONS.ARTIST,\n    data: DATA_THEATRE.ACTORS\n  },\n  {\n    details: PAGE_SECTIONS.FRIEND,\n    icon: ICONS.PEOPLE,\n    data: DATA_THEATRE.FRIENDS,\n    leaderboard: true\n  },\n  {\n    details: PAGE_SECTIONS.PLAY,\n    icon: ICONS.BOOK,\n    data: DATA_THEATRE.PLAYS,\n    showSectionLength: true\n  },\n  {\n    details: PAGE_SECTIONS.THEATRE_VENUES,\n    icon: ICONS.THEATRE,\n    data: DATA_THEATRE.VENUES,\n    showSectionLength: true\n  },\n  {\n    details: PAGE_SECTIONS.UP_NEXT,\n    icon: ICONS.NOTEPAD,\n    data: mapTheatreVisitToEventCards({ data: DATA_THEATRE.UPCOMING }),\n    showSectionLength: true\n  }\n];\n\nconst yearSections: Array<IPageSection> = mapYearGroupsToSections({\n  years: DATA_THEATRE.ALL_GROUPED_BY_YEAR,\n  eventType\n});\n\nconst sections: Array<IPageSection> = [...statsSections, ...yearSections];\n\nexport const PAGE_DATA_THEATRE: IPageData = {\n  sections\n};\n","import { DATA_RECIPES } from \"../data\";\nimport { mapRecipeGroupsToPageSections } from \"../utils/global\";\nimport { PAGE_SECTIONS } from \"../constants\";\n\nconst recipeGroupSections: Array<IPageSection> = mapRecipeGroupsToPageSections(\n  DATA_RECIPES.CATEGORISED\n);\n\nconst comingSoonSection: IPageSection = {\n  details: PAGE_SECTIONS.RECIPES_COMING_SOON,\n  data: DATA_RECIPES.COMING_SOON\n};\n\nconst sections: Array<IPageSection> = [\n  ...recipeGroupSections,\n  comingSoonSection\n];\n\nexport const PAGE_DATA_RECIPES: IPageData = { sections };\n","import { PAGE_SECTION_TYPES } from \"../../constants\";\n\nexport const mapRecipeGroupsToPageSections = (\n  recipeGroups: Array<IRecipeGroup>\n): Array<IPageSection> => {\n  const maprecipeGroupToSection = ({\n    category,\n    data\n  }: IRecipeGroup): IPageSection => ({\n    details: {\n      id: category,\n      title: category,\n      type: PAGE_SECTION_TYPES.RECIPES\n    },\n    data,\n    expandedAutomatically: true\n  });\n\n  return recipeGroups.map(item => maprecipeGroupToSection(item));\n};\n","import { EVENT_CARD_TYPES, PAGE_SECTIONS } from \"../constants\";\nimport { DATA_TRAVEL } from \"../data\";\nimport { ICONS } from \"../resources\";\nimport { mapDataToEventCards, mapYearGroupsToSections } from \"../utils/global\";\n\nconst eventType = EVENT_CARD_TYPES.TRIP;\n//@ts-ignore\nconst mapTripToEventCards = parms =>\n  mapDataToEventCards({ ...parms, eventType });\n\nconst { pastCount, futureCount } = DATA_TRAVEL;\n\nconst statsSections: Array<IPageSection> = [\n  {\n    details: PAGE_SECTIONS.BUCKET_LIST,\n    icon: ICONS.STARS,\n    data: DATA_TRAVEL.BUCKET_LIST\n  },\n  {\n    details: PAGE_SECTIONS.CITY,\n    icon: ICONS.CITY,\n    showSectionLength: true,\n    data: DATA_TRAVEL.CITIES\n  },\n  {\n    details: PAGE_SECTIONS.COUNTRY,\n    icon: ICONS.FLAG,\n    data: DATA_TRAVEL.COUNTRIES,\n    showSectionLength: true\n  },\n  {\n    details: PAGE_SECTIONS.FRIEND,\n    icon: ICONS.PEOPLE,\n    data: DATA_TRAVEL.FRIENDS,\n    leaderboard: true\n  },\n  {\n    details: PAGE_SECTIONS.HIGHLIGHT,\n    icon: ICONS.MAP_PIN,\n    data: DATA_TRAVEL.HIGLIGHTS\n  },\n  {\n    details: PAGE_SECTIONS.ISLAND,\n    showSectionLength: true,\n    icon: ICONS.PALM_TREE,\n    data: DATA_TRAVEL.ISLANDS\n  },\n  {\n    details: PAGE_SECTIONS.THEME_PARK,\n    showSectionLength: true,\n    icon: ICONS.ROLLER_COASTER,\n    data: DATA_TRAVEL.THEME_PARKS\n  },\n  {\n    details: PAGE_SECTIONS.TOWN,\n    icon: ICONS.TOWN_HALL,\n    data: DATA_TRAVEL.TOWNS\n  },\n  {\n    details: PAGE_SECTIONS.UP_NEXT,\n    icon: ICONS.NOTEPAD,\n    showSectionLength: true,\n    data: mapTripToEventCards({ data: DATA_TRAVEL.UPCOMING })\n  }\n];\n\nconst yearSections: Array<IPageSection> = mapYearGroupsToSections({\n  years: DATA_TRAVEL.ALL_GROUPED_BY_YEAR,\n  eventType\n});\n\nconst sections: Array<IPageSection> = [...statsSections, ...yearSections];\n\nexport const PAGE_DATA_TRAVEL: IPageData = {\n  pastCount,\n  futureCount,\n  sections\n};\n","import { PAGE_DATA_GIGS } from \"./gigs\";\nimport { PAGE_DATA_THEATRE } from \"./theatre\";\nimport { PAGE_DATA_RECIPES } from \"./recipes\";\nimport { PAGE_DATA_TRAVEL } from \"./travel\";\n\ninterface IAllPageData {\n  GIGS: IPageData;\n  RECIPES: IPageData;\n  THEATRE: IPageData;\n  TRAVEL: IPageData;\n}\n\nexport const PAGE_DATA: IAllPageData = {\n  GIGS: PAGE_DATA_GIGS,\n  RECIPES: PAGE_DATA_RECIPES,\n  THEATRE: PAGE_DATA_THEATRE,\n  TRAVEL: PAGE_DATA_TRAVEL\n};\n","import { ICONS } from \"../resources\";\nimport { PAGE_DATA } from \"../pages\";\n\nexport const HOMEPAGE_ROUTE: IHomepageRoute = {\n  title: \"Home\",\n  dest: \"/\"\n};\n\nexport const PAGE_ROUTES: Array<IRoute> = [\n  {\n    dest: \"/gigs\",\n    icon: ICONS.MICROPHONE,\n    title: \"gigs\",\n    pageData: PAGE_DATA.GIGS\n  },\n  {\n    dest: \"/recipes\",\n    icon: ICONS.VEG_BOWL,\n    title: \"recipes\",\n    pageData: PAGE_DATA.RECIPES\n  },\n  {\n    dest: \"/theatre\",\n    icon: ICONS.MASKS,\n    title: \"theatre\",\n    pageData: PAGE_DATA.THEATRE\n  },\n  {\n    dest: \"/travel\",\n    icon: ICONS.TRAVEL,\n    title: \"travel\",\n    pageData: PAGE_DATA.TRAVEL\n  }\n];\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { Link } from \"../../primitives\";\nimport { PAGE_ROUTES } from \"../../routes\";\n\nconst FlexContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-areas: \"icon icon\" \"icon icon\";\n`;\n\nconst StyledSvg = styled.img(({ theme }: ThemeProps) => {\n  const iconSizeDesktop = theme.homePage.icon.size.desktop;\n  const iconSizePhone = theme.homePage.icon.size.phone;\n  const iconSizePadding = theme.homePage.icon.padding;\n\n  return css`\n    padding: ${iconSizePadding};\n    width: ${iconSizeDesktop};\n    height: ${iconSizeDesktop};\n\n    @media (max-width: ${theme.breakpoints.phone.maxWidth}) {\n      width: ${iconSizePhone};\n      height: ${iconSizePhone};\n    }\n  `;\n});\n\nexport const HomePage: React.FC = () => (\n  <FlexContainer>\n    <GridContainer>\n      {PAGE_ROUTES.map(({ icon, dest }: IRoute, index: number) => (\n        <Link key={index} to={dest}>\n          <StyledSvg src={icon} />\n        </Link>\n      ))}\n    </GridContainer>\n  </FlexContainer>\n);\n","import React, { useContext } from \"react\";\nimport styled, { ThemeContext } from \"styled-components\";\n\nimport { Text, Headers, SvgIcon } from \"../../primitives\";\n\nconst { H2 } = Headers;\n\nconst Container = styled.div`\n  display: flex;\n  padding: ${props => props.theme.section.header.padding};\n`;\n\nconst SectionCount = styled(Text.Span.S)`\n  margin-left: ${props => props.theme.section.count.margin.left};\n`;\n\nconst SectionSubcount = styled(SectionCount)`\n  opacity: ${props => props.theme.fadedOpacity};\n`;\n\nconst TextContainer = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nconst StyledIcon = styled(SvgIcon)`\n  padding-top: ${props => props.theme.section.icon.padding.top};\n`;\n\ntype PageSectionHeaderProps = {\n  text: string;\n  showCounts: boolean;\n  data: Array<any>;\n  icon?: IImageSrc;\n  dataTest: string;\n};\n\nexport const PageSectionHeader: React.FC<PageSectionHeaderProps> = ({\n  text,\n  showCounts,\n  data,\n  icon,\n  dataTest\n}) => {\n  //@ts-ignore\n  const starredDataCount = data && data.filter(item => item.star).length;\n  const theme = useContext(ThemeContext);\n\n  return (\n    <Container data-test={dataTest}>\n      <TextContainer data-test=\"section-header-text-container\">\n        <H2 data-test=\"section-header-text\">{text}</H2>\n\n        {showCounts && data && data.length > 1 && (\n          <SectionCount data-test=\"section-count\">{data.length}</SectionCount>\n        )}\n\n        {showCounts && starredDataCount > 0 && (\n          <SectionSubcount data-test=\"section-count\">\n            {starredDataCount}\n          </SectionSubcount>\n        )}\n      </TextContainer>\n\n      {icon && (\n        <StyledIcon\n          data-test=\"section-header-icon\"\n          icon={icon}\n          size={theme.section.icon.size}\n        />\n      )}\n    </Container>\n  );\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\ninterface StyledLiProps {\n  showBullets?: boolean;\n  addPaddingTop?: boolean;\n}\nconst StyledLi = styled.li`\n  ${({ showBullets }: StyledLiProps) =>\n    showBullets &&\n    css`\n      margin-left: 16px;\n    `}\n\n  ${({ addPaddingTop }: StyledLiProps) =>\n    addPaddingTop &&\n    css`\n      padding-top: 10px;\n    `}\n`;\n\nconst Ul = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\n\ninterface UnorderedListProps {\n  title: string;\n  items: Array<IListItemWithPaddingTopFlag>;\n  showBullets?: boolean;\n}\nexport const UnorderedList: React.FC<UnorderedListProps> = ({\n  title,\n  items,\n  showBullets = false\n}) => {\n  return (\n    <Ul>\n      <strong>{title}</strong>\n\n      {items.map((item: IListItemWithPaddingTopFlag, index: number) => (\n        <StyledLi\n          key={index}\n          showBullets={showBullets}\n          addPaddingTop={item.addPaddingTop}\n        >\n          {item.text}\n        </StyledLi>\n      ))}\n    </Ul>\n  );\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\ninterface ChildrenContainerProps extends ThemeProps {\n  bodyHeight: IBodyHeight;\n}\nconst ChildrenContainer = styled.div`\n  &.initial-state {\n    max-height: unset;\n  }\n\n  transition: ${(props: ChildrenContainerProps) =>\n      props.theme.animationDuration}s\n    ease;\n  overflow: hidden;\n  max-height: 0;\n\n  &.child-visible {\n    max-height: ${(props: ChildrenContainerProps) => props.bodyHeight}px;\n  }\n`;\n\ninterface ClickableRegionProps {\n  expandedAutomatically?: boolean;\n}\nconst ClickableRegion = styled.div`\n  ${(props: ClickableRegionProps) =>\n    !props.expandedAutomatically &&\n    css`\n      cursor: pointer;\n    `}\n`;\n\ntype IBodyHeight = number | null;\n\ninterface VisibilityToggleProps {\n  expandedAutomatically?: boolean;\n  onlyHeaderClickable?: boolean;\n  headerComponent: React.ReactNode;\n  children: React.ReactNode;\n}\n\nexport const VisibilityToggle: React.FC<VisibilityToggleProps> = ({\n  expandedAutomatically = false,\n  onlyHeaderClickable = false,\n  headerComponent,\n  children\n}) => {\n  const [childIsVisible, switchChildVisibility] = React.useState<boolean>(\n    expandedAutomatically\n  );\n  const [childrenContainerHeight, setChildrenContainerHeight] = React.useState<\n    IBodyHeight\n  >(null);\n\n  const refCallback = (element: HTMLDivElement): void => {\n    if (element && !childrenContainerHeight)\n      setChildrenContainerHeight(element.getBoundingClientRect().height);\n  };\n\n  const getChildrenContainerClass = (\n    bodyHeight: number | null,\n    childIsVisible: boolean\n  ): string =>\n    !bodyHeight\n      ? \"initial-state\"\n      : childIsVisible\n      ? \"child-visible\"\n      : \"child-invisible\";\n\n  const hiddenPanel = (\n    <ChildrenContainer\n      data-test=\"visibility-toggle-children\"\n      className={getChildrenContainerClass(\n        childrenContainerHeight,\n        childIsVisible\n      )}\n      bodyHeight={childrenContainerHeight}\n      ref={refCallback}\n    >\n      {children}\n    </ChildrenContainer>\n  );\n\n  const dataTestVisibilityToggle = \"visibility-toggle-container\";\n\n  return onlyHeaderClickable ? (\n    <>\n      <ClickableRegion\n        expandedAutomatically={expandedAutomatically}\n        data-test={dataTestVisibilityToggle}\n        onClick={() =>\n          !expandedAutomatically && switchChildVisibility(!childIsVisible)\n        }\n      >\n        {headerComponent}\n      </ClickableRegion>\n      {hiddenPanel}\n    </>\n  ) : (\n    <ClickableRegion\n      data-test={dataTestVisibilityToggle}\n      onClick={() => switchChildVisibility(!childIsVisible)}\n    >\n      {headerComponent}\n      {hiddenPanel}\n    </ClickableRegion>\n  );\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { MEASUREMENTS, NO_UNIT_COST_FOR_RECIPE_EXISTS } from \"../../constants\";\nimport { Circle, Headers, FlexRow } from \"../../primitives\";\nimport {\n  getServeWithListItem,\n  calculateRecipeCost,\n  getIngredientsHeader,\n  generateIngredientListItem\n} from \"../../utils/global\";\n\nimport { CentredOnPhone } from \"../CentredOnPhone\";\nimport { UnorderedList } from \"../UnorderedList\";\nimport { VisibilityToggle } from \"../VisibilityToggle\";\n\ntype IStyledH3 = { favourite?: boolean };\nconst StyledH3 = styled(Headers.H3)`\n  font-weight: 300;\n  flex: 1;\n\n  ${(props: IStyledH3) =>\n    props.favourite &&\n    css`\n      ::before {\n        content: \"♥ \";\n      }\n    `}\n`;\nconst StyledImage = styled.img(\n  ({\n    theme: {\n      recipe: {\n        image: { size }\n      }\n    }\n  }: ThemeProps) => css`\n    height: ${size};\n    width: ${size};\n  `\n);\n\nconst RecipeBody = styled.div`\n  padding-top: 5px;\n\n  > * {\n    padding: 10px 0 5px;\n  }\n`;\n\nconst UnitCostsContainer = styled.div`\n  font-size: 80%;\n`;\n\nexport const RecipeCard: React.FC<IRecipeCard> = ({\n  title,\n  makes,\n  ingredients,\n  method,\n  favourite,\n  serveWith,\n  newRecipe,\n  hide,\n  diet,\n  image\n}) => {\n  if (hide) return null;\n\n  const { displayCost, displayUnitCost } = calculateRecipeCost({\n    ingredients,\n    yieldQuantity: makes && makes.quantity,\n    recipeTitle: title\n  });\n\n  const defaultIngredientsHeader: string = \"ingredients\";\n  const ingredientsHeader: string = makes\n    ? getIngredientsHeader({ makes, defaultIngredientsHeader })\n    : defaultIngredientsHeader;\n\n  const mapIngredientsToListItemsWithPaddingFlags = (\n    ingredientsGroups: Array<Array<IRecipeIngredient>>\n  ): Array<IListItemWithPaddingTopFlag> => {\n    let ingredientsWithPaddingFlags: Array<IListItemWithPaddingTopFlag> = [];\n\n    ingredientsGroups.map(\n      (ingredientsGroup: Array<IRecipeIngredient>, INDEX_HIGH: number) => {\n        ingredientsGroup.map(\n          (ingredient: IRecipeIngredient, INDEX_LOW: number) => {\n            ingredientsWithPaddingFlags.push({\n              text: generateIngredientListItem(ingredient),\n              addPaddingTop: INDEX_HIGH !== 0 && INDEX_LOW === 0\n            });\n            return null;\n          }\n        );\n        return null;\n      }\n    );\n\n    return ingredientsWithPaddingFlags;\n  };\n\n  return (\n    <VisibilityToggle\n      expandedAutomatically={newRecipe}\n      headerComponent={\n        <FlexRow>\n          <StyledH3 favourite={favourite}>{title}</StyledH3>\n          <Circle fontSize=\"13px\" size=\"25px\" invert color={diet.color}>\n            {diet.abbreviation}\n          </Circle>\n        </FlexRow>\n      }\n    >\n      <RecipeBody>\n        <UnorderedList\n          title={ingredientsHeader}\n          items={mapIngredientsToListItemsWithPaddingFlags(ingredients)}\n        />\n\n        {serveWith && (\n          <UnorderedList\n            title=\"serve with\"\n            items={serveWith.map(\n              (\n                item: Array<IRecipeIngredient>\n              ): IListItemWithPaddingTopFlag => ({\n                text: getServeWithListItem(item),\n                addPaddingTop: false\n              })\n            )}\n          />\n        )}\n        {method && (\n          <UnorderedList\n            title=\"method\"\n            items={method.map(\n              (item: string): IListItemWithPaddingTopFlag => ({\n                text: item,\n                addPaddingTop: false\n              })\n            )}\n            showBullets\n          />\n        )}\n        {image && (\n          <CentredOnPhone>\n            <StyledImage src={image} />\n          </CentredOnPhone>\n        )}\n        <CentredOnPhone>\n          <div>\n            approx. <strong>{displayCost}</strong> to make\n            {displayUnitCost !== NO_UNIT_COST_FOR_RECIPE_EXISTS &&\n              makes &&\n              makes.measurement &&\n              makes.quantity > 1 &&\n              makes.measurement !== MEASUREMENTS.GRAM && (\n                <UnitCostsContainer>\n                  <strong>{displayUnitCost}</strong> per {makes.measurement}\n                </UnitCostsContainer>\n              )}\n          </div>\n        </CentredOnPhone>\n      </RecipeBody>\n    </VisibilityToggle>\n  );\n};\n","import { MEASUREMENTS } from \"../../constants\";\n\nimport { concatenateQuantityAndMeasurement } from \"../local\";\n\ninterface IGetIngredientsHeader {\n  defaultIngredientsHeader: string;\n  makes: IRecipeMakes;\n}\n\nexport const getIngredientsHeader = ({\n  makes,\n  defaultIngredientsHeader\n}: IGetIngredientsHeader): string => {\n  const { quantity, measurement } = makes;\n\n  const quantitySpaceMeasurement: string =\n    quantity.toString() + \" \" + measurement;\n\n  const quantityAndMeasurement: string =\n    measurement === MEASUREMENTS.GRAM || measurement === MEASUREMENTS.MILLILITRE\n      ? concatenateQuantityAndMeasurement(quantity.toString(), measurement)\n      : quantity === 1\n      ? quantitySpaceMeasurement\n      : quantitySpaceMeasurement + \"s\";\n\n  return `${defaultIngredientsHeader} (makes ${quantityAndMeasurement})`;\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { PAGE_SECTION_TYPES } from \"../../constants\";\n\nimport { EventCard } from \"../EventCard\";\nimport { PageSectionHeader } from \"./PageSectionHeader\";\nimport { RecipeCard } from \"../RecipeCard\";\nimport { CountedListItem } from \"../CountedListItem\";\nimport { VisibilityToggle } from \"../VisibilityToggle\";\n\nconst PageSectionContainer = styled.section`\n  background: ${props => props.theme.colors.gainsboro};\n  box-shadow: ${props => props.theme.section.boxShadow};\n  border-radius: ${props => props.theme.section.borderRadius};\n\n  padding: 0 ${props => props.theme.section.padding.horizontal};\n  margin-bottom: ${props => props.theme.section.margin.bottom};\n`;\n\ninterface SectionBodyProps extends ThemeProps {\n  isEventCards: boolean;\n}\nconst SectionBody = styled.div`\n  ${({ theme, isEventCards }: SectionBodyProps) => css`\n    padding-bottom: ${theme.section.body.padding.bottom};\n\n    > * {\n      border-bottom: ${theme.section.body.basicList.border.bottom};\n      padding: ${isEventCards\n        ? `${theme.section.body.eventCardList.padding.vertical} 0`\n        : `${theme.section.body.basicList.padding.vertical} 0`};\n    }\n\n    > *:last-child {\n      ${isEventCards && `padding-bottom: 5px;`}\n      border-bottom: 0;\n    }\n\n    ${isEventCards &&\n    css`\n      > *:first-child {\n        padding-top: 0;\n      }\n    `}\n  `}\n`;\n\nconst RecipeGroupBody = styled.div`\n  > * {\n    border-bottom: ${props => props.theme.recipe.border.bottom};\n    padding: ${props => props.theme.recipe.title.padding.vertical} 0;\n  }\n\n  > *:first-child {\n    padding-top: ${props => props.theme.recipe.first.padding.top};\n  }\n\n  > *:last-child {\n    border-bottom: 0;\n    padding-bottom: ${props => props.theme.recipe.last.padding.bottom};\n  }\n`;\n\nexport const PageSection: React.FC<IPageSection> = ({\n  details: { id, title, type },\n  icon,\n  data,\n  showSectionLength = false,\n  expandedAutomatically = false,\n  leaderboard\n}) => {\n  const isEventCards: boolean = type === PAGE_SECTION_TYPES.EVENT_CARDS;\n  const isRecipes: boolean = type === PAGE_SECTION_TYPES.RECIPES;\n  const isCountedList: boolean = type === PAGE_SECTION_TYPES.COUNTED_LIST;\n\n  // Precautionary exit\n  const proceed =\n    data.length > 0 ||\n    // e.g. if pesto is hidden, do not show sauces section because there will be no section children\n    (isRecipes && data.filter((item: IRecipeCard) => !item.hide).length);\n  if (!proceed) return null;\n\n  return (\n    <PageSectionContainer data-test={id && `${id}-section`}>\n      <VisibilityToggle\n        onlyHeaderClickable={isRecipes}\n        expandedAutomatically={expandedAutomatically}\n        headerComponent={\n          <PageSectionHeader\n            text={title}\n            showCounts={showSectionLength}\n            data={data}\n            icon={icon}\n            dataTest=\"visibility-toggle-header\"\n          />\n        }\n      >\n        <section data-test=\"section-content\">\n          {isRecipes ? (\n            <RecipeGroupBody>\n              {data.map((item: IRecipeCard, index: number) => (\n                <RecipeCard key={index} {...item} />\n              ))}\n            </RecipeGroupBody>\n          ) : (\n            <SectionBody\n              data-test=\"page-section-content\"\n              isEventCards={isEventCards}\n            >\n              {data.map((item: any, index: number) => {\n                if (isEventCards) return <EventCard key={index} {...item} />;\n\n                if (isCountedList)\n                  return (\n                    <CountedListItem\n                      key={index}\n                      {...item}\n                      leaderboard={leaderboard}\n                    />\n                  );\n\n                return null;\n              })}\n            </SectionBody>\n          )}\n        </section>\n      </VisibilityToggle>\n    </PageSectionContainer>\n  );\n};\n","import React from \"react\";\nimport styled, { ThemeContext } from \"styled-components\";\n\nimport { FlexRow, Headers, Text, SvgIcon, Link } from \"../../primitives\";\n\nconst { H1 } = Headers;\n\nconst TitleTextContainer = styled.div`\n  display: flex;\n  flex: 1;\n  text-transform: lowercase;\n  margin-bottom: ${props => props.theme.page.header.margin.bottom};\n`;\n\nconst PastCount = styled(Text.Span.SM)`\n  padding: ${props => props.theme.page.count.padding};\n`;\n\nconst FutureCount = styled(PastCount)`\n  opacity: ${props => props.theme.fadedOpacity};\n`;\n\nconst PaddedFlexRow = styled(FlexRow)`\n  padding-bottom: ${props => props.theme.pageTitleMarginBottom};\n`;\n\nconst SvgContainer = styled.div`\n  margin-top: ${props => props.theme.page.icon.margin.top};\n`;\n\ninterface PageTitleProps {\n  titleText: string;\n  pastCount?: number;\n  futureCount?: number;\n  icon: IImageSrc;\n}\n\nexport const PageTitle: React.FC<PageTitleProps> = ({\n  titleText,\n  pastCount,\n  futureCount,\n  icon\n}) => {\n  const theme = React.useContext(ThemeContext);\n\n  return (\n    <PaddedFlexRow data-test=\"page-title-container\">\n      <TitleTextContainer data-test=\"page-title-text-container\">\n        <H1 data-test=\"page-title-text\">{titleText}</H1>\n\n        {!!pastCount && pastCount > 0 && (\n          <PastCount data-test=\"page-title-past-count\">{pastCount}</PastCount>\n        )}\n        {!!futureCount && futureCount > 0 && (\n          <FutureCount data-test=\"page-title-future-count\">\n            {futureCount}\n          </FutureCount>\n        )}\n      </TitleTextContainer>\n\n      <Link data-test=\"page-title-link\" to=\"/\">\n        <SvgContainer>\n          <SvgIcon icon={icon} size={theme.page.icon.size} />\n        </SvgContainer>\n      </Link>\n    </PaddedFlexRow>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { PageTitle } from \"../PageTitle\";\n\nconst StyledPageShell = styled.section`\n  padding: ${props => props.theme.page.shell.padding};\n`;\n\ninterface PageShellProps {\n  title: string;\n  icon: IImageSrc;\n  pageData: IPageData;\n  children: React.ReactNode;\n}\n\nexport const PageShell: React.FC<PageShellProps> = ({\n  title,\n  icon,\n  pageData,\n  children\n}) => {\n  const { pastCount, futureCount } = pageData;\n\n  return (\n    <StyledPageShell data-test=\"page-shell\">\n      <PageTitle\n        titleText={title}\n        pastCount={pastCount}\n        futureCount={futureCount}\n        icon={icon}\n      />\n\n      {children}\n    </StyledPageShell>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { HomePage, PageShell, PageSection } from \"../components\";\nimport { HOMEPAGE_ROUTE, PAGE_ROUTES } from \"../routes\";\n\nconst SectionsContainer = styled.div`\n  > *:last-child {\n    border-bottom: 0;\n  }\n`;\n\nconst Page: React.FC<IRoute> = ({ icon, title, pageData }) => (\n  <PageShell title={title} icon={icon} pageData={pageData}>\n    <SectionsContainer data-test=\"page-sections\">\n      {pageData.sections.map((item: IPageSection, index: number) => (\n        <PageSection key={index} {...item} />\n      ))}\n    </SectionsContainer>\n  </PageShell>\n);\n\nexport const App: React.FC = () => (\n  <BrowserRouter>\n    <Switch>\n      {PAGE_ROUTES.map((route: IRoute, index: number) => (\n        <Route key={index} path={route.dest}>\n          <Page {...route} />\n        </Route>\n      ))}\n\n      <Route path={HOMEPAGE_ROUTE.dest}>\n        <HomePage />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport { App } from \"./app\";\nimport { THEME, GlobalStyle } from \"./styles\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={THEME}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}