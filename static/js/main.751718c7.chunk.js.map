{"version":3,"sources":["resources/svg sync /^/.//.*/.svg$","resources/svg/artist.svg","resources/svg/book.svg","resources/svg/brain.svg","resources/svg/cake.svg","resources/svg/camera.svg","resources/svg/city.svg","resources/svg/cloche.svg","resources/svg/flag.svg","resources/svg/heart.svg","resources/svg/loading.svg","resources/svg/map_pin.svg","resources/svg/masks.svg","resources/svg/microphone.svg","resources/svg/notepad.svg","resources/svg/palm_tree.svg","resources/svg/peace_sign.svg","resources/svg/people.svg","resources/svg/roller_coaster.svg","resources/svg/stadium.svg","resources/svg/stars.svg","resources/svg/tent.svg","resources/svg/theatre.svg","resources/svg/toast.svg","resources/svg/town_hall.svg","resources/svg/travel.svg","resources/svg/veg_bowl.svg","resources/jpg sync /^/.//.*/.jpg$","resources/jpg/baked_beans.jpg","resources/jpg/banana_cake.jpg","resources/jpg/bolognese.jpg","resources/jpg/brownies.jpg","resources/jpg/carbonara.jpg","resources/jpg/crumble.jpg","resources/jpg/flapjacks.jpg","resources/jpg/kale_crispy.jpg","resources/jpg/lasagne.jpg","resources/jpg/mashed_potato.jpg","resources/jpg/piri_piri.jpg","resources/jpg/ratatouille.jpg","resources/jpg/rogan_josh.jpg","resources/jpg/shepherds_pie.jpg","components/StyledLink.ts","resources/index.ts","constants/actors.ts","styles/colors.ts","styles/font-sizes.ts","styles/theme.ts","styles/GlobalStyle.ts","pages/gigs.ts","constants/diets.ts","constants/festivals.ts","constants/friends.ts","constants/locations.ts","constants/measurements.ts","constants/musicians.ts","constants/music-venues.ts","constants/ingredients/baking/flour.ts","constants/ingredients/baking/sugar.ts","constants/ingredients/baking/syrups.ts","constants/ingredients/baking/index.ts","constants/ingredients/carbs/pasta.ts","constants/ingredients/carbs/rice.ts","constants/ingredients/carbs/grains.ts","constants/ingredients/carbs/index.ts","constants/ingredients/carbs/bread.ts","constants/ingredients/dairy/milk.ts","constants/ingredients/dairy/index.ts","constants/ingredients/fruit/dried-fruit.ts","constants/ingredients/fruit/fresh-fruit.ts","constants/ingredients/fruit/frozen-fruit.ts","constants/ingredients/fruit/juice.ts","constants/ingredients/fruit/index.ts","constants/ingredients/herbs/dried-herbs.ts","constants/ingredients/herbs/fresh-herbs.ts","constants/ingredients/herbs/index.ts","constants/ingredients/protein/beans.ts","constants/ingredients/protein/seitan.ts","constants/ingredients/protein/index.ts","constants/ingredients/seasoning/dried-seasoning.ts","constants/ingredients/seasoning/oils.ts","constants/unicode.ts","constants/ingredients/seasoning/pastes.ts","constants/ingredients/seasoning/salt.ts","constants/ingredients/seasoning/sauces.ts","constants/ingredients/seasoning/vinegars.ts","constants/ingredients/seasoning/index.ts","constants/ingredients/nuts-seeds/nuts.ts","constants/ingredients/nuts-seeds/seeds.ts","constants/ingredients/nuts-seeds/index.ts","constants/ingredients/veg/canned-veg.ts","constants/ingredients/veg/fresh-veg.ts","constants/ingredients/veg/frozen-veg.ts","constants/ingredients/veg/index.ts","constants/ingredients/index.ts","constants/page-sections.ts","constants/plays.ts","constants/theatre-venues.ts","constants/ticket-types.ts","constants/index.ts","utils/local/numberToCurrencyString.ts","utils/local/concatenateQuantityAndMeasurement.ts","utils/local/calculateIngredientCost.ts","utils/local/convertIngredientQuantity.ts","utils/local/turnTheSuffixIntoPrefix.ts","utils/local/formatData.ts","utils/local/isInFuture.ts","utils/local/getPageSectionItemCounts.ts","utils/local/itemIsFavourited.ts","utils/global/calculateRecipeCost.ts","utils/global/generateChildItemsFromParentItems.ts","utils/global/generateIngredientListItem.ts","utils/local/convertDecimalToFraction.ts","utils/global/generateSectionData.ts","utils/global/mapDataToEventCards.ts","utils/global/mapYearGroupsToSections.ts","utils/global/recipeMethodEntries.ts","data/gigs/gigs-2006.ts","data/gigs/gigs-2007.ts","data/gigs/gigs-2008.ts","data/gigs/gigs-2009.ts","data/gigs/gigs-2010.ts","data/gigs/gigs-2011.ts","data/gigs/gigs-2012.ts","data/gigs/gigs-2013.ts","data/gigs/gigs-2014.ts","data/gigs/gigs-2015.ts","data/gigs/gigs-2016.ts","data/gigs/gigs-2017.ts","data/gigs/gigs-2018.ts","data/gigs/gigs-2019.ts","data/gigs/gigs-2020.ts","data/gigs/gigs-2021.ts","data/gigs/index.ts","data/recipes/mains/bolognese.ts","data/recipes/mains/carbonara.ts","data/recipes/mains/lasagne.ts","data/recipes/mains/risotto.ts","data/recipes/mains/rogan-josh.ts","data/recipes/mains/shepherds-pie.ts","data/recipes/mains/sweet-and-sour.ts","data/recipes/mains/index.ts","data/recipes/sauces/pesto.ts","data/recipes/sauces/piri-piri.ts","data/recipes/sauces/index.ts","data/recipes/sides/baked-beans.ts","data/recipes/sides/bang-bang-cauliflower.ts","data/recipes/sides/crispy-kale.ts","data/recipes/sides/mashed-potato.ts","data/recipes/sides/ratatouille.ts","data/recipes/sides/index.ts","data/recipes/sides/tofu-scramble.ts","data/recipes/sweets/banana-cake.ts","data/recipes/sweets/blueberry-pancakes.ts","data/recipes/sweets/brownies.ts","data/recipes/sweets/cookies.ts","data/recipes/sweets/crumble.ts","data/recipes/sweets/flapjacks.ts","data/recipes/sweets/lemon-drizzle.ts","data/recipes/sweets/scones.ts","data/recipes/index.ts","data/recipes/sweets/index.ts","data/recipes/recipes-coming-soon.ts","data/theatre/theatre-2016.ts","data/theatre/theatre-2017.ts","data/theatre/theatre-2018.ts","data/theatre/theatre-2019.ts","data/theatre/theatre-2020.ts","data/theatre/index.ts","data/travel/travel-1997.ts","data/travel/travel-1998.ts","data/travel/travel-1999.ts","data/travel/travel-2000.ts","data/travel/travel-2001.ts","data/travel/travel-2002.ts","data/travel/travel-2003.ts","data/travel/travel-2004.ts","data/travel/travel-2005.ts","data/travel/travel-2006.ts","data/travel/travel-2007.ts","data/travel/travel-2008.ts","data/travel/travel-2009.ts","data/travel/travel-2010.ts","data/travel/travel-2011.ts","data/travel/travel-2012.ts","data/travel/travel-2013.ts","data/travel/travel-2014.ts","data/travel/travel-2015.ts","data/travel/travel-2016.ts","data/travel/travel-2017.ts","data/travel/travel-2018.ts","data/travel/travel-2019.ts","data/travel/travel-2020.ts","data/travel/index.ts","data/travel/travel-bucket-list.ts","pages/theatre.ts","pages/recipes.ts","utils/global/mapRecipeGroupsToSections.ts","pages/travel.ts","pages/index.ts","routes/index.ts","components/HomePage.tsx","primitives/Circle.ts","primitives/Flex.ts","primitives/Headers.ts","primitives/Lists.ts","primitives/SvgIcon.tsx","primitives/Text.ts","components/EventCard.tsx","utils/global/daysToGo.ts","utils/global/getDisplayDateText.ts","utils/global/getCountdownText.ts","components/PageSection/PageSectionHeader.tsx","components/CentredOnPhone.ts","components/RecipeCard/RecipeCardCost.tsx","components/RecipeCard/RecipeCardHeader.tsx","components/RecipeCard/RecipeCardIngredients.tsx","utils/global/concatenateMakesWithDefaultIngredientsHeader.ts","components/RecipeCard/RecipeCardMethod.tsx","components/RecipeCard/RecipeCardImage.tsx","components/RecipeCard/RecipeCardServeWith.tsx","utils/global/getServeWithListItem.ts","components/VisibilityToggle.tsx","components/RecipeCard/index.tsx","components/CountedListItem.tsx","components/PageSection/index.tsx","components/PageTitle.tsx","components/PageShell.tsx","app/index.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","StyledLink","styled","Link","requireSvg","icon","require","requireJpg","photo","ICONS","ARTIST","BOOK","BRAIN","CAKE","CAMERA","CITY","CLOCHE","FLAG","HEART","MAP_PIN","MASKS","MICROPHONE","NOTEPAD","PALM_TREE","PEACE_SIGN","PEOPLE","ROLLER_COASTER","STADIUM","STARS","TENT","THEATRE","TOAST","TOWN_HALL","TRAVEL","VEG_BOWL","PHOTOS","BAKED_BEANS","BANANA_CAKE","BOLOGNESE","BROWNIES","CARBONARA","CRUMBLE","FLAPJACKS","KALE_CRISPY","LASAGNE","MASHED_POTATO","PIRI_PIRI","RATATOUILLE","ROGAN_JOSH","SHEPHERDS_PIE","ACTORS","ADAM_JAMES","name","ADI_CHUGH","AIMEE_LOU_WOOD","BENJAMIN_ALUWIHARE","CLAIRE_FOY","favourite","DAVID_MOORST","GWENDOLINE_CHRISITE","HAMMED_ANIMASHAUN","HATTY_JONES","JASON_WATKINS","JOHN_MCCREA","KATHERINE_PARKINSON","LAURIE_KYNASTON","LEE_INGLEBY","MATT_SMITH","MILLY_THOMAS","NINA_SOSANYA","OLIVER_CHRIS","PETER_MCPHERSON","SARA_BAREILLES","SIAN_CLIFFORD","SURANNE_JONES","TIMOTHEE_CHALAMET","COLORS","gainsboro","darkGreen","green","amethystSmoke","baliHai","gray","hillary","sprout","black","FONT_SIZES","BORDER_BLACK_THIN","BORDER_GRAY_THIN","SECTION_THEME","body","basicList","border","bottom","count","width","padding","vertical","eventCardList","borderRadius","boxShadow","rgba","margin","left","header","top","size","horizontal","fontFamily","THEME","animationDuration","fadedOpacity","circleBorder","textColor","breakpoints","phone","maxWidth","recipe","image","title","first","last","homePage","desktop","section","page","shell","colors","scrollbarSize","parms","GlobalStyle","createGlobalStyle","normalize","DIETS","VEGAN","abbreviation","color","VEGETARIAN","FESTIVALS","AREA_10_NYE","BESTIVAL","festival","BRIGHTON_PRIDE","CHINGFEST","DECAYDANCE","DEFECTED_BRISTOL","FABRIC_NYE","GLASTONBURY","HOMOBLOC","KALEIDOSCOPE","LOVEBOX","MAD_COOL","MANCHESTER_PRIDE","MIGHTY_HOOPLA","NOTION_SUMMER_PARTY","ON_THE_RUN_II","PARKLIFE","TRANSMISSION","TRIBAL_SESSIONS","V_FESTIVAL","WAREHOUSE_PROJECT","FRIENDS","CFS","initials","JHC","AISHA","ALEX_FAYE","ALICE_R","AMY_B","AMY_C","ANNIE_B","ASH","BECKY","BETH_O","BETH_SH","BETH_SP","BLAINE","CAITY","CAITLIN","gigs","travel","CARMEN","CAMERON","CHELSEA","CHLOE","CHRISTELLE","COBY_B","COURTNEY","DAD","theatre","DARREN","DAN","DOM","ELLE_O","ELINORE_G","ELISE","ELLIE_F","ELLIE_G","ELLIE_P","ELLIE_S","EMMA","FANNY","GEMMA","GEORGE","GRACE","HANNA","HARRIET_B","HARRIET_K","HEATHER_C","JAIMINI","JAMIE","JAZZ","JERRY","JOE","JESS","JUNAID","KATE_B","KIERAN_S","KIRSTEN","KYLE","LAURA","LEAH","LEWIS","LINDSAY_A","LINDSEY_S","LOUISE","LUKE_J","LUKE_S","MARIA","MEGAN","MUM","NATALIE","NAV","OSCAR","PATRICIA","POOJA","POPPY","ROB_G","RYAN","SAM_B","SARAH_WA","SARAH_W","SIAN","SIMAN","SONYA","STEVE_R","THOM","TOM","TONYA","KEY_WEST","LOCATIONS","BARBADOS","island","attractions","HARRISONS_CAVE","BELGIUM","cities","BRUGES","YPRES","BATTLEFIELDS","BELFRY_OF_BRUGES","BRAZIL","RIO_DE_JANEIRO","MODERN_ART_MUSEUM_RIO","foreignName","COPACABANA_BEACH","ROCINHA_FAVELA","CHRIST_THE_REDEEMER","SELARON_STEPS","HANG_GLIDING","highlight","PICO_DO_PAPAGAIO","englishName","islands","ILHA_GRANDE","CANADA","NIAGARA_FALLS","CROATIA","DUBROVNIK","DUBROVNIK_CABLE_CAR","DUBROVNIK_WALLS","CUBA","HAVANA","capital","towns","VARADERO","CYPRUS","PAPHOS","PAPHOS_ARCHAEOLOGICAL_PARK","CZECH_REPUBLIC","PRAGUE","JOHN_LENNON_WALL","VYSEHRAD","DENMARK","COPENHAGEN","LOUISIANA_ART_MUSEUM","ECUADOR","BANOS","GUAYAQUIL","OTAVALO","QUITO","EQUATOR_MONUMENT","OTAVALO_MARKET","TORTOISE_PARK","PAILON_DEL_DIABLO","COTOPAXI","GALAPAGOS","EGYPT","CAIRO","SHARM_EL_SHEIKH","GIZA_PYRAMIDS_SPHINX","FRANCE","MONACO","NICE","PARIS","SACRE_COEUR","LOUVRE","ARC_DE_TRIOMPHE","AIR_SPACE_MUSEUM","SCIENCE_MUSEUM","EIFFEL_TOWER","NOTRE_DAME","DISNEYLAND_PARIS","themePark","PARC_ASTERIX","GERMANY","BERLIN","REICHSTAG","HOLOCAUST_MEMORIAL","BRANDENBURG_GATE","BERLIN_WALL","EAST_SIDE_GALLERY","GREECE","KOS","regions","HALKIDIKI","HUNGARY","BUDAPEST","PARLIAMENT_BUILDING","THERMAL_BATH_SZECHENYI","CITADELLA","IRELAND","ST_STEPHENS_GREEN_PARK","DUBLIN_PRISON","GUINNESS_STOREHOUSE","DUBLIN","ITALY","SICILY","NAPLES","MILAN","ROME","VATICAN","CATANIA","VENICE","POMPEII","JESOLO","SORRENTO","ARCO_DELLA_PACE","SEMPIONE_PARK","MILAN_MALL","COLOSSEUM","TREVI_FOUNTAIN","VESUVIUS","ETNA","LAOS","LUANG_PRABANG","VIENTIANE","KUANG_SI_FALLS","ELEPHANT_VILLAGE","BUDDHA_PARK","NETHERLANDS","AMSTERDAM","GRONINGEN","STEDELIJK_MUSEUM","SEX_MUSEUM","GRONINGEN_MUSEUM","NORWAY","OSLO","HOVEDOYA","PERU","AREQUIPA","CUSCO","LIMA","HUARAZ","COLCA_CANYON","LAGUNA_69","JUNGLE_ZIPLINE","MACHU_PICCHU","HUACACHINA","HUASCARAN_PARK","MANU","RAINBOW_MOUNTAIN","MANCORA","PARACAS","villages","POLAND","KRAKOW","AUSCHWITZ_BIRKENAU","WIELICZKA_SALT_MINE","WIELICZKA","PORTUGAL","LISBON","PORTIMAO","ZOOMARINE","OCENARIO_DE_LISBOA","FERRAGUDO","TAVIRA","VILAMOURA","SPAIN","BARCELONA","MADRID","CIUTADELLA_PARK","PARK_GUELL","PARQUE_WARNER","SIAM_PARK","PORTAVENTURA","TENERIFE","IBIZA","MINORCA","LANZAROTE","THAILAND","BANGKOK","CHIANG_MAI","CHIANG_RAI","KOH_PHI_PHI","KOH_PHANGAN","KOH_TAO","WHITE_TEMPLE","MAYA_BAY","PAI_CANYON","TIGER_KINGDOM","GRAND_PALACE","SKY_BAR","KRABI","PAI","UGANDA","JINJA","RAFTING_NALUBALE","NILE_SOURCE","UAE","DUBAI","AQUAVENTURE","BURJ_KHALIFA","UK","insignificant","ALTON_TOWERS","BLACKPOOL_PLEASURE_BEACH","WINTER_WONDERLAND","THORPE_PARK","EDEN_PROJECT","TATE_BRITAIN","LONDON_EYE","RICHMOND_PARK","SHERWOOD_FOREST","CALKE_ABBEY","BATTERSEA_PARK","CRYSTAL_PALACE_PARK","QUEEN_ELIZABETH_OLYMPIC_PARK","VICTORIA_PARK","GREENWICH_PARK","KEW_GARDENS","EPPING_FOREST","HAMPSTEAD_HEATH","V_A_MUSEUM","TATE_MODERN","NATURAL_HISTORY_MUSEUM","LAKE_DISTRICT","HADRIANS_WALL","ANGLESEY","BATH","BLACKPOOL","BRIGHTON","BRISTOL","BIRMINGHAM","CAMBRIDGE","COVENTRY","DERBY","HULL","LEEDS","LEICESTER","LINCOLN","LONDON","LIVERPOOL","MANCHESTER","NEWCASTLE","NORWICH","NOTTINGHAM","OXFORD","SHEFFIELD","WOLVERHAMPTON","YORK","CORNWALL","DONCASTER","HARROGATE","ILKLEY","MILTON_KEYNES","STRATFORD","MANSFIELD","NEWARK","NEWQUAY","PADSTOW","TENBY","SCARBOROUGH","USA","ALCATRAZ_PRISON","FISHERMANS_WHARF","FARMERS_MARKET","HOLLYWOOD_WALK_OF_FAME","WHITE_HOUSE","CAPITOL_BUILDING","WASHINGTON_MONUMENT","LINCOLN_MEMORIAL","TIMES_SQUARE","BROOKLYN_BRIDGE","WORLD_TRADE_CENTER","GOLDEN_GATE_BRIDGE","CENTRAL_PARK","VENICE_BEACH","DISNEYLAND_CALIFORNIA_ADVENTURE","DISNEY_MGM_STUDIOS","DISNEY_ANIMAL_KINGDOM","DISNEY_EPCOT","WET_N_WILD_ORLANDO","BLIZZARD_BEACH","DISNEY_MAGIC_KINGDOM","UNIVERSAL_STUDIOS_FLORIDA","UNIVERSALS_ISLANDS_OF_ADVENTURE","GRAND_CANYON","KNOTTS_BERRY_FARM","SEAWORLD_ORLANDO","BUSCH_GARDENS_WILLIAMSBURG","BUSCH_GARDENS_TAMPA","SIX_FLAGS_AMERICA","SIX_FLAGS_MAGIC_MOUNTAIN","SIX_FLAGS_NEW_ENGLAND","BOSTON_MASSACHUSETTS","LAS_VEGAS","VIRGINIA_BEACH","LOS_ANGELES","NEW_YORK_CITY","SAN_FRANCISCO","SPRINGFIELD_MASSACHUSETTS","WASHINGTON_DC","ALCATRAZ","MARTHAS_VINEYARD","CAPE_COD","FLORIDA_KEYS","ISLAMORADA","states","FLORIDA","NEW_YORK","MASSACHUSETTS","VIRGINIA","SAINSBURYS_SEASONING_COST","quantity","measurement","price","MEASUREMENTS","MUSICIANS","AURORA","THE_ACADEMY_IS","ALESSIA_CARA","ALEX_CHAPMAN","ALL_AMERICAN_REJECTS","ALLIE_X","ALL_TIME_LOW","ALMA","AMOS_LEE","ANNA_OF_THE_NORTH","ADELE","ANASTACIA","ANNE_MARIE","AQUILO","ARCTIC_MONKEYS","ARIANA_GRANDA","AUDITION","BAAUER","BANANARAMA","BANKS","BASTILLE","BAYNK","BEARS_DEN","BECKY_HILL","BEN_HOWARD","BETSY","BETTY_WHO","BEYONCE","BICEP","BILLIE_EILISH","BLACK_KIDS","B_O_B","BONDAX","BON_IVER","BONTAN","BORNS","BOYS_LIKE_GIRLS","BLONDE","BREACH","BRIGITTE_APHRODITE","BRITNEY_SPEARS","BROODS","BULOW","CAMILA_CABELLO","CARIBOU","CARLY_RAE_JEPSEN","CARL_COX","CAROLINE_POLACHEK","CELESTE","CHARLI_ADAMS","CHARLI_XCX","CHARLOTTE_CHURCH","CHELSEA_CUTLER","CHEMICAL_BROTHERS","CHERYL","CHRISTINE_AND_THE_QUEENS","CHRVCHES","CLAIRO","CLEAN_BANDIT","COBRA_STARSHIP","CODE","CRUEL_YOUTH","CUTE_IS_WHAT_WE_AIM_FOR","CYRIL_HAHN","DANIEL_AVERY","DAUGHTER","DAVID_RODIGAN","DIPLO","DISCLOSURE","DIZZEE_RASCAL","DRUMS","DUKE_DUMONT","DUA_LIPA","DUSKY","DYLAN","EARTHEATER","EATS_EVERYTHING","ELDERBROOK","ELIZA_DOOLITTLE","ELLA_EYRE","ELLIE_GOULDING","EMAROSA","FALL_OUT_BOY","FKA_TWIGS","FLEETWOOD_MAC","FLIGHT_FACILITIES","FLORENCE_AND_THE_MACHINE","FOREVER_THE_SICKEST_KIDS","FOURS","FOUR_TET","FOXES","FRANCES","FRANCIS_AND_THE_LIGHTS","FRANK_OCEAN","FREYA_RIDINGS","THE_FRIDAY_NIGHT_BOYS","FRIEND_WITHIN","FUN_LOVIN_CRIMINALS","GABRIELLE","GEORGE_EZRA","GEORGE_FITZGERALD","GEORGIA","G_FLIP","GLOWIE","GORGON_CITY","GRACEY","GREEN_VELVET","GRIMES","GROOVE_ARMADA","GRYFFIN","GYM_CLASS_HEROES","HAIM","HALSEY","HANNAH_WANTS","HAUX","HEIDI","HEY_MONDAY","HOLLY_HUMBERSTONE","HORSE_MEAT_DISCO","INCOGNITO","JAMES_BAY","JAMES_BLAKE","JAMIE_JONES","JAMIE_T","JAMIE_XX","JAX_JONES","JAY_Z","JEREMY_ZUCKER","JESS_GLYNNE","JESSIE_WARE","JOE_GODDARD","JOHNNY_MARR","JONAS_BLUE","JONES","JON_HOPKINS","JORIS_VOORN","JORJA_SMITH","JOSH_BUTLER","JOY_ORBISON","JOSEF_SALVAT","JULIA_MICHAELS","JULIO_BASHMORE","JUSTIN_BIEBER","JUSTIN_MARTIN","KAH_LO","KANYE_WEST","KATE_NASH","KATY_PERRY","KAYTRANADA","KESHA","KIASMOS","KIDNAP","KIDS_IN_GLASS_HOUSES","THE_KILLERS","KIM_PETRAS","KOLSCH","KYGO","LADY_GAGA","LADY_STARLIGHT","LANA_DEL_REY","LANE_8","LANY","LA_ROUX","LAUV","L_DEVINE","LELAND","LENNON_STELLA","LEON","LILY_ALLEN","LISSIE","LITTLE_COMETS","LITTLE_DRAGON","LONDON_GRAMMAR","LORDE","LUCY_ROSE","LYKKE_LI","LYVES","MACEO_PLEX","MALLRAT","MAGGIE_ROGERS","THE_MAINE","MAJOR_LAZER","MARY_J_BLIGE","MARINA","MARTIN_SOLVEIG","MELANIE_MARTINEZ","METRO_STATION","MICHAEL_KIWANUKA","MIDLAND","MIGUEL","MIKE_POSNER","MILEY_CYRUS","MISHA_B","M_0","MK","MNEK","MO","MUNA","MURA_MASA","NAAZ","NAO","NASTY_CHERRY","NATASHA_BEDINGFIELD","NAVVY","NICKI_MINAJ","NOEL_GALLAGHERS_HIGH_FLYING_BIRDS","OH_ANNIE_OH","OKAYWILL","PALE_WAVES","PALOMA_FAITH","PANIC_AT_THE_DISCO","PARAMORE","PAUL_WOOLFORD","PET_SHOP_BOYS","PHILIP_GEORGE","PRETENDERS","PVRIS","RAINBOW_KITTEN_SURPRISE","RALEIGH_RITCHIE","RALPH","REDLIGHT","RIHANNA","RINA_SAWAYAMA","RITON","RIXTON","ROBINSON","ROBYN","ROMY","ROOSEVELT","ROUTE_94","RYN_WEAVER","RUDIMENTAL","RUFUS_DU_SOL","RYAN_BEATTY","SABRINA_CLAUDIO","SAINT_JHN","SAM_SMITH","SASHA_SLOAN","SBTRKT","SEEB","SEGA_BODEGA","SEINABO_SEY","SEVDALIZA","SIA","SIGRID","SISTER_SLEDGE","SKY_FERREIRA","SLIIMY","SOFI_TUKKER","SOAK","SONIKKU","SOPHIE","SOPHIE_ELLIS_BEXTOR","SOUL_WAX","THE_SMYTHS","THE_SPILL_CANVAS","SKREAM","SUNDAY_GIRL","TAYLOR_SWIFT","TENSNAKE","TEN_WALLS","TERROR_JR","TOM_ODELL","TORI_KELLY","TOURIST","TOVE_LO","TROYE_SIVAN","TULISA","TWENTY_ONE_PILOTS","TWO_FEET","TYGA","VERITE","WE_THE_KINGS","WILL_YOUNG","THE_XX","YEARS_AND_YEARS","YOU_ME_AT_SIX","YOUSEF","ZARA_LARSSON","MUSIC_VENUES","ALEXANDRA_PALACE","ALEXANDRA_PALACE_THEATRE","BRIXTON_ACADEMY","BROCKWELL_PARK","CAMDEN_ASSEMBLY","CORSICA_STUDIOS","COURTYARD_THEATRE","DINGWALLS","THE_GARAGE","EARTH","EGG","ELECTRIC_BRIXTON","ELECTROWERKZ","FABRIC","FINSBURY_PARK","HAMMERSMITH_APOLLO","HEAVEN","HOXTON_HALL","HOXTON_SQUARE_BAR_AND_KITCHEN","ISLINGTON_ASSEMBLY_HALL","KENTISH_TOWN_FORUM","KOKO","LAFAYETTE","LAYLOW","LONDON_STADIUM","MINISTRY_OF_SOUND","MOTH_CLUB","OLD_BLUE_LAST","OMEARA","OSLO_HACKNEY","OVAL_SPACE","THE_O2","PRINTWORKS","QUEEN_OF_HOXTON","RIDGEWAY_PARK","ROUNDHOUSE","ROYAL_ALBERT_HALL","ROYAL_FESTIVAL_HALL","SCALA","SERVANT_JAZZ_QUARTERS","SHEPHERDS_BUSH_EMPIRE","ST_GILES_IN_THE_FIELD","TOTTENHAM_HOTSPUR_STADIUM","TWICKENHAM_STADIUM","TROXY","VILLAGE_UNDERGROUND","WEMBLEY_STADIUM","XOYO","ZIGFRID_VON_UNDERBELLY","ACADEMY_MANCHESTER","ACADEMY_2_MANCHESTER","ALBERT_HALL_MANCHESTER","APOLLO_MANCHESTER","ARENA_MANCHESTER","CASTLEFIELD_BOWL","DEAF_INSTITUTE","GORILLA","HEATON_PARK","MAYFIELD_DEPOT","RITZ_MANCHESTER","RUBY_LOUNGE","SANKEYS","STORE_STREET","BODEGA","ARENA_NOTTINGHAM","RESCUE_ROOMS","ROCK_CITY","TRENT_UNIVERSITY_NOTTINGHAM","ACADEMY_BIRMINGHAM","ACADEMY_2_BIRMINGHAM","ALEXANDRA_THEATRE","BARFLY_BIRMINGHAM","INSTITUTE_BIRMINGHAM","NEC_ARENA_BIRMINGHAM","NIA_ARENA_BIRMINGHAM","COCKPIT_LEEDS","DE_MONTFORT_HALL","ENGINE_SHED","IFEMA_MADRID","LULWORTH_ESTATE","MOTION","PRESTON_PARK","SCHWUZ","SHEFFIELD_ARENA","TRESOR","WESTON_PARK","WOLVERHAMPTON_CIVIC_HALL","WORTHY_FARM","FLOUR","CORNFLOUR","displayText","cost","FLOUR_PLAIN","FLOUR_SELF_RAISING","SUGAR","SUGAR_BROWN","SUGAR_BROWN_DARK","SUGAR_BROWN_LIGHT","SUGAR_CASTER_GOLDEN","SUGAR_DEMERARA","SUGAR_GRANULATED","SUGAR_ICING","SYRUPS","LEMON_EXTRACT","NECTAR_AGAVE","SYRUP_GOLDEN","VANILLA_EXTRACT","BAKING","BAKING_POWDER","BICARBONATE_OF_SODA","CHOCOLATE_DARK","COCOA_POWDER","PASTA","SPAGHETTI","PASTA_LASAGNE_SHEET_DRIED","RICE","RICE_BASMATI","RICE_BROWN","RICE_RISOTTO_ARBORIO","GRAINS","OATS","CARBS","BREAD_GARLIC","BREAD_SOURDOUGH","BREAD_SOURDOUGH_DARK","POPPADOMS","MILK","MILK_COCONUT_CANNED","MILK_ALMOND_UNSWEETENED","MILK_OAT","DAIRY","BUTTER_VEGAN","CREAM_OAT","CHEESE_VEGAN_SLICE","FRUIT_DRIED","APRICOTS_DRIED","BLUEBERRIES_DRIED","CRANBERRIES_DRIED","RAISINS","FRUIT_FRESH","APPLE_BRAMLEY","BANANA","BLACKBERRIES_FRESH","BLUEBERRIES_FRESH","LEMON","LEMON_LARGE","LIME","PINEAPPLE","RASPBERRIES_FRESH","FRUIT_FROZEN","BLACKBERRIES_FROZEN","RASPBERRIES_FROZEN","JUICE","LEMON_JUICE","LEMON_JUICE_FRESH","LIME_JUICE_FRESH","FRUIT","HERBS_DRIED","BASIL_DRIED","HERBS_MIXED_DRIED","OREGANO_DRIED","ROSEMARY_DRIED","THYME_DRIED","HERBS_FRESH","BASIL_FRESH","payFullAmountAlways","CORIANDER_FRESH","PARSLEY_FRESH","SAGE_FRESH","HERBS","BEANS","BEANS_BAKED","BEANS_HARICOT","BEANS_KIDNEY","SEITAN","GLUTEN_WHEAT_VITAL","PROTEIN","CHICKPEAS","EGGS","LENTIL_RED_DRY","TOFU","DRIED_SEASONING","PAPRIKA","ONION_POWDER","GARLIC_GRANULES","PAPRIKA_SMOKED","TURMERIC_GROUND","ALLSPICE_GROUND","CHILLI_POWDER","CINNAMON_GROUND","CHILLI_CRUSHED_DRIED","NUTMEG_GROUND","YEAST_NUTRITIONAL","STOCK_POWDER_VEGAN","OILS","OIL_OLIVE","OIL_SUNFLOWER","UNICODE","PASTES","CURRY_PASTE_MADRAS","CURRY_PASTE_ROGAN_JOSH","TOMATO_PUREE","SALT","SALT_BLACK","SALT_TABLE","SALT_ROCK_FRESH","SAUCES","LIQUID_SMOKE","SOY_SAUCE","KETCHUP_TOMATO","SRIRACHA","SWEET_CHILLI_SAUCE","VINEGARS","VINEGAR_BALSAMIC","VINEGAR_CIDER","VINEGAR_WHITE_WINE","SEASONING","PEPPER_BLACK_FRESH","PEPPER_BLACK_GROUND","WINE_RED","CHILLI_RED_FRESH","CHILLI_BIRD_EYE_FRESH","GINGER_FRESH","NUTMEG_FRESH","NUTS","NUTS_CASHEWS","NUTS_PINE","SEEDS","SEEDS_CHIA","SEEDS_POPPY","SEEDS_FLAX_GROUND","SEEDS_PUMPKIN","SEEDS_SESAME","SEEDS_SUNFLOWER","NUTS_AND_SEEDS","VEG_CANNED","TOMATO_CHOPPED","TOMATO_PASSATA","TOMATO_SUN_DRIED","VEG_FRESH","ASPARAGUS","AUBERGINE","BEANS_GREEN","BROCCOLI","BUTTERNUT_SQUASH","CARROT","CAULIFLOWER_REGULAR","CELERY_STICK","COURGETTE","GARLIC_CLOVE","KALE","LEEK","MUSHROOMS","MUSHROOMS_CHESTNUT","ONION_WHITE_MEDIUM","ONION_RED_MEDIUM","ONION_SPRING","PEPPER_RED","PEPPER_GREEN","PEPPER_ORANGE","PEPPER_MIXED","POTATO_MARIS_PIPER","POTATO_BAKING","POTATO_SWEET","SPINACH","VEG_FROZEN","PETITS_POIS_FROZEN","VEGETABLES_MIXED_FROZEN","VEG","INGREDIENTS","WATER","WATER_BOILING","PAGE_SECTION_TYPES","EVENT_CARD_TYPES","PAGE_SECTIONS","ACTOR","type","ATTRACTION","BUCKET_LIST","COUNTRY","FESTIVAL","FRIEND","ISLAND","HIGHLIGHT","MUSICIAN","REGION","PLAY","THEATRE_VENUES","THEME_PARK","TOWN","UP_NEXT","RECIPES_COMING_SOON","PLAYS","AFTERGLOW","CONSENT","DUST","EVERYBODYS_TALKING_ABOUT_JAMIE","FERRYMAN","FROZEN","HOME_IM_DARLING","INHERITANCE","KINKY_BOOTS","LEAVE_TO_REMAIN","LOST_UNFOUND","LUNGS","MATILDA","MIDSUMMER_NIGHTS_DREAM","SON","THAT_GIRL","UGLY_LIES_THE_BONE","UNCLE_VANYA","WAITRESS","WICKED","YOUNG_MARX","ADELPHI","APOLLO","APOLLO_VICTORIA","BRIDGE","DUKE_OF_YORKS","GIELGUD","HAROLD_PINTER","LYRIC","NATIONAL","NOEL_COWARD","OLD_RED_LION","OLD_VIC","PLAYHOUSE","ROYAL_HAYMARKET","TRAFALGAR_STUDIOS","WATERLOO_EAST","WHITE_BEAR","ROYAL_SHAKESPEARE","TICKET_TYPES","DAYS_OF_THE_WEEK","MONTHS","numberToCurrencyString","number","decimalPrecision","Math","round","toFixed","concatenateQuantityAndMeasurement","displayQuantity","parseInt","calculateIngredientCost","ingredient","ingredientQuantity","ingredientMeasurement","inventory","inventoryQuantity","inventoryMeasurement","inventoryPrice","alert","convertIngredientQuantity","turnTheSuffixIntoPrefix","word","slice","substring","length","formatData","inputData","Array","isArray","array","item","outputString","i","isInFuture","dates","valueOf","today","Date","setDate","getDate","yesterday","getPageSectionItemCounts","itemToCount","pageSectionTitle","data","pastCount","futureCount","dataItem","params","itemToMatch","headline","support","includes","lineup","musicianMatchExists","festivalMatchExists","company","friendMatchExists","venue","musicVenueMatchExists","play","playMatchExists","theatreVenueMatchExists","hidden","subtitle","countryCityTownMatchExists","cast","actorMatchExists","itemIsFavourited","itemToInspect","favouritedData","calculateRecipeCost","ingredients","yieldQuantity","recipeTitle","runningRecipeCost","ingredientSection","recipeIngredient","unitCost","displayCost","displayUnitCost","generateChildItemsFromParentItems","childItems","parentItems","parentFlag","parentObject","values","concat","apply","filter","generateIngredientListItem","optional","notes","ingredientText","decimal","toString","convertDecimalToFraction","displayIngredient","displayQuantityMeasurementIngredients","generateSectionData","items","allData","upcomingMode","bucketListMode","sort","a","b","toLowerCase","localeCompare","listEntry","ignoreCountInfo","star","mapToListEntry","mapDataToEventCards","eventType","ticketType","disclaimer","mapDataToEventCard","mapYearGroupsToSections","years","year","getFullYear","details","showSectionLength","mapYearGroupToSection","recipeMethodEntries","FOLD_IN_FLOUR_MIX","LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN","MAKE_FLAX_EGG","bakeForAbout","minutes","skewer","wellRisen","defaultText","additionalText","preheatOven","degreesCelcius","bakingTray","ovenTemperature","transferToLoafTin","sunkenCentre","GIGS_2006","GIGS_2007","GIGS_2008","GIGS_2009","GIGS_2010","GIGS_2011","GIGS_2012","GIGS_2013","GIGS_2014","GIGS_2015","GIGS_2016","GIGS_2017","GIGS_2018","GIGS_2019","GIGS_2020","GIGS_2021","ALL","ALL_GROUPED_BY_YEAR","FAVOURITES","generateSectionDataWrapper","UPCOMING","DATA_GIGS","VENUES","serveWith","method","makes","diet","hide","RISOTTO","SWEET_AND_SOUR","MAINS","category","PESTO","BANG_BANG_CAULIFLOWER","CRISPY_KALE","SIDES","BLUEBERRY_PANCAKES","COOKIES","LEMON_DRIZZLE","DATA_RECIPES","CATEGORISED","COMING_SOON","THEATRE_2016","THEATRE_2017","THEATRE_2018","THEATRE_2019","THEATRE_2020","DATA_THEATRE","TRAVEL_1997","TRAVEL_1998","TRAVEL_1999","TRAVEL_2000","TRAVEL_2001","TRAVEL_2002","TRAVEL_2003","TRAVEL_2004","TRAVEL_2005","notAbroad","TRAVEL_2006","TRAVEL_2007","TRAVEL_2008","TRAVEL_2009","TRAVEL_2010","TRAVEL_2011","TRAVEL_2012","TRAVEL_2013","TRAVEL_2014","TRAVEL_2015","TRAVEL_2016","TRAVEL_2017","TRAVEL_2018","TRAVEL_2019","TRAVEL_2020","countries","themeParks","highlights","DATA_TRAVEL","CITIES","TOWNS","ATTRACTIONS","THEME_PARKS","HIGLIGHTS","ISLANDS","COUNTRIES","statsSections","leaderboard","yearSections","PAGE_DATA_GIGS","sections","mapTheatreVisitToEventCards","PAGE_DATA_THEATRE","recipeGroupSections","expandedAutomatically","maprecipeGroupToSection","comingSoonSection","PAGE_DATA_RECIPES","mapTripToEventCards","PAGE_DATA","GIGS","RECIPES","HOMEPAGE_ROUTE","PAGE_ROUTES","dest","pageData","FlexContainer","div","GridContainer","StyledSvg","img","theme","iconSizeDesktop","iconSizePhone","iconSizePadding","css","HomePage","index","key","to","src","Circle","fontSize","invert","FlexRow","FlexColumn","ZERO_MARGIN_AND_PADDING","Headers","H1","h1","H2","h2","H3","h3","Ul","ul","Li","li","StyledImage","props","SvgIcon","className","data-test","P","p","P_M","P_S","P_XS","Span_M","span","Span_S","Text","M","S","XS","Span","SM","Title","Subtitle","Body","Dates","ItalicFlexRow","Disclaimer","Countdown","EventCard","daysTilGig","secondsInADay","dateDifference","floor","daysToGo","stringifyDate","date","weekday","getDay","day","month","getMonth","getDisplayDateText","getCountdownText","Container","SectionCount","SectionSubcount","TextContainer","StyledIcon","PageSectionHeader","text","showCounts","dataTest","starredDataCount","useContext","ThemeContext","CentredOnPhone","CostPerPortionContainer","BoldSpan","RecipeCardCost","StyledH3","RecipeCardHeader","IngredientSection","RecipeCardIngredients","ingredientsAreSeparated","ingredientsHeader","defaultIngredientsHeader","quantitySpaceMeasurement","quantityAndMeasurement","concatenateMakesWithDefaultIngredientsHeader","subIndex","RecipeCardMethod","RecipeCardImage","imageSource","RecipeCardServeWith","serveWithItems","stringList","getServeWithListItem","ChildrenContainer","bodyHeight","ClickableRegion","VisibilityToggle","onlyHeaderClickable","headerComponent","children","React","useState","childIsVisible","switchChildVisibility","childrenContainerHeight","setChildrenContainerHeight","hiddenPanel","getChildrenContainerClass","ref","element","getBoundingClientRect","height","onClick","RecipeBody","RecipeCard","newRecipe","ListEntry","faded","PastCount","FutureCount","CountedListItem","showFutureCount","showPastCount","PageSectionContainer","SectionBody","isEventCards","RecipeGroupBody","PageSection","isRecipes","isCountedList","TitleTextContainer","PaddedFlexRow","pageTitleMarginBottom","SvgContainer","PageTitle","titleText","StyledPageShell","PageShell","SectionsContainer","Page","App","route","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.751718c7.chunk.js","sourcesContent":["var map = {\n\t\"./artist.svg\": 38,\n\t\"./book.svg\": 39,\n\t\"./brain.svg\": 40,\n\t\"./cake.svg\": 41,\n\t\"./camera.svg\": 42,\n\t\"./city.svg\": 43,\n\t\"./cloche.svg\": 44,\n\t\"./flag.svg\": 45,\n\t\"./heart.svg\": 46,\n\t\"./loading.svg\": 47,\n\t\"./map_pin.svg\": 48,\n\t\"./masks.svg\": 49,\n\t\"./microphone.svg\": 50,\n\t\"./notepad.svg\": 51,\n\t\"./palm_tree.svg\": 52,\n\t\"./peace_sign.svg\": 53,\n\t\"./people.svg\": 54,\n\t\"./roller_coaster.svg\": 55,\n\t\"./stadium.svg\": 56,\n\t\"./stars.svg\": 57,\n\t\"./tent.svg\": 58,\n\t\"./theatre.svg\": 59,\n\t\"./toast.svg\": 60,\n\t\"./town_hall.svg\": 61,\n\t\"./travel.svg\": 62,\n\t\"./veg_bowl.svg\": 63\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 37;","module.exports = __webpack_public_path__ + \"static/media/artist.7b2f9742.svg\";","module.exports = __webpack_public_path__ + \"static/media/book.76291941.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.09b4a667.svg\";","module.exports = __webpack_public_path__ + \"static/media/cake.fd8c22a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.90fcc14d.svg\";","module.exports = __webpack_public_path__ + \"static/media/city.c6cfa7a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloche.0db1256b.svg\";","module.exports = __webpack_public_path__ + \"static/media/flag.b4a08446.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.50bdf1aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.f1b12302.svg\";","module.exports = __webpack_public_path__ + \"static/media/map_pin.71135c81.svg\";","module.exports = __webpack_public_path__ + \"static/media/masks.d8da85e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/microphone.45f98fc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/notepad.4eca818e.svg\";","module.exports = __webpack_public_path__ + \"static/media/palm_tree.4f07f732.svg\";","module.exports = __webpack_public_path__ + \"static/media/peace_sign.05525562.svg\";","module.exports = __webpack_public_path__ + \"static/media/people.af13270c.svg\";","module.exports = __webpack_public_path__ + \"static/media/roller_coaster.6bcd9568.svg\";","module.exports = __webpack_public_path__ + \"static/media/stadium.5bff58bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/stars.86e33730.svg\";","module.exports = __webpack_public_path__ + \"static/media/tent.2c2dd363.svg\";","module.exports = __webpack_public_path__ + \"static/media/theatre.e5eaee16.svg\";","module.exports = __webpack_public_path__ + \"static/media/toast.df12ac4b.svg\";","module.exports = __webpack_public_path__ + \"static/media/town_hall.c00cc7ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/travel.d9baea5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/veg_bowl.ee16e10a.svg\";","var map = {\n\t\"./baked_beans.jpg\": 65,\n\t\"./banana_cake.jpg\": 66,\n\t\"./bolognese.jpg\": 67,\n\t\"./brownies.jpg\": 68,\n\t\"./carbonara.jpg\": 69,\n\t\"./crumble.jpg\": 70,\n\t\"./flapjacks.jpg\": 71,\n\t\"./kale_crispy.jpg\": 72,\n\t\"./lasagne.jpg\": 73,\n\t\"./mashed_potato.jpg\": 74,\n\t\"./piri_piri.jpg\": 75,\n\t\"./ratatouille.jpg\": 76,\n\t\"./rogan_josh.jpg\": 77,\n\t\"./shepherds_pie.jpg\": 78\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 64;","module.exports = __webpack_public_path__ + \"static/media/baked_beans.b17978e3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banana_cake.ae9fd9b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bolognese.b9573028.jpg\";","module.exports = __webpack_public_path__ + \"static/media/brownies.84692604.jpg\";","module.exports = __webpack_public_path__ + \"static/media/carbonara.9848608a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crumble.263fe8b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flapjacks.0d5f26e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kale_crispy.b5419d7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lasagne.8d8fb594.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mashed_potato.5c438d68.jpg\";","module.exports = __webpack_public_path__ + \"static/media/piri_piri.42719ce5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ratatouille.971440f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rogan_josh.904346f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shepherds_pie.d49c0165.jpg\";","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledLink = styled(Link)`\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  text-decoration: none;\n`;\n","const requireSvg = (icon: string): IImageSrc => require(`./svg/${icon}.svg`);\nconst requireJpg = (photo: string): IImageSrc => require(`./jpg/${photo}.jpg`);\n\nexport const ICONS: IconsObject = {\n  // A\n  ARTIST: requireSvg(\"artist\"),\n  // B\n  BOOK: requireSvg(\"book\"),\n  BRAIN: requireSvg(\"brain\"),\n  // C\n  CAKE: requireSvg(\"cake\"),\n  CAMERA: requireSvg(\"camera\"),\n  CITY: requireSvg(\"city\"),\n  CLOCHE: requireSvg(\"cloche\"),\n  // F\n  FLAG: requireSvg(\"flag\"),\n  // H\n  HEART: requireSvg(\"heart\"),\n  // M\n  MAP_PIN: requireSvg(\"map_pin\"),\n  MASKS: requireSvg(\"masks\"),\n  MICROPHONE: requireSvg(\"microphone\"),\n  // N\n  NOTEPAD: requireSvg(\"notepad\"),\n  // P\n  PALM_TREE: requireSvg(\"palm_tree\"),\n  PEACE_SIGN: requireSvg(\"peace_sign\"),\n  PEOPLE: requireSvg(\"people\"),\n  // R\n  ROLLER_COASTER: requireSvg(\"roller_coaster\"),\n  // S\n  STADIUM: requireSvg(\"stadium\"),\n  STARS: requireSvg(\"stars\"),\n  // T\n  TENT: requireSvg(\"tent\"),\n  THEATRE: requireSvg(\"theatre\"),\n  TOAST: requireSvg(\"toast\"),\n  TOWN_HALL: requireSvg(\"town_hall\"),\n  TRAVEL: requireSvg(\"travel\"),\n  // V\n  VEG_BOWL: requireSvg(\"veg_bowl\")\n};\n\nexport const PHOTOS: PhotosObject = {\n  // B\n  BAKED_BEANS: requireJpg(\"baked_beans\"),\n  BANANA_CAKE: requireJpg(\"banana_cake\"),\n  BOLOGNESE: requireJpg(\"bolognese\"),\n  BROWNIES: requireJpg(\"brownies\"),\n  // C\n  CARBONARA: requireJpg(\"carbonara\"),\n  CRUMBLE: requireJpg(\"crumble\"),\n  // F\n  FLAPJACKS: requireJpg(\"flapjacks\"),\n  // K\n  KALE_CRISPY: requireJpg(\"kale_crispy\"),\n  // L\n  LASAGNE: requireJpg(\"lasagne\"),\n  // M\n  MASHED_POTATO: requireJpg(\"mashed_potato\"),\n  // P\n  PIRI_PIRI: requireJpg(\"piri_piri\"),\n  // R\n  RATATOUILLE: requireJpg(\"ratatouille\"),\n  ROGAN_JOSH: requireJpg(\"rogan_josh\"),\n  // S\n  SHEPHERDS_PIE: requireJpg(\"shepherds_pie\")\n};\n","export const ACTORS: IActors = {\n  // A\n  ADAM_JAMES: { name: \"Adam James\" },\n  ADI_CHUGH: { name: \"Adi Chugh\" },\n  AIMEE_LOU_WOOD: { name: \"Aimee Lou Wood\" },\n  // B\n  BENJAMIN_ALUWIHARE: { name: \"Benjamin Aluwihare\" },\n  // C\n  CLAIRE_FOY: { name: \"Claire Foy\", favourite: true },\n  //\n  DAVID_MOORST: { name: \"David Moorst\" },\n  // G\n  GWENDOLINE_CHRISITE: { name: \"Gwendoline Christie\" },\n  // H\n  HAMMED_ANIMASHAUN: { name: \"Hammed Animashaun\" },\n  HATTY_JONES: { name: \"Hatty Jones\" },\n  // J\n  JASON_WATKINS: { name: \"Jason Watkins\" },\n  JOHN_MCCREA: { name: \"John McCrea\" },\n  // K\n  KATHERINE_PARKINSON: { name: \"Katherine Parkinson\", favourite: true },\n  // L\n  LAURIE_KYNASTON: { name: \"Laurie Kynaston\", favourite: true },\n  LEE_INGLEBY: { name: \"Lee Ingleby\" },\n  // M\n  MATT_SMITH: { name: \"Matt Smith\" },\n  MILLY_THOMAS: { name: \"Milly Thomas\" },\n  // N\n  NINA_SOSANYA: { name: \"Nina Sosanya\" },\n  // O\n  OLIVER_CHRIS: { name: \"Oliver Chris\" },\n  // P\n  PETER_MCPHERSON: { name: \"Peter McPherson\" },\n  // S\n  SARA_BAREILLES: { name: \"Sara Bareilles\" },\n  SIAN_CLIFFORD: { name: \"Sian Clifford\", favourite: true },\n  SURANNE_JONES: { name: \"Suranne Jones\", favourite: true },\n  // T\n  TIMOTHEE_CHALAMET: { name: \"Timothée Chalamet\", favourite: true }\n};\n","export const COLORS: IColors = {\n  gainsboro: \"gainsboro\",\n  darkGreen: \"darkGreen\",\n  green: \"green\",\n  amethystSmoke: \"#a186b0\",\n  baliHai: \"#86a3b0\",\n  gray: \"#808080\",\n  hillary: \"#b0a186\",\n  sprout: \"#b9d1a3\",\n  black: \"#000000\"\n};\n","export const FONT_SIZES: IFontSizes = {\n  XL: \"4.375rem\",\n  L: \"2rem\",\n  M: \"1.5rem\",\n  SM: \"1.25rem\",\n  S: \"1rem\",\n  XS: \"0.75rem\"\n};\n","import { rgba } from \"polished\";\n\nimport { COLORS } from \"./colors\";\n\nconst BORDER_BLACK_THIN: IBorder = `1px solid ${COLORS.black}`;\nconst BORDER_GRAY_THIN: IBorder = `1px solid ${COLORS.gray}`;\n\nconst HOME_PAGE_THEME: ITheme_Homepage = {\n  icon: { padding: \"1.5vmin\", size: { desktop: \"25vmin\", phone: \"42vmin\" } }\n};\n\nconst PAGE_THEME: ITheme_Page = {\n  count: { padding: \"12px 0 0 7px\" },\n  header: { margin: { bottom: \"30px\" } },\n  icon: { margin: { top: \"15px\" }, size: \"60px\" },\n  shell: { padding: \"25px 20px\" }\n};\n\nconst SECTION_THEME: ITheme_Section = {\n  body: {\n    basicList: {\n      border: { bottom: BORDER_GRAY_THIN },\n      count: { width: \"25px\" },\n      padding: { vertical: \"5px\" }\n    },\n    eventCardList: { padding: { vertical: \"10px\" } },\n    padding: { bottom: \"5px\" }\n  },\n  border: { bottom: BORDER_BLACK_THIN },\n  borderRadius: \"10px\",\n  boxShadow: `0 1px 2px ${rgba(COLORS.gray, 0.5)}`,\n  count: { margin: { left: \"5px\" } },\n  header: { padding: \"12px 0\" },\n  icon: { padding: { top: \"2px\" }, size: \"34px\" },\n  margin: { bottom: \"20px\" },\n  padding: { horizontal: \"12px\" }\n};\n\nconst RECIPES_THEME: ITheme_Recipes = {\n  border: { bottom: BORDER_GRAY_THIN },\n  image: { size: \"300px\" },\n  icon: { margin: { top: \"4px\" }, size: \"24px\" },\n  title: { padding: { vertical: \"15px\" } },\n  first: { padding: { top: \"10px\" } },\n  last: { padding: { bottom: \"20px\" } }\n};\n\nconst BREAKPOINTS: IBreakpoints = { phone: { maxWidth: \"480px\" } };\n\nexport const fontFamily: IFontFamily = \"-apple-system, Helvetica, sans-serif\";\nexport const scrollbarSize: IScrollbarSize = \"0.7rem\";\n\nexport const THEME: ITheme = {\n  animationDuration: 0.35,\n  fadedOpacity: 0.5,\n  circleBorder: BORDER_BLACK_THIN,\n  textColor: COLORS.black,\n\n  breakpoints: BREAKPOINTS,\n  recipe: RECIPES_THEME,\n  homePage: HOME_PAGE_THEME,\n  section: SECTION_THEME,\n  page: PAGE_THEME,\n\n  colors: COLORS,\n  scrollbarSize,\n  fontFamily\n};\n","import { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"polished\";\n\nimport { fontFamily, scrollbarSize } from \"./theme\";\n\nexport const GlobalStyle = createGlobalStyle`\n  ${normalize()}\n  \n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n  \n  ::-webkit-scrollbar {\n    width: ${scrollbarSize};\n    height: ${scrollbarSize};\n  }\n  \n  ::-webkit-scrollbar-track {\n    background: rgba(180, 178, 183, 0.3);\n    border: 1px solid rgba(180, 178, 183, 0.3);\n    border-radius: ${scrollbarSize};\n  }\n  \n  ::-webkit-scrollbar-thumb {\n    cursor: pointer;\n    background: rgba(0, 0, 0, 0.3);\n    border: 1px solid rgba(180, 178, 183, 0.3);\n    border-radius: ${scrollbarSize};\n  }\n  \n  ::-webkit-scrollbar-thumb:hover {\n    background: rgba(0, 0, 0, 0.5);\n    border-color: rgba(180, 178, 183, 0.5);\n  }\n  \n  ::-webkit-scrollbar-corner {\n    background-color: transparent;\n  }\n\n  body {\n    font-family: ${fontFamily};\n\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  \n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Old versions of Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none; /* Non-prefixed version, currently supported by Chrome, Opera and Firefox */\n  }\n  \n  body:before {\n    margin: 0;\n    content: \"\";\n    display: block;\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -10;\n    /* background: linear-gradient(white, lightGrey) no-repeat center center; */\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n  }\n  \n`;\n","import { EVENT_CARD_TYPES, PAGE_SECTIONS } from \"../constants\";\nimport { DATA_GIGS } from \"../data\";\nimport { ICONS } from \"../resources\";\nimport { mapDataToEventCards, mapYearGroupsToSections } from \"../utils/global\";\n\nconst eventType = EVENT_CARD_TYPES.GIG;\n\n//@ts-ignore\nconst mapGigsToEventCards = parms =>\n  mapDataToEventCards({ ...parms, eventType });\n\nconst { pastCount, futureCount } = DATA_GIGS;\n\nconst statsSections: Array<IPageSection> = [\n  {\n    details: PAGE_SECTIONS.MUSICIAN,\n    icon: ICONS.ARTIST,\n    data: DATA_GIGS.MUSICIANS,\n    showSectionLength: true\n  },\n  {\n    details: PAGE_SECTIONS.BUCKET_LIST,\n    icon: ICONS.STARS,\n    data: DATA_GIGS.BUCKET_LIST,\n    showSectionLength: true\n  },\n  {\n    details: PAGE_SECTIONS.FESTIVAL,\n    showSectionLength: true,\n    icon: ICONS.PEACE_SIGN,\n    data: DATA_GIGS.FESTIVALS\n  },\n  {\n    details: PAGE_SECTIONS.FRIEND,\n    icon: ICONS.PEOPLE,\n    showSectionLength: false,\n    data: DATA_GIGS.FRIENDS,\n    leaderboard: true\n  },\n  {\n    details: PAGE_SECTIONS.UP_NEXT,\n    icon: ICONS.NOTEPAD,\n    data: mapGigsToEventCards({ data: DATA_GIGS.UPCOMING }),\n    showSectionLength: true\n  },\n  {\n    details: PAGE_SECTIONS.MUSIC_VENUES,\n    icon: ICONS.STADIUM,\n    data: DATA_GIGS.VENUES,\n    showSectionLength: true\n  }\n];\n\nconst yearSections: Array<IPageSection> = mapYearGroupsToSections({\n  years: DATA_GIGS.ALL_GROUPED_BY_YEAR,\n  eventType\n});\n\nconst sections: Array<IPageSection> = [...statsSections, ...yearSections];\n\nexport const PAGE_DATA_GIGS: IPageData = {\n  pastCount,\n  futureCount,\n  sections\n};\n","import { COLORS } from \"../styles\";\n\ninterface IDiets {\n  VEGAN: IRecipeDiet;\n  VEGETARIAN: IRecipeDiet;\n}\n\nexport const DIETS: IDiets = {\n  VEGAN: { abbreviation: \"Ve\", color: COLORS.darkGreen },\n  VEGETARIAN: { abbreviation: \"V\", color: COLORS.green }\n};\n","export const FESTIVALS: IFestivals = {\n  // A\n  AREA_10_NYE: { name: \"Area 10 NYE\" },\n  // B\n  BESTIVAL: { name: \"Bestival\", festival: true },\n  BRIGHTON_PRIDE: { name: \"Brighton Pride\", festival: true },\n  // C\n  CHINGFEST: { name: \"Chingfest\" },\n  // D\n  DECAYDANCE: { name: \"Decaydance\", festival: true },\n  DEFECTED_BRISTOL: { name: \"Defected In the House Day & Night Party\" },\n  // F\n  FABRIC_NYE: { name: \"Fabric NYE\" },\n  // G\n  GLASTONBURY: { name: \"Glastonbury\", festival: true, favourite: true },\n  // H\n  HOMOBLOC: { name: \"Homobloc\", festival: true },\n  // K\n  KALEIDOSCOPE: { name: \"Kaleidoscope\", festival: true },\n  // L\n  LOVEBOX: { name: \"Lovebox\", festival: true },\n  // M\n  MAD_COOL: { name: \"Mad Cool\", festival: true },\n  MANCHESTER_PRIDE: { name: \"Manchester Pride\", festival: true },\n  MIGHTY_HOOPLA: { name: \"Mighty Hoopla\", festival: true },\n  // N\n  NOTION_SUMMER_PARTY: { name: \"Notion Summer Party\" },\n  // O\n  ON_THE_RUN_II: { name: \"On the Run II\" },\n  // P\n  PARKLIFE: { name: \"Parklife\", festival: true },\n  // T\n  TRANSMISSION: { name: \"Transmission\", festival: true },\n  TRIBAL_SESSIONS: { name: \"Tribal Sessions\" },\n  // V\n  V_FESTIVAL: { name: \"V Festival\", festival: true },\n  // W\n  WAREHOUSE_PROJECT: {\n    name: \"Warehouse Project\",\n    festival: true,\n    favourite: true\n  }\n};\n","type IFRIENDS = { [name: string]: IFriend };\n\nconst GROUPS: IFRIENDS = {\n  CFS: { name: \"Colonel Frank Seely\", initials: \"CFS\" },\n  JHC: { name: \"JHC\", initials: \"JHC\" }\n};\n\nexport const FRIENDS: IFRIENDS = {\n  ...GROUPS,\n  // A\n  AISHA: { name: \"Aisha Saeed\", initials: \"AS\" },\n  ALEX_FAYE: { name: \"Alex-Faye Grundy\", initials: \"AG\" },\n  ALICE_R: { name: \"Alice Roder\", initials: \"AR\" },\n  AMY_B: { name: \"Amy Bagni\", initials: \"AB\" },\n  AMY_C: { name: \"Amy Calcutt\", initials: \"AC\" },\n  ANNIE_B: { name: \"Annie Butcher\", initials: \"AB\" },\n  ASH: { name: \"Ash Moreton\", initials: \"AM\" },\n  // B\n  BECKY: { name: \"Becky Mills\", initials: \"BM\" },\n  BETH_O: { name: \"Beth Oakes\", initials: \"BO\" },\n  BETH_SH: { name: \"Beth Shears\", initials: \"BS\" },\n  BETH_SP: { name: \"Beth Speller\", initials: \"BS\" },\n  BLAINE: { name: \"Blaine Pearson\", initials: \"BP\" },\n  // C\n  CAITY: { name: \"Caity Dalby\", initials: \"CD\" },\n  CAITLIN: { name: \"Caitlin McCaig\", initials: \"CM\", gigs: true, travel: true },\n  CARMEN: { name: \"Carmen Dalglish\", initials: \"CD\", travel: true },\n  CAMERON: { name: \"Cameron Blackburn\", initials: \"CB\" },\n  CHELSEA: { name: \"Chelsea Cunningham\", initials: \"CC\" },\n  CHLOE: { name: \"Chloé White\", initials: \"CW\" },\n  CHRISTELLE: { name: \"Christelle Mutunda\", initials: \"CM\" },\n  COBY_B: { name: \"Coby Blackburn\", initials: \"CB\" },\n  COURTNEY: { name: \"Courtney Lawson\", initials: \"CL\" },\n  // D\n  DAD: { name: \"Dad\", initials: \"D\", gigs: true, theatre: true, travel: true },\n  DARREN: { name: \"Darren Taylor\", initials: \"DT\", gigs: true, theatre: true },\n  DAN: {\n    name: \"Dan Sparrow\",\n    initials: \"DS\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  DOM: { name: \"Dominic Coyne\", initials: \"DC\", theatre: true },\n  // E\n  ELLE_O: { name: \"Elle Oldroyd\", initials: \"EO\" },\n  ELINORE_G: { name: \"Elinore Gillespie\", initials: \"EG\" },\n  ELISE: { name: \"Elise Morley\", initials: \"EM\" },\n  ELLIE_F: { name: \"Ellie Forman\", initials: \"EF\" },\n  ELLIE_G: { name: \"Ellie Gurkin\", initials: \"EG\", travel: true },\n  ELLIE_P: { name: \"Ellie Pearce\", initials: \"EP\" },\n  ELLIE_S: { name: \"Ellie Spanovic\", initials: \"ES\" },\n  EMMA: {\n    name: \"Emma Codrington\",\n    initials: \"EC\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  // F\n  FANNY: { name: \"Fanny Lindqvist\", initials: \"FL\" },\n  // G\n  GEMMA: { name: \"Gemma Gilderthorp\", initials: \"GG\" },\n  GEORGE: { name: \"George Littlehales\", initials: \"GL\" },\n  GRACE: { name: \"Grace Hulme\", initials: \"GH\", travel: true },\n  // H\n  HANNA: { name: \"Hanna Frogner\", initials: \"HF\" },\n  HARRIET_B: { name: \"Harriet Boyle\", initials: \"HB\" },\n  HARRIET_K: { name: \"Harriet Kesterton\", initials: \"HK\" },\n  HEATHER_C: { name: \"Heather Chiles\", initials: \"HC\" },\n  // J\n  JAIMINI: { name: \"Jaimini Popat\", initials: \"JP\" },\n  JAMIE: {\n    name: \"Jamie Halket\",\n    initials: \"JH\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  JAZZ: { name: \"Jasminder Thind\", initials: \"JT\" },\n  JERRY: { name: \"Jerry Edwards\", initials: \"JE\", gigs: true, theatre: true },\n  JOE: { name: \"Joe Edwards\", initials: \"JE\", theatre: true },\n  JESS: { name: \"Jess Smith\", initials: \"JS\" },\n  JUNAID: { name: \"Junaid Khan\", initials: \"JK\" },\n  // K\n  KATE_B: { name: \"Kate Bowmar\", initials: \"KB\" },\n  KIERAN_S: { name: \"Kieran Sawford\", initials: \"KS\" },\n  KIRSTEN: { name: \"Kirsten Jackson\", initials: \"KJ\" },\n  KYLE: { name: \"Kyle Hough\", initials: \"KH\" },\n  // L\n  LAURA: { name: \"Laura Capece-Galeota\", initials: \"LC\" },\n  LEAH: { name: \"Leah Slater-Radway\", initials: \"LS\" },\n  LEWIS: { name: \"Lewis Steadman\", initials: \"LS\", gigs: true, theatre: true },\n  LINDSAY_A: { name: \"Lindsay Aspinall\", initials: \"LA\" },\n  LINDSEY_S: { name: \"Lindsey Skelton\", initials: \"LS\" },\n  LOUISE: { name: \"Louise Blackburn\", initials: \"LB\" },\n  LUKE_J: { name: \"Luke Jones\", initials: \"LJ\" },\n  LUKE_S: { name: \"Luke Stern\", initials: \"LS\" },\n  // M\n  MARIA: { name: \"Maria Taylor\", initials: \"MT\", theatre: true },\n  MEGAN: { name: \"Megan Blackburn\", initials: \"MB\", gigs: true },\n  MUM: { name: \"Mum\", initials: \"M\", gigs: true, theatre: true, travel: true },\n  // N\n  NATALIE: { name: \"Natalie Lambert\", initials: \"NL\" },\n  NAV: { name: \"Navneet Bhogal\", initials: \"NB\" },\n  // O\n  OSCAR: { name: \"Oscar Murray\", initials: \"OM\" },\n  // P\n  PATRICIA: { name: \"Patricia Diaconescu\", initials: \"PD\" },\n  POOJA: { name: \"Pooja Dhir\", initials: \"PD\", travel: true },\n  POPPY: { name: \"Poppy Smith\", initials: \"PS\", gigs: true },\n  // R\n  ROB_G: { name: \"Robert Gall\", initials: \"RG\" },\n  RYAN: { name: \"Ryan Mills\", initials: \"RM\", gigs: true, travel: true },\n  // S\n  SAM_B: { name: \"Sam Berrie\", initials: \"SB\" },\n  SARAH_WA: { name: \"Sarah Walker\", initials: \"SW\" },\n  SARAH_W: { name: \"Sarah Whitaker\", initials: \"SW\" },\n  SIAN: {\n    name: \"Sian Rodway-Smith\",\n    initials: \"SR\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  SIMAN: { name: \"Siman Pone\", initials: \"SP\" },\n  SONYA: { name: \"Sonya Pardi\", initials: \"SP\", gigs: true },\n  STEVE_R: { name: \"Steve Richards\", initials: \"SR\" },\n  // T\n  THOM: { name: \"Thom Stephanakis\", initials: \"TS\" },\n  TOM: { name: \"Tom Chinda-Coutts\", initials: \"TC\", gigs: true, travel: true },\n  TONYA: { name: \"Tonya France\", initials: \"TF\", gigs: true, travel: true }\n};\n","const KEY_WEST = { name: \"Key West\" };\n\nexport const LOCATIONS: IAllCountries = {\n  // B\n  BARBADOS: {\n    name: \"Barbados\",\n    island: true,\n    attractions: { HARRISONS_CAVE: { name: \"Harrison's Cave\" } }\n  },\n  BELGIUM: {\n    name: \"Belgium\",\n    cities: { BRUGES: { name: \"Bruges\" }, YPRES: { name: \"Ypres\" } },\n    attractions: {\n      BATTLEFIELDS: { name: \"Battlefields\" },\n      BELFRY_OF_BRUGES: { name: \"Belfry of Bruges\" }\n    }\n  },\n  // BELIZE: {\n  //   name: \"Belize\",\n  //   cities: {\n  //     BELIZE_CITY: { name: \"Belize City\" },\n  //     capital: true\n  //   },\n  //   islands: {\n  //     AMBERGRIS_CAYE: { name: \"Ambergris Caye\" },\n  //     CAYE_CAULKER: { name: \"Caye Caulker\" }\n  //   },\n  //   attractions: {\n  //     BARRIER_REEF: { name: \"Belize Barrier Reef\", highlight: true }\n  //   }\n  // },\n  BRAZIL: {\n    name: \"Brazil\",\n    cities: { RIO_DE_JANEIRO: { name: \"Rio de Janeiro\" } },\n    attractions: {\n      MODERN_ART_MUSEUM_RIO: {\n        name: \"Modern Art Museum Rio\",\n        foreignName: \"Museu de Arte Moderna do Rio de Janeiro\"\n      },\n      COPACABANA_BEACH: { name: \"Copacabana Beach\" },\n      ROCINHA_FAVELA: { name: \"Rocinha Favela\" },\n      CHRIST_THE_REDEEMER: { name: \"Cristo Redentor\" },\n      SELARON_STEPS: {\n        name: \"Selarón Steps\",\n        foreignName: \"Escadaria Selarón\"\n      },\n      HANG_GLIDING: { name: \"São Conrado Hang-Gliding\", highlight: true },\n      PICO_DO_PAPAGAIO: {\n        name: \"Pico do Papagaio\",\n        englishName: \"Parrot's Peak\",\n        foreignName: \"Pico do Papagaio\",\n        highlight: true\n      }\n    },\n    islands: { ILHA_GRANDE: { name: \"Ilha Grande\" } }\n  },\n  // C\n  CANADA: {\n    name: \"Canada\",\n    cities: { NIAGARA_FALLS: { name: \"Niagara Falls\" } },\n    attractions: { NIAGARA_FALLS: { name: \"Niagara Falls\", highlight: true } }\n  },\n  // COSTA_RICA: {\n  //   name: \"Costa Rica\",\n  //   cities: {\n  //     SAN_JOSE: { name: \"San Jose\", capital: true }\n  //   },\n  //   towns: {\n  //     MONTEVERDE: { name: \"Monteverde\" },\n  //     PUERTO_VIEJO: { name: \"Puerto Viejo\" }\n  //   },\n  //   attractions: {\n  //     CORCOVADO: { name: \"Corcovado National Park\", highlight: true },\n  //     JAGUAR_RESCUE_CENTER: { name: \"Jaguar Rescue Center\" }\n  //   }\n  // },\n  CROATIA: {\n    name: \"Croatia\",\n    cities: { DUBROVNIK: { name: \"Dubrovnik\" } },\n    attractions: {\n      DUBROVNIK_CABLE_CAR: { name: \"Dubrovnik Cable Car\" },\n      DUBROVNIK_WALLS: { name: \"Walls of Dubrovnik\", highlight: true }\n    }\n  },\n  CUBA: {\n    name: \"Cuba\",\n    island: true,\n    cities: { HAVANA: { name: \"Havana\", capital: true } },\n    towns: { VARADERO: { name: \"Varadero\" } }\n  },\n  CYPRUS: {\n    name: \"Cyprus\",\n    cities: { PAPHOS: { name: \"Paphos\" } },\n    attractions: {\n      PAPHOS_ARCHAEOLOGICAL_PARK: { name: \"Paphos Archaeological Park\" }\n    }\n  },\n  CZECH_REPUBLIC: {\n    name: \"Czech Republic\",\n    cities: { PRAGUE: { name: \"Prague\", capital: true } },\n    attractions: {\n      JOHN_LENNON_WALL: { name: \"John Lennon Wall\" },\n      VYSEHRAD: { name: \"Vyšehrad\" }\n    }\n  },\n  // D\n  DENMARK: {\n    name: \"Denmark\",\n    cities: { COPENHAGEN: { name: \"Copenhagen\" } },\n    attractions: {\n      LOUISIANA_ART_MUSEUM: { name: \"Louisiana Museum of Modern Art\" }\n    }\n  },\n  // E\n  ECUADOR: {\n    name: \"Ecuador\",\n    cities: {\n      BANOS: { name: \"Baños\" },\n      GUAYAQUIL: { name: \"Guayaquil\" },\n      OTAVALO: { name: \"Otavalo\" },\n      QUITO: { name: \"Quito\", capital: true }\n    },\n    attractions: {\n      EQUATOR_MONUMENT: {\n        name: \"Equator Monument\",\n        foreignName: \"Ciudad Mitad del Mundo\"\n      },\n      OTAVALO_MARKET: { name: \"Otavalo Market\" },\n      TORTOISE_PARK: {\n        name: \"Giant Tortoise Reserve\",\n        foreignName: \"Reserva el Chato\"\n      },\n      PAILON_DEL_DIABLO: { name: \"Pailon del Diablo\", highlight: true },\n      COTOPAXI: { name: \"Cotopaxi Volcano\", highlight: true }\n    },\n    islands: { GALAPAGOS: { name: \"Galápagos Islands\" } }\n  },\n  EGYPT: {\n    name: \"Egypt\",\n    cities: {\n      CAIRO: { name: \"Cairo\", capital: true },\n      SHARM_EL_SHEIKH: { name: \"Sharm El Sheikh\" }\n    },\n    attractions: {\n      GIZA_PYRAMIDS_SPHINX: {\n        name: \"Giza Pyramids & Great Sphinx\",\n        highlight: true\n      }\n    }\n  },\n  // F\n  FRANCE: {\n    name: \"France\",\n    cities: {\n      MONACO: { name: \"Monaco\" },\n      NICE: { name: \"Nice\" },\n      PARIS: { name: \"Paris\", capital: true }\n    },\n    attractions: {\n      SACRE_COEUR: { name: \"Sacré-Cœur\" },\n      LOUVRE: { name: \"Louvre\" },\n      ARC_DE_TRIOMPHE: { name: \"Arc de Triomphe\" },\n      AIR_SPACE_MUSEUM: { name: \"National Air and Space Museum of France\" },\n      SCIENCE_MUSEUM: { name: \"Paris Science Museum\" },\n      EIFFEL_TOWER: { name: \"Eiffel Tower\" },\n      NOTRE_DAME: { name: \"Notre-Dame de Paris\" },\n      DISNEYLAND_PARIS: { name: \"Disneyland Paris\", themePark: true },\n      PARC_ASTERIX: { name: \"Parc Astérix\", themePark: true }\n    }\n  },\n  // G\n  GERMANY: {\n    name: \"Germany\",\n    cities: { BERLIN: { name: \"Berlin\", capital: true } },\n    attractions: {\n      REICHSTAG: { name: \"Reichstag Building\" },\n      HOLOCAUST_MEMORIAL: { name: \"Holocaust Memorial\" },\n      BRANDENBURG_GATE: { name: \"Brandenburg Gate\" },\n      BERLIN_WALL: { name: \"Berlin Wall\" },\n      EAST_SIDE_GALLERY: { name: \"East Side Gallery\" }\n    }\n  },\n  GREECE: {\n    name: \"Greece\",\n    islands: { KOS: { name: \"Kos\" } },\n    regions: { HALKIDIKI: { name: \"Halkidiki\" } }\n  },\n  // H\n  HUNGARY: {\n    name: \"Hungary\",\n    cities: { BUDAPEST: { name: \"Budapest\", capital: true } },\n    attractions: {\n      PARLIAMENT_BUILDING: { name: \"Hungarian Parliament Building\" },\n      THERMAL_BATH_SZECHENYI: { name: \"Széchenyi Thermal Bath\" },\n      CITADELLA: { name: \"Citadella\" }\n    }\n  },\n  // I\n  IRELAND: {\n    name: \"Ireland\",\n    attractions: {\n      ST_STEPHENS_GREEN_PARK: { name: \"St. Stephen's Green Park\" },\n      DUBLIN_PRISON: { name: \"Kilmainham Gaol\" },\n      GUINNESS_STOREHOUSE: { name: \"Guinness Storehouse\" }\n    },\n    cities: { DUBLIN: { name: \"Dublin\", capital: true } }\n  },\n  ITALY: {\n    name: \"Italy\",\n    regions: {\n      SICILY: { name: \"Sicily\" }\n    },\n    cities: {\n      NAPLES: { name: \"Naples\" },\n      MILAN: { name: \"Milan\" },\n      ROME: { name: \"Rome\", capital: true },\n      VATICAN: { name: \"Vatican City\" },\n      CATANIA: { name: \"Catania\" },\n      VENICE: { name: \"Venice\" },\n      POMPEII: { name: \"Pompeii\" }\n    },\n    towns: { JESOLO: { name: \"Jesolo\" }, SORRENTO: { name: \"Sorrento\" } },\n    attractions: {\n      ARCO_DELLA_PACE: { name: \"Arco della Pace\" },\n      SEMPIONE_PARK: { name: \"Sempione Park\" },\n      MILAN_MALL: { name: \"Galleria Vittorio Emanuele II\" },\n      COLOSSEUM: { name: \"Colosseum\" },\n      TREVI_FOUNTAIN: { name: \"Trevi Fountain\" },\n      VESUVIUS: { name: \"Mount Vesuvius\" },\n      ETNA: { name: \"Mount Etna\" }\n    }\n  },\n  // L\n  LAOS: {\n    name: \"Laos\",\n    cities: {\n      LUANG_PRABANG: { name: \"Luang Prabang\" },\n      VIENTIANE: { name: \"Vientiane\", capital: true }\n    },\n    attractions: {\n      KUANG_SI_FALLS: { name: \"Kuang Si Falls\", highlight: true },\n      ELEPHANT_VILLAGE: { name: \"Elephant Village\" },\n      BUDDHA_PARK: { name: \"Buddha Park\" }\n    }\n  },\n  // N\n  NETHERLANDS: {\n    name: \"Netherlands\",\n    cities: {\n      AMSTERDAM: { name: \"Amsterdam\", capital: true },\n      GRONINGEN: { name: \"Groningen\" }\n    },\n    attractions: {\n      STEDELIJK_MUSEUM: { name: \"Stedelijk Museum Amsterdam\" },\n      SEX_MUSEUM: { name: \"Venustempel Sex Museum\" },\n      GRONINGEN_MUSEUM: { name: \"Groninger Museum\" }\n    }\n  },\n  NORWAY: {\n    name: \"Norway\",\n    cities: { OSLO: { name: \"Oslo\", capital: true } },\n    islands: { HOVEDOYA: { name: \"Hovedøya\" } }\n  },\n  // P\n  PERU: {\n    name: \"Peru\",\n    cities: {\n      AREQUIPA: { name: \"Arequipa\" },\n      CUSCO: { name: \"Cusco\" },\n      LIMA: { name: \"Lima\", capital: true },\n      HUARAZ: { name: \"Huaraz\" }\n    },\n    attractions: {\n      COLCA_CANYON: { name: \"Colca Canyon\" },\n      LAGUNA_69: { name: \"Laguna 69\", highlight: true },\n      JUNGLE_ZIPLINE: {\n        name: \"Santa Teresa Vertikal Zipline\",\n        highlight: true\n      },\n      MACHU_PICCHU: { name: \"Machu Picchu\", highlight: true },\n      HUACACHINA: { name: \"Huacachina Sand Dunes\", highlight: true },\n      HUASCARAN_PARK: { name: \"Huascaran National Park\" },\n      MANU: { name: \"Manú National Park\" },\n      RAINBOW_MOUNTAIN: { name: \"Rainbow Mountain\", highlight: true }\n    },\n    towns: { MANCORA: { name: \"Mancora\" }, PARACAS: { name: \"Paracas\" } },\n    villages: { HUACACHINA: { name: \"Huacachina\" } }\n  },\n  POLAND: {\n    name: \"Poland\",\n    cities: { KRAKOW: { name: \"Kraków\" } },\n    attractions: {\n      AUSCHWITZ_BIRKENAU: { name: \"Auschwitz-Birkenau\", highlight: true },\n      WIELICZKA_SALT_MINE: { name: \"Wieliczka Salt Mine\" }\n    },\n    towns: { WIELICZKA: { name: \"Wieliczka\" } }\n  },\n  PORTUGAL: {\n    name: \"Portugal\",\n    cities: {\n      LISBON: { name: \"Lisbon\", capital: true },\n      PORTIMAO: { name: \"Portimão\" }\n    },\n    attractions: {\n      ZOOMARINE: { name: \"Zoomarine Algarve\" },\n      OCENARIO_DE_LISBOA: {\n        name: \"Lisbon Oceanarium\",\n        foreignName: \"Oceanário de Lisboa\"\n      }\n    },\n    towns: {\n      FERRAGUDO: { name: \"Ferragudo\" },\n      TAVIRA: { name: \"Tavira\" },\n      VILAMOURA: { name: \"Vilamoura\" }\n    }\n  },\n  // S\n  SPAIN: {\n    name: \"Spain\",\n    cities: {\n      BARCELONA: { name: \"Barcelona\" },\n      MADRID: { name: \"Madrid\", capital: true }\n    },\n    attractions: {\n      CIUTADELLA_PARK: { name: \"Ciutadella Park\" },\n      PARK_GUELL: { name: \"Park Güell\", highlight: true },\n      PARQUE_WARNER: { name: \"Parque Warner Madrid\", themePark: true },\n      SIAM_PARK: { name: \"Siam Park\", themePark: true },\n      PORTAVENTURA: { name: \"PortAventura\", themePark: true }\n    },\n    islands: {\n      TENERIFE: { name: \"Tenerife\" },\n      IBIZA: { name: \"Ibiza\" },\n      MINORCA: { name: \"Minorca\" },\n      LANZAROTE: { name: \"Lanzarote\" }\n    }\n  },\n  // T\n  THAILAND: {\n    name: \"Thailand\",\n    cities: {\n      BANGKOK: { name: \"Bangkok\", capital: true },\n      CHIANG_MAI: { name: \"Chiang Mai\" },\n      CHIANG_RAI: { name: \"Chiang Rai\" }\n    },\n    islands: {\n      KOH_PHI_PHI: { name: \"Koh Phi Phi\" },\n      KOH_PHANGAN: { name: \"Koh Phangan\" },\n      KOH_TAO: { name: \"Koh Tao\" }\n    },\n    attractions: {\n      WHITE_TEMPLE: { name: \"Wat Rong Khun\" },\n      MAYA_BAY: { name: \"Maya Bay\" },\n      PAI_CANYON: { name: \"Pai Canyon\", highlight: true },\n      TIGER_KINGDOM: { name: \"Tiger Kingdom\" },\n      GRAND_PALACE: { name: \"Grand Palace Bangkok\", highlight: true },\n      SKY_BAR: { name: \"Sky Bar Bangkok\" }\n    },\n    towns: { KRABI: { name: \"Krabi\" }, PAI: { name: \"Pai\" } }\n  },\n  // U\n  UGANDA: {\n    name: \"Uganda\",\n    cities: { JINJA: { name: \"Jinja\" } },\n    attractions: {\n      RAFTING_NALUBALE: {\n        name: \"River Nile Nalubale Rafting\",\n        highlight: true\n      },\n      NILE_SOURCE: { name: \"Source of the Nile\" }\n    }\n  },\n  UAE: {\n    name: \"United Arab Emirates\",\n    cities: { DUBAI: { name: \"Dubai\" } },\n    attractions: {\n      AQUAVENTURE: { name: \"Aquaventure Waterpark\", themePark: true },\n      BURJ_KHALIFA: { name: \"Burj Khalifa\" }\n    }\n  },\n  UK: {\n    name: \"United Kingdom\",\n    insignificant: true,\n    attractions: {\n      ALTON_TOWERS: {\n        name: \"Alton Towers\",\n        insignificant: true,\n        themePark: true\n      },\n      BLACKPOOL_PLEASURE_BEACH: {\n        name: \"Blackpool Pleasure Beach\",\n        insignificant: true,\n        themePark: true\n      },\n      WINTER_WONDERLAND: {\n        name: \"Winter Wonderland\",\n        insignificant: true,\n        themePark: true\n      },\n      THORPE_PARK: {\n        name: \"Thorpe Park\",\n        insignificant: true,\n        themePark: true\n      },\n      EDEN_PROJECT: { name: \"Eden Project\", insignificant: true },\n      TATE_BRITAIN: { name: \"Tate Britain\", insignificant: true },\n      LONDON_EYE: { name: \"London Eye\", insignificant: true },\n      RICHMOND_PARK: { name: \"Richmond Park\", insignificant: true },\n      SHERWOOD_FOREST: { name: \"Sherwood Forest\", insignificant: true },\n      CALKE_ABBEY: { name: \"Calke Abbey\", insignificant: true },\n      BATTERSEA_PARK: { name: \"Battersea Park\", insignificant: true },\n      CRYSTAL_PALACE_PARK: { name: \"Crystal Palace Park\", insignificant: true },\n      QUEEN_ELIZABETH_OLYMPIC_PARK: {\n        name: \"Queen Elizabeth Olympic Park\",\n        insignificant: true\n      },\n      VICTORIA_PARK: { name: \"Victoria Park\", insignificant: true },\n      GREENWICH_PARK: { name: \"Greenwich Park\", insignificant: true },\n      KEW_GARDENS: { name: \"Kew Gardens\", insignificant: true },\n      EPPING_FOREST: { name: \"Epping Forest\", insignificant: true },\n      HAMPSTEAD_HEATH: { name: \"Hampstead Heath\", insignificant: true },\n      V_A_MUSEUM: {\n        name: \"Victoria and Albert Museum\",\n        insignificant: true\n      },\n      SCIENCE_MUSEUM: { name: \"Science Museum\", insignificant: true },\n      TATE_MODERN: { name: \"Tate Modern\", insignificant: true },\n      NATURAL_HISTORY_MUSEUM: {\n        name: \"Natural History Museum London\",\n        insignificant: true\n      },\n      LAKE_DISTRICT: { name: \"Lake District\" },\n      HADRIANS_WALL: { name: \"Hadrian's Wall\", insignificant: true }\n    },\n    islands: {\n      ANGLESEY: { name: \"Anglesey\", insignificant: true }\n    },\n    cities: {\n      BATH: { name: \"Bath\", insignificant: true },\n      BLACKPOOL: { name: \"Blackpool\", insignificant: true },\n      BRIGHTON: { name: \"Brighton\", insignificant: true },\n      BRISTOL: { name: \"Bristol\", insignificant: true },\n      BIRMINGHAM: { name: \"Birmingham\", insignificant: true },\n      CAMBRIDGE: { name: \"Cambridge\", insignificant: true },\n      COVENTRY: { name: \"Coventry\", insignificant: true },\n      DERBY: { name: \"Derby\", insignificant: true },\n      HULL: { name: \"Hull\", insignificant: true },\n      LEEDS: { name: \"Leeds\", insignificant: true },\n      LEICESTER: { name: \"Leicester\", insignificant: true },\n      LINCOLN: { name: \"Lincoln\", insignificant: true },\n      LONDON: { name: \"London\", insignificant: true },\n      LIVERPOOL: { name: \"Liverpool\", insignificant: true },\n      MANCHESTER: { name: \"Manchester\", insignificant: true },\n      NEWCASTLE: { name: \"Newcastle\", insignificant: true },\n      NORWICH: { name: \"Norwich\", insignificant: true },\n      NOTTINGHAM: { name: \"Nottingham\", insignificant: true },\n      OXFORD: { name: \"Oxford\", insignificant: true },\n      SHEFFIELD: { name: \"Sheffield\", insignificant: true },\n      WOLVERHAMPTON: { name: \"Wolverhampton\", insignificant: true },\n      YORK: { name: \"York\", insignificant: true }\n    },\n    regions: { CORNWALL: { name: \"Cornwall\" } },\n    towns: {\n      DONCASTER: { name: \"Doncaster\", insignificant: true },\n      HARROGATE: { name: \"Harrogate\", insignificant: true },\n      ILKLEY: { name: \"Ilkley\", insignificant: true },\n      MILTON_KEYNES: { name: \"Milton Keynes\", insignificant: true },\n      STRATFORD: { name: \"Stratford-upon-Avon\", insignificant: true },\n      MANSFIELD: { name: \"Mansfield\", insignificant: true },\n      NEWARK: { name: \"Newark\", insignificant: true },\n      NEWQUAY: { name: \"Newquay\", insignificant: true },\n      PADSTOW: { name: \"Padstow\", insignificant: true },\n      TENBY: { name: \"Tenby\", insignificant: true },\n      SCARBOROUGH: { name: \"Scarborough\", insignificant: true }\n    }\n  },\n  USA: {\n    name: \"United States\",\n\n    attractions: {\n      ALCATRAZ_PRISON: {\n        name: \"Alcatraz Federal Penitentiary\",\n        highlight: true\n      },\n      FISHERMANS_WHARF: { name: \"Fisherman's Wharf\" },\n      FARMERS_MARKET: { name: \"Farmers Market\" },\n      HOLLYWOOD_WALK_OF_FAME: { name: \"Hollywood Walk of Fame\" },\n      WHITE_HOUSE: { name: \"White House\" },\n      CAPITOL_BUILDING: { name: \"Capitol Building\" },\n      WASHINGTON_MONUMENT: { name: \"Washington Monument\" },\n      LINCOLN_MEMORIAL: { name: \"Lincoln Memorial\" },\n      TIMES_SQUARE: { name: \"Times Square\" },\n      BROOKLYN_BRIDGE: { name: \"Brooklyn Bridge\" },\n      WORLD_TRADE_CENTER: { name: \"World Trade Center\" },\n      GOLDEN_GATE_BRIDGE: { name: \"Golden Gate Bridge\", highlight: true },\n      CENTRAL_PARK: { name: \"Central Park\", highlight: true },\n      // CLEARWATER_BEACH: { name: \"Clearwater Beach\" },\n      VENICE_BEACH: { name: \"Venice Beach\" },\n      DISNEYLAND_CALIFORNIA_ADVENTURE: {\n        name: \"Disneyland California Adventure\",\n        themePark: true\n      },\n      DISNEY_MGM_STUDIOS: { name: \"Disney-MGM Studios\", themePark: true },\n      DISNEY_ANIMAL_KINGDOM: {\n        name: \"Disney's Animal Kingdom\",\n        themePark: true\n      },\n      DISNEY_EPCOT: { name: \"Epcot\", themePark: true },\n      WET_N_WILD_ORLANDO: { name: \"Wet 'n Wild Orlando\", themePark: true },\n      BLIZZARD_BEACH: { name: \"Blizzard Beach Water Park\", themePark: true },\n      DISNEY_MAGIC_KINGDOM: { name: \"Magic Kingdom Park\", themePark: true },\n      UNIVERSAL_STUDIOS_FLORIDA: {\n        name: \"Universal Studios Florida\",\n        themePark: true\n      },\n      UNIVERSALS_ISLANDS_OF_ADVENTURE: {\n        name: \"Universal's Islands of Adventure\",\n        themePark: true\n      },\n      GRAND_CANYON: { name: \"Grand Canyon\", highlight: true },\n      KNOTTS_BERRY_FARM: { name: \"Knott's Berry Farm\", themePark: true },\n      SEAWORLD_ORLANDO: { name: \"SeaWorld Orlando\", themePark: true },\n      BUSCH_GARDENS_WILLIAMSBURG: {\n        name: \"Busch Gardens Williamsburg\",\n        themePark: true\n      },\n      BUSCH_GARDENS_TAMPA: { name: \"Busch Gardens Tampa\", themePark: true },\n      SIX_FLAGS_AMERICA: { name: \"Six Flags America\", themePark: true },\n      SIX_FLAGS_MAGIC_MOUNTAIN: {\n        name: \"Six Flags Magic Mountain\",\n        themePark: true\n      },\n      SIX_FLAGS_NEW_ENGLAND: { name: \"Six Flags New England\", themePark: true }\n    },\n    cities: {\n      BOSTON_MASSACHUSETTS: { name: \"Boston\" },\n      KEY_WEST,\n      LAS_VEGAS: { name: \"Las Vegas\" },\n      VIRGINIA_BEACH: { name: \"Virginia Beach\" },\n      LOS_ANGELES: { name: \"Los Angeles\" },\n      NEW_YORK_CITY: { name: \"New York City\" },\n      SAN_FRANCISCO: { name: \"San Francisco\" },\n      SPRINGFIELD_MASSACHUSETTS: { name: \"Springfield\" },\n      WASHINGTON_DC: { name: \"Washington DC\", capital: true }\n    },\n    islands: {\n      KEY_WEST,\n      ALCATRAZ: { name: \"Alcatraz\" },\n      MARTHAS_VINEYARD: { name: \"Martha's Vineyard\" }\n    },\n    regions: {\n      CAPE_COD: { name: \"Cape Cod\" },\n      FLORIDA_KEYS: { name: \"Florida Keys\" },\n      ISLAMORADA: { name: \"Islamorada\" }\n    },\n    states: {\n      FLORIDA: { name: \"Florida\" },\n      NEW_YORK: { name: \"New York\" },\n      MASSACHUSETTS: { name: \"Massachusetts\" },\n      VIRGINIA: { name: \"Virginia\" }\n    }\n  }\n};\n","const TABLESPOON: string = \"tbsp\";\n\nexport const SAINSBURYS_SEASONING_COST: IIngredientCost = {\n  quantity: 6,\n  measurement: TABLESPOON,\n  price: 1\n};\n\nexport const MEASUREMENTS: IMeasurements = {\n  // WEIGHT\n  GRAM: \"g\",\n  KILOGRAM: \"kg\",\n\n  // SPOONS\n  TEASPOON: \"tsp\",\n  TABLESPOON,\n\n  // CAPACITY\n  MILLILITRE: \"ml\",\n  LITRE: \"L\",\n\n  // LENGTH\n  CENTIMETRE: \"cm\",\n\n  // COLLOQUIAL\n  CAN: \"can\",\n  SPRIG: \"sprig\",\n  SLICE: \"slice\",\n  JAR: \"jar\",\n  PORTION: \"portion\",\n  SERVING: \"serving\",\n  CHUNK: \"chunk\",\n  SEGMENT: \"segment\",\n  PANCAKE: \"pancake\"\n};\n","export const MUSICIANS: IMusicians = {\n  // 123\n  \"1975\": { name: \"1975, The\" },\n  \"100_GECS\": { name: \"100 gecs\" },\n  // A\n  AURORA: { name: \"Aurora\" },\n  THE_ACADEMY_IS: { name: \"Academy Is..., The\" },\n  ALESSIA_CARA: { name: \"Alessia Cara\" },\n  ALEX_CHAPMAN: { name: \"Alex Chapman\" },\n  ALL_AMERICAN_REJECTS: { name: \"All-American Rejects, The\" },\n  ALLIE_X: { name: \"Allie X\" },\n  ALL_TIME_LOW: { name: \"All Time Low\" },\n  ALMA: { name: \"Alma\" },\n  AMOS_LEE: { name: \"Amos Lee\" },\n  ANNA_OF_THE_NORTH: { name: \"Anna of the North\" },\n  ADELE: { name: \"Adele\" },\n  ANASTACIA: { name: \"Anastacia\" },\n  ANNE_MARIE: { name: \"Anne-Marie\" },\n  AQUILO: { name: \"Aquilo\" },\n  ARCTIC_MONKEYS: { name: \"Arctic Monkeys\" },\n  ARIANA_GRANDA: { name: \"Ariana Grande\" },\n  AUDITION: { name: \"Audition, The\" },\n  // B\n  BAAUER: { name: \"Baauer\" },\n  BANANARAMA: { name: \"Bananarama\" },\n  BANKS: { name: \"Banks\" },\n  BASTILLE: { name: \"Bastille\" },\n  BAYNK: { name: \"BAYNK\" },\n  BEARS_DEN: { name: \"Bear's Den\" },\n  BECKY_HILL: { name: \"Becky Hill\" },\n  BEN_HOWARD: { name: \"Ben Howard\" },\n  BETSY: { name: \"Betsy\" },\n  BETTY_WHO: { name: \"Betty Who\" },\n  BEYONCE: { name: \"Beyoncé\" },\n  BICEP: { name: \"Bicep\" },\n  BILLIE_EILISH: { name: \"Billie Eilish\" },\n  BLACK_KIDS: { name: \"Black Kids\" },\n  B_O_B: { name: \"B.o.B\" },\n  BONDAX: { name: \"Bondax\" },\n  BON_IVER: { name: \"Bon Iver\" },\n  BONTAN: { name: \"Bontan\" },\n  BORNS: { name: \"BØRNS\" },\n  BOYS_LIKE_GIRLS: { name: \"Boys Like Girls\" },\n  BLONDE: { name: \"Blonde\" },\n  BREACH: { name: \"Breach\" },\n  BRIGITTE_APHRODITE: { name: \"Brigitte Aphrodite\" },\n  BRITNEY_SPEARS: { name: \"Britney Spears\" },\n  BROODS: { name: \"Broods\" },\n  BULOW: { name: \"bülow\" },\n  // C\n  CAMILA_CABELLO: { name: \"Camila Cabello\" },\n  CARIBOU: { name: \"Caribou\" },\n  CARLY_RAE_JEPSEN: { name: \"Carly Rae Jepsen\" },\n  CARL_COX: { name: \"Carl Cox\" },\n  CAROLINE_POLACHEK: { name: \"Caroline Polachek\" },\n  CELESTE: { name: \"Celeste\" },\n  CHARLI_ADAMS: { name: \"Charli Adams\" },\n  CHARLI_XCX: { name: \"Charli XCX\" },\n  CHARLOTTE_CHURCH: { name: \"Charlotte Church\" },\n  CHELSEA_CUTLER: { name: \"Chelsea Cutler\" },\n  CHEMICAL_BROTHERS: { name: \"Chemical Brothers, The\" },\n  CHERYL: { name: \"Cheryl\" },\n  CHRISTINE_AND_THE_QUEENS: { name: \"Christine and the Queens\" },\n  CHRVCHES: { name: \"CHVRCHES\" },\n  CLAIRO: { name: \"Clairo\" },\n  CLEAN_BANDIT: { name: \"Clean Bandit\" },\n  COBRA_STARSHIP: { name: \"Cobra Starship\" },\n  CODE: { name: \"Code, The\" },\n  CRUEL_YOUTH: { name: \"Cruel Youth\", favourite: true },\n  CUTE_IS_WHAT_WE_AIM_FOR: { name: \"Cute Is What We Aim for\" },\n  CYRIL_HAHN: { name: \"Cyril Hahn\" },\n  // D\n  DANIEL_AVERY: { name: \"Daniel Avery\" },\n  DAUGHTER: { name: \"Daughter\" },\n  DAVID_RODIGAN: { name: \"David Rodigan\" },\n  DIPLO: { name: \"Diplo\" },\n  DISCLOSURE: { name: \"Disclosure\" },\n  DIZZEE_RASCAL: { name: \"Dizzee Rascal\" },\n  DRUMS: { name: \"Drums, The\" },\n  DUKE_DUMONT: { name: \"Duke Dumont\" },\n  DUA_LIPA: { name: \"Dua Lipa\" },\n  DUSKY: { name: \"Dusky\" },\n  DYLAN: { name: \"Dylan\" },\n  // E\n  EARTHEATER: { name: \"Eartheater\" },\n  EATS_EVERYTHING: { name: \"Eats Everything\" },\n  ELDERBROOK: { name: \"Elderbrook\" },\n  ELIZA_DOOLITTLE: { name: \"Eliza Doolittle\" },\n  ELLA_EYRE: { name: \"Ella Eyre\" },\n  ELLIE_GOULDING: { name: \"Ellie Goulding\" },\n  EMAROSA: { name: \"Emarosa\" },\n  // F\n  FALL_OUT_BOY: { name: \"Fall Out Boy\" },\n  FKA_TWIGS: { name: \"FKA twigs\" },\n  FLEETWOOD_MAC: { name: \"Fleetwood Mac\" },\n  FLIGHT_FACILITIES: { name: \"Flight Facilities\" },\n  FLORENCE_AND_THE_MACHINE: { name: \"Florence + the Machine\" },\n  FOREVER_THE_SICKEST_KIDS: { name: \"Forever the Sickest Kids\" },\n  FOURS: { name: \"Fours\" },\n  FOUR_TET: { name: \"Four Tet\" },\n  FOXES: { name: \"Foxes\" },\n  FRANCES: { name: \"Frances\" },\n  FRANCIS_AND_THE_LIGHTS: { name: \"Francis and the Lights\" },\n  FRANK_OCEAN: { name: \"Frank Ocean\" },\n  FREYA_RIDINGS: { name: \"Freya Ridings\" },\n  THE_FRIDAY_NIGHT_BOYS: { name: \"Friday Night Boys, The\" },\n  FRIEND_WITHIN: { name: \"Friend Within\" },\n  FUN_LOVIN_CRIMINALS: { name: \"Fun Lovin' Criminals\" },\n  // G\n  GABRIELLE: { name: \"Gabrielle\" },\n  GEORGE_EZRA: { name: \"George Ezra\" },\n  GEORGE_FITZGERALD: { name: \"George FitzGerald\" },\n  GEORGIA: { name: \"Georgia\" },\n  G_FLIP: { name: \"G Flip\" },\n  GLOWIE: { name: \"Glowie\" },\n  GORGON_CITY: { name: \"Gorgon City\" },\n  GRACEY: { name: \"GRACEY\" },\n  GREEN_VELVET: { name: \"Green Velvet\" },\n  GRIMES: { name: \"Grimes\" },\n  GROOVE_ARMADA: { name: \"Groove Armada\" },\n  GRYFFIN: { name: \"Gryffin\" },\n  GYM_CLASS_HEROES: { name: \"Gym Class Heroes\" },\n  // H\n  HAIM: { name: \"HAIM\" },\n  HALSEY: { name: \"Halsey\" },\n  HANNAH_WANTS: { name: \"Hannah Wants\" },\n  HAUX: { name: \"Haux\" },\n  HEIDI: { name: \"Heidi\" },\n  HEY_MONDAY: { name: \"Hey Monday\" },\n  HOLLY_HUMBERSTONE: { name: \"Holly Humberstone\" },\n  HORSE_MEAT_DISCO: { name: \"Horse Meat Disco\" },\n  // I\n  INCOGNITO: { name: \"Incognito\" },\n  // J\n  JAMES_BAY: { name: \"James Bay\" },\n  JAMES_BLAKE: { name: \"James Blake\" },\n  JAMIE_JONES: { name: \"Jamie Jones\" },\n  JAMIE_T: { name: \"Jamie T\" },\n  JAMIE_XX: { name: \"Jamie xx\" },\n  JAX_JONES: { name: \"Jax Jones\" },\n  JAY_Z: { name: \"JAY Z\" },\n  JEREMY_ZUCKER: { name: \"Jeremy Zucker\" },\n  JESS_GLYNNE: { name: \"Jess Glynne\" },\n  JESSIE_WARE: { name: \"Jessie Ware\" },\n  JOE_GODDARD: { name: \"Joe Goddard\" },\n  JOHNNY_MARR: { name: \"Johnny Marr\" },\n  JONAS_BLUE: { name: \"Jonas Blue\" },\n  JONES: { name: \"Jones\" },\n  JON_HOPKINS: { name: \"Jon Hopkins\" },\n  JORIS_VOORN: { name: \"Joris Voorn\" },\n  JORJA_SMITH: { name: \"Jorja Smith\" },\n  JOSH_BUTLER: { name: \"Josh Butler\" },\n  JOY_ORBISON: { name: \"Joy Orbison\" },\n  JOSEF_SALVAT: { name: \"Josef Salvat\" },\n  JULIA_MICHAELS: { name: \"Julia Michaels\" },\n  JULIO_BASHMORE: { name: \"Julio Bashmore\" },\n  JUSTIN_BIEBER: { name: \"Justin Bieber\" },\n  JUSTIN_MARTIN: { name: \"Justin Martin\" },\n  // K\n  KAH_LO: { name: \"Kah-Lo\" },\n  KANYE_WEST: { name: \"Kanye West\" },\n  KATE_NASH: { name: \"Kate Nash\" },\n  KATY_PERRY: { name: \"Katy Perry\" },\n  KAYTRANADA: { name: \"Kaytranada\" },\n  KESHA: { name: \"Kesha\" },\n  KIASMOS: { name: \"Kiasmos\" },\n  KIDNAP: { name: \"Kidnap\" },\n  KIDS_IN_GLASS_HOUSES: { name: \"Kids In Glass Houses\" },\n  THE_KILLERS: { name: \"Killers, The\" },\n  KIM_PETRAS: { name: \"Kim Petras\" },\n  KOLSCH: { name: \"Kölsch\" },\n  KYGO: { name: \"Kygo\" },\n  // L\n  LADY_GAGA: { name: \"Lady Gaga\" },\n  LADY_STARLIGHT: { name: \"Lady Starlight\" },\n  LANA_DEL_REY: { name: \"Lana Del Rey\", favourite: true },\n  LANE_8: { name: \"Lane 8\" },\n  LANY: { name: \"LANY\" },\n  LA_ROUX: { name: \"La Roux\" },\n  LAUV: { name: \"Lauv\" },\n  L_DEVINE: { name: \"L Devine\" },\n  LELAND: { name: \"Leland\" },\n  LENNON_STELLA: { name: \"Lennon Stella\" },\n  LEON: { name: \"LÉON\" },\n  LILY_ALLEN: { name: \"Lily Allen\" },\n  LISSIE: { name: \"Lissie\" },\n  LITTLE_COMETS: { name: \"Little Comets\" },\n  LITTLE_DRAGON: { name: \"Little Dragon\" },\n  LONDON_GRAMMAR: { name: \"London Grammar\" },\n  LORDE: { name: \"Lorde\" },\n  LUCY_ROSE: { name: \"Lucy Rose\" },\n  LYKKE_LI: { name: \"Lykke Li\" },\n  LYVES: { name: \"Lyves\" },\n  // M\n  MACEO_PLEX: { name: \"Maceo Plex\" },\n  MALLRAT: { name: \"Mallrat\" },\n  MAGGIE_ROGERS: { name: \"Maggie Rogers\" },\n  THE_MAINE: { name: \"Maine, The\" },\n  MAJOR_LAZER: { name: \"Major Lazer\" },\n  MARY_J_BLIGE: { name: \"Mary J. Blige\" },\n  MARINA: { name: \"MARINA\" },\n  MARTIN_SOLVEIG: { name: \"Martin Solveig\" },\n  MELANIE_MARTINEZ: { name: \"Melanie Martinez\" },\n  METRO_STATION: { name: \"Metro Station\" },\n  MICHAEL_KIWANUKA: { name: \"Michael Kiwanuka\" },\n  MIDLAND: { name: \"Midland\" },\n  MIGUEL: { name: \"Miguel\" },\n  MIKE_POSNER: { name: \"Mike Posner\" },\n  MILEY_CYRUS: { name: \"Miley Cyrus\" },\n  MISHA_B: { name: \"Misha B\" },\n  M_0: { name: \"M.O\" },\n  MK: { name: \"MK\" },\n  MNEK: { name: \"MNEK\" },\n  MO: { name: \"MØ\" },\n  MUNA: { name: \"MUNA\" },\n  MURA_MASA: { name: \"Mura Masa\" },\n  // N\n  NAAZ: { name: \"Naaz\" },\n  NAO: { name: \"Nao\" },\n  NASTY_CHERRY: { name: \"Nasty Cherry\" },\n  NATASHA_BEDINGFIELD: { name: \"Natasha Bedingfield\" },\n  NAVVY: { name: \"Navvy\" },\n  NICKI_MINAJ: { name: \"Nicki Minaj\" },\n  NOEL_GALLAGHERS_HIGH_FLYING_BIRDS: {\n    name: \"Noel Gallagher's High Flying Birds\"\n  },\n  // O\n  OH_ANNIE_OH: { name: \"Oh Annie Oh\" },\n  OKAYWILL: { name: \"okaywill\" },\n  // P\n  PALE_WAVES: { name: \"Pale Waves\" },\n  PALOMA_FAITH: { name: \"Paloma Faith\" },\n  PANIC_AT_THE_DISCO: { name: \"Panic! At the Disco\" },\n  PARAMORE: { name: \"Paramore\" },\n  PAUL_WOOLFORD: { name: \"Paul Woolford\" },\n  PET_SHOP_BOYS: { name: \"Pet Shop Boys\" },\n  PHILIP_GEORGE: { name: \"Philip George\" },\n  PRETENDERS: { name: \"Pretenders\" },\n  PVRIS: { name: \"PVRIS\" },\n  // R\n  RAINBOW_KITTEN_SURPRISE: { name: \"Rainbow Kitten Surprise\" },\n  RALEIGH_RITCHIE: { name: \"Raleigh Ritchie\" },\n  RALPH: { name: \"Ralph\" },\n  REDLIGHT: { name: \"Redlight\" },\n  RIHANNA: { name: \"Rihanna\" },\n  RINA_SAWAYAMA: { name: \"Rina Sawayama\" },\n  RITON: { name: \"Riton\" },\n  RIXTON: { name: \"Rixton\" },\n  ROBINSON: { name: \"Robinson\" },\n  ROBYN: { name: \"Robyn\" },\n  ROMY: { name: \"Romy\" },\n  ROOSEVELT: { name: \"Roosevelt\" },\n  ROUTE_94: { name: \"Route 94\" },\n  RYN_WEAVER: { name: \"Ryn Weaver\", favourite: true },\n  RUDIMENTAL: { name: \"Rudimental\" },\n  RUFUS_DU_SOL: { name: \"RÜFÜS DU SOL\" },\n  RYAN_BEATTY: { name: \"Ryan Beatty\" },\n  // S\n  SABRINA_CLAUDIO: { name: \"Sabrina Claudio\" },\n  SAINT_JHN: { name: \"SAINt JHN\" },\n  SAM_SMITH: { name: \"Sam Smith\" },\n  SASHA_SLOAN: { name: \"Sasha Sloan\" },\n  SBTRKT: { name: \"SBTRKT\" },\n  SEEB: { name: \"Seeb\" },\n  SEGA_BODEGA: { name: \"Sega Bodega\" },\n  SEINABO_SEY: { name: \"Seinabo Sey\" },\n  SEVDALIZA: { name: \"Sevdaliza\" },\n  SIA: { name: \"Sia\" },\n  SIGRID: { name: \"Sigrid\" },\n  SISTER_SLEDGE: { name: \"Sister Sledge\" },\n  SKY_FERREIRA: { name: \"Sky Ferreira\", favourite: true },\n  SLIIMY: { name: \"Sliimy\" },\n  SOFI_TUKKER: { name: \"Sofi Tukker\" },\n  SOAK: { name: \"SOAK\" },\n  SONIKKU: { name: \"SONIKKU\" },\n  SOPHIE: { name: \"SOPHIE\" },\n  SOPHIE_ELLIS_BEXTOR: { name: \"Sophie Ellis-Bextor\" },\n  SOUL_WAX: { name: \"Soul Wax\" },\n  THE_SMYTHS: { name: \"Smyths, The\" },\n  THE_SPILL_CANVAS: { name: \"Spill Canvas, The\" },\n  SKREAM: { name: \"Skream\" },\n  SUNDAY_GIRL: { name: \"Sunday Girl\" },\n  // T\n  TAYLOR_SWIFT: { name: \"Taylor Swift\" },\n  TENSNAKE: { name: \"Tensnake\" },\n  TEN_WALLS: { name: \"Ten Walls\" },\n  TERROR_JR: { name: \"Terror Jr\" },\n  TOM_ODELL: { name: \"Tom Odell\" },\n  TORI_KELLY: { name: \"Tori Kelly\" },\n  TOURIST: { name: \"Tourist\" },\n  TOVE_LO: { name: \"Tove Lo\" },\n  TROYE_SIVAN: { name: \"Troye Sivan\" },\n  TULISA: { name: \"Tulisa\" },\n  TWENTY_ONE_PILOTS: { name: \"Twenty One Pilots\" },\n  TWO_FEET: { name: \"Two Feet\" },\n  TYGA: { name: \"Tyga\" },\n  // V\n  VERITE: { name: \"VÉRITÉ\" },\n  // W\n  WE_THE_KINGS: { name: \"We the Kings\" },\n  WILL_YOUNG: { name: \"Will Young\" },\n  // X\n  THE_XX: { name: \"xx, The\" },\n  // Y\n  YEARS_AND_YEARS: { name: \"Years & Years\" },\n  YOU_ME_AT_SIX: { name: \"You Me At Six\" },\n  YOUSEF: { name: \"Yousef\" },\n  // Z\n  ZARA_LARSSON: { name: \"Zara Larsson\" }\n};\n","const MUSIC_VENUES_LONDON: IMusicVenues = {\n  // A\n  ALEXANDRA_PALACE: { name: \"Alexandra Palace\" },\n  ALEXANDRA_PALACE_THEATRE: {\n    name: \"Alexandra Palace Theatre\",\n    favourite: true\n  },\n  // B\n  BRIXTON_ACADEMY: { name: \"Brixton Academy\", favourite: true },\n  BROCKWELL_PARK: { name: \"Brockwell Park\" },\n  // C\n  CAMDEN_ASSEMBLY: { name: \"Camden Assembly\" },\n  CORSICA_STUDIOS: { name: \"Corsica Studios\" },\n  COURTYARD_THEATRE: { name: \"Courtyard Theatre\" },\n  // D\n  DINGWALLS: { name: \"Dingwalls\" },\n  THE_GARAGE: { name: \"Garage, The\" },\n  // E\n  EARTH: { name: \"EartH\" },\n  EGG: { name: \"Egg\" },\n  ELECTRIC_BRIXTON: { name: \"Electric Brixton\" },\n  ELECTROWERKZ: { name: \"Electrowerkz\" },\n  // F\n  FABRIC: { name: \"Fabric\" },\n  FINSBURY_PARK: { name: \"Finsbury Park\" },\n  // H\n  HAMMERSMITH_APOLLO: { name: \"Hammersmith Apollo\" },\n  HEAVEN: { name: \"Heaven\" },\n  HOXTON_HALL: { name: \"Hoxton Hall\" },\n  HOXTON_SQUARE_BAR_AND_KITCHEN: { name: \"Hoxton Square Bar & Kitchen\" },\n  // I\n  ISLINGTON_ASSEMBLY_HALL: { name: \"Islington Assembly Hall\", favourite: true },\n  // K\n  KENTISH_TOWN_FORUM: { name: \"Kentish Town Forum\" },\n  KOKO: { name: \"Koko\", favourite: true },\n  // L\n  LAFAYETTE: { name: \"Lafayette\" },\n  LAYLOW: { name: \"Laylow\" },\n  LONDON_STADIUM: { name: \"London Stadium\" },\n  // M\n  MINISTRY_OF_SOUND: { name: \"Ministry of Sound\" },\n  MOTH_CLUB: { name: \"Moth Club\", favourite: true },\n  // O\n  OLD_BLUE_LAST: { name: \"Old Blue Last\", favourite: true },\n  OMEARA: { name: \"Omeara\" },\n  OSLO_HACKNEY: { name: \"Oslo Hackney\" },\n  OVAL_SPACE: { name: \"Oval Space\" },\n  THE_O2: { name: \"O2, The\" },\n  // P\n  PRINTWORKS: { name: \"Printworks\", favourite: true },\n  // Q\n  QUEEN_OF_HOXTON: { name: \"Queen of Hoxton\" },\n  // R\n  RIDGEWAY_PARK: { name: \"Ridgeway Park\" },\n  ROUNDHOUSE: { name: \"Roundhouse\", favourite: true },\n  ROYAL_ALBERT_HALL: { name: \"Royal Albert Hall\", favourite: true },\n  ROYAL_FESTIVAL_HALL: { name: \"Royal Festival Hall\", favourite: true },\n  // S\n  SCALA: { name: \"Scala\" },\n  SERVANT_JAZZ_QUARTERS: { name: \"Servant Jazz Quarters\" },\n  SHEPHERDS_BUSH_EMPIRE: { name: \"Shepherd's Bush Empire\" },\n  ST_GILES_IN_THE_FIELD: { name: \"St Giles-in-the-Fields\" },\n  // T\n  TOTTENHAM_HOTSPUR_STADIUM: { name: \"Tottenham Hotspur Stadium\" },\n  TWICKENHAM_STADIUM: { name: \"Twickenham Stadium\" },\n  TROXY: { name: \"Troxy\" },\n  // V\n  VICTORIA_PARK: { name: \"Victoria Park\" },\n  VILLAGE_UNDERGROUND: { name: \"Village Underground\" },\n  // W\n  WEMBLEY_STADIUM: { name: \"Wembley Stadium\" },\n  // X\n  XOYO: { name: \"XOYO\" },\n  // Z\n  ZIGFRID_VON_UNDERBELLY: { name: \"Zigfrid von Underbelly\" }\n};\n\nconst MUSIC_VENUES_BIRMINGHAM: IMusicVenues = {\n  // A\n  ACADEMY_BIRMINGHAM: { name: \"Birmingham Academy\" },\n  ACADEMY_2_BIRMINGHAM: { name: \"Birmingham Academy 2\" },\n  ALEXANDRA_THEATRE: { name: \"Alexandra Theatre\" },\n  // B\n  BARFLY_BIRMINGHAM: { name: \"Birmingham Barfly\" },\n  // I\n  INSTITUTE_BIRMINGHAM: { name: \"Birmingham Institute\" },\n  // N\n  NEC_ARENA_BIRMINGHAM: { name: \"Birmingham NEC Arena\" },\n  NIA_ARENA_BIRMINGHAM: { name: \"Birmingham NIA Arena\" }\n};\n\nconst MUSIC_VENUES_NOTTINGHAM: IMusicVenues = {\n  // B\n  BODEGA: { name: \"Bodega\" },\n  ARENA_NOTTINGHAM: { name: \"Nottingham Arena\" },\n  // R\n  RESCUE_ROOMS: { name: \"Rescue Rooms\" },\n  ROCK_CITY: { name: \"Rock City\" },\n  // T\n  TRENT_UNIVERSITY_NOTTINGHAM: { name: \"Nottingham Trent University\" }\n};\n\nconst MUSIC_VENUES_MANCHESTER: IMusicVenues = {\n  // A\n  ACADEMY_MANCHESTER: { name: \"Manchester Academy\" },\n  ACADEMY_2_MANCHESTER: { name: \"Manchester Academy 2\" },\n  ALBERT_HALL_MANCHESTER: { name: \"Manchester Albert Hall\", favourite: true },\n  APOLLO_MANCHESTER: { name: \"Manchester Apollo\" },\n  ARENA_MANCHESTER: { name: \"Manchester Arena\" },\n  // C\n  CASTLEFIELD_BOWL: { name: \"Castlefield Bowl\" },\n  // D\n  DEAF_INSTITUTE: { name: \"Deaf Institute\" },\n  // G\n  GORILLA: { name: \"Gorilla\" },\n  // H\n  HEATON_PARK: { name: \"Heaton Park\" },\n  // R\n  MAYFIELD_DEPOT: { name: \"Mayfield Depot\" },\n  // R\n  RITZ_MANCHESTER: { name: \"Manchester Ritz\" },\n  RUBY_LOUNGE: { name: \"Ruby Lounge\" },\n  // S\n  SANKEYS: { name: \"Sankeys\" },\n  STORE_STREET: { name: \"Store Street\" }\n};\n\nconst MUSIC_VENUES_ELSEWHERE: IMusicVenues = {\n  // C\n  COCKPIT_LEEDS: { name: \"The Cockpit Leeds\" },\n  // D\n  DE_MONTFORT_HALL: { name: \"Leicester De Montfort Hall\" },\n  // E\n  ENGINE_SHED: { name: \"Lincoln Engine Shed\" },\n  // I\n  IFEMA_MADRID: { name: \"IFEMA\" },\n  // L\n  LULWORTH_ESTATE: { name: \"Lulworth Estate\" },\n  // M\n  MOTION: { name: \"Motion\" },\n  // P\n  PRESTON_PARK: { name: \"Preston Park\" },\n  // S\n  SCHWUZ: { name: \"SchwuZ Berlin\", insignificant: true },\n  SHEFFIELD_ARENA: { name: \"Sheffield Arena\" },\n  // T\n  TRESOR: { name: \"Tresor Berlin\", insignificant: true },\n  // W\n  WESTON_PARK: { name: \"Weston Park\" },\n  WOLVERHAMPTON_CIVIC_HALL: { name: \"Wolverhampton Civic Hall\" },\n  WORTHY_FARM: { name: \"Worthy Farm\", favourite: true }\n};\n\nexport const MUSIC_VENUES: IMusicVenues = {\n  ...MUSIC_VENUES_LONDON,\n  ...MUSIC_VENUES_MANCHESTER,\n  ...MUSIC_VENUES_NOTTINGHAM,\n  ...MUSIC_VENUES_BIRMINGHAM,\n  ...MUSIC_VENUES_ELSEWHERE\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FLOUR: IInventoryIngredients = {\n  CORNFLOUR: {\n    displayText: \"cornflour\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.3 }\n  },\n  FLOUR_PLAIN: {\n    displayText: \"plain flour\",\n    cost: { quantity: 1.5, measurement: MEASUREMENTS.KILOGRAM, price: 0.75 }\n  },\n  FLOUR_SELF_RAISING: {\n    displayText: \"self-raising flour\",\n    cost: { quantity: 1.5, measurement: MEASUREMENTS.KILOGRAM, price: 0.75 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SUGAR: IInventoryIngredients = {\n  SUGAR_BROWN: {\n    displayText: \"brown sugar (light or dark)\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  SUGAR_BROWN_DARK: {\n    displayText: \"dark brown sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  SUGAR_BROWN_LIGHT: {\n    displayText: \"light brown sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  SUGAR_CASTER_GOLDEN: {\n    displayText: \"golden caster sugar\",\n    cost: { quantity: 1000, measurement: MEASUREMENTS.GRAM, price: 1.9 }\n  },\n  SUGAR_DEMERARA: {\n    displayText: \"demerara sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  SUGAR_GRANULATED: {\n    displayText: \"granulated sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.55 }\n  },\n  SUGAR_ICING: {\n    displayText: \"icing sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SYRUPS: IInventoryIngredients = {\n  LEMON_EXTRACT: {\n    displayText: \"lemon extract\",\n    cost: { quantity: 38, measurement: MEASUREMENTS.MILLILITRE, price: 1.5 }\n  },\n  NECTAR_AGAVE: {\n    displayText: \"agave nectar\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.MILLILITRE, price: 4 }\n  },\n  SYRUP_GOLDEN: {\n    displayText: \"golden syrup\",\n    cost: { quantity: 600, measurement: MEASUREMENTS.GRAM, price: 1.9 }\n  },\n  VANILLA_EXTRACT: {\n    displayText: \"vanilla extract\",\n    cost: { quantity: 35, measurement: MEASUREMENTS.MILLILITRE, price: 1.3 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nimport { FLOUR } from \"./flour\";\nimport { SUGAR } from \"./sugar\";\nimport { SYRUPS } from \"./syrups\";\n\nexport const BAKING: IInventoryIngredients = {\n  ...FLOUR,\n  ...SUGAR,\n  ...SYRUPS,\n\n  BAKING_POWDER: {\n    displayText: \"baking powder\",\n    cost: { quantity: 170, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  BICARBONATE_OF_SODA: {\n    displayText: \"bicarbonate of soda\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  CHOCOLATE_DARK: {\n    displayText: \"dark chocolate\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 1.7 }\n  },\n  COCOA_POWDER: {\n    displayText: \"cocoa powder\",\n    cost: { quantity: 190, measurement: MEASUREMENTS.GRAM, price: 2.75 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const PASTA: IInventoryIngredients = {\n  SPAGHETTI: {\n    displayText: \"spaghetti\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.6 }\n  },\n  PASTA: { displayText: \"pasta\" },\n  PASTA_LASAGNE_SHEET_DRIED: {\n    displayText: \"dried lasagne sheet\",\n    cost: { quantity: 20, price: 0.7 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const RICE: IInventoryIngredients = {\n  RICE: { displayText: \"rice\" },\n  RICE_BASMATI: {\n    displayText: \"basmati rice\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.1 }\n  },\n  RICE_BROWN: {\n    displayText: \"brown rice\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.85 }\n  },\n  RICE_RISOTTO_ARBORIO: {\n    displayText: \"arborio risotto rice\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.25 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const GRAINS: IInventoryIngredients = {\n  OATS: {\n    displayText: \"oats\",\n    cost: { quantity: 2000, measurement: MEASUREMENTS.GRAM, price: 3 }\n  }\n};\n","import { BREAD } from \"./bread\";\nimport { PASTA } from \"./pasta\";\nimport { RICE } from \"./rice\";\nimport { GRAINS } from \"./grains\";\n\nexport const CARBS: IInventoryIngredients = {\n  ...BREAD,\n  ...PASTA,\n  ...RICE,\n  ...GRAINS,\n\n  POPPADOMS: { displayText: \"poppadoms\" }\n};\n","export const BREAD: IInventoryIngredients = {\n  BREAD_GARLIC: { displayText: \"garlic bread\" },\n  BREAD_SOURDOUGH: { displayText: \"sourdough\" },\n  BREAD_SOURDOUGH_DARK: { displayText: \"dark sourdough\" }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const MILK: IInventoryIngredients = {\n  MILK_COCONUT_CANNED: {\n    displayText: \"coconut milk\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 1 }\n  },\n  MILK_ALMOND_UNSWEETENED: {\n    displayText: \"unsweetened almond milk\",\n    cost: { quantity: 750, measurement: MEASUREMENTS.MILLILITRE, price: 2 }\n  },\n  MILK_OAT: {\n    displayText: \"Oatly\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.LITRE, price: 1.8 }\n  },\n  MILK: {\n    displayText: \"milk\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.LITRE, price: 1 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nimport { MILK } from \"./milk\";\n\nexport const DAIRY: IInventoryIngredients = {\n  ...MILK,\n\n  BUTTER_VEGAN: {\n    displayText: \"dairy-free buttery spread\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  CREAM_OAT: {\n    displayText: \"oat cream\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.MILLILITRE, price: 0.95 }\n  },\n  CHEESE_VEGAN_SLICE: {\n    displayText: \"vegan cheese slices\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 2.6 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FRUIT_DRIED: IInventoryIngredients = {\n  APRICOTS_DRIED: {\n    displayText: \"dried apricots\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 2.7 }\n  },\n  BLUEBERRIES_DRIED: {\n    displayText: \"dried blueberries\",\n    cost: { quantity: 75, measurement: MEASUREMENTS.GRAM, price: 2.25 }\n  },\n  CRANBERRIES_DRIED: {\n    displayText: \"dried cranberries\",\n    cost: { quantity: 75, measurement: MEASUREMENTS.GRAM, price: 1.15 }\n  },\n  RAISINS: {\n    displayText: \"raisins\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.8 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FRUIT_FRESH: IInventoryIngredients = {\n  APPLE_BRAMLEY: {\n    displayText: \"Bramley apple\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.KILOGRAM, price: 2 }\n  },\n  BANANA: {\n    displayText: \"banana\",\n    cost: { quantity: 1, price: 0.2 }\n  },\n  BLACKBERRIES_FRESH: {\n    displayText: \"fresh blackberries\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  },\n  BLUEBERRIES_FRESH: {\n    displayText: \"fresh blueberries\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  LEMON: {\n    displayText: \"lemon\",\n    cost: { quantity: 1, price: 0.3 }\n  },\n  LEMON_LARGE: {\n    displayText: \"large lemon\",\n    cost: { quantity: 1, price: 0.4 }\n  },\n  LIME: {\n    displayText: \"lime\",\n    cost: { quantity: 1, price: 0.3 }\n  },\n  PINEAPPLE: {\n    displayText: \"pineapple\",\n    cost: { quantity: 1, price: 1.1 }\n  },\n  RASPBERRIES_FRESH: {\n    displayText: \"fresh raspberries\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FRUIT_FROZEN: IInventoryIngredients = {\n  BLACKBERRIES_FROZEN: {\n    displayText: \"frozen blackberries\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  RASPBERRIES_FROZEN: {\n    displayText: \"frozen raspberries\",\n    cost: { quantity: 350, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const JUICE = {\n  LEMON_JUICE: {\n    displayText: \"lemon juice\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.MILLILITRE, price: 0.7 }\n  },\n  LEMON_JUICE_FRESH: {\n    displayText: \"fresh lemon juice\",\n    cost: { quantity: 3, measurement: MEASUREMENTS.TABLESPOON, price: 0.3 }\n  },\n  LIME_JUICE_FRESH: {\n    displayText: \"fresh lime juice\",\n    cost: { quantity: 3, measurement: MEASUREMENTS.TABLESPOON, price: 0.5 }\n  }\n};\n","import { FRUIT_DRIED } from \"./dried-fruit\";\nimport { FRUIT_FRESH } from \"./fresh-fruit\";\nimport { FRUIT_FROZEN } from \"./frozen-fruit\";\nimport { JUICE } from \"./juice\";\n\nexport const FRUIT = {\n  ...FRUIT_DRIED,\n  ...FRUIT_FRESH,\n  ...FRUIT_FROZEN,\n  ...JUICE\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const HERBS_DRIED: IInventoryIngredients = {\n  BASIL_DRIED: {\n    displayText: \"dried basil\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  },\n  HERBS_MIXED_DRIED: {\n    displayText: \"dried mixed herbs\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 0.75 }\n  },\n  OREGANO_DRIED: {\n    displayText: \"dried oregano\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  },\n  ROSEMARY_DRIED: {\n    displayText: \"dried rosemary\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  },\n  THYME_DRIED: {\n    displayText: \"dried thyme\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const HERBS_FRESH: IInventoryIngredients = {\n  BASIL_FRESH: {\n    displayText: \"fresh basil\",\n    cost: {\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM,\n      price: 0.75,\n      payFullAmountAlways: true\n    }\n  },\n  CORIANDER_FRESH: {\n    displayText: \"fresh coriander\",\n    cost: {\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM,\n      price: 0.75,\n      payFullAmountAlways: true\n    }\n  },\n  PARSLEY_FRESH: {\n    displayText: \"fresh parsley\",\n    cost: {\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM,\n      price: 0.75,\n      payFullAmountAlways: true\n    }\n  },\n  SAGE_FRESH: {\n    displayText: \"fresh sage\"\n  }\n};\n","import { HERBS_DRIED } from \"./dried-herbs\";\nimport { HERBS_FRESH } from \"./fresh-herbs\";\n\nexport const HERBS: IInventoryIngredients = { ...HERBS_DRIED, ...HERBS_FRESH };\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const BEANS: IInventoryIngredients = {\n  BEANS_BAKED: { displayText: \"baked beans\" },\n  BEANS_HARICOT: {\n    displayText: \"haricot beans\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 0.55 }\n  },\n  BEANS_KIDNEY: {\n    displayText: \"kidney beans\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 0.55 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SEITAN: IInventoryIngredients = {\n  GLUTEN_WHEAT_VITAL: {\n    displayText: \"vital wheat gluten\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.99 }\n  },\n  SEITAN: { displayText: \"seitan\" }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nimport { BEANS } from \"./beans\";\nimport { SEITAN } from \"./seitan\";\n\nexport const PROTEIN: IInventoryIngredients = {\n  ...BEANS,\n  ...SEITAN,\n\n  CHICKPEAS: {\n    displayText: \"chickpeas\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 1 }\n  },\n  EGGS: { displayText: \"egg\", cost: { quantity: 6, price: 2.1 } },\n  LENTIL_RED_DRY: {\n    displayText: \"dry red lentils\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.15 }\n  },\n  TOFU: {\n    displayText: \"tofu\",\n    cost: { quantity: 280, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS, SAINSBURYS_SEASONING_COST } from \"../../measurements\";\n\nexport const DRIED_SEASONING: IInventoryIngredients = {\n  PAPRIKA: {\n    displayText: \"paprika\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  ONION_POWDER: {\n    displayText: \"onion powder\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  GARLIC_GRANULES: {\n    displayText: \"garlic granules\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  PAPRIKA_SMOKED: {\n    displayText: \"smoked paprika\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  TURMERIC_GROUND: {\n    displayText: \"ground turmeric\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  ALLSPICE_GROUND: {\n    displayText: \"ground allspice\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  CHILLI_POWDER: {\n    displayText: \"chilli powder\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  CINNAMON_GROUND: {\n    displayText: \"ground cinnamon\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  CHILLI_CRUSHED_DRIED: {\n    displayText: \"dried crushed chillis\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  NUTMEG_GROUND: {\n    displayText: \"ground nutmeg\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  YEAST_NUTRITIONAL: {\n    displayText: \"nutritional yeast flakes\",\n    cost: { quantity: 125, measurement: MEASUREMENTS.GRAM, price: 3.4 }\n  },\n  STOCK_POWDER_VEGAN: {\n    displayText: \"vegan stock powder\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const OILS: IInventoryIngredients = {\n  OIL_OLIVE: {\n    displayText: \"olive oil\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.MILLILITRE, price: 3 }\n  },\n  OIL_SUNFLOWER: {\n    displayText: \"sunflower oil\",\n    cost: { quantity: 1000, measurement: MEASUREMENTS.MILLILITRE, price: 1.2 }\n  }\n};\n","export const UNICODE: { [character: string]: string } = {\n  // INGREDIENTS\n  JALAPENOS: \"jalape\\u00f1os\",\n  TOMATO_PUREE: \"tomato pur\\u00e9e\",\n\n  // FRACTIONS\n  QUARTER: \"\\u00bc\",\n  THIRD: \"\\u2153\",\n  HALF: \"\\u00bd\",\n  TWO_THIRDS: \"\\u2154\",\n  THREE_QUARTERS: \"\\u00be\",\n\n  // MISC\n  DEGREES_CELCIUS: \"\\u00b0C\"\n};\n","import { MEASUREMENTS } from \"../../measurements\";\nimport { UNICODE } from \"../../unicode\";\n\nexport const PASTES: IInventoryIngredients = {\n  CURRY_PASTE_MADRAS: {\n    displayText: \"Madras curry paste\",\n    cost: { quantity: 283, measurement: MEASUREMENTS.GRAM, price: 2.25 }\n  },\n  CURRY_PASTE_ROGAN_JOSH: {\n    displayText: \"Rogan Josh curry paste\",\n    cost: { quantity: 283, measurement: MEASUREMENTS.GRAM, price: 2.3 }\n  },\n  TOMATO_PUREE: {\n    displayText: UNICODE.TOMATO_PUREE,\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 0.5 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SALT: IInventoryIngredients = {\n  SALT_BLACK: {\n    displayText: \"black salt (kala namak)\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 2.9 }\n  },\n  SALT_TABLE: {\n    displayText: \"table salt\",\n    cost: { price: 0 }\n  },\n  SALT_ROCK_FRESH: {\n    displayText: \"freshly ground rock salt\",\n    cost: { price: 0 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SAUCES: IInventoryIngredients = {\n  LIQUID_SMOKE: {\n    displayText: \"liquid smoke\",\n    cost: { quantity: 475, measurement: MEASUREMENTS.MILLILITRE, price: 6.7 }\n  },\n  SOY_SAUCE: {\n    displayText: \"soy sauce\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.MILLILITRE, price: 0.7 }\n  },\n  KETCHUP_TOMATO: {\n    displayText: \"tomato ketchup\",\n    cost: { quantity: 570, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  SRIRACHA: {\n    displayText: \"sriracha\",\n    cost: { quantity: 455, measurement: MEASUREMENTS.MILLILITRE, price: 3.1 }\n  },\n  SWEET_CHILLI_SAUCE: {\n    displayText: \"sweet chilli sauce\",\n    cost: { quantity: 230, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VINEGARS: IInventoryIngredients = {\n  VINEGAR_BALSAMIC: {\n    displayText: \"balsamic vinegar\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.MILLILITRE, price: 2 }\n  },\n  VINEGAR_CIDER: {\n    displayText: \"cider vinegar\",\n    cost: { quantity: 350, measurement: MEASUREMENTS.MILLILITRE, price: 1.6 }\n  },\n  VINEGAR_WHITE_WINE: {\n    displayText: \"white wine vinegar\",\n    cost: { quantity: 350, measurement: MEASUREMENTS.MILLILITRE, price: 1.6 }\n  }\n};\n","import { MEASUREMENTS, SAINSBURYS_SEASONING_COST } from \"../../measurements\";\n\nimport { DRIED_SEASONING } from \"./dried-seasoning\";\nimport { OILS } from \"./oils\";\nimport { PASTES } from \"./pastes\";\nimport { SALT } from \"./salt\";\nimport { SAUCES } from \"./sauces\";\nimport { VINEGARS } from \"./vinegars\";\n\nexport const SEASONING: IInventoryIngredients = {\n  ...DRIED_SEASONING,\n  ...OILS,\n  ...PASTES,\n  ...SALT,\n  ...SAUCES,\n  ...VINEGARS,\n\n  PEPPER_BLACK_FRESH: {\n    displayText: \"freshly ground black pepper\",\n    cost: { price: 0 }\n  },\n  PEPPER_BLACK_GROUND: {\n    displayText: \"ground black pepper\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  WINE_RED: {\n    displayText: \"red wine\",\n    cost: { quantity: 750, measurement: MEASUREMENTS.MILLILITRE, price: 6.5 }\n  },\n  CHILLI_RED_FRESH: {\n    displayText: \"fresh red chilli\",\n    cost: { quantity: 2, price: 0.6 }\n  },\n  CHILLI_BIRD_EYE_FRESH: {\n    displayText: \"bird eye chillies\",\n    cost: { quantity: 20, measurement: MEASUREMENTS.GRAM, price: 0.7 }\n  },\n  GINGER_FRESH: {\n    displayText: \"fresh ginger\",\n    cost: { payFullAmountAlways: true, price: 0.3 }\n  },\n  NUTMEG_FRESH: {\n    displayText: \"freshly grated whole nutmeg\",\n    cost: SAINSBURYS_SEASONING_COST\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const NUTS: IInventoryIngredients = {\n  NUTS_CASHEWS: {\n    displayText: \"cashew nuts\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 3 }\n  },\n  NUTS_PINE: {\n    displayText: \"pine nuts\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 3.6 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SEEDS: IInventoryIngredients = {\n  SEEDS_CHIA: {\n    displayText: \"chia seeds\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  },\n  SEEDS_POPPY: {\n    displayText: \"poppy seeds\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 0.9 }\n  },\n  SEEDS_FLAX_GROUND: {\n    displayText: \"ground flax seeds\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 4 }\n  },\n  SEEDS_PUMPKIN: {\n    displayText: \"pumpkin seeds\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  SEEDS_SESAME: {\n    displayText: \"sesame seeds\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  SEEDS_SUNFLOWER: {\n    displayText: \"sunflower seeds\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 1 }\n  }\n};\n","import { NUTS } from \"./nuts\";\nimport { SEEDS } from \"./seeds\";\n\nexport const NUTS_AND_SEEDS: IInventoryIngredients = { ...NUTS, ...SEEDS };\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VEG_CANNED: IInventoryIngredients = {\n  TOMATO_CHOPPED: {\n    displayText: \"chopped tomatoes\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 0.5 }\n  },\n  TOMATO_PASSATA: {\n    displayText: \"passata\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.45 }\n  },\n  TOMATO_SUN_DRIED: {\n    displayText: \"sun dried tomatoes\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.JAR, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VEG_FRESH: IInventoryIngredients = {\n  ASPARAGUS: { displayText: \"asparagus\" },\n  AUBERGINE: { displayText: \"aubergine\", cost: { quantity: 1, price: 0.7 } },\n  BEANS_GREEN: {\n    displayText: \"green beans\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  BROCCOLI: { displayText: \"broccoli\", cost: { quantity: 1, price: 0.7 } },\n  BUTTERNUT_SQUASH: {\n    displayText: \"butternut squash\",\n    cost: { quantity: 1, price: 1.5 }\n  },\n  CARROT: { displayText: \"carrot\", cost: { quantity: 1, price: 0.12 } },\n  CAULIFLOWER_REGULAR: {\n    displayText: \"cauliflower\",\n    cost: { quantity: 1, price: 1 }\n  },\n  CELERY_STICK: {\n    displayText: \"celery stick\",\n    cost: { quantity: 1, price: 0.3 }\n  },\n  COURGETTE: { displayText: \"courgette\", cost: { quantity: 1, price: 0.35 } },\n  GARLIC_CLOVE: {\n    displayText: \"garlic clove\",\n    cost: { quantity: 10, price: 0.3 }\n  },\n  KALE: {\n    displayText: \"kale\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1.05 }\n  },\n  LEEK: { displayText: \"leek\", cost: { quantity: 1, price: 0.7 } },\n  MUSHROOMS: {\n    displayText: \"mushrooms\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  MUSHROOMS_CHESTNUT: {\n    displayText: \"chestnut mushrooms\",\n    cost: { quantity: 300, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  ONION_WHITE_MEDIUM: {\n    displayText: \"white onion\",\n    cost: { quantity: 1, price: 0.2 }\n  },\n  ONION_RED_MEDIUM: {\n    displayText: \"red onion\",\n    cost: { quantity: 1, price: 0.25 }\n  },\n  ONION_SPRING: {\n    displayText: \"spring onion\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 0.55 }\n  },\n  PEPPER_RED: { displayText: \"red pepper\", cost: { quantity: 1, price: 0.5 } },\n  PEPPER_GREEN: {\n    displayText: \"green pepper\",\n    cost: { quantity: 1, price: 0.5 }\n  },\n  PEPPER_ORANGE: {\n    displayText: \"orange pepper\",\n    cost: { quantity: 1, price: 0.5 }\n  },\n  PEPPER_MIXED: {\n    displayText: \"mixed pepper\",\n    cost: { quantity: 3, price: 1.3 }\n  },\n  POTATO_MARIS_PIPER: { displayText: \"Maris Piper potatoes\" },\n  POTATO_BAKING: {\n    displayText: \"baking potato\",\n    cost: { quantity: 1, price: 0.4 }\n  },\n  POTATO_SWEET: {\n    displayText: \"sweet potato\",\n    cost: { quantity: 1, price: 0.5 }\n  },\n  SPINACH: {\n    displayText: \"spinach\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VEG_FROZEN: IInventoryIngredients = {\n  PETITS_POIS_FROZEN: {\n    displayText: \"frozen petits pois\",\n    cost: { quantity: 910, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  },\n  VEGETABLES_MIXED_FROZEN: {\n    displayText: \"frozen mixed vegetables\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.KILOGRAM, price: 1.3 }\n  }\n};\n","import { VEG_CANNED } from \"./canned-veg\";\nimport { VEG_FRESH } from \"./fresh-veg\";\nimport { VEG_FROZEN } from \"./frozen-veg\";\n\nexport const VEG: IInventoryIngredients = {\n  ...VEG_CANNED,\n  ...VEG_FRESH,\n  ...VEG_FROZEN\n};\n","import { BAKING } from \"./baking\";\nimport { CARBS } from \"./carbs\";\nimport { DAIRY } from \"./dairy\";\nimport { FRUIT } from \"./fruit\";\nimport { HERBS } from \"./herbs\";\nimport { PROTEIN } from \"./protein\";\nimport { SEASONING } from \"./seasoning\";\nimport { NUTS_AND_SEEDS } from \"./nuts-seeds\";\nimport { VEG } from \"./veg\";\n\nexport const INGREDIENTS: IInventoryIngredients = {\n  ...BAKING,\n  ...CARBS,\n  ...DAIRY,\n  ...FRUIT,\n  ...HERBS,\n  ...NUTS_AND_SEEDS,\n  ...PROTEIN,\n  ...SEASONING,\n  ...VEG,\n\n  WATER: { displayText: \"water\", cost: { price: 0 } },\n  WATER_BOILING: { displayText: \"boiling water\", cost: { price: 0 } }\n};\n","interface I_PAGE_SECTION_TYPES {\n  RECIPES: IPageSecionType;\n  COUNTED_LIST: IPageSecionType;\n  EVENT_CARDS: IPageSecionType;\n}\n\nexport const PAGE_SECTION_TYPES: I_PAGE_SECTION_TYPES = {\n  RECIPES: \"recipes\",\n  COUNTED_LIST: \"counted-list\",\n  EVENT_CARDS: \"event-cards\"\n};\n\ninterface IEventCardTypes {\n  GIG: IEventCardType;\n  THEATRE: IEventCardType;\n  TRIP: IEventCardType;\n}\n\nexport const EVENT_CARD_TYPES: IEventCardTypes = {\n  GIG: \"gig\",\n  THEATRE: \"theatre\",\n  TRIP: \"trip\"\n};\n\ninterface AllPageSectionTitles {\n  ACTOR: IPageSectionDetails;\n  ATTRACTION: IPageSectionDetails;\n  BUCKET_LIST: IPageSectionDetails;\n  CITY: IPageSectionDetails;\n  COUNTRY: IPageSectionDetails;\n  FESTIVAL: IPageSectionDetails;\n  HIGHLIGHT: IPageSectionDetails;\n  ISLAND: IPageSectionDetails;\n  FRIEND: IPageSectionDetails;\n  MUSICIAN: IPageSectionDetails;\n  MUSIC_VENUES: IPageSectionDetails;\n  REGION: IPageSectionDetails;\n  PLAY: IPageSectionDetails;\n  THEATRE_VENUES: IPageSectionDetails;\n  TOWN: IPageSectionDetails;\n  THEME_PARK: IPageSectionDetails;\n  UP_NEXT: IPageSectionDetails;\n  RECIPES_COMING_SOON: IPageSectionDetails;\n}\n\nconst actor: string = \"actors\";\nconst attraction: string = \"attractions\";\nconst city: string = \"cities\";\nconst country: string = \"countries\";\nconst festival: string = \"festivals\";\nconst friend: string = \"friends\";\nconst highlight: string = \"highlights\";\nconst island: string = \"islands\";\nconst musician: string = \"artists\";\nconst musicVenue: string = \"venues\";\nconst play: string = \"plays\";\nconst region: string = \"regions\";\nconst theatreVenue: string = \"theatres\";\nconst town: string = \"towns\";\n\nexport const PAGE_SECTIONS: AllPageSectionTitles = {\n  ACTOR: { title: actor, id: actor, type: PAGE_SECTION_TYPES.COUNTED_LIST },\n  ATTRACTION: {\n    title: attraction,\n    id: attraction,\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  },\n  BUCKET_LIST: {\n    title: \"bucket list\",\n    id: \"bucket-list\",\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  },\n  CITY: { title: city, id: city, type: PAGE_SECTION_TYPES.COUNTED_LIST },\n  COUNTRY: {\n    title: country,\n    id: country,\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  },\n  FESTIVAL: {\n    title: festival,\n    id: festival,\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  },\n  FRIEND: { title: friend, id: friend, type: PAGE_SECTION_TYPES.COUNTED_LIST },\n  ISLAND: { title: island, id: island, type: PAGE_SECTION_TYPES.COUNTED_LIST },\n  HIGHLIGHT: {\n    title: highlight,\n    id: highlight,\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  },\n  MUSICIAN: {\n    title: musician,\n    id: musician,\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  },\n  MUSIC_VENUES: {\n    title: musicVenue,\n    id: musicVenue,\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  },\n  REGION: { title: region, id: region, type: PAGE_SECTION_TYPES.COUNTED_LIST },\n  PLAY: { title: play, id: play, type: PAGE_SECTION_TYPES.COUNTED_LIST },\n  THEATRE_VENUES: {\n    title: theatreVenue,\n    id: theatreVenue,\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  },\n  THEME_PARK: {\n    title: \"theme parks\",\n    id: \"theme-parks\",\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  },\n  TOWN: { title: town, id: town, type: PAGE_SECTION_TYPES.COUNTED_LIST },\n  UP_NEXT: {\n    title: \"up next\",\n    id: \"up-next\",\n    type: PAGE_SECTION_TYPES.EVENT_CARDS\n  },\n  RECIPES_COMING_SOON: {\n    title: \"coming soon\",\n    id: \"coming-soon\",\n    type: PAGE_SECTION_TYPES.COUNTED_LIST\n  }\n};\n","export const PLAYS: IPlays = {\n  // 123\n  \"1984\": { name: \"1984\" },\n  \"4000_MILES\": { name: \"4000 Miles\" },\n  // A\n  AFTERGLOW: { name: \"Afterglow\" },\n  // C\n  CONSENT: { name: \"Consent\" },\n  // D\n  DUST: { name: \"Dust\" },\n  // E\n  EVERYBODYS_TALKING_ABOUT_JAMIE: { name: \"Everybody's Talking About Jamie\" },\n  // F\n  FERRYMAN: { name: \"Ferryman, The\" },\n  FROZEN: { name: \"Frozen\" },\n  // H\n  HOME_IM_DARLING: { name: \"Home, I'm Darling\" },\n  // I\n  INHERITANCE: { name: \"Inheritance, The\" },\n  // K\n  KINKY_BOOTS: { name: \"Kinky Boots\" },\n  // L\n  LEAVE_TO_REMAIN: { name: \"Leave to Remain\" },\n  LOST_UNFOUND: { name: \"Lost Unfound\" },\n  LUNGS: { name: \"Lungs\" },\n  // M\n  MATILDA: { name: \"Matilda\" },\n  MIDSUMMER_NIGHTS_DREAM: { name: \"A Midsummer Night's Dream\" },\n  // S\n  SON: { name: \"The Son\" },\n  // T\n  THAT_GIRL: { name: \"That Girl\" },\n  // U\n  UGLY_LIES_THE_BONE: { name: \"Ugly Lies the Bone\" },\n  UNCLE_VANYA: { name: \"Uncle Vanya\" },\n  // W\n  WAITRESS: { name: \"Waitress\" },\n  WICKED: { name: \"Wicked\" },\n  // Y\n  YOUNG_MARX: { name: \"Young Marx\" }\n};\n","const LONDON: ITheatreVenues = {\n  // A\n  ADELPHI: { name: \"Adelphi Theatre\" },\n  APOLLO: { name: \"Apollo Theatre\" },\n  APOLLO_VICTORIA: { name: \"Apollo Victoria Theatre\" },\n  // B\n  BRIDGE: { name: \"Bridge Theatre\" },\n  // C\n  CAMBRIDGE: { name: \"Cambridge Theatre\" },\n  // D\n  DUKE_OF_YORKS: { name: \"Duke of York's Theatre\" },\n  // G\n  GIELGUD: { name: \"Gielgud Theatre\" },\n  // H\n  HAROLD_PINTER: { name: \"Harold Pinter Theatre\" },\n  // L\n  LYRIC: { name: \"Lyric Hammersmith\" },\n  // N\n  NATIONAL: { name: \"National Theatre\" },\n  NOEL_COWARD: { name: \"Noël Coward Theatre\" },\n  // O\n  OLD_RED_LION: { name: \"Old Red Lion Theatre\" },\n  OLD_VIC: { name: \"The Old Vic\" },\n  // P\n  PLAYHOUSE: { name: \"Playhouse Theatre\" },\n  // R\n  ROYAL_HAYMARKET: { name: \"Theatre Royal Haymarket\" },\n  // T\n  TRAFALGAR_STUDIOS: { name: \"Trafalgar Studios\" },\n  // W\n  WATERLOO_EAST: { name: \"Waterloo East Theatre\" },\n  WHITE_BEAR: { name: \"White Bear Theatre\" }\n};\n\nconst STRATFORD: ITheatreVenues = {\n  ROYAL_SHAKESPEARE: { name: \"Royal Shakespeare Theatre\" }\n};\n\nexport const THEATRE_VENUES: ITheatreVenues = {\n  ...LONDON,\n  ...STRATFORD\n};\n","export const TICKET_TYPES: ITicketTypes = {\n  // A\n  AXS_MOBILE_APP: \"AXS app ticket\",\n  // D\n  DICE: \"Dice mobile ticket\",\n  // F\n  FESTICKET_PDF: \"Festicket e-Ticket PDF\",\n  // G\n  GIGS_AND_TOURS_POSTAL: \"Gigs and Tours postal ticket\",\n  // K\n  KABOODLE_ETICKET: \"Kaboodle eTicket\",\n  // S\n  SEE_TICKETS_PRINT_AT_HOME: \"SeeTickets print-at-home\",\n  // T\n  TICKETWEB: `Ticketweb PDF`,\n  TICKETMASTER_ETICKET: \"Ticketmaster eTicket\"\n};\n","export { ACTORS } from \"./actors\";\nexport { DIETS } from \"./diets\";\nexport { FESTIVALS } from \"./festivals\";\nexport { FRIENDS } from \"./friends\";\nexport { LOCATIONS } from \"./locations\";\nexport { MEASUREMENTS, SAINSBURYS_SEASONING_COST } from \"./measurements\";\nexport { MUSICIANS } from \"./musicians\";\nexport { MUSIC_VENUES } from \"./music-venues\";\nexport { INGREDIENTS } from \"./ingredients\";\nexport {\n  PAGE_SECTIONS,\n  EVENT_CARD_TYPES,\n  PAGE_SECTION_TYPES\n} from \"./page-sections\";\nexport { PLAYS } from \"./plays\";\nexport { THEATRE_VENUES } from \"./theatre-venues\";\nexport { TICKET_TYPES } from \"./ticket-types\";\nexport { UNICODE } from \"./unicode\";\n\nexport const NO_UNIT_COST_FOR_RECIPE_EXISTS: string =\n  \"NO_UNIT_COST_FOR_RECIPE_EXISTS\";\n\nexport const DAYS_OF_THE_WEEK: Array<string> = [\n  \"Sun\",\n  \"Mon\",\n  \"Tue\",\n  \"Wed\",\n  \"Thu\",\n  \"Fri\",\n  \"Sat\"\n];\n\nexport const MONTHS: Array<string> = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\"\n];\n","export const numberToCurrencyString = (\n  number: number,\n  decimalPrecision?: number\n): string => {\n  if (decimalPrecision && decimalPrecision === 1)\n    return `£${(Math.round(number * 10) / 10).toFixed(2)}`;\n\n  // Default to 2dp (£1.89)\n  return `£${(Math.round(number * 100) / 100).toFixed(2)}`;\n};\n","import { MEASUREMENTS } from \"../../constants\";\n\nexport const concatenateQuantityAndMeasurement = (\n  displayQuantity: string,\n  measurement: IIngredientMeasurement\n) => {\n  if (\n    measurement === MEASUREMENTS.GRAM ||\n    measurement === MEASUREMENTS.KILOGRAM ||\n    measurement === MEASUREMENTS.MILLILITRE ||\n    measurement === MEASUREMENTS.CENTIMETRE ||\n    measurement === MEASUREMENTS.LITRE\n  ) {\n    // 2 + g = 2g\n    return displayQuantity + measurement;\n  }\n\n  if (\n    measurement === MEASUREMENTS.TEASPOON ||\n    measurement === MEASUREMENTS.TABLESPOON\n  ) {\n    // 2 + tsp = 2 tsp\n    return displayQuantity + \" \" + measurement;\n  }\n\n  if (measurement === MEASUREMENTS.JAR || measurement === MEASUREMENTS.CAN) {\n    if (parseInt(displayQuantity) > 1)\n      return displayQuantity + \" \" + measurement + \"s\";\n    return displayQuantity + \" \" + measurement;\n  }\n\n  return displayQuantity;\n};\n","import { convertIngredientQuantity } from \"./convertIngredientQuantity\";\n\ntype ICalculateIngredientCost = {\n  ingredient: IInventoryIngredient;\n  quantity?: IIngredientQuantity;\n  measurement: IIngredientMeasurement;\n};\n\nexport const calculateIngredientCost = ({\n  ingredient,\n  quantity,\n  measurement\n}: ICalculateIngredientCost): number => {\n  if (!quantity) return 0;\n\n  let [ingredientQuantity, ingredientMeasurement] = [quantity, measurement];\n\n  // Extract the attached inventory cost information\n  const inventory = ingredient.cost;\n  const inventoryQuantity = inventory && inventory.quantity;\n  const inventoryMeasurement = inventory && inventory.measurement;\n  const inventoryPrice = inventory && inventory.price;\n\n  // Charge nothing for zero-cost items or items (water, salt, pepper)\n  if (inventoryPrice === 0 || (!ingredientQuantity && !ingredientMeasurement))\n    return 0;\n\n  // Certain items like fresh herbs will cost the full amount always\n  //@ts-ignore\n  if (inventory && inventory.payFullAmountAlways) return inventoryPrice;\n\n  // If ingredient and inventory MEASUREMENTS don't already match, attempt to make them match\n  if (ingredientMeasurement !== inventoryMeasurement) {\n    ingredientQuantity = convertIngredientQuantity(\n      ingredientQuantity,\n      ingredientMeasurement,\n      inventoryMeasurement\n    );\n\n    ingredientMeasurement = inventoryMeasurement;\n  }\n\n  // Now the ingredient and inventory MEASUREMENTS should match, perform simple proportion calculation\n  if (\n    ingredientMeasurement === inventoryMeasurement ||\n    (!ingredientMeasurement && !inventoryMeasurement)\n  )\n    //@ts-ignore\n    return (ingredientQuantity / inventoryQuantity) * inventoryPrice;\n\n  // If the ingredient and inventory MEASUREMENTS still don't match, throw a deliberate error\n  alert(\"ERROR\");\n  return 0;\n};\n","import { MEASUREMENTS } from \"../../constants\";\n\nexport const convertIngredientQuantity = (\n  ingredientQuantity: IIngredientQuantity,\n  ingredientMeasurement: IIngredientMeasurement,\n  inventoryMeasurement: IIngredientMeasurement\n): number => {\n  switch (true) {\n    // 1 tsp = 5.9ml\n    case ingredientMeasurement === MEASUREMENTS.TEASPOON &&\n      inventoryMeasurement === MEASUREMENTS.MILLILITRE:\n      return ingredientQuantity * 5.9;\n\n    // 1 tbsp = 17.8ml\n    case ingredientMeasurement === MEASUREMENTS.TABLESPOON &&\n      inventoryMeasurement === MEASUREMENTS.MILLILITRE:\n      return ingredientQuantity * 17.8;\n\n    // 1000g = 1kg, 1000 ml = 1L\n    case (ingredientMeasurement === MEASUREMENTS.GRAM &&\n      inventoryMeasurement === MEASUREMENTS.KILOGRAM) ||\n      (ingredientMeasurement === MEASUREMENTS.MILLILITRE &&\n        inventoryMeasurement === MEASUREMENTS.LITRE):\n      return ingredientQuantity / 1000;\n\n    // 1kg = 1000g, 1L = 1000ml\n    case (ingredientMeasurement === MEASUREMENTS.KILOGRAM &&\n      inventoryMeasurement === MEASUREMENTS.GRAM) ||\n      (ingredientMeasurement === MEASUREMENTS.LITRE &&\n        inventoryMeasurement === MEASUREMENTS.MILLILITRE):\n      return ingredientQuantity * 1000;\n\n    // 1 tbsp = 3tsp\n    case ingredientMeasurement === MEASUREMENTS.TABLESPOON &&\n      inventoryMeasurement === MEASUREMENTS.TEASPOON:\n      return ingredientQuantity * 3;\n\n    // 3 tsp = 1 tsp\n    case ingredientMeasurement === MEASUREMENTS.TEASPOON &&\n      inventoryMeasurement === MEASUREMENTS.TABLESPOON:\n      return ingredientQuantity / 3;\n\n    // ROUGH ESTIMATE: 1 tbsp = 12g\n    case ingredientMeasurement === MEASUREMENTS.TABLESPOON &&\n      inventoryMeasurement === MEASUREMENTS.GRAM:\n      return ingredientQuantity * 12;\n\n    // ROUGH ESTIMATE: 1 tsp = 4g\n    case ingredientMeasurement === MEASUREMENTS.TEASPOON &&\n      inventoryMeasurement === MEASUREMENTS.GRAM:\n      return ingredientQuantity * 4;\n\n    default:\n      alert(\"ERROR!\");\n      return 0;\n  }\n};\n","export const turnTheSuffixIntoPrefix = (word: string): string => {\n  const THE_SUFFIX = \", The\";\n\n  if (word.slice(-5) === THE_SUFFIX)\n    return `The ${word.substring(0, word.length - THE_SUFFIX.length)}`;\n\n  return word;\n};\n","import { turnTheSuffixIntoPrefix } from \"./turnTheSuffixIntoPrefix\";\n\nexport const formatData = (inputData: any | Array<any>): string | null => {\n  if (!inputData) return null;\n\n  if (!Array.isArray(inputData))\n    return inputData.name && turnTheSuffixIntoPrefix(inputData.name);\n\n  const array = inputData.map(\n    item => item.name && turnTheSuffixIntoPrefix(item.name)\n  );\n\n  if (array.length === 2) return array[0] + \" & \" + array[1];\n  if (array.length === 3) return array[0] + \", \" + array[1] + \" & \" + array[2];\n\n  let outputString: string = \"\";\n\n  for (let i = 0; i < array.length; i++) {\n    outputString += i === array.length - 1 ? array[i] : `${array[i]}, `;\n  }\n\n  return outputString;\n};\n","const yesterday = (): number => {\n  const today: Date = new Date();\n  return today.setDate(today.getDate() - 1);\n};\n\nexport const isInFuture = (dates: Array<Date>): boolean => {\n  const dateToCompare: number = dates[0].valueOf();\n  return dateToCompare > yesterday();\n};\n","import { PAGE_SECTIONS } from \"../../constants\";\n\nimport { isInFuture } from \"./isInFuture\";\n\ninterface ILookupFunction {\n  dataItem: UnknownTypeDataItem;\n  pageSectionTitle: IPageSectionDetails;\n  itemToMatch: any;\n}\nconst musicianMatchExists = ({\n  dataItem,\n  itemToMatch,\n  pageSectionTitle\n}: ILookupFunction): boolean =>\n  pageSectionTitle === PAGE_SECTIONS.MUSICIAN &&\n  (dataItem.headline === itemToMatch ||\n    (dataItem.support && dataItem.support.includes(itemToMatch)) ||\n    (dataItem.lineup && dataItem.lineup.includes(itemToMatch)));\n\nconst actorMatchExists = ({\n  dataItem,\n  itemToMatch,\n  pageSectionTitle\n}: ILookupFunction): boolean =>\n  pageSectionTitle === PAGE_SECTIONS.ACTOR &&\n  dataItem.cast &&\n  dataItem.cast.includes(itemToMatch);\n\nconst playMatchExists = ({\n  dataItem,\n  itemToMatch,\n  pageSectionTitle\n}: ILookupFunction): boolean =>\n  pageSectionTitle === PAGE_SECTIONS.PLAY && dataItem.play === itemToMatch;\n\nconst friendMatchExists = ({\n  dataItem,\n  itemToMatch,\n  pageSectionTitle\n}: ILookupFunction): boolean =>\n  pageSectionTitle === PAGE_SECTIONS.FRIEND &&\n  dataItem.company &&\n  dataItem.company.includes(itemToMatch);\n\nconst theatreVenueMatchExists = ({\n  dataItem,\n  itemToMatch,\n  pageSectionTitle\n}: ILookupFunction): boolean =>\n  pageSectionTitle === PAGE_SECTIONS.THEATRE_VENUES &&\n  dataItem.theatre === itemToMatch;\n\nconst festivalMatchExists = ({\n  dataItem,\n  itemToMatch,\n  pageSectionTitle\n}: ILookupFunction): boolean =>\n  pageSectionTitle === PAGE_SECTIONS.FESTIVAL &&\n  dataItem.festival === itemToMatch;\n\nconst musicVenueMatchExists = ({\n  dataItem,\n  itemToMatch,\n  pageSectionTitle\n}: ILookupFunction): boolean =>\n  pageSectionTitle === PAGE_SECTIONS.MUSIC_VENUES &&\n  dataItem.venue === itemToMatch;\n\nconst countryCityTownMatchExists = ({\n  dataItem,\n  itemToMatch,\n  pageSectionTitle\n}: ILookupFunction): boolean =>\n  (pageSectionTitle === PAGE_SECTIONS.COUNTRY ||\n    pageSectionTitle === PAGE_SECTIONS.ATTRACTION ||\n    pageSectionTitle === PAGE_SECTIONS.REGION ||\n    pageSectionTitle === PAGE_SECTIONS.TOWN ||\n    pageSectionTitle === PAGE_SECTIONS.ISLAND ||\n    pageSectionTitle === PAGE_SECTIONS.CITY) &&\n  ((dataItem.title && dataItem.title.includes(itemToMatch)) ||\n    (dataItem.hidden && dataItem.hidden.includes(itemToMatch)) ||\n    (dataItem.subtitle && dataItem.subtitle.includes(itemToMatch)));\n\ninterface IGetPageSectionItemCounts {\n  itemToCount: any;\n  pageSectionTitle: IPageSectionDetails;\n  data: Array<UnknownTypeDataItem>;\n}\n\ntype UnknownTypeDataItem = any;\n\nexport const getPageSectionItemCounts = ({\n  itemToCount,\n  pageSectionTitle,\n  data\n}: IGetPageSectionItemCounts) => {\n  let pastCount: number = 0;\n  let futureCount: number = 0;\n\n  data.map((dataItem: UnknownTypeDataItem) => {\n    const params: ILookupFunction = {\n      pageSectionTitle,\n      dataItem,\n      itemToMatch: itemToCount\n    };\n\n    if (\n      musicianMatchExists(params) ||\n      festivalMatchExists(params) ||\n      friendMatchExists(params) ||\n      musicVenueMatchExists(params) ||\n      playMatchExists(params) ||\n      theatreVenueMatchExists(params) ||\n      countryCityTownMatchExists(params) ||\n      actorMatchExists(params)\n    ) {\n      if (isInFuture(dataItem.dates)) {\n        futureCount += 1;\n      } else {\n        pastCount += 1;\n      }\n    }\n\n    return null;\n  });\n\n  return { futureCount, pastCount };\n};\n","import { PAGE_SECTIONS } from \"../../constants\";\n\ntype UnknownTypeDataItem = any;\ninterface IItemIsFavourited {\n  itemToInspect: any;\n  pageSectionTitle: IPageSectionDetails;\n  favouritedData: Array<UnknownTypeDataItem>;\n}\n\nexport const itemIsFavourited = ({\n  itemToInspect,\n  pageSectionTitle,\n  favouritedData\n}: IItemIsFavourited) => {\n  let itemIsFavourited = false;\n\n  favouritedData.map((dataItem: UnknownTypeDataItem) => {\n    if (\n      (pageSectionTitle === PAGE_SECTIONS.MUSICIAN &&\n        itemToInspect === dataItem.headline) ||\n      (pageSectionTitle === PAGE_SECTIONS.PLAY &&\n        itemToInspect === dataItem.play)\n    )\n      itemIsFavourited = true;\n    return null;\n  });\n\n  return itemIsFavourited;\n};\n","import { CONSOLE_LOG_RECIPE_COST_CALCULATIONS } from \"../../config\";\nimport { NO_UNIT_COST_FOR_RECIPE_EXISTS } from \"../../constants\";\n\nimport {\n  numberToCurrencyString,\n  consoleLogCostedIngredient,\n  consoleLogRecipeTitle,\n  calculateIngredientCost\n} from \"../local\";\n\ninterface ICalculateRecipeCost {\n  ingredients: IRecipeIngredients;\n  yieldQuantity?: IIngredientQuantity;\n  recipeTitle: string;\n}\n\nexport const calculateRecipeCost = ({\n  ingredients,\n  yieldQuantity,\n  recipeTitle\n}: ICalculateRecipeCost): { displayCost: string; displayUnitCost: string } => {\n  if (CONSOLE_LOG_RECIPE_COST_CALCULATIONS) consoleLogRecipeTitle(recipeTitle);\n\n  let runningRecipeCost: number = 5;\n\n  ingredients.map(ingredientSection => {\n    ingredientSection.map(recipeIngredient => {\n      // @ts-ignore\n      runningRecipeCost += calculateIngredientCost(recipeIngredient);\n\n      if (CONSOLE_LOG_RECIPE_COST_CALCULATIONS) {\n        const { quantity, measurement, ingredient } = recipeIngredient;\n        //@ts-ignore\n        consoleLogCostedIngredient({ cost, quantity, measurement, ingredient });\n      }\n\n      return null;\n    });\n    return null;\n  });\n\n  const unitCost: number | undefined =\n    yieldQuantity && runningRecipeCost / yieldQuantity;\n  const displayCost: string = numberToCurrencyString(runningRecipeCost, 1);\n  const displayUnitCost: string = unitCost\n    ? numberToCurrencyString(unitCost, 1)\n    : NO_UNIT_COST_FOR_RECIPE_EXISTS;\n\n  return { displayCost, displayUnitCost };\n};\n","interface IGenerateChildItemsFromParentItems {\n  childItems: string;\n  parentItems: Object;\n  parentFlag?: string;\n}\n\nexport const generateChildItemsFromParentItems = ({\n  childItems,\n  parentItems,\n  parentFlag\n}: IGenerateChildItemsFromParentItems) => {\n  const parentObject: Array<any> = Object.values(parentItems);\n\n  return (\n    [].concat\n      .apply(\n        [],\n        //@ts-ignore\n        parentObject\n          .filter(item => item[childItems])\n          .map(item =>\n            //@ts-ignore\n            Object.values(item[childItems]).filter(item => item.name)\n          )\n      )\n      //@ts-ignore\n      .concat(parentObject.filter(item => item[parentFlag]))\n  );\n};\n","import {\n  convertDecimalToFraction,\n  concatenateQuantityAndMeasurement\n} from \"../local\";\n\nconst POTATO = \"potato\";\n\nexport const generateIngredientListItem = ({\n  quantity,\n  measurement,\n  ingredient,\n  optional,\n  notes\n}: IRecipeIngredient): string => {\n  const ingredientText: string = ingredient.displayText;\n\n  // Can we return the ingredient with no measurement, i.e. \"freshly ground rock salt\"\n  if (!quantity && !measurement) return ingredientText;\n\n  // Do we need to turn a decimal to a more aesthetically-pleasing fraction?\n  //@ts-ignore\n  const displayQuantity: string = convertDecimalToFraction(quantity);\n\n  // Ensure it says \"2 limes\" instead of \"2 lime\" or \"3 potatoes\" instead of \"3 potato\"\n  const displayIngredient: string =\n    //@ts-ignore\n    quantity > 1 && !measurement\n      ? ingredientText.slice(-POTATO.length) === POTATO\n        ? ingredientText + \"es\"\n        : ingredientText + \"s\"\n      : ingredientText;\n\n  // Establish if there will be a space between the quantity and the unit of measurement\n  const displayQuantityMeasurement = concatenateQuantityAndMeasurement(\n    displayQuantity,\n    measurement\n  );\n\n  // Concatenate the quantity and measurement with the ingredient itself\n  const displayQuantityMeasurementIngredients =\n    displayQuantityMeasurement + \" \" + displayIngredient;\n\n  // Append the ingredient notes or \"optional\" text if required\n  return optional\n    ? displayQuantityMeasurementIngredients + \" (optional)\"\n    : notes\n    ? `${displayQuantityMeasurementIngredients} (${notes})`\n    : displayQuantityMeasurementIngredients;\n};\n","import { UNICODE } from \"../../constants\";\n\nexport const convertDecimalToFraction = (decimal: number): string => {\n  switch (decimal) {\n    case 0.25:\n      return UNICODE.QUARTER;\n    case 0.5:\n      return UNICODE.HALF;\n    case 1.5:\n      return 1 + UNICODE.HALF;\n    case 2.5:\n      return 2 + UNICODE.HALF;\n    case 3.5:\n      return 3 + UNICODE.HALF;\n    default:\n      return decimal.toString();\n  }\n};\n","import { PAGE_SECTIONS } from \"../../constants\";\n\nimport {\n  isInFuture,\n  formatData,\n  getPageSectionItemCounts,\n  itemIsFavourited\n} from \"../local\";\n\ninterface IGenerateSectionData {\n  items: any;\n  pageSectionTitle: IPageSectionDetails;\n  filter: IFilter;\n  allData: Array<any>;\n  favouritedData: Array<any>;\n  upcomingMode: boolean;\n  bucketListMode: boolean;\n}\n\nexport const generateSectionData = ({\n  items,\n  pageSectionTitle,\n  filter,\n  allData,\n  favouritedData,\n  upcomingMode,\n  bucketListMode\n}: IGenerateSectionData) => {\n  //@ts-ignore\n  if (upcomingMode) return allData.filter(item => isInFuture(item.dates));\n\n  //@ts-ignore\n  const mapToListEntry = item => {\n    const { pastCount, futureCount } = getPageSectionItemCounts({\n      itemToCount: item,\n      pageSectionTitle,\n      data: allData\n    });\n\n    return {\n      listEntry: formatData(item),\n      ignoreCountInfo: item.insignificant || bucketListMode,\n      pastCount,\n      futureCount,\n      favourite:\n        item.favourite ||\n        itemIsFavourited({\n          itemToInspect: item,\n          pageSectionTitle,\n          favouritedData\n        }),\n      star: item.capital\n    };\n  };\n\n  const data = Object.values(items)\n    //@ts-ignore\n    .filter(item => (filter ? item[filter] : true))\n    .sort((a, b) =>\n      //@ts-ignore\n      (a.name ? a.name : a)\n        .toLowerCase()\n        //@ts-ignore\n        .localeCompare((b.name ? b.name : b).toLowerCase())\n    )\n    .map(item => mapToListEntry(item))\n    .filter(({ futureCount, pastCount }) =>\n      bucketListMode ? futureCount === 0 && pastCount === 0 : true\n    )\n    // DO NOT INCLUDE VENUES I'VE NEVER GONE TO ON THE WEBSITE, e.g. \"Lafayette\" venu\n    .filter(\n      ({ futureCount, ignoreCountInfo, pastCount }) =>\n        ignoreCountInfo || futureCount !== 0 || pastCount !== 0\n    );\n\n  return pageSectionTitle === PAGE_SECTIONS.FRIEND\n    ? data\n        .sort((a, b) => (a.futureCount > b.futureCount ? -1 : 1))\n        .sort((a, b) => (a.pastCount > b.pastCount ? -1 : 1))\n    : data;\n};\n","import { EVENT_CARD_TYPES } from \"../../constants\";\n\nimport { formatData, isInFuture } from \"../local\";\n\ninterface IMapDataToEventCards {\n  data: Array<UnformattedEventItem>;\n  eventType: IEventCardType;\n}\n\ntype UnformattedEventItem = any;\n\nexport const mapDataToEventCards = ({\n  data,\n  eventType\n}: IMapDataToEventCards): Array<IEventCard> => {\n  const mapDataToEventCard = ({\n    title,\n    subtitle,\n    headline,\n    festival,\n    support,\n    lineup,\n    dates,\n    venue,\n    favourite,\n    company,\n    ticketType,\n    play,\n    cast,\n    theatre\n  }: any): IEventCard => ({\n    //@ts-ignore\n    title: formatData(\n      title\n        ? title\n        : eventType === EVENT_CARD_TYPES.GIG\n        ? headline\n          ? headline\n          : festival\n        : eventType === EVENT_CARD_TYPES.THEATRE\n        ? play\n        : null\n    ),\n    //@ts-ignore\n    subtitle: formatData(\n      subtitle\n        ? subtitle\n        : eventType === EVENT_CARD_TYPES.GIG\n        ? lineup\n          ? lineup\n          : support\n        : eventType === EVENT_CARD_TYPES.THEATRE\n        ? cast\n        : null\n    ),\n    //@ts-ignore\n    body: formatData(\n      eventType === EVENT_CARD_TYPES.GIG\n        ? venue\n        : eventType === EVENT_CARD_TYPES.THEATRE\n        ? theatre\n        : null\n    ),\n    dates,\n    company: company.sort((a: IFriend, b: IFriend) =>\n      a.initials > b.initials ? 1 : -1\n    ),\n    eventType,\n    favourite,\n    disclaimer:\n      eventType === EVENT_CARD_TYPES.GIG && isInFuture(dates) && ticketType\n  });\n\n  return data.map((item: UnformattedEventItem) => mapDataToEventCard(item));\n};\n","import { PAGE_SECTION_TYPES } from \"../../constants\";\n\nimport { isInFuture } from \"../local\";\n\nimport { mapDataToEventCards } from \"./mapDataToEventCards\";\n\ntype SingleYearData = Array<any>;\ntype IMapYearGroupsToSections = {\n  years: Array<SingleYearData>;\n  eventType: IEventCardType;\n};\n\nexport const mapYearGroupsToSections = ({\n  years,\n  eventType\n}: IMapYearGroupsToSections): Array<IPageSection> => {\n  const mapYearGroupToSection = (year: SingleYearData): IPageSection => {\n    const title = year[0].dates[0].getFullYear();\n\n    return {\n      details: { id: title, title, type: PAGE_SECTION_TYPES.EVENT_CARDS },\n      showSectionLength: true,\n      data: mapDataToEventCards({ data: year, eventType }).filter(\n        (item: any) => !isInFuture(item.dates)\n      )\n    };\n  };\n\n  return years.map((year: any) => mapYearGroupToSection(year));\n};\n","import { UNICODE } from \"../../constants\";\n\ninterface IBakeForAbout {\n  minutes: number;\n  skewer?: boolean;\n  wellRisen?: boolean;\n}\ninterface IPreheatOven {\n  degreesCelcius: number;\n  bakingTray?: boolean;\n}\ninterface ITransferToLoafTin {\n  sunkenCentre?: boolean;\n}\ninterface IRecipeMethodEntries {\n  FOLD_IN_FLOUR_MIX: string;\n  LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN: string;\n  MAKE_FLAX_EGG: string;\n  bakeForAbout: (parms: IBakeForAbout) => string;\n  preheatOven: (parms: IPreheatOven) => string;\n  transferToLoafTin: (parms: ITransferToLoafTin) => string;\n}\n\nexport const recipeMethodEntries = (): IRecipeMethodEntries => {\n  const FOLD_IN_FLOUR_MIX: string =\n    \"in small batches, sieve the flour mix into the mixture and gently fold in until there are no more flour pockets\";\n  const LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN: string =\n    \"leave to cool before removing from loaf tin\";\n  const MAKE_FLAX_EGG: string =\n    \"make flax egg by stirring ground flax seeds with water and leaving to rest for at least 5 minutes until it thickens\";\n\n  const bakeForAbout = ({\n    minutes,\n    skewer = false,\n    wellRisen = false\n  }: IBakeForAbout): string => {\n    const defaultText = `bake for about ${minutes} minutes`;\n    const additionalText =\n      (skewer && \"just until skewer runs clean\") ||\n      (wellRisen && \"until well-risen and slightly golden\");\n\n    if (!additionalText) return defaultText;\n    return `${defaultText} (${additionalText})`;\n  };\n\n  const preheatOven = ({\n    degreesCelcius,\n    bakingTray = false\n  }: IPreheatOven): string => {\n    const ovenTemperature = degreesCelcius + UNICODE.DEGREES_CELCIUS;\n\n    if (!bakingTray) return \"preheat oven to \" + ovenTemperature;\n    return \"preheat baking tray in oven at \" + ovenTemperature;\n  };\n\n  const transferToLoafTin = ({\n    sunkenCentre = false\n  }: ITransferToLoafTin): string => {\n    const defaultText = \"transfer mixture to non-stick loaf tin\";\n    const additionalText =\n      sunkenCentre &&\n      \"create slightly sunken centre to help the cake rise more evenly\";\n\n    if (!additionalText) return defaultText;\n    return `${defaultText} (${additionalText})`;\n  };\n\n  return {\n    FOLD_IN_FLOUR_MIX,\n    LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN,\n    MAKE_FLAX_EGG,\n    bakeForAbout,\n    preheatOven,\n    transferToLoafTin\n  };\n};\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2006: Array<IGigData> = [\n  {\n    headline: MUSICIANS.ALL_AMERICAN_REJECTS,\n    dates: [new Date(\"2006-09-23\")],\n    venue: MUSIC_VENUES.APOLLO_MANCHESTER,\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2007: Array<IGigData> = [\n  {\n    headline: MUSICIANS.FALL_OUT_BOY,\n    support: [MUSICIANS.COBRA_STARSHIP],\n    dates: [new Date(\"2007-04-03\")],\n    venue: MUSIC_VENUES.APOLLO_MANCHESTER,\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    festival: FESTIVALS.DECAYDANCE,\n    lineup: [\n      MUSICIANS.COBRA_STARSHIP,\n      MUSICIANS.THE_ACADEMY_IS,\n      MUSICIANS.GYM_CLASS_HEROES,\n      MUSICIANS.PANIC_AT_THE_DISCO,\n      MUSICIANS.FALL_OUT_BOY\n    ],\n    dates: [new Date(\"2007-08-22\")],\n    venue: MUSIC_VENUES.HAMMERSMITH_APOLLO,\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN],\n    favourite: true\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2008: Array<IGigData> = [\n  {\n    headline: MUSICIANS.KATE_NASH,\n    support: [MUSICIANS.BLACK_KIDS],\n    venue: MUSIC_VENUES.WOLVERHAMPTON_CIVIC_HALL,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2008-03-01\")]\n  },\n  {\n    headline: MUSICIANS.PANIC_AT_THE_DISCO,\n    support: [MUSICIANS.METRO_STATION],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.MEGAN, FRIENDS.MUM, FRIENDS.EMMA],\n    dates: [new Date(\"2008-03-15\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.ADELE,\n    venue: MUSIC_VENUES.ALEXANDRA_THEATRE,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2008-05-04\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BOYS_LIKE_GIRLS,\n    support: [MUSICIANS.WE_THE_KINGS, MUSICIANS.CUTE_IS_WHAT_WE_AIM_FOR],\n    venue: MUSIC_VENUES.ACADEMY_2_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN],\n    dates: [new Date(\"2008-05-31\")]\n  },\n  {\n    headline: MUSICIANS.THE_ACADEMY_IS,\n    support: [MUSICIANS.WE_THE_KINGS, MUSICIANS.THE_MAINE],\n    venue: MUSIC_VENUES.BARFLY_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.MEGAN, FRIENDS.EMMA],\n    dates: [new Date(\"2008-09-20\")]\n  },\n  {\n    headline: MUSICIANS.FALL_OUT_BOY,\n    support: [MUSICIANS.BOYS_LIKE_GIRLS, MUSICIANS.YOU_ME_AT_SIX],\n    venue: MUSIC_VENUES.NEC_ARENA_BIRMINGHAM,\n    dates: [new Date(\"2008-10-19\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2009: Array<IGigData> = [\n  {\n    headline: MUSICIANS.FALL_OUT_BOY,\n    support: [MUSICIANS.HEY_MONDAY, MUSICIANS.KIDS_IN_GLASS_HOUSES],\n    dates: [new Date(\"2009-03-05\")],\n    company: [FRIENDS.MUM, FRIENDS.MEGAN, FRIENDS.EMMA],\n    venue: MUSIC_VENUES.ARENA_MANCHESTER\n  },\n  {\n    headline: MUSICIANS.YOU_ME_AT_SIX,\n    support: [MUSICIANS.EMAROSA, MUSICIANS.THE_SPILL_CANVAS],\n    dates: [new Date(\"2009-03-07\")],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.MEGAN, FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.KATY_PERRY,\n    support: [MUSICIANS.SLIIMY],\n    favourite: true,\n    dates: [new Date(\"2009-08-25\")],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.LOUISE, FRIENDS.MEGAN, FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    support: [MUSICIANS.THE_XX],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    dates: [new Date(\"2009-09-20\")],\n    favourite: true,\n    company: [FRIENDS.DAD]\n  },\n  {\n    headline: MUSICIANS.ALL_TIME_LOW,\n    support: [MUSICIANS.THE_FRIDAY_NIGHT_BOYS, MUSICIANS.AUDITION],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    dates: [new Date(\"2009-10-02\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.ARCTIC_MONKEYS,\n    dates: [new Date(\"2009-11-22\")],\n    company: [FRIENDS.MUM, FRIENDS.DAD],\n    venue: MUSIC_VENUES.ARENA_NOTTINGHAM\n  },\n  {\n    headline: MUSICIANS.PARAMORE,\n    support: [MUSICIANS.YOU_ME_AT_SIX],\n    venue: MUSIC_VENUES.NIA_ARENA_BIRMINGHAM,\n    dates: [new Date(\"2009-12-11\")],\n    company: [FRIENDS.MEGAN, FRIENDS.EMMA, FRIENDS.MUM]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2010: Array<IGigData> = [\n  {\n    headline: MUSICIANS.YOU_ME_AT_SIX,\n    support: [MUSICIANS.WE_THE_KINGS, MUSICIANS.FOREVER_THE_SICKEST_KIDS],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    dates: [new Date(\"2010-03-09\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    support: [MUSICIANS.DRUMS],\n    venue: MUSIC_VENUES.WOLVERHAMPTON_CIVIC_HALL,\n    company: [FRIENDS.DAD, FRIENDS.EMMA, FRIENDS.MUM],\n    dates: [new Date(\"2010-05-10\")]\n  },\n  {\n    headline: MUSICIANS.PALOMA_FAITH,\n    support: [MUSICIANS.ELIZA_DOOLITTLE],\n    venue: MUSIC_VENUES.DE_MONTFORT_HALL,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2010-11-05\")]\n  },\n  {\n    headline: MUSICIANS.MARINA,\n    venue: MUSIC_VENUES.TRENT_UNIVERSITY_NOTTINGHAM,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2010-11-07\")]\n  },\n  {\n    headline: MUSICIANS.ELLIE_GOULDING,\n    support: [MUSICIANS.SUNDAY_GIRL],\n    venue: MUSIC_VENUES.ENGINE_SHED,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2010-11-08\")]\n  },\n  {\n    headline: MUSICIANS.PARAMORE,\n    support: [MUSICIANS.B_O_B],\n    venue: MUSIC_VENUES.SHEFFIELD_ARENA,\n    company: [FRIENDS.EMMA, FRIENDS.MEGAN, FRIENDS.MUM],\n    dates: [new Date(\"2010-11-11\")]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2011: Array<IGigData> = [\n  {\n    headline: MUSICIANS.KATE_NASH,\n    support: [MUSICIANS.BRIGITTE_APHRODITE],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.TONYA, FRIENDS.KIRSTEN],\n    dates: [new Date(\"2011-03-22\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.KATY_PERRY,\n    venue: MUSIC_VENUES.ARENA_NOTTINGHAM,\n    company: [FRIENDS.JESS, FRIENDS.BLAINE, FRIENDS.ELLIE_S, FRIENDS.POOJA],\n    dates: [new Date(\"2011-03-30\")]\n  },\n  {\n    headline: MUSICIANS.ADELE,\n    support: [MUSICIANS.MICHAEL_KIWANUKA],\n    venue: MUSIC_VENUES.INSTITUTE_BIRMINGHAM,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2011-04-18\")]\n  },\n  {\n    headline: MUSICIANS.ADELE,\n    support: [MUSICIANS.AMOS_LEE],\n    venue: MUSIC_VENUES.DE_MONTFORT_HALL,\n    company: [FRIENDS.EMMA, FRIENDS.MUM],\n    dates: [new Date(\"2011-09-13\")]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2012: Array<IGigData> = [\n  {\n    headline: MUSICIANS.SBTRKT,\n    support: [MUSICIANS.DISCLOSURE],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2012-02-28\")]\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    venue: MUSIC_VENUES.NEC_ARENA_BIRMINGHAM,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2012-03-13\")]\n  },\n  {\n    headline: MUSICIANS.LITTLE_COMETS,\n    venue: MUSIC_VENUES.COCKPIT_LEEDS,\n    company: [FRIENDS.EMMA],\n    dates: [new Date(\"2012-04-23\")]\n  },\n  {\n    headline: MUSICIANS.KATE_NASH,\n    venue: MUSIC_VENUES.BODEGA,\n    company: [FRIENDS.TONYA, FRIENDS.SONYA, FRIENDS.KIRSTEN],\n    dates: [new Date(\"2012-06-22\")]\n  },\n  {\n    headline: MUSICIANS.MARINA,\n    venue: MUSIC_VENUES.INSTITUTE_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    dates: [new Date(\"2012-06-29\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.LADY_GAGA,\n    venue: MUSIC_VENUES.TWICKENHAM_STADIUM,\n    company: [FRIENDS.EMMA],\n    dates: [new Date(\"2012-09-08\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.NICKI_MINAJ,\n    support: [MUSICIANS.MISHA_B, MUSICIANS.TYGA],\n    venue: MUSIC_VENUES.ARENA_NOTTINGHAM,\n    company: [FRIENDS.ELLIE_S, FRIENDS.BLAINE],\n    dates: [new Date(\"2012-10-21\")]\n  },\n  {\n    headline: MUSICIANS.LITTLE_COMETS,\n    venue: MUSIC_VENUES.RESCUE_ROOMS,\n    company: [FRIENDS.SARAH_W, FRIENDS.BETH_SH],\n    dates: [new Date(\"2012-10-31\")]\n  },\n  {\n    headline: MUSICIANS.THE_KILLERS,\n    venue: MUSIC_VENUES.SHEFFIELD_ARENA,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2012-11-08\")]\n  },\n  {\n    headline: MUSICIANS.BEN_HOWARD,\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.STEVE_R],\n    dates: [new Date(\"2012-11-22\")]\n  },\n  {\n    headline: MUSICIANS.ELLIE_GOULDING,\n    venue: MUSIC_VENUES.ROCK_CITY,\n    favourite: true,\n    company: [FRIENDS.BLAINE, FRIENDS.JESS, FRIENDS.ELLIE_G],\n    dates: [new Date(\"2012-12-11\")]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2013: Array<IGigData> = [\n  {\n    headline: MUSICIANS.BASTILLE,\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2013-03-21\")]\n  },\n  {\n    headline: MUSICIANS.RIHANNA,\n    venue: MUSIC_VENUES.NEC_ARENA_BIRMINGHAM,\n    company: [FRIENDS.JESS],\n    dates: [new Date(\"2013-07-18\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.CHRVCHES,\n    venue: MUSIC_VENUES.RITZ_MANCHESTER,\n    company: [FRIENDS.SIMAN],\n    dates: [new Date(\"2013-10-14\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2014: Array<IGigData> = [\n  {\n    headline: MUSICIANS.FOXES,\n    venue: MUSIC_VENUES.RUBY_LOUNGE,\n    company: [FRIENDS.SIMAN],\n    dates: [new Date(\"2014-03-08\")]\n  },\n  {\n    headline: MUSICIANS.CLEAN_BANDIT,\n    venue: MUSIC_VENUES.ACADEMY_2_MANCHESTER,\n    company: [FRIENDS.SIAN],\n    dates: [new Date(\"2014-05-07\")]\n  },\n  {\n    headline: MUSICIANS.LORDE,\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2014-06-05\")]\n  },\n  {\n    festival: FESTIVALS.PARKLIFE,\n    lineup: [\n      MUSICIANS.FOXES,\n      MUSICIANS.ROUTE_94,\n      MUSICIANS.REDLIGHT,\n      MUSICIANS.BREACH,\n      MUSICIANS.RUDIMENTAL,\n      MUSICIANS.ELLA_EYRE,\n      MUSICIANS.CLEAN_BANDIT,\n      MUSICIANS.SAM_SMITH,\n      MUSICIANS.LONDON_GRAMMAR,\n      MUSICIANS.BASTILLE,\n      MUSICIANS.DISCLOSURE\n    ],\n    venue: MUSIC_VENUES.HEATON_PARK,\n    company: [FRIENDS.JESS, FRIENDS.POOJA, FRIENDS.TONYA],\n    dates: [new Date(\"2014-06-07\"), new Date(\"2014-06-08\")]\n  },\n  {\n    headline: MUSICIANS.SBTRKT,\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.THOM],\n    dates: [new Date(\"2014-09-30\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [\n      MUSICIANS.JAX_JONES,\n      MUSICIANS.DUKE_DUMONT,\n      MUSICIANS.CYRIL_HAHN,\n      MUSICIANS.FRIEND_WITHIN\n    ],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2014-10-04\")]\n  },\n  {\n    headline: MUSICIANS.CLEAN_BANDIT,\n    support: [MUSICIANS.YEARS_AND_YEARS],\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.SIAN],\n    dates: [new Date(\"2014-10-17\")]\n  },\n  {\n    headline: MUSICIANS.LADY_GAGA,\n    venue: MUSIC_VENUES.ARENA_MANCHESTER,\n    company: [FRIENDS.SIMAN],\n    dates: [new Date(\"2014-10-21\")]\n  },\n  {\n    headline: MUSICIANS.SAM_SMITH,\n    support: [MUSICIANS.TORI_KELLY],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2014-10-28\")]\n  },\n  {\n    headline: MUSICIANS.CHRVCHES,\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.SIMAN],\n    dates: [new Date(\"2014-11-06\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [\n      MUSICIANS.KIDNAP,\n      MUSICIANS.BONDAX,\n      MUSICIANS.GORGON_CITY,\n      MUSICIANS.REDLIGHT\n    ],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.AMY_B, FRIENDS.ELLE_O],\n    dates: [new Date(\"2014-11-07\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [\n      MUSICIANS.GEORGE_FITZGERALD,\n      MUSICIANS.SKREAM,\n      MUSICIANS.PAUL_WOOLFORD,\n      MUSICIANS.GREEN_VELVET\n    ],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.ALEX_FAYE],\n    dates: [new Date(\"2014-11-15\")]\n  },\n  {\n    headline: MUSICIANS.LA_ROUX,\n    venue: MUSIC_VENUES.RITZ_MANCHESTER,\n    company: [FRIENDS.EMMA],\n    dates: [new Date(\"2014-11-16\")]\n  },\n  {\n    headline: MUSICIANS.LADY_GAGA,\n    support: [MUSICIANS.LADY_STARLIGHT],\n    venue: MUSIC_VENUES.SHEFFIELD_ARENA,\n    company: [FRIENDS.GRACE],\n    dates: [new Date(\"2014-11-20\")]\n  },\n  {\n    headline: MUSICIANS.LILY_ALLEN,\n    venue: MUSIC_VENUES.APOLLO_MANCHESTER,\n    company: [FRIENDS.SIAN],\n    dates: [new Date(\"2014-11-25\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [MUSICIANS.MIDLAND, MUSICIANS.JOY_ORBISON, MUSICIANS.DUSKY],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.EMMA, FRIENDS.BECKY, FRIENDS.NATALIE],\n    dates: [new Date(\"2014-12-06\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2015: Array<IGigData> = [\n  {\n    festival: FESTIVALS.TRANSMISSION,\n    lineup: [MUSICIANS.TEN_WALLS, MUSICIANS.DUSKY, MUSICIANS.YOUSEF],\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.CHLOE, FRIENDS.AMY_B, FRIENDS.BETH_SP],\n    dates: [new Date(\"2015-02-07\")]\n  },\n  {\n    festival: FESTIVALS.TRIBAL_SESSIONS,\n    lineup: [MUSICIANS.JOSH_BUTLER, MUSICIANS.BONTAN, MUSICIANS.GREEN_VELVET],\n    venue: MUSIC_VENUES.SANKEYS,\n    company: [FRIENDS.TONYA, FRIENDS.ALEX_FAYE],\n    dates: [new Date(\"2015-02-13\")]\n  },\n  {\n    festival: FESTIVALS.TRANSMISSION,\n    lineup: [MUSICIANS.JAX_JONES, MUSICIANS.DUKE_DUMONT, MUSICIANS.BLONDE],\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.BETH_SP],\n    dates: [new Date(\"2015-02-27\")]\n  },\n  {\n    festival: FESTIVALS.TRANSMISSION,\n    lineup: [MUSICIANS.EATS_EVERYTHING, MUSICIANS.CARL_COX],\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.SONYA, FRIENDS.TONYA, FRIENDS.ALEX_FAYE],\n    dates: [new Date(\"2015-04-03\")]\n  },\n  {\n    headline: MUSICIANS.ARIANA_GRANDA,\n    support: [MUSICIANS.RIXTON],\n    venue: MUSIC_VENUES.ARENA_MANCHESTER,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2015-06-04\")]\n  },\n  {\n    festival: FESTIVALS.PARKLIFE,\n    lineup: [\n      MUSICIANS.BONDAX,\n      MUSICIANS.JUSTIN_MARTIN,\n      MUSICIANS.JULIO_BASHMORE,\n      MUSICIANS.TENSNAKE,\n      MUSICIANS.JAMES_BAY,\n      MUSICIANS.MK,\n      MUSICIANS.DANIEL_AVERY,\n      MUSICIANS.BAAUER,\n      MUSICIANS.DUSKY,\n      MUSICIANS.DAVID_RODIGAN,\n      MUSICIANS.GEORGE_FITZGERALD,\n      MUSICIANS.KAYTRANADA,\n      MUSICIANS.TEN_WALLS\n    ],\n    venue: MUSIC_VENUES.HEATON_PARK,\n    company: [\n      FRIENDS.SONYA,\n      FRIENDS.TONYA,\n      FRIENDS.AMY_B,\n      FRIENDS.ELLE_O,\n      FRIENDS.CHLOE\n    ],\n    dates: [new Date(\"2015-06-06\"), new Date(\"2015-06-07\")]\n  },\n  {\n    festival: FESTIVALS.GLASTONBURY,\n    lineup: [\n      MUSICIANS.JAMES_BAY,\n      MUSICIANS.MARY_J_BLIGE,\n      MUSICIANS.SBTRKT,\n      MUSICIANS.CARIBOU,\n      MUSICIANS.FLORENCE_AND_THE_MACHINE,\n      MUSICIANS.MACEO_PLEX,\n      MUSICIANS.DUSKY,\n      MUSICIANS.SKREAM,\n      MUSICIANS.GEORGE_EZRA,\n      MUSICIANS.YEARS_AND_YEARS,\n      MUSICIANS.JESSIE_WARE,\n      MUSICIANS.BEN_HOWARD,\n      MUSICIANS.KANYE_WEST,\n      MUSICIANS.JAMIE_JONES,\n      MUSICIANS.FOUR_TET,\n      MUSICIANS.THE_SMYTHS,\n      MUSICIANS.SOAK,\n      MUSICIANS.SEINABO_SEY,\n      MUSICIANS.CHARLI_XCX,\n      MUSICIANS.GROOVE_ARMADA,\n      MUSICIANS.JAMIE_T,\n      MUSICIANS.CHEMICAL_BROTHERS\n    ],\n    venue: MUSIC_VENUES.WORTHY_FARM,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.GRACE,\n      FRIENDS.ELLIE_G,\n      FRIENDS.EMMA,\n      FRIENDS.THOM,\n      FRIENDS.FANNY,\n      FRIENDS.HANNA\n    ],\n    dates: [new Date(\"2015-06-26\"), new Date(\"2015-06-28\")]\n  },\n  {\n    headline: MUSICIANS.NOEL_GALLAGHERS_HIGH_FLYING_BIRDS,\n    support: [MUSICIANS.JOHNNY_MARR],\n    venue: MUSIC_VENUES.CASTLEFIELD_BOWL,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2015-07-11\")]\n  },\n  {\n    headline: MUSICIANS.MIGUEL,\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.SIAN],\n    dates: [new Date(\"2015-10-18\")]\n  },\n  {\n    headline: MUSICIANS.CHRVCHES,\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2015-11-19\")]\n  },\n  {\n    headline: MUSICIANS.LISSIE,\n    venue: MUSIC_VENUES.ACADEMY_2_MANCHESTER,\n    dates: [new Date(\"2015-12-05\")],\n    company: [],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.FABRIC_NYE,\n    lineup: [MUSICIANS.GEORGE_FITZGERALD, MUSICIANS.EATS_EVERYTHING],\n    venue: MUSIC_VENUES.FABRIC,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.SONYA,\n      FRIENDS.FANNY,\n      FRIENDS.HANNA,\n      FRIENDS.LAURA\n    ],\n    dates: [new Date(\"2015-12-31\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2016: Array<IGigData> = [\n  {\n    headline: MUSICIANS.HALSEY,\n    support: [MUSICIANS.BORNS],\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2016-02-22\")]\n  },\n  {\n    headline: MUSICIANS.JOSEF_SALVAT,\n    venue: MUSIC_VENUES.GORILLA,\n    favourite: true,\n    company: [],\n    dates: [new Date(\"2016-03-06\")]\n  },\n  {\n    headline: MUSICIANS.TROYE_SIVAN,\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2016-04-18\")]\n  },\n  {\n    headline: MUSICIANS.TOURIST,\n    venue: MUSIC_VENUES.DEAF_INSTITUTE,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2016-05-10\")]\n  },\n  {\n    festival: FESTIVALS.GLASTONBURY,\n    lineup: [\n      MUSICIANS.NAO,\n      MUSICIANS.CHRISTINE_AND_THE_QUEENS,\n      MUSICIANS.AURORA,\n      MUSICIANS.DAUGHTER,\n      MUSICIANS.DISCLOSURE,\n      MUSICIANS.CARL_COX,\n      MUSICIANS.FOUR_TET,\n      MUSICIANS.MACEO_PLEX,\n      MUSICIANS.ALESSIA_CARA,\n      MUSICIANS.TOM_ODELL,\n      MUSICIANS[1975],\n      MUSICIANS.WILL_YOUNG,\n      MUSICIANS.ADELE,\n      MUSICIANS.RALEIGH_RITCHIE,\n      MUSICIANS.YEARS_AND_YEARS,\n      MUSICIANS.ELLIE_GOULDING,\n      MUSICIANS.GRIMES\n    ],\n    venue: MUSIC_VENUES.WORTHY_FARM,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.ELLIE_G,\n      FRIENDS.GRACE,\n      FRIENDS.CAITLIN,\n      FRIENDS.ELLIE_P,\n      FRIENDS.THOM\n    ],\n    dates: [new Date(\"2016-06-24\"), new Date(\"2016-06-26\")]\n  },\n  {\n    headline: MUSICIANS.BEYONCE,\n    venue: MUSIC_VENUES.WEMBLEY_STADIUM,\n    company: [FRIENDS.EMMA],\n    dates: [new Date(\"2016-07-03\")],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.LOVEBOX,\n    lineup: [\n      MUSICIANS.MO,\n      MUSICIANS.RITON,\n      MUSICIANS.DIPLO,\n      MUSICIANS.PAUL_WOOLFORD,\n      MUSICIANS.HEIDI,\n      MUSICIANS.HANNAH_WANTS,\n      MUSICIANS.JORIS_VOORN,\n      MUSICIANS.MAJOR_LAZER\n    ],\n    venue: MUSIC_VENUES.VICTORIA_PARK,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.LAURA,\n      FRIENDS.LUKE_J,\n      FRIENDS.ALICE_R\n    ],\n    dates: [new Date(\"2016-07-15\")]\n  },\n  {\n    festival: FESTIVALS.DEFECTED_BRISTOL,\n    lineup: [MUSICIANS.MK],\n    venue: MUSIC_VENUES.MOTION,\n    dates: [new Date(\"2016-07-30\")],\n    company: [FRIENDS.CHELSEA, FRIENDS.SARAH_W]\n  },\n  {\n    festival: FESTIVALS.BRIGHTON_PRIDE,\n    lineup: [\n      MUSICIANS.DUA_LIPA,\n      MUSICIANS.CARLY_RAE_JEPSEN,\n      MUSICIANS.SISTER_SLEDGE\n    ],\n    venue: MUSIC_VENUES.PRESTON_PARK,\n    company: [\n      FRIENDS.ELLIE_G,\n      FRIENDS.POOJA,\n      FRIENDS.GRACE,\n      FRIENDS.SIAN,\n      FRIENDS.TONYA,\n      FRIENDS.ALICE_R\n    ],\n    dates: [new Date(\"2016-08-06\")]\n  },\n  {\n    festival: FESTIVALS.V_FESTIVAL,\n    lineup: [\n      MUSICIANS.MIKE_POSNER,\n      MUSICIANS.MNEK,\n      MUSICIANS.ZARA_LARSSON,\n      MUSICIANS.PHILIP_GEORGE,\n      MUSICIANS.JESS_GLYNNE,\n      MUSICIANS.FLIGHT_FACILITIES,\n      MUSICIANS.SIA,\n      MUSICIANS.JUSTIN_BIEBER\n    ],\n    venue: MUSIC_VENUES.WESTON_PARK,\n    company: [FRIENDS.SARAH_W, FRIENDS.CHELSEA],\n    dates: [new Date(\"2016-08-21\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [MUSICIANS.DUSKY, MUSICIANS.DANIEL_AVERY],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2016-09-30\")]\n  },\n  {\n    headline: MUSICIANS.ROOSEVELT,\n    venue: MUSIC_VENUES.XOYO,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2016-11-24\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2017: Array<IGigData> = [\n  {\n    headline: MUSICIANS.JONAS_BLUE,\n    venue: MUSIC_VENUES.MINISTRY_OF_SOUND,\n    dates: [new Date(\"2017-01-28\")],\n    company: [\n      FRIENDS.ALICE_R,\n      FRIENDS.TONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.LAURA\n    ]\n  },\n  {\n    headline: MUSICIANS.LYVES,\n    venue: MUSIC_VENUES.SERVANT_JAZZ_QUARTERS,\n    dates: [new Date(\"2017-02-20\")],\n    company: []\n  },\n  {\n    headline: MUSICIANS.DUSKY,\n    venue: MUSIC_VENUES.ELECTRIC_BRIXTON,\n    dates: [new Date(\"2017-02-24\")],\n    favourite: true,\n    company: [FRIENDS.TONYA, FRIENDS.TOM, FRIENDS.CAITLIN, FRIENDS.RYAN]\n  },\n  {\n    headline: MUSICIANS.MARTIN_SOLVEIG,\n    support: [MUSICIANS.JAX_JONES],\n    dates: [new Date(\"2017-03-10\")],\n    venue: MUSIC_VENUES.EGG,\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.BANKS,\n    dates: [new Date(\"2017-03-13\")],\n    venue: MUSIC_VENUES.ROUNDHOUSE,\n    company: [FRIENDS.BECKY, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.TOVE_LO,\n    support: [MUSICIANS.BROODS],\n    dates: [new Date(\"2017-03-17\")],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    company: [FRIENDS.DAN]\n  },\n  {\n    headline: MUSICIANS.MUNA,\n    dates: [new Date(\"2017-03-28\")],\n    venue: MUSIC_VENUES.HOXTON_SQUARE_BAR_AND_KITCHEN,\n    company: [FRIENDS.LUKE_S],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.JORJA_SMITH,\n    dates: [new Date(\"2017-04-03\")],\n    venue: MUSIC_VENUES.VILLAGE_UNDERGROUND,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.VERITE,\n    dates: [new Date(\"2017-04-06\")],\n    venue: MUSIC_VENUES.ELECTROWERKZ,\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.FRANCES,\n    dates: [new Date(\"2017-04-07\")],\n    venue: MUSIC_VENUES.INSTITUTE_BIRMINGHAM,\n    company: [FRIENDS.EMMA, FRIENDS.MUM]\n  },\n  {\n    headline: MUSICIANS.JONES,\n    dates: [new Date(\"2017-05-03\")],\n    venue: MUSIC_VENUES.HOXTON_HALL,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.BETSY,\n    dates: [new Date(\"2017-05-15\")],\n    venue: MUSIC_VENUES.MOTH_CLUB,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.ALMA,\n    dates: [new Date(\"2017-05-16\")],\n    venue: MUSIC_VENUES.OSLO_HACKNEY,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.BETTY_WHO,\n    dates: [new Date(\"2017-05-17\")],\n    venue: MUSIC_VENUES.ZIGFRID_VON_UNDERBELLY,\n    company: [FRIENDS.SIAN]\n  },\n  {\n    headline: MUSICIANS.PARAMORE,\n    dates: [new Date(\"2017-06-19\")],\n    venue: MUSIC_VENUES.ROYAL_ALBERT_HALL,\n    company: [FRIENDS.LUKE_S],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.LOVEBOX,\n    lineup: [\n      MUSICIANS.JOE_GODDARD,\n      MUSICIANS.RUFUS_DU_SOL,\n      MUSICIANS.BICEP,\n      MUSICIANS.JAMIE_XX,\n      MUSICIANS.EATS_EVERYTHING,\n      MUSICIANS.FRANK_OCEAN\n    ],\n    dates: [new Date(\"2017-07-14\")],\n    venue: MUSIC_VENUES.VICTORIA_PARK,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.CAITLIN,\n      FRIENDS.ALICE_R\n    ]\n  },\n  {\n    festival: FESTIVALS.BRIGHTON_PRIDE,\n    lineup: [MUSICIANS.BECKY_HILL, MUSICIANS.YEARS_AND_YEARS],\n    dates: [new Date(\"2017-08-05\")],\n    venue: MUSIC_VENUES.PRESTON_PARK,\n    company: [\n      FRIENDS.LUKE_S,\n      FRIENDS.TONYA,\n      FRIENDS.SONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.LAURA\n    ]\n  },\n  {\n    festival: FESTIVALS.BESTIVAL,\n    lineup: [\n      MUSICIANS.ALMA,\n      MUSICIANS.LITTLE_DRAGON,\n      MUSICIANS.KOLSCH,\n      MUSICIANS.THE_XX,\n      MUSICIANS.MACEO_PLEX,\n      MUSICIANS.JOE_GODDARD,\n      MUSICIANS.FOURS,\n      MUSICIANS.ANNA_OF_THE_NORTH,\n      MUSICIANS.LUCY_ROSE,\n      MUSICIANS.DIZZEE_RASCAL,\n      MUSICIANS.DUSKY,\n      MUSICIANS.CHARLOTTE_CHURCH,\n      MUSICIANS.SOUL_WAX,\n      MUSICIANS.PET_SHOP_BOYS\n    ],\n    dates: [new Date(\"2017-09-08\"), new Date(\"2017-09-10\")],\n    venue: MUSIC_VENUES.LULWORTH_ESTATE,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.RYAN,\n      FRIENDS.DAN,\n      FRIENDS.MARIA,\n      FRIENDS.CAITLIN,\n      FRIENDS.CAITY\n    ]\n  },\n  {\n    headline: MUSICIANS.SIGRID,\n    dates: [new Date(\"2017-09-13\")],\n    venue: MUSIC_VENUES.SCALA,\n    company: [FRIENDS.SIAN]\n  },\n  {\n    headline: MUSICIANS.ALLIE_X,\n    dates: [new Date(\"2017-09-18\")],\n    venue: MUSIC_VENUES.OMEARA,\n    company: [FRIENDS.SIAN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.LORDE,\n    dates: [new Date(\"2017-09-27\")],\n    favourite: true,\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE,\n    company: [FRIENDS.LUKE_S, FRIENDS.CAITLIN, FRIENDS.CAITY]\n  },\n  {\n    headline: MUSICIANS.MURA_MASA,\n    dates: [new Date(\"2017-10-19\")],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.FREYA_RIDINGS,\n    dates: [new Date(\"2017-10-26\")],\n    venue: MUSIC_VENUES.ST_GILES_IN_THE_FIELD,\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.PVRIS,\n    dates: [new Date(\"2017-11-30\")],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    company: [FRIENDS.LUKE_S]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2018: Array<IGigData> = [\n  {\n    headline: MUSICIANS.KYGO,\n    support: [MUSICIANS.GRYFFIN, MUSICIANS.SEEB],\n    venue: MUSIC_VENUES.THE_O2,\n    dates: [new Date(\"2018-02-25\")],\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.CODE,\n    venue: MUSIC_VENUES.CORSICA_STUDIOS,\n    dates: [new Date(\"2018-03-07\")],\n    company: [FRIENDS.JERRY, FRIENDS.JAMIE, FRIENDS.DOM]\n  },\n  {\n    headline: MUSICIANS.GEORGE_FITZGERALD,\n    venue: MUSIC_VENUES.ISLINGTON_ASSEMBLY_HALL,\n    dates: [new Date(\"2018-03-27\")],\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.AQUILO,\n    venue: MUSIC_VENUES.OVAL_SPACE,\n    dates: [new Date(\"2018-04-19\")],\n    company: [FRIENDS.JAMIE]\n  },\n  {\n    headline: MUSICIANS.TWO_FEET,\n    venue: MUSIC_VENUES.ELECTROWERKZ,\n    dates: [new Date(\"2018-05-24\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.KIM_PETRAS,\n    venue: MUSIC_VENUES.COURTYARD_THEATRE,\n    dates: [new Date(\"2018-05-25\")],\n    company: [FRIENDS.JERRY],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.HAIM,\n    support: [MUSICIANS.MAGGIE_ROGERS],\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE,\n    dates: [new Date(\"2018-06-15\")],\n    company: [FRIENDS.EMMA, FRIENDS.BECKY, FRIENDS.CAITLIN]\n  },\n  {\n    festival: FESTIVALS.ON_THE_RUN_II,\n    lineup: [MUSICIANS.JAY_Z, MUSICIANS.BEYONCE],\n    venue: MUSIC_VENUES.LONDON_STADIUM,\n    dates: [new Date(\"2018-06-16\")],\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.TAYLOR_SWIFT,\n    support: [MUSICIANS.CHARLI_XCX, MUSICIANS.CAMILA_CABELLO],\n    venue: MUSIC_VENUES.WEMBLEY_STADIUM,\n    dates: [new Date(\"2018-06-22\")],\n    company: [FRIENDS.DAN],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.NOTION_SUMMER_PARTY,\n    lineup: [\n      MUSICIANS.M_0,\n      MUSICIANS.BONDAX,\n      MUSICIANS.RITON,\n      MUSICIANS.KAH_LO,\n      MUSICIANS.ANNE_MARIE,\n      MUSICIANS.MO\n    ],\n    venue: MUSIC_VENUES.TROXY,\n    dates: [new Date(\"2018-07-27\")],\n    company: [FRIENDS.LUKE_J]\n  },\n  {\n    festival: FESTIVALS.BRIGHTON_PRIDE,\n    lineup: [MUSICIANS.BRITNEY_SPEARS],\n    venue: MUSIC_VENUES.PRESTON_PARK,\n    dates: [new Date(\"2018-08-04\")],\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.SONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.SIAN\n    ]\n  },\n  {\n    headline: MUSICIANS.SOFI_TUKKER,\n    venue: MUSIC_VENUES.KOKO,\n    dates: [new Date(\"2018-09-17\")],\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.LAUV,\n    venue: MUSIC_VENUES.KOKO,\n    dates: [new Date(\"2018-09-18\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.RALPH,\n    venue: MUSIC_VENUES.OLD_BLUE_LAST,\n    dates: [new Date(\"2018-10-15\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.RAINBOW_KITTEN_SURPRISE,\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2018-10-31\")],\n    company: [FRIENDS.JAMIE]\n  },\n  {\n    headline: MUSICIANS.LYKKE_LI,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2018-11-04\")],\n    company: [FRIENDS.EMMA],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    venue: MUSIC_VENUES.THE_O2,\n    dates: [new Date(\"2018-11-21\")],\n    company: [FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.YOU_ME_AT_SIX,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2018-12-03\")],\n    company: [FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"../../constants\";\n\nexport const GIGS_2019: Array<IGigData> = [\n  {\n    headline: MUSICIANS[1975],\n    venue: MUSIC_VENUES.THE_O2,\n    dates: [new Date(\"2019-01-19\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.MAGGIE_ROGERS,\n    support: [MUSICIANS.MALLRAT],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-02-19\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.TROYE_SIVAN,\n    support: [MUSICIANS.LELAND],\n    venue: MUSIC_VENUES.HAMMERSMITH_APOLLO,\n    dates: [new Date(\"2019-02-28\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.LANY,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-03-12\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.LEON,\n    venue: MUSIC_VENUES.ISLINGTON_ASSEMBLY_HALL,\n    dates: [new Date(\"2019-04-08\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BULOW,\n    venue: MUSIC_VENUES.COURTYARD_THEATRE,\n    dates: [new Date(\"2019-04-11\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.ROBYN,\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE,\n    dates: [new Date(\"2019-04-12\")],\n    company: [FRIENDS.DAN, FRIENDS.RYAN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BEARS_DEN,\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-04-23\")],\n    company: [FRIENDS.JAMIE]\n  },\n  {\n    headline: MUSICIANS.MARINA,\n    venue: MUSIC_VENUES.ROYAL_ALBERT_HALL,\n    dates: [new Date(\"2019-05-03\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.SASHA_SLOAN,\n    venue: MUSIC_VENUES.DINGWALLS,\n    dates: [new Date(\"2019-05-07\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.G_FLIP,\n    venue: MUSIC_VENUES.THE_GARAGE,\n    dates: [new Date(\"2019-05-15\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.FKA_TWIGS,\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE_THEATRE,\n    dates: [new Date(\"2019-05-28\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.FLEETWOOD_MAC,\n    support: [MUSICIANS.PRETENDERS],\n    venue: MUSIC_VENUES.WEMBLEY_STADIUM,\n    dates: [new Date(\"2019-06-16\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.SOPHIE,\n    favourite: true,\n    venue: MUSIC_VENUES.ROYAL_FESTIVAL_HALL,\n    dates: [new Date(\"2019-08-10\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    festival: FESTIVALS.MANCHESTER_PRIDE,\n    lineup: [\n      MUSICIANS.BECKY_HILL,\n      MUSICIANS.BANANARAMA,\n      MUSICIANS.TULISA,\n      MUSICIANS.CHERYL,\n      MUSICIANS.ARIANA_GRANDA\n    ],\n    venue: MUSIC_VENUES.MAYFIELD_DEPOT,\n    dates: [new Date(\"2019-08-25\")],\n    company: [\n      FRIENDS.DAN,\n      FRIENDS.MARIA,\n      FRIENDS.ASH,\n      FRIENDS.SAM_B,\n      FRIENDS.LINDSAY_A\n    ]\n  },\n  {\n    headline: MUSICIANS.KIM_PETRAS,\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2019-08-27\")],\n    company: [FRIENDS.DARREN, FRIENDS.JERRY]\n  },\n  {\n    festival: FESTIVALS.CHINGFEST,\n    lineup: [MUSICIANS.INCOGNITO, MUSICIANS.NAO],\n    venue: MUSIC_VENUES.RIDGEWAY_PARK,\n    dates: [new Date(\"2019-08-31\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.MUNA,\n    venue: MUSIC_VENUES.VILLAGE_UNDERGROUND,\n    dates: [new Date(\"2019-09-10\")],\n    company: [FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.JULIA_MICHAELS,\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-09-17\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.ELDERBROOK,\n    venue: MUSIC_VENUES.EARTH,\n    dates: [new Date(\"2019-10-12\")],\n    company: [FRIENDS.TONYA, FRIENDS.SONYA, FRIENDS.LAURA]\n  },\n  {\n    headline: MUSICIANS.CHARLI_XCX,\n    support: [MUSICIANS.RINA_SAWAYAMA],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-10-31\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BANKS,\n    support: [MUSICIANS.GLOWIE],\n    venue: MUSIC_VENUES.ROUNDHOUSE,\n    dates: [new Date(\"2019-11-04\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.LAUV,\n    support: [MUSICIANS.CHELSEA_CUTLER],\n    venue: MUSIC_VENUES.KENTISH_TOWN_FORUM,\n    dates: [new Date(\"2019-11-05\")],\n    company: [FRIENDS.JERRY, FRIENDS.POPPY]\n  },\n  {\n    festival: FESTIVALS.HOMOBLOC,\n    lineup: [MUSICIANS.ROMY, MUSICIANS.ROBYN, MUSICIANS.HORSE_MEAT_DISCO],\n    venue: MUSIC_VENUES.MAYFIELD_DEPOT,\n    dates: [new Date(\"2019-11-09\")],\n    company: [FRIENDS.DAN, FRIENDS.MARIA]\n  },\n  {\n    headline: MUSICIANS.SABRINA_CLAUDIO,\n    support: [MUSICIANS.OH_ANNIE_OH],\n    venue: MUSIC_VENUES.ELECTRIC_BRIXTON,\n    dates: [new Date(\"2019-11-19\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.ROBINSON,\n    support: [MUSICIANS.NAVVY],\n    venue: MUSIC_VENUES.QUEEN_OF_HOXTON,\n    dates: [new Date(\"2019-11-20\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.FKA_TWIGS,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-11-25\")],\n    company: [FRIENDS.DARREN, FRIENDS.CAITLIN, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.NAAZ,\n    support: [MUSICIANS.DYLAN],\n    venue: MUSIC_VENUES.CAMDEN_ASSEMBLY,\n    dates: [new Date(\"2019-11-27\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.MUNA,\n    support: [MUSICIANS.L_DEVINE],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-12-03\")],\n    company: [FRIENDS.LEWIS, FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.MELANIE_MARTINEZ,\n    support: [MUSICIANS.NAAZ],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-12-09\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    festival: FESTIVALS.AREA_10_NYE,\n    lineup: [MUSICIANS.MK],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-12-31\")],\n    company: [FRIENDS.TOM, FRIENDS.TONYA, FRIENDS.SONYA]\n  }\n];\n","import {\n  FRIENDS,\n  MUSICIANS,\n  TICKET_TYPES,\n  MUSIC_VENUES\n} from \"../../constants\";\n\nexport const GIGS_2020: Array<IGigData> = [\n  {\n    headline: MUSICIANS.GRACEY,\n    venue: MUSIC_VENUES.LAYLOW,\n    dates: [new Date(\"2020-01-28\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.JOSEF_SALVAT,\n    venue: MUSIC_VENUES.MOTH_CLUB,\n    dates: [new Date(\"2020-02-05\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.KIM_PETRAS,\n    support: [MUSICIANS.ALEX_CHAPMAN],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2020-02-11\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.NASTY_CHERRY,\n    venue: MUSIC_VENUES.THE_GARAGE,\n    dates: [new Date(\"2020-03-03\")],\n    company: [FRIENDS.DARREN, FRIENDS.MEGAN],\n    ticketType: TICKET_TYPES.SEE_TICKETS_PRINT_AT_HOME\n  },\n  {\n    headline: MUSICIANS.CHRISTINE_AND_THE_QUEENS,\n    venue: MUSIC_VENUES.MOTH_CLUB,\n    dates: [new Date(\"2020-03-07\")],\n    favourite: true,\n    company: [FRIENDS.DARREN],\n    ticketType: TICKET_TYPES.GIGS_AND_TOURS_POSTAL\n  },\n  {\n    headline: MUSICIANS.CAROLINE_POLACHEK,\n    support: [MUSICIANS.SEGA_BODEGA],\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2020-03-11\")],\n    company: [FRIENDS.DARREN],\n    ticketType: TICKET_TYPES.DICE\n  },\n  {\n    headline: MUSICIANS.GEORGIA,\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2020-03-12\")],\n    company: [FRIENDS.DARREN],\n    ticketType: TICKET_TYPES.DICE\n  },\n  // {\n  //   headline: MUSICIANS.ALLIE_X,\n  //   venue: MUSIC_VENUES.HEAVEN,\n  //   dates: [new Date(\"2020-06-04\"),\n  //   company: FRIENDS.DARREN,\n  //   ticketType: TICKET_TYPES.DICE,\n  // },\n  // {\n  //   festival: FESTIVALS.MAD_COOL,\n  //   lineup: [MUSICIANS.TWENTY_ONE_PILOTS],\n  //   venue: MUSIC_VENUES.IFEMA_MADRID,\n  //   dates: [new Date(\"2020-07-08\")],\n  //   company: [FRIENDS.DAN],\n  //   ticketType: TICKET_TYPES.FESTICKET_PDF\n  // },\n  // {\n  //   headline: MUSICIANS.LADY_GAGA,\n  //   venue: MUSIC_VENUES.TOTTENHAM_HOTSPUR_STADIUM,\n  //   dates: [new Date(\"2020-07-30\")],\n  //   company: [FRIENDS.RYAN, FRIENDS.DAN, FRIENDS.TOM]\n  // },\n  {\n    headline: MUSICIANS.CARIBOU,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2020-09-13\")],\n    company: [FRIENDS.DARREN],\n    ticketType: TICKET_TYPES.TICKETMASTER_ETICKET\n  },\n  {\n    headline: MUSICIANS.SOPHIE,\n    support: [MUSICIANS.EARTHEATER],\n    venue: MUSIC_VENUES.OVAL_SPACE,\n    dates: [new Date(\"2020-10-17\")],\n    company: [FRIENDS.LEWIS, FRIENDS.JERRY],\n    ticketType: TICKET_TYPES.DICE\n  },\n  {\n    headline: MUSICIANS.LANE_8,\n    venue: MUSIC_VENUES.PRINTWORKS,\n    dates: [new Date(\"2020-10-25\")],\n    company: [FRIENDS.TONYA],\n    ticketType: TICKET_TYPES.DICE\n  },\n  {\n    headline: MUSICIANS.JON_HOPKINS,\n    venue: MUSIC_VENUES.ROYAL_ALBERT_HALL,\n    dates: [new Date(\"2020-12-04\")],\n    company: [FRIENDS.TONYA]\n  }\n];\n","import {\n  FRIENDS,\n  FESTIVALS,\n  MUSICIANS,\n  TICKET_TYPES,\n  MUSIC_VENUES\n} from \"../../constants\";\n\nexport const GIGS_2021: Array<IGigData> = [\n  {\n    festival: FESTIVALS.MIGHTY_HOOPLA,\n    venue: MUSIC_VENUES.BROCKWELL_PARK,\n    dates: [new Date(\"2021-06-05\")],\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.MARIA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.DARREN,\n      FRIENDS.SIAN,\n      FRIENDS.CAITLIN,\n      FRIENDS.DAN\n    ],\n    ticketType: TICKET_TYPES.KABOODLE_ETICKET\n  },\n  {\n    headline: MUSICIANS[1975],\n    venue: MUSIC_VENUES.FINSBURY_PARK,\n    dates: [new Date(\"2021-07-10\")],\n    company: [\n      FRIENDS.DAN,\n      FRIENDS.LEWIS,\n      FRIENDS.JERRY,\n      FRIENDS.CAITLIN,\n      FRIENDS.COBY_B\n    ],\n    ticketType: TICKET_TYPES.TICKETMASTER_ETICKET\n  }\n];\n","import {\n  MUSIC_VENUES,\n  FRIENDS,\n  MUSICIANS,\n  PAGE_SECTIONS,\n  FESTIVALS\n} from \"../../constants\";\nimport { generateSectionData } from \"../../utils/global\";\n\nimport { GIGS_2006 } from \"./gigs-2006\";\nimport { GIGS_2007 } from \"./gigs-2007\";\nimport { GIGS_2008 } from \"./gigs-2008\";\nimport { GIGS_2009 } from \"./gigs-2009\";\nimport { GIGS_2010 } from \"./gigs-2010\";\nimport { GIGS_2011 } from \"./gigs-2011\";\nimport { GIGS_2012 } from \"./gigs-2012\";\nimport { GIGS_2013 } from \"./gigs-2013\";\nimport { GIGS_2014 } from \"./gigs-2014\";\nimport { GIGS_2015 } from \"./gigs-2015\";\nimport { GIGS_2016 } from \"./gigs-2016\";\nimport { GIGS_2017 } from \"./gigs-2017\";\nimport { GIGS_2018 } from \"./gigs-2018\";\nimport { GIGS_2019 } from \"./gigs-2019\";\nimport { GIGS_2020 } from \"./gigs-2020\";\nimport { GIGS_2021 } from \"./gigs-2021\";\n\nconst ALL: Array<IGigData> = [\n  ...GIGS_2006,\n  ...GIGS_2007,\n  ...GIGS_2008,\n  ...GIGS_2009,\n  ...GIGS_2010,\n  ...GIGS_2011,\n  ...GIGS_2012,\n  ...GIGS_2013,\n  ...GIGS_2014,\n  ...GIGS_2015,\n  ...GIGS_2016,\n  ...GIGS_2017,\n  ...GIGS_2018,\n  ...GIGS_2019,\n  ...GIGS_2020,\n  ...GIGS_2021\n];\n\nconst ALL_GROUPED_BY_YEAR: Array<Array<IGigData>> = [\n  GIGS_2006,\n  GIGS_2007,\n  GIGS_2008,\n  GIGS_2009,\n  GIGS_2010,\n  GIGS_2011,\n  GIGS_2012,\n  GIGS_2013,\n  GIGS_2014,\n  GIGS_2015,\n  GIGS_2016,\n  GIGS_2017,\n  GIGS_2018,\n  GIGS_2019,\n  GIGS_2020,\n  GIGS_2021\n];\n\nconst FAVOURITES: Array<IGigData> = ALL.filter(item => item.favourite);\n\n//@ts-ignore\nconst generateSectionDataWrapper = parms =>\n  generateSectionData({\n    ...parms,\n    allData: ALL,\n    favouritedData: FAVOURITES\n  });\n\nconst UPCOMING = generateSectionDataWrapper({ upcomingMode: true });\n\nexport const DATA_GIGS = {\n  pastCount: ALL.length - UPCOMING.length,\n  futureCount: UPCOMING.length,\n\n  ALL,\n\n  ALL_GROUPED_BY_YEAR,\n\n  BUCKET_LIST: generateSectionDataWrapper({\n    bucketListMode: true,\n    items: MUSICIANS,\n    pageSectionTitle: PAGE_SECTIONS.MUSICIAN\n  }),\n\n  FAVOURITES,\n\n  FESTIVALS: generateSectionDataWrapper({\n    items: FESTIVALS,\n    pageSectionTitle: PAGE_SECTIONS.FESTIVAL,\n    filter: \"festival\"\n  }),\n\n  FRIENDS: generateSectionDataWrapper({\n    items: FRIENDS,\n    pageSectionTitle: PAGE_SECTIONS.FRIEND,\n    filter: \"gigs\"\n  }),\n\n  MUSICIANS: generateSectionDataWrapper({\n    items: MUSICIANS,\n    pageSectionTitle: PAGE_SECTIONS.MUSICIAN\n  }),\n\n  UPCOMING,\n\n  VENUES: generateSectionDataWrapper({\n    items: MUSIC_VENUES,\n    pageSectionTitle: PAGE_SECTIONS.MUSIC_VENUES\n  })\n};\n","import { INGREDIENTS, MEASUREMENTS, UNICODE, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: IRecipeIngredients = [\n  [\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.CHILLI_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.LIQUID_SMOKE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOFU,\n      quantity: 280,\n      measurement: MEASUREMENTS.GRAM\n    },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.CARROT, quantity: 4 },\n    { ingredient: INGREDIENTS.CELERY_STICK, quantity: 4 },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BASIL_FRESH,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OREGANO_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PUREE,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    }\n  ]\n];\n\nconst serveWith: IServeWith = [\n  [\n    { ingredient: INGREDIENTS.SPAGHETTI },\n    { ingredient: INGREDIENTS.RICE_BROWN }\n  ],\n  [{ ingredient: INGREDIENTS.BREAD_GARLIC }]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 180 }),\n  \"make paste from yeast, soy, oil, crushed garlic, chilli powder, liquid smoke\",\n  \"drain tofu, use both fingers to crumble into small pieces\",\n  \"mix tofu with smokey paste until evenly covered\",\n  \"bake for 40 minutes in a non-stick loaf tin (stir tofu twice throughout, do not let it burn)\",\n  \"set tofu aside\",\n  \"fry onion in water so it never sticks or burns\",\n  \"when the onion has softened and the water has reduced, pour over some olive oil\",\n  \"add grated carrot, grated celery and finely diced mushrooms to frying pan\",\n  `meanwhile, blend basil with stock, ${UNICODE.TOMATO_PUREE}, black pepper, oregano and some water`,\n  \"pour blend over the frying vegetables, fry for about 10 minutes until water reduces\",\n  \"pour over chopped tomatoes\",\n  \"cover, simmer for around 30 minutes (stirring regularly)\",\n  \"stir in tofu, remove from heat\"\n];\n\nconst title: IRecipeTitle = \"bolognese\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst image: IImageSrc = PHOTOS.BOLOGNESE;\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const BOLOGNESE: IRecipeCard = {\n  title,\n  ingredients,\n  favourite: true,\n  makes,\n  serveWith,\n  diet,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\n\nconst ingredients: IRecipeIngredients = [\n  [\n    {\n      ingredient: INGREDIENTS.TOMATO_SUN_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.JAR\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.LIQUID_SMOKE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 750,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.SPINACH,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.NUTS_CASHEWS,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_BLACK,\n      quantity: 1.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.SPAGHETTI,\n      quantity: 400,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.ONION_WHITE_MEDIUM,\n      quantity: 2\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 7\n    },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS_CHESTNUT,\n      quantity: 300,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst serveWith: IServeWith = [\n  [\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"thoroughly drain sun dried tomatoes from oil\",\n  \"chop tomatoes into many smaller pieces\",\n  \"marinade tomatoes in soy sauce and liquid smoke\",\n  \"chop the onion, mushroom and garlic\",\n  `blend almond milk with spinach, cashews, yeast, cornflour, salt and pepper`,\n  \"fry diced onion, crushed garlic, sliced mushrooms and thyme in butter (and some water) until softened\",\n  \"cook spaghetti as per packet instructions, drain and set aside\",\n  \"pour green sauce over frying vegetables, stirring until it thickens\",\n  \"remove from heat and stir in spaghetti and tomatoes until evenly covered\"\n];\n\nconst title: IRecipeTitle = \"carbonara\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.CARBONARA;\n\nexport const CARBONARA: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  method,\n  hide: true,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, UNICODE, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: IRecipeIngredients = [\n  [\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.PEPPER_MIXED, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS_CHESTNUT,\n      quantity: 300,\n      measurement: MEASUREMENTS.GRAM\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 5 },\n    {\n      ingredient: INGREDIENTS.BASIL_FRESH,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.HERBS_MIXED_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_BALSAMIC,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PUREE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.SPINACH,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.LENTIL_RED_DRY,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 5,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 1,\n      measurement: MEASUREMENTS.LITRE\n    },\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ],\n  [\n    { ingredient: INGREDIENTS.PASTA_LASAGNE_SHEET_DRIED, quantity: 10 },\n    { ingredient: INGREDIENTS.COURGETTE, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.CHEESE_VEGAN_SLICE,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: IServeWith = [[{ ingredient: INGREDIENTS.BREAD_GARLIC }]];\n\nconst method: IRecipeMethod = [\n  \"fry diced onion in oil and water for at least 5 minutes\",\n  \"add diced peppers, mushrooms, crushed garlic and fry for at least 10 minutes (replenishing the water to prevent burning)\",\n  `blend basil with stock powder, dried herbs, soy sauce, black pepper, balsamic vinegar, ${UNICODE.TOMATO_PUREE}, sugar and some water`,\n  \"pour basil blend into fried vegetables and stir throughly\",\n  \"add spinach and allow it to reduce\",\n  \"stir in chopped tomatoes and lentils\",\n  \"reduce heat, cover and simmer for at least 30 minutes\",\n  \"soak lasagne sheets in cold water\",\n  \"stir flour into medium hot olive oil\",\n  \"pour in the milk and whisk until it thickens (never give up, great arm workout)\",\n  \"remove from heat, season with salt and pepper\",\n  preheatOven({ degreesCelcius: 190 }),\n  `spoon ${UNICODE.THIRD} of each into an oven-proof dish (in the following order): ragu, lasagne sheets, white sauce, sliced raw courgettes`,\n  \"repeat previous step twice\",\n  \"seal the dish with vegan cheese slices\",\n  \"bake for 35 minutes\"\n];\nconst title: IRecipeTitle = \"lasagne\";\nconst makes: IRecipeMakes = { quantity: 6, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.LASAGNE;\n\nexport const LASAGNE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  diet,\n  serveWith,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: IRecipeIngredients = [\n  [\n    {\n      ingredient: INGREDIENTS.BUTTERNUT_SQUASH,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.ONION_WHITE_MEDIUM,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.LEEK,\n      quantity: 2\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 5\n    },\n    {\n      ingredient: INGREDIENTS.RICE_RISOTTO_ARBORIO,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 1,\n      measurement: MEASUREMENTS.LITRE\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BEANS_GREEN,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    }\n  ]\n];\n\nconst serveWith: IServeWith = [\n  [\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH },\n    { ingredient: INGREDIENTS.SAGE_FRESH, notes: \"crispy\" }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 200 }),\n  \"roast evenly-cubed squash for 40 minutes (in some olive oil, salt and pepper)\",\n  \"fry diced onion and leek with crushed garlic in half the butter (and some water) for about 10 minutes until soft\",\n  \"toss in uncooked rice and stir for 2 minutes\",\n  \"boil water, then add 200ml at a time, replenishing as soon as the rice becomes almost dry\",\n  \"stir constantly and be patient\",\n  \"add finely sliced green beans shortly into the rice cooking\",\n  \"remove from heat, stir in squash, yeast, salt, pepper, remaining butter\"\n];\nconst title: IRecipeTitle = \"risotto\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const RISOTTO: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  method\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\n\nconst ingredients: IRecipeIngredients = [\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.ONION_RED_MEDIUM, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.CURRY_PASTE_ROGAN_JOSH,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.GINGER_FRESH,\n      quantity: 3,\n      measurement: MEASUREMENTS.CENTIMETRE\n    },\n    {\n      ingredient: INGREDIENTS.CORIANDER_FRESH,\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.POTATO_SWEET,\n      quantity: 1,\n      notes: \"large\"\n    },\n    {\n      ingredient: INGREDIENTS.CHICKPEAS,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.PETITS_POIS_FROZEN,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK_COCONUT_CANNED,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.SPINACH,\n      quantity: 260,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: IServeWith = [\n  [{ ingredient: INGREDIENTS.RICE }],\n  [{ ingredient: INGREDIENTS.KALE }, { ingredient: INGREDIENTS.POPPADOMS }]\n];\n\nconst method: IRecipeMethod = [\n  \"fry diced onion in oil, curry paste and some water on a medium heat for at least 10 minutes\",\n  \"meanwhile, blend coriander with some water\",\n  \"add grated ginger, diced sweet potato, drained chickpeas and blended coriander to frying pan\",\n  \"fry for about 20 minutes, regularly replenishing the water\",\n  \"add chopped tomatoes, bring to the boil\",\n  \"reduce heat and simmer for at least 30 minutes\",\n  \"stir in petit pois, coconut milk and spinach\"\n];\nconst title: IRecipeTitle = \"rogan josh\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.ROGAN_JOSH;\n\nexport const ROGAN_JOSH: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, UNICODE, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven, bakeForAbout } = recipeMethodEntries();\n\nconst ingredients: IRecipeIngredients = [\n  [\n    { ingredient: INGREDIENTS.POTATO_BAKING, quantity: 3 },\n    { ingredient: INGREDIENTS.POTATO_SWEET, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 100,\n      measurement: MEASUREMENTS.MILLILITRE\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 5 },\n    { ingredient: INGREDIENTS.CARROT, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS_CHESTNUT,\n      quantity: 300,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.ROSEMARY_DRIED,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PUREE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.WINE_RED,\n      quantity: 250,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.PETITS_POIS_FROZEN,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON,\n      optional: true\n    }\n  ]\n];\n\nconst serveWith: IServeWith = [\n  [{ ingredient: INGREDIENTS.ASPARAGUS, notes: \"pan-fried\" }]\n];\n\nconst method: IRecipeMethod = [\n  \"peel and chop potato into smallish chunks (it cooks quicker and makes it easier to mash)\",\n  \"boil potatoes for about 25 minutes until soft and easily mashable\",\n  \"mash potato, then stir in butter, salt, pepper and some water to loosen it\",\n  \"elsewhere, fry diced onion with crushed garlic, sliced mushrooms and diced carrot all together in the oil and some water\",\n  \"shower vegetables in salt, pepper and dried herbs\",\n  \"keep replenishing the vegetables with splashes of water so they never or stick to the saucepan\",\n  `add ${UNICODE.TOMATO_PUREE} and stock powder`,\n  // \"once softened, add red wine (and lentils)\",\n  \"once softened, stir in red wine\",\n  // \"stir continuously whilst simmering for at least 30 minutes, adding water where necessary\",\n  \"simmer for at least 30 minutes, adding water where necessary\",\n  preheatOven({ degreesCelcius: 180 }),\n  \"remove from heat, stir in cornflour, yeast flakes and peas\",\n  \"transfer filling to oven-proof dish, cover with mashed potato and fork lines onto the topping\",\n  bakeForAbout({ minutes: 40 })\n];\n\nconst title: IRecipeTitle = \"shepherd's pie\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.SHEPHERDS_PIE;\nconst makes: IRecipeMakes = { quantity: 7, measurement: MEASUREMENTS.PORTION };\n\nexport const SHEPHERDS_PIE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  hide: true,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\n\nconst ingredients: IRecipeIngredients = [\n  [\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 5 },\n    {\n      ingredient: INGREDIENTS.GINGER_FRESH,\n      quantity: 3,\n      measurement: MEASUREMENTS.CENTIMETRE\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_WHITE_WINE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 4,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.KETCHUP_TOMATO,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.CHILLI_CRUSHED_DRIED,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 300,\n      measurement: MEASUREMENTS.MILLILITRE\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 1.5,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOFU,\n      quantity: 280,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.CARROT, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_RED, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_GREEN, quantity: 1 },\n    { ingredient: INGREDIENTS.PINEAPPLE, quantity: 1 }\n  ]\n];\n\nconst serveWith: IServeWith = [[{ ingredient: INGREDIENTS.RICE_BASMATI }]];\n\nconst method: IRecipeMethod = [\n  \"mix cornflour with water, set solution aside\",\n  \"fry crushed garlic and grated ginger in a small saucepan for 1 minute\",\n  \"pour over soy, vinegar, ketchup, crushed chillis and water\",\n  \"add cornflour solution, stir for about 10 minutes until the sauce thickens, remove from heat\",\n  \"drain the tofu, chop into bite-sized chunks\",\n  \"mix cornflour with salt, pepper and oil\",\n  \"coat sides of tofu chunks in cornflour paste\",\n  \"fry tofu on medium-high heat for 5 minutes, set aside\",\n  \"chop pineapple, pepper and onion chunkily but slice carrot very thinly\",\n  \"fry vegetables in oil and some water until charred\",\n  \"toss in the pineapple, tofu and pour over the sauce\",\n  \"simmer for at least 5 minutes to let the flavours infuse, serve\"\n];\nconst title: IRecipeTitle = \"sweet and sour\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const SWEET_AND_SOUR: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  method\n};\n","import { BOLOGNESE } from \"./bolognese\";\nimport { CARBONARA } from \"./carbonara\";\nimport { LASAGNE } from \"./lasagne\";\nimport { RISOTTO } from \"./risotto\";\nimport { ROGAN_JOSH } from \"./rogan-josh\";\nimport { SHEPHERDS_PIE } from \"./shepherds-pie\";\nimport { SWEET_AND_SOUR } from \"./sweet-and-sour\";\n\nexport const MAINS: IRecipeGroup = {\n  category: \"mains\",\n  data: [\n    BOLOGNESE,\n    CARBONARA,\n    LASAGNE,\n    RISOTTO,\n    ROGAN_JOSH,\n    SHEPHERDS_PIE,\n    SWEET_AND_SOUR\n  ]\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\n\nconst ingredients: IRecipeIngredients = [\n  [\n    {\n      ingredient: INGREDIENTS.BASIL_FRESH,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.NUTS_PINE,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 4,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 3\n    },\n    {\n      ingredient: INGREDIENTS.LEMON_JUICE_FRESH,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_CIDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 50,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 25,\n      measurement: MEASUREMENTS.MILLILITRE\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"transfer all ingredients to blender\",\n  \"blend until smooth\",\n  \"store in refrigerator for up to 1 week\"\n];\n\nconst title: IRecipeTitle = \"pesto\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst makes: IRecipeMakes = { quantity: 100, measurement: MEASUREMENTS.GRAM };\n\nexport const PESTO: IRecipeCard = {\n  title,\n  ingredients,\n  diet,\n  makes,\n  method\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\n\nconst ingredients: IRecipeIngredients = [\n  [\n    { ingredient: INGREDIENTS.PEPPER_RED, quantity: 1 },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 1 },\n\n    {\n      ingredient: INGREDIENTS.CHILLI_BIRD_EYE_FRESH,\n      quantity: 20,\n      measurement: MEASUREMENTS.GRAM,\n      notes: \"stalk removed\"\n    },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_WHITE_WINE,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 10 },\n    { ingredient: INGREDIENTS.LEMON, quantity: 1, notes: \"zest and juice\" },\n    {\n      ingredient: INGREDIENTS.PAPRIKA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.OREGANO_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"transfer all ingredients to blender and blitz until smooth\",\n  \"transfer to a saucepan and heat on low for about 20 minutes\",\n  \"remove from heat, leave to cool\",\n  \"keep refrigerated in a jar for up to 2 weeks\"\n];\n\nconst title: IRecipeTitle = \"piri piri\";\nconst makes: IRecipeMakes = { quantity: 475, measurement: MEASUREMENTS.GRAM };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.PIRI_PIRI;\n\nexport const PIRI_PIRI: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { PESTO } from \"./pesto\";\nimport { PIRI_PIRI } from \"./piri-piri\";\n\nexport const SAUCES: IRecipeGroup = {\n  category: \"sauces\",\n  data: [PESTO, PIRI_PIRI]\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\n\nconst ingredients: IRecipeIngredients = [\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.ONION_WHITE_MEDIUM,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 3\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_RED,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.BEANS_HARICOT,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PASSATA,\n      quantity: 500,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 1,\n      optional: true,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA_SMOKED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.ALLSPICE_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"fry diced onion, garlic and pepper in oil (and some water if need be) for 5-10 minutes\",\n  \"transfer to slow cooker along with passata and seasoning\",\n  \"cook on low for 8 hours or medium for 5 hours\"\n];\n\nconst title: IRecipeTitle = \"baked beans\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.BAKED_BEANS;\n\nexport const BAKED_BEANS: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: IRecipeIngredients = [\n  [\n    { ingredient: INGREDIENTS.CAULIFLOWER_REGULAR, quantity: 1 },\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 200,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TURMERIC_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.SWEET_CHILLI_SAUCE,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.LIME_JUICE_FRESH,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SRIRACHA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 2 },\n    { ingredient: INGREDIENTS.ONION_SPRING },\n    { ingredient: INGREDIENTS.SEEDS_SESAME }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 200 }),\n  \"mix flour, almond milk, salt, pepper, turmeric, paprika in large bowl to make batter\",\n  \"remove all leaves from cauliflower, cut vertically around the stem to release florets\",\n  \"cover all florets in the batter\",\n  \"use tongs to transfer each floret to baking tray\",\n  \"roast the cauliflower for 25 minutes\",\n  \"make bang bang sauce by mixing sweet chilli, soy, lime juice, sriracha, crushed garlic\",\n  \"toss sauce over cauliflower in a heated wok\",\n  \"pour over fried spring onion and sesame seeds\"\n];\n\nconst title: IRecipeTitle = \"bang bang cauliflower\";\nconst makes: IRecipeMakes = { quantity: 2, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const BANG_BANG_CAULIFLOWER: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: IRecipeIngredients = [\n  [\n    {\n      ingredient: INGREDIENTS.KALE,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA_SMOKED,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.CHILLI_POWDER,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 100 }),\n  \"wash and dry kale thoroughly, discard large stems, transfer to large mixing bowl\",\n  \"mix oil with seasoning in a small jug\",\n  \"pour seasoning over kale, toss thoroughly until evenly distributed\",\n  \"transfer seasoned kale to 2 baking trays\",\n  \"bake for 20 minutes, one tray on top of the other\",\n  \"switch tray positions, bake for further 15 minutes\",\n  \"remove from oven, leave to cool\"\n];\n\nconst title: IRecipeTitle = \"crispy kale\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.KALE_CRISPY;\nconst makes: IRecipeMakes = { quantity: 2, measurement: MEASUREMENTS.SERVING };\n\nexport const CRISPY_KALE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  image,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\n\nconst ingredients: IRecipeIngredients = [\n  [\n    { ingredient: INGREDIENTS.POTATO_BAKING, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"peel potatoes and chop into small-ish chunks (to speed up the boiling process)\",\n  \"submerge potato chunks in boiling water for at least 25 minutes (until soft enough to easily mash)\",\n  \"drain the boiling water, then use a masher to break down the potato\",\n  \"dissolve salt in the water, then stir into the potato\",\n  \"stir in the butter, then season with black pepper\"\n];\n\nconst title: IRecipeTitle = \"mashed potato\";\nconst makes: IRecipeMakes = { quantity: 2, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.MASHED_POTATO;\n\nexport const MASHED_POTATO: IRecipeCard = {\n  ingredients,\n  title,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: IRecipeIngredients = [\n  [\n    { ingredient: INGREDIENTS.AUBERGINE, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_RED, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_ORANGE, quantity: 1 },\n    { ingredient: INGREDIENTS.COURGETTE, quantity: 2 },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.OREGANO_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.LEMON_JUICE,\n      quantity: 2,\n      optional: true,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 1,\n      optional: true,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 180 }),\n  \"chunkily chop the aubergine, courgette, peppers and onions and distribute evenly across 2 baking trays\",\n  \"drizzle the vegetables in oil, ensuring they are evenly coated, plus season with salt and pepper\",\n  \"roast the vegetables for 1 hour, shaking the veg half way through and switching the position of the trays in the oven\",\n  \"heat oil, lightly fry garlic in a sauceapan for 1 minute\",\n  \"add chopped tomatoes and dried herbs\",\n  \"cover and simmer for 45 minutes\",\n  \"remove sauce from heat, stir in lemon juice, sugar, salt and pepper\",\n  \"transfer all roasted veg to the deeper of the 2 baking trays, pour tomato sauce all over and ensure it is evenly coated\",\n  \"bake for a final 10 minutes\"\n];\n\nconst title: IRecipeTitle = \"ratatouille\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.RATATOUILLE;\n\nexport const RATATOUILLE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image,\n  favourite: true\n};\n","import { BAKED_BEANS } from \"./baked-beans\";\nimport { BANG_BANG_CAULIFLOWER } from \"./bang-bang-cauliflower\";\nimport { CRISPY_KALE } from \"./crispy-kale\";\nimport { MASHED_POTATO } from \"./mashed-potato\";\nimport { RATATOUILLE } from \"./ratatouille\";\nimport { TOFU_SCRAMBLE } from \"./tofu-scramble\";\n\nexport const SIDES: IRecipeGroup = {\n  category: \"sides\",\n  data: [\n    BAKED_BEANS,\n    BANG_BANG_CAULIFLOWER,\n    CRISPY_KALE,\n    MASHED_POTATO,\n    RATATOUILLE,\n    TOFU_SCRAMBLE\n  ]\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\n\nconst ingredients: IRecipeIngredients = [\n  [\n    {\n      ingredient: INGREDIENTS.TOFU,\n      quantity: 280,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TURMERIC_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA_SMOKED,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_BLACK,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"drain tofu, crumble into small pieces (using both fingers) into a large mixing bowl\",\n  \"in a small jug, make paste from yeast, turmeric, paprika, salt, pepper, thyme, water and oil\",\n  \"pour the paste over the crumbled tofu and stir until evenly covered\",\n  \"heat the butter over a medium heat in a small saucepan\",\n  \"fry tofu until heated through\"\n];\n\nconst title: IRecipeTitle = \"tofu scramble\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const TOFU_SCRAMBLE: IRecipeCard = {\n  ingredients,\n  makes,\n  method,\n  title,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst {\n  preheatOven,\n  LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN,\n  FOLD_IN_FLOUR_MIX,\n  bakeForAbout,\n  transferToLoafTin\n} = recipeMethodEntries();\n\nconst ingredients: IRecipeIngredients = [\n  [\n    { ingredient: INGREDIENTS.BANANA, quantity: 4, notes: \"very ripe\" },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 75,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.FLOUR_SELF_RAISING,\n      quantity: 225,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BICARBONATE_OF_SODA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.CINNAMON_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.NUTMEG_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_ICING,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"blend (peeled) bananas with butter, sugar, oil and vanilla\",\n  \"in a small mixing bowl, weigh flour and stir in the baking powder, bicarbonate of soda, cinnamon and nutmeg\",\n  FOLD_IN_FLOUR_MIX,\n  transferToLoafTin({ sunkenCentre: true }),\n  bakeForAbout({ minutes: 40, skewer: true }),\n  LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN,\n  \"make butter icing by whisking butter with icing sugar and water\",\n  \"evenly spread icing over the cake\"\n];\n\nconst title: IRecipeTitle = \"banana cake\";\nconst makes: IRecipeMakes = { quantity: 10, measurement: MEASUREMENTS.SLICE };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.BANANA_CAKE;\n\nexport const BANANA_CAKE: IRecipeCard = {\n  title,\n  favourite: true,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\n\nconst ingredients: IRecipeIngredients = [\n  [\n    {\n      ingredient: INGREDIENTS.EGGS,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_SELF_RAISING,\n      quantity: 175,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK,\n      quantity: 200,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.BLUEBERRIES_FRESH,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: IServeWith = [\n  [{ ingredient: INGREDIENTS.BANANA }],\n  [{ ingredient: INGREDIENTS.RASPBERRIES_FRESH }],\n  [\n    { ingredient: INGREDIENTS.NECTAR_AGAVE },\n    { ingredient: INGREDIENTS.SYRUP_GOLDEN }\n  ],\n  [{ ingredient: INGREDIENTS.SUGAR_ICING }],\n  [{ ingredient: INGREDIENTS.CINNAMON_GROUND }]\n];\n\nconst method: IRecipeMethod = [\n  \"whisk all ingredients except blueberries\",\n  \"fold blueberries into pancake batter\",\n  \"brush frying pan with sunflower oil and heat\",\n  \"drop dessertspoonfuls of batter onto frying pan\",\n  \"flip pancakes once bases are golden brown\",\n  \"remove from heat and serve\"\n];\n\nconst title: IRecipeTitle = \"blueberry pancakes\";\nconst diet: IRecipeDiet = DIETS.VEGETARIAN;\n\nexport const BLUEBERRY_PANCAKES: IRecipeCard = {\n  title,\n  ingredients,\n  serveWith,\n  method,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven, FOLD_IN_FLOUR_MIX, bakeForAbout } = recipeMethodEntries();\n\nconst ingredients: IRecipeIngredients = [\n  [\n    {\n      ingredient: INGREDIENTS.CHOCOLATE_DARK,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.COCOA_POWDER,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 200,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.RASPBERRIES_FRESH,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"in a large mixing bowl, add chocolate (broken into chunks), oil and butter\",\n  \"rest the large mixing bowl over a small saucepan of hot (not boiling) water and stir until melted, then remove from heat\",\n  \"in a small mixing bowl, weigh flour and combine with sugar and cocoa powder\",\n  \"stir in almond milk and vanilla to the melted chocolate\",\n  FOLD_IN_FLOUR_MIX,\n  \"gently introduce the raspberries to the mixture\",\n  \"transfer to a non-stick baking tin\",\n  bakeForAbout({ minutes: 40, skewer: true }),\n  \"transfer to fridge for 1 hour to speed up cooling and increase fudginess\",\n  \"store in airtight container\"\n];\n\nconst title: IRecipeTitle = \"brownies\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.BROWNIES;\n\nexport const BROWNIES: IRecipeCard = {\n  ingredients,\n  method,\n  diet,\n  image,\n  title,\n  hide: true\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\n\nconst ingredients: IRecipeIngredients = [\n  [\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 125,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.CINNAMON_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BICARBONATE_OF_SODA,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 115,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    { ingredient: INGREDIENTS.EGGS, quantity: 1 },\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.OATS,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.RAISINS,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst title: IRecipeTitle = \"cookies\";\nconst makes: IRecipeMakes = { quantity: 20, measurement: \"cookie\" };\nconst diet: IRecipeDiet = DIETS.VEGETARIAN;\n\nexport const COOKIES: IRecipeCard = {\n  ingredients,\n  title,\n  makes,\n  favourite: true,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: IRecipeIngredients = [\n  [\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 350,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 175,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 175,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.APPLE_BRAMLEY,\n      quantity: 1,\n      measurement: MEASUREMENTS.KILOGRAM,\n      notes: \"weighs nearer 700g after peeling and coring\"\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 350,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.RASPBERRIES_FROZEN,\n      quantity: 350,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BLACKBERRIES_FROZEN,\n      quantity: 500,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.CINNAMON_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_DEMERARA,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: IServeWith = [[{ ingredient: INGREDIENTS.CREAM_OAT }]];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 160 }),\n  \"mix sieved flour and sieved caster sugar\",\n  \"introduce chunks of butter, use fingertips to form light crumble but don't overwork\",\n  \"blind bake the crumble topping for 40 minutes (shaking half way through)\",\n  \"peel, core and chop the apples into medium chunks\",\n  \"stew apple in the water until softened, remove from heat\",\n  \"stir in demerara sugar, raspberries, blackberries and cinnamon\",\n  \"transfer fruit to oven dish and cover with the crumble topping\",\n  \"bake for 20 minutes\",\n  \"remove from oven, leave to cool for at least 5 minutes before serving\"\n];\n\nconst makes: IRecipeMakes = { quantity: 8, measurement: MEASUREMENTS.PORTION };\nconst title: IRecipeTitle = \"crumble\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.CRUMBLE;\n\nexport const CRUMBLE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  favourite: true,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { PHOTOS } from \"../../../resources\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: IRecipeIngredients = [\n  [\n    {\n      ingredient: INGREDIENTS.APRICOTS_DRIED,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BLUEBERRIES_DRIED,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.CRANBERRIES_DRIED,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OATS,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 140,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SYRUP_GOLDEN,\n      quantity: 90,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"in a large mixing bowl, stir finely chopped fruit and salt into the oats\",\n  \"melt butter in a saucepan with golden syrup and sugar\",\n  \"add melted butter mix to oat mix and stir thoroughly\",\n  \"transfer mixture to non-stick loaf tin, flatten to cover the whole base\",\n  \"bake for 15-20 minutes (depending how gooey you like it, remembering it will solidify more overnight)\",\n  \"leave to cool before cutting into suitably-sized chunks\"\n];\n\nconst title: IRecipeTitle = \"flapjacks\";\nconst makes: IRecipeMakes = { quantity: 12, measurement: MEASUREMENTS.CHUNK };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.FLAPJACKS;\n\nexport const FLAPJACKS: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst {\n  preheatOven,\n  FOLD_IN_FLOUR_MIX,\n  transferToLoafTin,\n  bakeForAbout\n} = recipeMethodEntries();\n\nconst ingredients: IRecipeIngredients = [\n  [\n    {\n      ingredient: INGREDIENTS.MILK_COCONUT_CANNED,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 100,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    { ingredient: INGREDIENTS.LEMON_LARGE, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.LEMON_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.FLOUR_SELF_RAISING,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BICARBONATE_OF_SODA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    { ingredient: INGREDIENTS.LEMON_LARGE, quantity: 1 },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"in a large mixing bowl, whisk the coconut milk with the sugar, oil and lemon juice for at least 3 minutes\",\n  \"stir in the lemon zest, vanilla extract and lemon extract\",\n  \"in a small mixing bowl, weigh flour and combine with baking powder, bicarbonate of soda and salt\",\n  FOLD_IN_FLOUR_MIX,\n  transferToLoafTin({}),\n  bakeForAbout({ minutes: 40, skewer: true }),\n  \"make drizzle topping from zest and juice of lemon plus sugar\",\n  \"leave cake to cool for at least 30 minutes, prod a few holes in the cake\",\n  \"evenly coat drizzle topping\"\n];\n\nconst title: IRecipeTitle = \"lemon drizzle\";\nconst makes: IRecipeMakes = { quantity: 10, measurement: MEASUREMENTS.SLICE };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const LEMON_DRIZZLE: IRecipeCard = {\n  title,\n  ingredients,\n  diet,\n  makes,\n  method,\n  hide: true\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"../../../constants\";\nimport { recipeMethodEntries } from \"../../../utils/global\";\n\nconst { preheatOven, bakeForAbout } = recipeMethodEntries();\n\nconst ingredients: IRecipeIngredients = [\n  [\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 165,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK_OAT,\n      quantity: 85,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.RAISINS,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 200, bakingTray: true }),\n  \"sieve flour and baking powder, combine with sugar and salt\",\n  \"add butter, use fingertips to form fine crumbs\",\n  \"dust the kitchen worktop with flour\",\n  \"slightly warm the milk and pour into the flour mix, use a knife to combine the ingredients\",\n  \"fold in the the raisins\",\n  \"roll out the dough on the worktop to a suitable thickness\",\n  \"cut out scone shapes and place on a baking tray\",\n  bakeForAbout({ minutes: 10, wellRisen: true })\n];\n\nconst title: IRecipeTitle = \"scones\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const SCONES: IRecipeCard = {\n  ingredients,\n  method,\n  diet,\n  title\n};\n","import { MAINS } from \"./mains\";\nimport { SAUCES } from \"./sauces\";\nimport { SIDES } from \"./sides\";\nimport { SWEETS } from \"./sweets\";\nimport { RECIPES_COMING_SOON } from \"./recipes-coming-soon\";\n\ninterface IRecipesData {\n  CATEGORISED: Array<IRecipeGroup>;\n  COMING_SOON: Array<ICountedListItem>;\n}\n\nexport const DATA_RECIPES: IRecipesData = {\n  CATEGORISED: [MAINS, SIDES, SAUCES, SWEETS],\n  COMING_SOON: RECIPES_COMING_SOON\n};\n","import { BANANA_CAKE } from \"./banana-cake\";\nimport { BLUEBERRY_PANCAKES } from \"./blueberry-pancakes\";\nimport { BROWNIES } from \"./brownies\";\nimport { COOKIES } from \"./cookies\";\nimport { CRUMBLE } from \"./crumble\";\nimport { FLAPJACKS } from \"./flapjacks\";\nimport { LEMON_DRIZZLE } from \"./lemon-drizzle\";\nimport { SCONES } from \"./scones\";\n\nexport const SWEETS: IRecipeGroup = {\n  category: \"sweets\",\n  data: [\n    BANANA_CAKE,\n    BLUEBERRY_PANCAKES,\n    BROWNIES,\n    COOKIES,\n    CRUMBLE,\n    FLAPJACKS,\n    LEMON_DRIZZLE,\n    SCONES\n  ]\n};\n","const recipeComingSoon: Array<string> = [\n  \"gingerbread\",\n  \"spinach sweet potato hash\",\n  \"shortbread\",\n  \"courgette rösti fritters\",\n  \"key lime pie\",\n  \"meatball tagine\",\n  \"aubergine teriyaki\",\n  \"loaded potato skins\",\n  \"mushroom stroganoff\",\n  \"carrot and ginger cake\",\n  \"jackfruit mac\",\n  \"lemon meringue pie\",\n  \"chilli sin carne\",\n  \"passionfruit cheesecake\",\n  \"victoria sponge\",\n  \"thai green curry\",\n  \"dahl\"\n];\n\nexport const RECIPES_COMING_SOON: Array<ICountedListItem> = recipeComingSoon\n  .sort((a, b) => (a > b ? 1 : -1))\n  .map(item => ({\n    listEntry: item,\n    ignoreCountInfo: true,\n    futureCount: 0,\n    pastCount: 0\n  }));\n","import { PLAYS, THEATRE_VENUES, FRIENDS } from \"../../constants\";\n\nexport const THEATRE_2016: Array<ITheatreData> = [\n  {\n    play: PLAYS.MIDSUMMER_NIGHTS_DREAM,\n    theatre: THEATRE_VENUES.ROYAL_SHAKESPEARE,\n    dates: [new Date(\"2016-06-17\")],\n    company: [FRIENDS.SIAN]\n  },\n  {\n    play: PLAYS[1984],\n    theatre: THEATRE_VENUES.PLAYHOUSE,\n    dates: [new Date(\"2016-08-13\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    favourite: true\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS } from \"../../constants\";\n\nexport const THEATRE_2017: Array<ITheatreData> = [\n  {\n    play: PLAYS.UGLY_LIES_THE_BONE,\n    theatre: THEATRE_VENUES.NATIONAL,\n    dates: [new Date(\"2017-03-25\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    play: PLAYS.KINKY_BOOTS,\n    theatre: THEATRE_VENUES.ADELPHI,\n    dates: [new Date(\"2017-05-23\")],\n    company: [FRIENDS.SIAN]\n  },\n  {\n    play: PLAYS.MATILDA,\n    theatre: THEATRE_VENUES.CAMBRIDGE,\n    dates: [new Date(\"2017-06-07\")],\n    company: [FRIENDS.SIAN, FRIENDS.LUKE_S]\n  },\n  {\n    play: PLAYS.YOUNG_MARX,\n    theatre: THEATRE_VENUES.BRIDGE,\n    dates: [new Date(\"2017-10-24\")],\n    company: [FRIENDS.JHC, FRIENDS.JOE, FRIENDS.JAMIE, FRIENDS.AISHA]\n  },\n  {\n    play: PLAYS.FERRYMAN,\n    favourite: true,\n    theatre: THEATRE_VENUES.GIELGUD,\n    dates: [new Date(\"2017-11-26\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS, ACTORS } from \"../../constants\";\n\nexport const THEATRE_2018: Array<ITheatreData> = [\n  {\n    play: PLAYS.FROZEN,\n    theatre: THEATRE_VENUES.ROYAL_HAYMARKET,\n    dates: [new Date(\"2018-04-14\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    cast: [ACTORS.SURANNE_JONES, ACTORS.NINA_SOSANYA, ACTORS.JASON_WATKINS]\n  },\n  {\n    play: PLAYS.EVERYBODYS_TALKING_ABOUT_JAMIE,\n    cast: [ACTORS.JOHN_MCCREA],\n    theatre: THEATRE_VENUES.APOLLO,\n    dates: [new Date(\"2018-05-12\")],\n    company: [FRIENDS.SIAN]\n  },\n  {\n    play: PLAYS.CONSENT,\n    cast: [ACTORS.SIAN_CLIFFORD, ACTORS.ADAM_JAMES, ACTORS.LEE_INGLEBY],\n    theatre: THEATRE_VENUES.HAROLD_PINTER,\n    dates: [new Date(\"2018-06-30\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    play: PLAYS.THAT_GIRL,\n    cast: [ACTORS.HATTY_JONES],\n    theatre: THEATRE_VENUES.OLD_RED_LION,\n    dates: [new Date(\"2018-09-05\")],\n    company: [\n      FRIENDS.JHC,\n      FRIENDS.JOE,\n      FRIENDS.JAMIE,\n      FRIENDS.LEWIS,\n      FRIENDS.DOM\n    ]\n  },\n  {\n    play: PLAYS.DUST,\n    theatre: THEATRE_VENUES.TRAFALGAR_STUDIOS,\n    cast: [ACTORS.MILLY_THOMAS],\n    dates: [new Date(\"2018-10-08\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    favourite: true\n  },\n  {\n    play: PLAYS.INHERITANCE,\n    theatre: THEATRE_VENUES.NOEL_COWARD,\n    dates: [new Date(\"2018-10-27\")],\n    company: [FRIENDS.MUM],\n    favourite: true\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS, ACTORS } from \"../../constants\";\n\nexport const THEATRE_2019: Array<ITheatreData> = [\n  {\n    play: PLAYS.WICKED,\n    theatre: THEATRE_VENUES.APOLLO_VICTORIA,\n    dates: [new Date(\"2019-01-12\")],\n    company: [FRIENDS.DAN, FRIENDS.MARIA]\n  },\n  {\n    play: PLAYS.LEAVE_TO_REMAIN,\n    theatre: THEATRE_VENUES.LYRIC,\n    dates: [new Date(\"2019-01-22\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    play: PLAYS.HOME_IM_DARLING,\n    cast: [ACTORS.KATHERINE_PARKINSON],\n    theatre: THEATRE_VENUES.DUKE_OF_YORKS,\n    dates: [new Date(\"2019-03-04\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    play: PLAYS.MIDSUMMER_NIGHTS_DREAM,\n    cast: [\n      ACTORS.GWENDOLINE_CHRISITE,\n      ACTORS.DAVID_MOORST,\n      ACTORS.OLIVER_CHRIS,\n      ACTORS.HAMMED_ANIMASHAUN\n    ],\n    theatre: THEATRE_VENUES.BRIDGE,\n    dates: [new Date(\"2019-08-08\")],\n    company: [FRIENDS.JHC, FRIENDS.JERRY, FRIENDS.JOE, FRIENDS.LEWIS]\n  },\n  {\n    play: PLAYS.SON,\n    cast: [ACTORS.LAURIE_KYNASTON],\n    theatre: THEATRE_VENUES.DUKE_OF_YORKS,\n    dates: [new Date(\"2019-09-28\")],\n    company: [FRIENDS.MUM]\n  },\n  {\n    play: PLAYS.LOST_UNFOUND,\n    theatre: THEATRE_VENUES.WHITE_BEAR,\n    dates: [new Date(\"2019-10-09\")],\n    company: [FRIENDS.JERRY, FRIENDS.LEWIS, FRIENDS.DOM, FRIENDS.JAMIE]\n  },\n\n  {\n    play: PLAYS.LUNGS,\n    theatre: THEATRE_VENUES.OLD_VIC,\n    cast: [ACTORS.CLAIRE_FOY, ACTORS.MATT_SMITH],\n    dates: [new Date(\"2019-10-26\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    favourite: true\n  },\n  {\n    play: PLAYS.AFTERGLOW,\n    cast: [ACTORS.PETER_MCPHERSON, ACTORS.ADI_CHUGH, ACTORS.BENJAMIN_ALUWIHARE],\n    theatre: THEATRE_VENUES.WATERLOO_EAST,\n    dates: [new Date(\"2019-11-30\")],\n    company: [FRIENDS.DAN]\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS, ACTORS } from \"../../constants\";\n\nexport const THEATRE_2020: Array<ITheatreData> = [\n  {\n    play: PLAYS.WAITRESS,\n    theatre: THEATRE_VENUES.ADELPHI,\n    dates: [new Date(\"2020-02-18\")],\n    company: [FRIENDS.DARREN],\n    cast: [ACTORS.SARA_BAREILLES]\n  },\n  {\n    play: PLAYS.UNCLE_VANYA,\n    theatre: THEATRE_VENUES.HAROLD_PINTER,\n    dates: [new Date(\"2020-02-19\")],\n    cast: [ACTORS.AIMEE_LOU_WOOD],\n    company: [FRIENDS.MUM]\n  }\n  // {\n  //   play: PLAYS[\"4000_MILES\"],\n  //   theatre: THEATRE_VENUES.OLD_VIC,\n  //   dates: [new Date(\"2020-05-09\"),\n  //   cast: ACTORS.TIMOTHEE_CHALAMET,\n  //   company: [FRIENDS.MUM, FRIENDS.EMMA]\n  // }\n];\n","import {\n  ACTORS,\n  FRIENDS,\n  PLAYS,\n  PAGE_SECTIONS,\n  THEATRE_VENUES\n} from \"../../constants\";\nimport { generateSectionData } from \"../../utils/global\";\n\nimport { THEATRE_2016 } from \"./theatre-2016\";\nimport { THEATRE_2017 } from \"./theatre-2017\";\nimport { THEATRE_2018 } from \"./theatre-2018\";\nimport { THEATRE_2019 } from \"./theatre-2019\";\nimport { THEATRE_2020 } from \"./theatre-2020\";\n\nconst ALL: Array<ITheatreData> = [\n  ...THEATRE_2016,\n  ...THEATRE_2017,\n  ...THEATRE_2018,\n  ...THEATRE_2019,\n  ...THEATRE_2020\n];\nconst ALL_GROUPED_BY_YEAR: Array<Array<ITheatreData>> = [\n  THEATRE_2016,\n  THEATRE_2017,\n  THEATRE_2018,\n  THEATRE_2019,\n  THEATRE_2020\n];\nconst FAVOURITES: Array<ITheatreData> = ALL.filter(item => item.favourite);\n\n//@ts-ignore\nconst generateSectionDataWrapper = parms =>\n  generateSectionData({\n    ...parms,\n    allData: ALL,\n    favouritedData: FAVOURITES\n  });\n\nconst UPCOMING = generateSectionDataWrapper({ upcomingMode: true });\n\nexport const DATA_THEATRE = {\n  ALL,\n\n  ALL_GROUPED_BY_YEAR,\n\n  ACTORS: generateSectionDataWrapper({\n    items: ACTORS,\n    pageSectionTitle: PAGE_SECTIONS.ACTOR\n  }),\n\n  FAVOURITES,\n\n  FRIENDS: generateSectionDataWrapper({\n    items: FRIENDS,\n    pageSectionTitle: PAGE_SECTIONS.FRIEND,\n    filter: \"theatre\"\n  }),\n\n  PLAYS: generateSectionDataWrapper({\n    items: PLAYS,\n    pageSectionTitle: PAGE_SECTIONS.PLAY\n  }),\n\n  VENUES: generateSectionDataWrapper({\n    items: THEATRE_VENUES,\n    pageSectionTitle: PAGE_SECTIONS.THEATRE_VENUES\n  }),\n\n  UPCOMING\n};\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_1997: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.SPAIN.islands.TENERIFE],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"1997-02-05\"), new Date(\"1997-02-12\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_1998: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.SPAIN.islands.LANZAROTE],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"1998-02-01\"), new Date(\"1998-02-14\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_1999: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.FRANCE.attractions.DISNEYLAND_PARIS],\n    subtitle: [LOCATIONS.FRANCE],\n    dates: [new Date(\"1999-05-27\"), new Date(\"1999-05-30\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.SPAIN.islands.MINORCA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"1999-07-23\"), new Date(\"1999-08-06\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2000: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.SPAIN.islands.MINORCA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2000-07-28\"), new Date(\"2000-08-11\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2001: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.SPAIN.islands.IBIZA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2001-08-20\"), new Date(\"2001-09-03\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2002: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.USA.states.FLORIDA],\n    subtitle: [LOCATIONS.USA],\n    hidden: [\n      LOCATIONS.USA.attractions.BUSCH_GARDENS_TAMPA,\n      LOCATIONS.USA.attractions.DISNEY_EPCOT,\n      LOCATIONS.USA.attractions.UNIVERSALS_ISLANDS_OF_ADVENTURE,\n      LOCATIONS.USA.attractions.UNIVERSAL_STUDIOS_FLORIDA,\n      LOCATIONS.USA.attractions.DISNEY_ANIMAL_KINGDOM,\n      LOCATIONS.USA.attractions.DISNEY_MGM_STUDIOS,\n      LOCATIONS.USA.attractions.DISNEY_MAGIC_KINGDOM,\n      LOCATIONS.USA.attractions.BLIZZARD_BEACH,\n      LOCATIONS.USA.attractions.SEAWORLD_ORLANDO\n    ],\n    dates: [new Date(\"2002-05-23\"), new Date(\"2002-06-12\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2003: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.PORTUGAL],\n    hidden: [LOCATIONS.PORTUGAL.attractions.ZOOMARINE],\n    dates: [new Date(\"2003-07-31\"), new Date(\"2003-08-14\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2004: Array<ITravelData> = [\n  {\n    title: [\n      LOCATIONS.USA.states.NEW_YORK,\n      LOCATIONS.CANADA.cities.NIAGARA_FALLS,\n      LOCATIONS.USA.states.MASSACHUSETTS\n    ],\n    subtitle: [\n      LOCATIONS.USA.cities.NEW_YORK_CITY,\n      LOCATIONS.CANADA.cities.NIAGARA_FALLS,\n      LOCATIONS.USA.cities.BOSTON_MASSACHUSETTS,\n      LOCATIONS.USA.cities.SPRINGFIELD_MASSACHUSETTS,\n      LOCATIONS.USA.regions.CAPE_COD,\n      LOCATIONS.USA.islands.MARTHAS_VINEYARD\n    ],\n    hidden: [\n      LOCATIONS.USA,\n      LOCATIONS.USA.attractions.CENTRAL_PARK,\n      LOCATIONS.USA.attractions.TIMES_SQUARE,\n      LOCATIONS.USA.attractions.BROOKLYN_BRIDGE,\n      LOCATIONS.USA.attractions.WORLD_TRADE_CENTER,\n      LOCATIONS.CANADA,\n      LOCATIONS.CANADA.attractions.NIAGARA_FALLS,\n      LOCATIONS.USA.attractions.SIX_FLAGS_NEW_ENGLAND\n    ],\n    dates: [new Date(\"2004-07-30\"), new Date(\"2004-08-17\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.DAD]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2005: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.SPAIN.attractions.PORTAVENTURA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2005-07-26\"), new Date(\"2005-08-02\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.GREECE.regions.HALKIDIKI],\n    subtitle: [LOCATIONS.GREECE],\n    dates: [new Date(\"2005-08-18\"), new Date(\"2005-08-23\")],\n    company: [\n      FRIENDS.EMMA,\n      FRIENDS.LOUISE,\n      FRIENDS.MEGAN,\n      FRIENDS.MUM,\n      FRIENDS.CAMERON\n    ]\n  },\n  {\n    title: [LOCATIONS.UK.attractions.LAKE_DISTRICT],\n    notAbroad: true,\n    subtitle: [LOCATIONS.UK],\n    dates: [new Date(\"2005-10-22\"), new Date(\"2005-10-24\")],\n    company: [FRIENDS.EMMA, FRIENDS.MUM]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2006: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.USA.states.FLORIDA],\n    subtitle: [LOCATIONS.USA],\n    hidden: [\n      LOCATIONS.USA.attractions.BUSCH_GARDENS_TAMPA,\n      LOCATIONS.USA.attractions.VENICE_BEACH,\n      LOCATIONS.USA.attractions.UNIVERSALS_ISLANDS_OF_ADVENTURE,\n      LOCATIONS.USA.attractions.SEAWORLD_ORLANDO,\n      LOCATIONS.USA.attractions.DISNEY_MGM_STUDIOS,\n      LOCATIONS.USA.attractions.WET_N_WILD_ORLANDO\n    ],\n    dates: [new Date(\"2006-07-25\"), new Date(\"2006-08-05\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.ITALY.towns.SORRENTO, LOCATIONS.ITALY.cities.POMPEII],\n    subtitle: [LOCATIONS.ITALY],\n    hidden: [\n      LOCATIONS.ITALY.attractions.VESUVIUS,\n      LOCATIONS.ITALY.cities.NAPLES\n    ],\n    dates: [new Date(\"2006-08-18\"), new Date(\"2006-08-25\")],\n    company: [\n      FRIENDS.MUM,\n      FRIENDS.EMMA,\n      FRIENDS.LOUISE,\n      FRIENDS.MEGAN,\n      FRIENDS.CAMERON\n    ]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2007: Array<ITravelData> = [\n  {\n    title: [\n      LOCATIONS.USA.cities.SAN_FRANCISCO,\n      LOCATIONS.USA.cities.LOS_ANGELES\n    ],\n    subtitle: [LOCATIONS.USA],\n    hidden: [\n      LOCATIONS.USA.attractions.GOLDEN_GATE_BRIDGE,\n      LOCATIONS.USA.attractions.FISHERMANS_WHARF,\n      LOCATIONS.USA.attractions.ALCATRAZ_PRISON,\n      LOCATIONS.USA.attractions.KNOTTS_BERRY_FARM,\n      LOCATIONS.USA.attractions.HOLLYWOOD_WALK_OF_FAME,\n      LOCATIONS.USA.islands.ALCATRAZ,\n      LOCATIONS.USA.attractions.DISNEYLAND_CALIFORNIA_ADVENTURE\n    ],\n    dates: [new Date(\"2007-07-24\"), new Date(\"2007-08-05\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.UK.regions.CORNWALL],\n    notAbroad: true,\n    subtitle: [LOCATIONS.UK],\n    dates: [new Date(\"2007-08-11\"), new Date(\"2007-08-18\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2008: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.ITALY.cities.ROME, LOCATIONS.ITALY.cities.VATICAN],\n    subtitle: [LOCATIONS.ITALY],\n    hidden: [\n      LOCATIONS.ITALY.attractions.COLOSSEUM,\n      LOCATIONS.ITALY.attractions.TREVI_FOUNTAIN\n    ],\n    dates: [new Date(\"2008-02-08\"), new Date(\"2008-02-10\")],\n    company: [FRIENDS.EMMA, FRIENDS.DAD]\n  },\n  {\n    title: [LOCATIONS.FRANCE.cities.PARIS],\n    subtitle: [LOCATIONS.FRANCE],\n    hidden: [\n      LOCATIONS.FRANCE.attractions.AIR_SPACE_MUSEUM,\n      LOCATIONS.FRANCE.attractions.ARC_DE_TRIOMPHE,\n      LOCATIONS.FRANCE.attractions.EIFFEL_TOWER,\n      LOCATIONS.FRANCE.attractions.LOUVRE,\n      LOCATIONS.FRANCE.attractions.SCIENCE_MUSEUM,\n      LOCATIONS.FRANCE.attractions.SACRE_COEUR,\n      LOCATIONS.FRANCE.attractions.PARC_ASTERIX,\n      LOCATIONS.FRANCE.attractions.AIR_SPACE_MUSEUM\n    ],\n    dates: [new Date(\"2008-04-15\"), new Date(\"2008-04-19\")],\n    company: [\n      FRIENDS.CFS,\n      FRIENDS.BLAINE,\n      FRIENDS.ELLIE_S,\n      FRIENDS.NAV,\n      FRIENDS.ANNIE_B,\n      FRIENDS.JUNAID,\n      FRIENDS.GEMMA,\n      FRIENDS.SARAH_W\n    ]\n  },\n  {\n    title: [LOCATIONS.USA.cities.WASHINGTON_DC, LOCATIONS.USA.states.VIRGINIA],\n    subtitle: [LOCATIONS.USA],\n    hidden: [\n      LOCATIONS.USA.cities.VIRGINIA_BEACH,\n      LOCATIONS.USA.attractions.WASHINGTON_MONUMENT,\n      LOCATIONS.USA.attractions.SIX_FLAGS_AMERICA,\n      LOCATIONS.USA.attractions.LINCOLN_MEMORIAL,\n      LOCATIONS.USA.attractions.CAPITOL_BUILDING,\n      LOCATIONS.USA.attractions.WHITE_HOUSE,\n      LOCATIONS.USA.attractions.BUSCH_GARDENS_WILLIAMSBURG\n    ],\n    dates: [new Date(\"2008-07-13\"), new Date(\"2008-07-24\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.PORTUGAL.towns.VILAMOURA],\n    subtitle: [LOCATIONS.PORTUGAL],\n    dates: [new Date(\"2008-08-07\"), new Date(\"2008-08-14\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2009: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.BELGIUM.attractions.BATTLEFIELDS],\n    subtitle: [LOCATIONS.BELGIUM],\n    hidden: [LOCATIONS.BELGIUM.cities.YPRES],\n    dates: [new Date(\"2009-06-12\"), new Date(\"2009-06-15\")],\n    company: [\n      FRIENDS.CFS,\n      FRIENDS.ELLIE_S,\n      FRIENDS.GRACE,\n      FRIENDS.BLAINE,\n      FRIENDS.POOJA,\n      FRIENDS.ELLIE_G,\n      FRIENDS.GEORGE,\n      FRIENDS.KIERAN_S\n    ]\n  },\n  {\n    title: [\n      LOCATIONS.USA.cities.LAS_VEGAS,\n      LOCATIONS.USA.attractions.GRAND_CANYON,\n      LOCATIONS.USA.cities.LOS_ANGELES\n    ],\n    hidden: [\n      LOCATIONS.USA.attractions.HOLLYWOOD_WALK_OF_FAME,\n      LOCATIONS.USA.attractions.SIX_FLAGS_MAGIC_MOUNTAIN,\n      LOCATIONS.USA.attractions.FARMERS_MARKET\n    ],\n    subtitle: [LOCATIONS.USA],\n    dates: [new Date(\"2009-07-21\"), new Date(\"2009-07-31\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.GREECE.islands.KOS],\n    subtitle: [LOCATIONS.GREECE],\n    dates: [new Date(\"2009-08-12\"), new Date(\"2009-08-19\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2010: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.UAE.cities.DUBAI],\n    subtitle: [LOCATIONS.UAE],\n    hidden: [\n      LOCATIONS.UAE.attractions.AQUAVENTURE,\n      LOCATIONS.UAE.attractions.BURJ_KHALIFA\n    ],\n    dates: [new Date(\"2010-07-26\"), new Date(\"2010-08-03\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.PORTUGAL.towns.FERRAGUDO],\n    subtitle: [LOCATIONS.PORTUGAL],\n    dates: [new Date(\"2010-08-13\"), new Date(\"2010-08-18\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    hidden: [LOCATIONS.PORTUGAL.cities.PORTIMAO]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2011: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.UK.regions.CORNWALL],\n    notAbroad: true,\n    subtitle: [LOCATIONS.UK],\n    dates: [new Date(\"2011-07-01\"), new Date(\"2011-07-04\")],\n    company: [\n      FRIENDS.BLAINE,\n      FRIENDS.GRACE,\n      FRIENDS.POOJA,\n      FRIENDS.JESS,\n      FRIENDS.ELLIE_G,\n      FRIENDS.CARMEN,\n      FRIENDS.KYLE\n    ]\n  },\n  {\n    title: [LOCATIONS.USA.regions.FLORIDA_KEYS],\n    subtitle: [LOCATIONS.USA.regions.ISLAMORADA, LOCATIONS.USA.cities.KEY_WEST],\n    dates: [new Date(\"2011-08-02\"), new Date(\"2011-08-10\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA],\n    hidden: [LOCATIONS.USA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2012: Array<ITravelData> = [\n  {\n    title: [\n      LOCATIONS.EGYPT.cities.SHARM_EL_SHEIKH,\n      LOCATIONS.EGYPT.cities.CAIRO\n    ],\n    subtitle: [LOCATIONS.EGYPT],\n    hidden: [LOCATIONS.EGYPT.attractions.GIZA_PYRAMIDS_SPHINX],\n    dates: [new Date(\"2012-07-22\"), new Date(\"2012-07-29\")],\n    company: [FRIENDS.DAD]\n  },\n  {\n    title: [LOCATIONS.ITALY.towns.JESOLO, LOCATIONS.ITALY.cities.VENICE],\n    subtitle: [LOCATIONS.ITALY],\n    dates: [new Date(\"2012-08-20\"), new Date(\"2012-08-26\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2013: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.CUBA],\n    subtitle: [LOCATIONS.CUBA.cities.HAVANA, LOCATIONS.CUBA.towns.VARADERO],\n    dates: [new Date(\"2013-08-16\"), new Date(\"2013-08-26\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2014: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.BARBADOS],\n    dates: [new Date(\"2014-06-16\"), new Date(\"2014-06-24\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA],\n    hidden: [LOCATIONS.BARBADOS.attractions.HARRISONS_CAVE]\n  },\n  {\n    title: [LOCATIONS.THAILAND, LOCATIONS.LAOS],\n    subtitle: [\n      LOCATIONS.THAILAND.cities.BANGKOK,\n      LOCATIONS.THAILAND.islands.KOH_PHANGAN,\n      LOCATIONS.THAILAND.islands.KOH_TAO,\n      LOCATIONS.THAILAND.islands.KOH_PHI_PHI,\n      LOCATIONS.THAILAND.cities.CHIANG_MAI,\n      LOCATIONS.THAILAND.towns.PAI,\n      LOCATIONS.LAOS.cities.LUANG_PRABANG,\n      LOCATIONS.LAOS.cities.VIENTIANE\n    ],\n    hidden: [\n      LOCATIONS.THAILAND.attractions.SKY_BAR,\n      LOCATIONS.THAILAND.attractions.GRAND_PALACE,\n      LOCATIONS.THAILAND.attractions.TIGER_KINGDOM,\n      LOCATIONS.THAILAND.attractions.WHITE_TEMPLE,\n      LOCATIONS.LAOS.attractions.BUDDHA_PARK,\n      LOCATIONS.LAOS.attractions.ELEPHANT_VILLAGE,\n      LOCATIONS.THAILAND.attractions.MAYA_BAY,\n      LOCATIONS.THAILAND.towns.KRABI,\n      LOCATIONS.THAILAND.attractions.PAI_CANYON,\n      LOCATIONS.THAILAND.cities.CHIANG_RAI,\n      LOCATIONS.LAOS.attractions.KUANG_SI_FALLS\n    ],\n    dates: [new Date(\"2014-07-07\"), new Date(\"2014-08-04\")],\n    company: [FRIENDS.TONYA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2015: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.FRANCE.cities.PARIS],\n    subtitle: [LOCATIONS.FRANCE],\n    hidden: [\n      LOCATIONS.FRANCE.attractions.SACRE_COEUR,\n      LOCATIONS.FRANCE.attractions.LOUVRE,\n      LOCATIONS.FRANCE.attractions.ARC_DE_TRIOMPHE,\n      LOCATIONS.FRANCE.attractions.NOTRE_DAME,\n      LOCATIONS.FRANCE.attractions.EIFFEL_TOWER,\n      LOCATIONS.FRANCE.attractions.NOTRE_DAME\n    ],\n    dates: [new Date(\"2015-03-21\"), new Date(\"2015-03-24\")],\n    company: [\n      FRIENDS.POOJA,\n      FRIENDS.SONYA,\n      FRIENDS.CARMEN,\n      FRIENDS.TONYA,\n      FRIENDS.GRACE,\n      FRIENDS.ELLIE_G\n    ]\n  },\n  {\n    title: [LOCATIONS.UGANDA],\n    subtitle: [LOCATIONS.UGANDA.cities.JINJA],\n    hidden: [\n      LOCATIONS.UGANDA.attractions.NILE_SOURCE,\n      LOCATIONS.UGANDA.attractions.RAFTING_NALUBALE\n    ],\n    dates: [new Date(\"2015-08-04\"), new Date(\"2015-09-05\")],\n    company: [\n      FRIENDS.AMY_C,\n      FRIENDS.HEATHER_C,\n      FRIENDS.OSCAR,\n      FRIENDS.LEAH,\n      FRIENDS.ELINORE_G,\n      FRIENDS.ELISE,\n      FRIENDS.SARAH_WA,\n      FRIENDS.HEATHER_C,\n      FRIENDS.LEAH,\n      FRIENDS.ROB_G,\n      FRIENDS.KATE_B,\n      FRIENDS.COURTNEY\n    ]\n  },\n  {\n    title: [{ name: \"interrailing\" }],\n    subtitle: [\n      LOCATIONS.GERMANY.cities.BERLIN,\n      LOCATIONS.CZECH_REPUBLIC.cities.PRAGUE,\n      LOCATIONS.POLAND.cities.KRAKOW,\n      LOCATIONS.HUNGARY.cities.BUDAPEST\n    ],\n    hidden: [\n      LOCATIONS.GERMANY,\n      LOCATIONS.GERMANY.attractions.BERLIN_WALL,\n      LOCATIONS.GERMANY.attractions.BRANDENBURG_GATE,\n      LOCATIONS.GERMANY.attractions.EAST_SIDE_GALLERY,\n      LOCATIONS.GERMANY.attractions.HOLOCAUST_MEMORIAL,\n      LOCATIONS.GERMANY.attractions.REICHSTAG,\n      LOCATIONS.CZECH_REPUBLIC,\n      LOCATIONS.CZECH_REPUBLIC.attractions.JOHN_LENNON_WALL,\n      LOCATIONS.CZECH_REPUBLIC.attractions.VYSEHRAD,\n      LOCATIONS.POLAND,\n      LOCATIONS.POLAND.towns.WIELICZKA,\n      LOCATIONS.POLAND.attractions.WIELICZKA_SALT_MINE,\n      LOCATIONS.POLAND.attractions.AUSCHWITZ_BIRKENAU,\n      LOCATIONS.HUNGARY,\n      LOCATIONS.HUNGARY.attractions.CITADELLA,\n      LOCATIONS.HUNGARY.attractions.PARLIAMENT_BUILDING,\n      LOCATIONS.HUNGARY.attractions.THERMAL_BATH_SZECHENYI\n    ],\n    dates: [new Date(\"2015-09-10\"), new Date(\"2015-09-24\")],\n    company: [FRIENDS.SIAN]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2016: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.IRELAND.cities.DUBLIN],\n    subtitle: [LOCATIONS.IRELAND],\n    dates: [new Date(\"2016-02-05\"), new Date(\"2016-02-07\")],\n    company: [FRIENDS.SIAN],\n    hidden: [\n      LOCATIONS.IRELAND.attractions.DUBLIN_PRISON,\n      LOCATIONS.IRELAND.attractions.ST_STEPHENS_GREEN_PARK,\n      LOCATIONS.IRELAND.attractions.GUINNESS_STOREHOUSE\n    ]\n  },\n  {\n    title: [LOCATIONS.PORTUGAL.towns.TAVIRA],\n    subtitle: [LOCATIONS.PORTUGAL],\n    dates: [new Date(\"2016-06-09\"), new Date(\"2016-06-16\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.ECUADOR, LOCATIONS.PERU],\n    subtitle: [\n      LOCATIONS.ECUADOR.cities.QUITO,\n      LOCATIONS.ECUADOR.cities.OTAVALO,\n      LOCATIONS.ECUADOR.attractions.COTOPAXI,\n      LOCATIONS.ECUADOR.cities.BANOS,\n      LOCATIONS.ECUADOR.islands.GALAPAGOS,\n      LOCATIONS.PERU.towns.MANCORA,\n      LOCATIONS.PERU.cities.HUARAZ,\n      LOCATIONS.PERU.cities.LIMA,\n      LOCATIONS.PERU.towns.PARACAS,\n      LOCATIONS.PERU.villages.HUACACHINA,\n      LOCATIONS.PERU.cities.AREQUIPA,\n      LOCATIONS.PERU.attractions.COLCA_CANYON,\n      LOCATIONS.PERU.cities.CUSCO,\n      LOCATIONS.PERU.attractions.MANU,\n      LOCATIONS.PERU.attractions.RAINBOW_MOUNTAIN,\n      LOCATIONS.PERU.attractions.MACHU_PICCHU\n    ],\n    hidden: [\n      LOCATIONS.ECUADOR.attractions.EQUATOR_MONUMENT,\n      LOCATIONS.ECUADOR.attractions.OTAVALO_MARKET,\n      LOCATIONS.ECUADOR.attractions.PAILON_DEL_DIABLO,\n      LOCATIONS.ECUADOR.cities.GUAYAQUIL,\n      LOCATIONS.ECUADOR.attractions.TORTOISE_PARK,\n      LOCATIONS.PERU.attractions.HUASCARAN_PARK,\n      LOCATIONS.PERU.attractions.LAGUNA_69,\n      LOCATIONS.PERU.attractions.HUACACHINA,\n      LOCATIONS.PERU.attractions.JUNGLE_ZIPLINE\n    ],\n    dates: [new Date(\"2016-10-03\"), new Date(\"2016-11-10\")],\n    company: [FRIENDS.SARAH_W, FRIENDS.SIAN]\n  },\n  {\n    title: [\n      LOCATIONS.BRAZIL.cities.RIO_DE_JANEIRO,\n      LOCATIONS.BRAZIL.islands.ILHA_GRANDE\n    ],\n    hidden: [\n      LOCATIONS.BRAZIL.attractions.HANG_GLIDING,\n      LOCATIONS.BRAZIL.attractions.MODERN_ART_MUSEUM_RIO,\n      LOCATIONS.BRAZIL.attractions.COPACABANA_BEACH,\n      LOCATIONS.BRAZIL.attractions.ROCINHA_FAVELA,\n      LOCATIONS.BRAZIL.attractions.PICO_DO_PAPAGAIO,\n      LOCATIONS.BRAZIL.attractions.SELARON_STEPS,\n      LOCATIONS.BRAZIL.attractions.CHRIST_THE_REDEEMER\n    ],\n    subtitle: [LOCATIONS.BRAZIL],\n    dates: [new Date(\"2016-12-01\"), new Date(\"2016-12-11\")],\n    company: [FRIENDS.SIAN]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2017: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.ITALY.cities.MILAN],\n    subtitle: [LOCATIONS.ITALY],\n    dates: [new Date(\"2017-05-12\"), new Date(\"2017-05-14\")],\n    company: [\n      FRIENDS.AISHA,\n      FRIENDS.JOE,\n      FRIENDS.JAMIE,\n      FRIENDS.PATRICIA,\n      FRIENDS.JAZZ,\n      FRIENDS.JHC\n    ],\n    hidden: [\n      LOCATIONS.ITALY.attractions.MILAN_MALL,\n      LOCATIONS.ITALY.attractions.SEMPIONE_PARK,\n      LOCATIONS.ITALY.attractions.ARCO_DELLA_PACE\n    ]\n  },\n  {\n    title: [LOCATIONS.SPAIN.cities.BARCELONA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2017-05-12\"), new Date(\"2017-05-14\")],\n    company: [\n      FRIENDS.SIAN,\n      FRIENDS.LINDSEY_S,\n      FRIENDS.BETH_O,\n      FRIENDS.ELLIE_F,\n      FRIENDS.HARRIET_K\n    ],\n    hidden: [\n      LOCATIONS.SPAIN.attractions.PARK_GUELL,\n      LOCATIONS.SPAIN.attractions.CIUTADELLA_PARK\n    ]\n  },\n  {\n    title: [LOCATIONS.SPAIN.islands.TENERIFE],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2017-06-15\"), new Date(\"2017-06-18\")],\n    company: [FRIENDS.LUKE_S],\n    hidden: [LOCATIONS.SPAIN.attractions.SIAM_PARK]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2018: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.DENMARK.cities.COPENHAGEN],\n    subtitle: [LOCATIONS.DENMARK],\n    dates: [new Date(\"2018-01-19\"), new Date(\"2018-01-22\")],\n    company: [FRIENDS.LUKE_S],\n    hidden: [LOCATIONS.DENMARK.attractions.LOUISIANA_ART_MUSEUM]\n  },\n  {\n    title: [LOCATIONS.CYPRUS.cities.PAPHOS],\n    subtitle: [LOCATIONS.CYPRUS],\n    dates: [new Date(\"2018-05-17\"), new Date(\"2018-05-21\")],\n    company: [FRIENDS.SIAN],\n    hidden: [LOCATIONS.CYPRUS.attractions.PAPHOS_ARCHAEOLOGICAL_PARK]\n  },\n  {\n    title: [LOCATIONS.CROATIA.cities.DUBROVNIK],\n    subtitle: [LOCATIONS.CROATIA],\n    dates: [new Date(\"2018-06-02\"), new Date(\"2018-06-09\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA],\n    hidden: [\n      LOCATIONS.CROATIA.attractions.DUBROVNIK_WALLS,\n      LOCATIONS.CROATIA.attractions.DUBROVNIK_CABLE_CAR\n    ]\n  },\n  {\n    title: [LOCATIONS.NETHERLANDS.cities.GRONINGEN],\n    subtitle: [LOCATIONS.NETHERLANDS],\n    hidden: [LOCATIONS.NETHERLANDS.attractions.GRONINGEN_MUSEUM],\n    dates: [new Date(\"2018-07-14\"), new Date(\"2018-07-16\")],\n    company: [FRIENDS.CARMEN]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2019: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.NETHERLANDS.cities.AMSTERDAM],\n    subtitle: [LOCATIONS.NETHERLANDS],\n    hidden: [\n      LOCATIONS.NETHERLANDS.attractions.SEX_MUSEUM,\n      LOCATIONS.NETHERLANDS.attractions.STEDELIJK_MUSEUM\n    ],\n    dates: [new Date(\"2019-02-01\"), new Date(\"2019-02-04\")],\n    company: [FRIENDS.CAITLIN, FRIENDS.TONYA, FRIENDS.RYAN, FRIENDS.TOM]\n  },\n  {\n    title: [LOCATIONS.PORTUGAL.cities.LISBON],\n    subtitle: [LOCATIONS.PORTUGAL],\n    hidden: [LOCATIONS.PORTUGAL.attractions.OCENARIO_DE_LISBOA],\n    dates: [new Date(\"2019-02-08\"), new Date(\"2019-02-10\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.BELGIUM.cities.BRUGES],\n    subtitle: [LOCATIONS.BELGIUM],\n    hidden: [LOCATIONS.BELGIUM.attractions.BELFRY_OF_BRUGES],\n    dates: [new Date(\"2019-05-17\"), new Date(\"2019-05-19\")],\n    company: [FRIENDS.JAMIE]\n  },\n  {\n    title: [LOCATIONS.ITALY.cities.CATANIA],\n    subtitle: [LOCATIONS.ITALY.regions.SICILY],\n    hidden: [LOCATIONS.ITALY, LOCATIONS.ITALY.attractions.ETNA],\n    dates: [new Date(\"2019-07-10\"), new Date(\"2019-07-15\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.FRANCE.cities.NICE],\n    subtitle: [LOCATIONS.FRANCE],\n    hidden: [LOCATIONS.FRANCE.cities.MONACO],\n    dates: [new Date(\"2019-06-08\"), new Date(\"2019-06-14\")],\n    company: [FRIENDS.SIAN]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"../../constants\";\n\nexport const TRAVEL_2020: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.NORWAY.cities.OSLO],\n    subtitle: [LOCATIONS.NORWAY],\n    hidden: [LOCATIONS.NORWAY.islands.HOVEDOYA],\n    dates: [new Date(\"2020-02-27\"), new Date(\"2020-03-01\")],\n    company: [FRIENDS.RYAN, FRIENDS.CAITLIN, FRIENDS.TOM, FRIENDS.TONYA]\n  }\n  // {\n  //   title: [LOCATIONS.BELIZE, LOCATIONS.COSTA_RICA],\n  //   subtitle: [\n  //     LOCATIONS.BELIZE.islands.CAYE_CAULKER,\n  //     LOCATIONS.BELIZE.attractions.BARRIER_REEF,\n  //     LOCATIONS.COSTA_RICA.attractions.CORCOVADO,\n  //     LOCATIONS.COSTA_RICA.towns.MONTEVERDE,\n  //     LOCATIONS.COSTA_RICA.towns.PUERTO_VIEJO\n  //   ],\n  //   hidden: [\n  //     LOCATIONS.BELIZE.cities.BELIZE_CITY,\n  //     LOCATIONS.BELIZE.islands.AMBERGRIS_CAYE,\n  //     LOCATIONS.COSTA_RICA.cities.SAN_JOSE,\n  //     LOCATIONS.COSTA_RICA.attractions.JAGUAR_RESCUE_CENTER\n  //   ],\n  //   dates: [new Date(\"2020-05-14\"), new Date(\"2020-06-01\")],\n  //   company: FRIENDS.SIAN\n  // },\n  // {\n  //   title: LOCATIONS.SPAIN.cities.MADRID,\n  //   subtitle: LOCATIONS.SPAIN,\n  //   hidden: [LOCATIONS.SPAIN.attractions.PARQUE_WARNER],\n  //   dates: [new Date(\"2020-07-07\"), new Date(\"2020-07-10\")],\n  //   company: FRIENDS.DAN\n  // }\n];\n","import {\n  generateSectionData,\n  generateChildItemsFromParentItems\n} from \"../../utils/global\";\nimport { FRIENDS, PAGE_SECTIONS, LOCATIONS } from \"../../constants\";\n\nimport { TRAVEL_1997 } from \"./travel-1997\";\nimport { TRAVEL_1998 } from \"./travel-1998\";\nimport { TRAVEL_1999 } from \"./travel-1999\";\nimport { TRAVEL_2000 } from \"./travel-2000\";\nimport { TRAVEL_2001 } from \"./travel-2001\";\nimport { TRAVEL_2002 } from \"./travel-2002\";\nimport { TRAVEL_2003 } from \"./travel-2003\";\nimport { TRAVEL_2004 } from \"./travel-2004\";\nimport { TRAVEL_2005 } from \"./travel-2005\";\nimport { TRAVEL_2006 } from \"./travel-2006\";\nimport { TRAVEL_2007 } from \"./travel-2007\";\nimport { TRAVEL_2008 } from \"./travel-2008\";\nimport { TRAVEL_2009 } from \"./travel-2009\";\nimport { TRAVEL_2010 } from \"./travel-2010\";\nimport { TRAVEL_2011 } from \"./travel-2011\";\nimport { TRAVEL_2012 } from \"./travel-2012\";\nimport { TRAVEL_2013 } from \"./travel-2013\";\nimport { TRAVEL_2014 } from \"./travel-2014\";\nimport { TRAVEL_2015 } from \"./travel-2015\";\nimport { TRAVEL_2016 } from \"./travel-2016\";\nimport { TRAVEL_2017 } from \"./travel-2017\";\nimport { TRAVEL_2018 } from \"./travel-2018\";\nimport { TRAVEL_2019 } from \"./travel-2019\";\nimport { TRAVEL_2020 } from \"./travel-2020\";\nimport { TRAVEL_BUCKET_LIST } from \"./travel-bucket-list\";\n\nconst ALL: Array<ITravelData> = [\n  ...TRAVEL_1997,\n  ...TRAVEL_1998,\n  ...TRAVEL_1999,\n  ...TRAVEL_2000,\n  ...TRAVEL_2001,\n  ...TRAVEL_2002,\n  ...TRAVEL_2003,\n  ...TRAVEL_2004,\n  ...TRAVEL_2005,\n  ...TRAVEL_2006,\n  ...TRAVEL_2007,\n  ...TRAVEL_2008,\n  ...TRAVEL_2009,\n  ...TRAVEL_2010,\n  ...TRAVEL_2011,\n  ...TRAVEL_2012,\n  ...TRAVEL_2013,\n  ...TRAVEL_2014,\n  ...TRAVEL_2015,\n  ...TRAVEL_2016,\n  ...TRAVEL_2017,\n  ...TRAVEL_2018,\n  ...TRAVEL_2019,\n  ...TRAVEL_2020\n];\n\nconst ALL_GROUPED_BY_YEAR: Array<Array<ITravelData>> = [\n  TRAVEL_1997,\n  TRAVEL_1998,\n  TRAVEL_1999,\n  TRAVEL_2000,\n  TRAVEL_2001,\n  TRAVEL_2002,\n  TRAVEL_2003,\n  TRAVEL_2004,\n  TRAVEL_2005,\n  TRAVEL_2006,\n  TRAVEL_2007,\n  TRAVEL_2008,\n  TRAVEL_2009,\n  TRAVEL_2010,\n  TRAVEL_2011,\n  TRAVEL_2012,\n  TRAVEL_2013,\n  TRAVEL_2014,\n  TRAVEL_2015,\n  TRAVEL_2016,\n  TRAVEL_2017,\n  TRAVEL_2018,\n  TRAVEL_2019,\n  TRAVEL_2020\n];\n\nconst FAVOURITES: Array<ITravelData> = ALL.filter(item => item.favourite);\n\n// @ts-ignore\nconst countries: Array<ICountry> = Object.values(LOCATIONS);\n\n//@ts-ignore\nconst cities: Array<ICity> = generateChildItemsFromParentItems({\n  childItems: \"cities\",\n  parentItems: LOCATIONS\n});\n\n//@ts-ignore\nconst towns: Array<ITown> = generateChildItemsFromParentItems({\n  childItems: \"towns\",\n  parentItems: LOCATIONS\n});\n\nconst islands: Array<IIsland> = generateChildItemsFromParentItems({\n  childItems: \"islands\",\n  parentItems: LOCATIONS,\n  parentFlag: \"island\"\n});\n\n//@ts-ignore\nconst attractions: Array<IAttraction> = generateChildItemsFromParentItems({\n  childItems: \"attractions\",\n  parentItems: LOCATIONS\n});\n\nconst themeParks: Array<IAttraction> = attractions.filter(\n  item => item.themePark\n);\nconst highlights: Array<IAttraction> = attractions.filter(\n  item => item.highlight\n);\n\n//@ts-ignore\nconst generateSectionDataWrapper = parms =>\n  generateSectionData({\n    ...parms,\n    allData: ALL,\n    favouritedData: FAVOURITES\n  });\n\nconst UPCOMING = generateSectionDataWrapper({ upcomingMode: true });\n\nexport const DATA_TRAVEL = {\n  pastCount: ALL.filter(item => !item.notAbroad).length - UPCOMING.length,\n  futureCount: UPCOMING.length,\n\n  ALL,\n\n  ALL_GROUPED_BY_YEAR,\n\n  BUCKET_LIST: generateSectionDataWrapper({\n    bucketListMode: true,\n    items: TRAVEL_BUCKET_LIST\n  }),\n\n  CITIES: generateSectionDataWrapper({\n    items: cities,\n    pageSectionTitle: PAGE_SECTIONS.CITY\n  }),\n\n  TOWNS: generateSectionDataWrapper({\n    items: towns,\n    pageSectionTitle: PAGE_SECTIONS.TOWN\n  }),\n\n  ATTRACTIONS: generateSectionDataWrapper({\n    items: attractions.filter(item => !item.themePark && !item.highlight),\n    pageSectionTitle: PAGE_SECTIONS.ATTRACTION\n  }),\n\n  THEME_PARKS: generateSectionDataWrapper({\n    items: themeParks,\n    pageSectionTitle: PAGE_SECTIONS.ATTRACTION\n  }),\n\n  HIGLIGHTS: generateSectionDataWrapper({\n    items: highlights,\n    pageSectionTitle: PAGE_SECTIONS.ATTRACTION\n  }),\n\n  ISLANDS: generateSectionDataWrapper({\n    items: islands,\n    pageSectionTitle: PAGE_SECTIONS.ISLAND\n  }),\n\n  COUNTRIES: generateSectionDataWrapper({\n    items: countries,\n    pageSectionTitle: PAGE_SECTIONS.COUNTRY\n  }),\n\n  FAVOURITES,\n\n  FRIENDS: generateSectionDataWrapper({\n    items: FRIENDS,\n    pageSectionTitle: PAGE_SECTIONS.FRIEND,\n    filter: \"travel\"\n  }),\n\n  UPCOMING\n};\n","export const TRAVEL_BUCKET_LIST: Array<INameFavourite> = [\n  // ATTRACTIONS\n  { name: \"Victoria Falls\" },\n\n  // CITIES\n  { name: \"Buenos Aires\", favourite: true },\n  { name: \"Edinburgh\", favourite: true },\n  { name: \"Stockholm\" },\n  { name: \"Porto\" },\n  { name: \"Florence\" },\n  { name: \"Valencia\" },\n  { name: \"Vienna\" },\n\n  // COUNTIRES\n  { name: \"Australia\" },\n  { name: \"Bolivia\" },\n  { name: \"Colombia\" },\n  { name: \"Indonesia\" },\n  { name: \"Japan\", favourite: true },\n  { name: \"Mexico\" },\n  { name: \"New Zealand\" },\n  { name: \"Philippines\", favourite: true },\n  { name: \"Tanzania\" }\n];\n","import { DATA_THEATRE } from \"../data\";\nimport { ICONS } from \"../resources\";\nimport { EVENT_CARD_TYPES, PAGE_SECTIONS } from \"../constants\";\nimport { mapDataToEventCards, mapYearGroupsToSections } from \"../utils/global\";\n\nconst eventType = EVENT_CARD_TYPES.THEATRE;\n//@ts-ignore\nconst mapTheatreVisitToEventCards = parms =>\n  mapDataToEventCards({ ...parms, eventType });\n\nconst statsSections: Array<IPageSection> = [\n  {\n    details: PAGE_SECTIONS.ACTOR,\n    icon: ICONS.ARTIST,\n    data: DATA_THEATRE.ACTORS\n  },\n  {\n    details: PAGE_SECTIONS.FRIEND,\n    icon: ICONS.PEOPLE,\n    data: DATA_THEATRE.FRIENDS,\n    leaderboard: true\n  },\n  {\n    details: PAGE_SECTIONS.PLAY,\n    icon: ICONS.BOOK,\n    data: DATA_THEATRE.PLAYS,\n    showSectionLength: true\n  },\n  {\n    details: PAGE_SECTIONS.THEATRE_VENUES,\n    icon: ICONS.THEATRE,\n    data: DATA_THEATRE.VENUES,\n    showSectionLength: true\n  },\n  {\n    details: PAGE_SECTIONS.UP_NEXT,\n    icon: ICONS.NOTEPAD,\n    data: mapTheatreVisitToEventCards({ data: DATA_THEATRE.UPCOMING }),\n    showSectionLength: true\n  }\n];\n\nconst yearSections: Array<IPageSection> = mapYearGroupsToSections({\n  years: DATA_THEATRE.ALL_GROUPED_BY_YEAR,\n  eventType\n});\n\nconst sections: Array<IPageSection> = [...statsSections, ...yearSections];\n\nexport const PAGE_DATA_THEATRE: IPageData = {\n  sections\n};\n","import { DATA_RECIPES } from \"../data\";\nimport { mapRecipeGroupsToPageSections } from \"../utils/global\";\nimport { PAGE_SECTIONS } from \"../constants\";\n\nconst recipeGroupSections: Array<IPageSection> = mapRecipeGroupsToPageSections(\n  DATA_RECIPES.CATEGORISED\n);\n\nconst comingSoonSection: IPageSection = {\n  details: PAGE_SECTIONS.RECIPES_COMING_SOON,\n  data: DATA_RECIPES.COMING_SOON\n};\n\nconst sections: Array<IPageSection> = [\n  ...recipeGroupSections,\n  comingSoonSection\n];\n\nexport const PAGE_DATA_RECIPES: IPageData = { sections };\n","import { PAGE_SECTION_TYPES } from \"../../constants\";\n\nexport const mapRecipeGroupsToPageSections = (\n  recipeGroups: Array<IRecipeGroup>\n): Array<IPageSection> => {\n  const maprecipeGroupToSection = ({\n    category,\n    data\n  }: IRecipeGroup): IPageSection => ({\n    details: {\n      id: category,\n      title: category,\n      type: PAGE_SECTION_TYPES.RECIPES\n    },\n    data,\n    expandedAutomatically: true\n  });\n\n  return recipeGroups.map(item => maprecipeGroupToSection(item));\n};\n","import { EVENT_CARD_TYPES, PAGE_SECTIONS } from \"../constants\";\nimport { DATA_TRAVEL } from \"../data\";\nimport { ICONS } from \"../resources\";\nimport { mapDataToEventCards, mapYearGroupsToSections } from \"../utils/global\";\n\nconst eventType = EVENT_CARD_TYPES.TRIP;\n//@ts-ignore\nconst mapTripToEventCards = parms =>\n  mapDataToEventCards({ ...parms, eventType });\n\nconst { pastCount, futureCount } = DATA_TRAVEL;\n\nconst statsSections: Array<IPageSection> = [\n  {\n    details: PAGE_SECTIONS.BUCKET_LIST,\n    icon: ICONS.STARS,\n    data: DATA_TRAVEL.BUCKET_LIST\n  },\n  {\n    details: PAGE_SECTIONS.CITY,\n    icon: ICONS.CITY,\n    showSectionLength: true,\n    data: DATA_TRAVEL.CITIES\n  },\n  {\n    details: PAGE_SECTIONS.COUNTRY,\n    icon: ICONS.FLAG,\n    data: DATA_TRAVEL.COUNTRIES,\n    showSectionLength: true\n  },\n  {\n    details: PAGE_SECTIONS.FRIEND,\n    icon: ICONS.PEOPLE,\n    data: DATA_TRAVEL.FRIENDS,\n    leaderboard: true\n  },\n  {\n    details: PAGE_SECTIONS.HIGHLIGHT,\n    icon: ICONS.MAP_PIN,\n    data: DATA_TRAVEL.HIGLIGHTS\n  },\n  {\n    details: PAGE_SECTIONS.ISLAND,\n    showSectionLength: true,\n    icon: ICONS.PALM_TREE,\n    data: DATA_TRAVEL.ISLANDS\n  },\n  {\n    details: PAGE_SECTIONS.THEME_PARK,\n    showSectionLength: true,\n    icon: ICONS.ROLLER_COASTER,\n    data: DATA_TRAVEL.THEME_PARKS\n  },\n  {\n    details: PAGE_SECTIONS.TOWN,\n    icon: ICONS.TOWN_HALL,\n    data: DATA_TRAVEL.TOWNS\n  },\n  {\n    details: PAGE_SECTIONS.UP_NEXT,\n    icon: ICONS.NOTEPAD,\n    showSectionLength: true,\n    data: mapTripToEventCards({ data: DATA_TRAVEL.UPCOMING })\n  }\n];\n\nconst yearSections: Array<IPageSection> = mapYearGroupsToSections({\n  years: DATA_TRAVEL.ALL_GROUPED_BY_YEAR,\n  eventType\n});\n\nconst sections: Array<IPageSection> = [...statsSections, ...yearSections];\n\nexport const PAGE_DATA_TRAVEL: IPageData = {\n  pastCount,\n  futureCount,\n  sections\n};\n","import { PAGE_DATA_GIGS } from \"./gigs\";\nimport { PAGE_DATA_THEATRE } from \"./theatre\";\nimport { PAGE_DATA_RECIPES } from \"./recipes\";\nimport { PAGE_DATA_TRAVEL } from \"./travel\";\n\ninterface IAllPageData {\n  GIGS: IPageData;\n  RECIPES: IPageData;\n  THEATRE: IPageData;\n  TRAVEL: IPageData;\n}\n\nexport const PAGE_DATA: IAllPageData = {\n  GIGS: PAGE_DATA_GIGS,\n  RECIPES: PAGE_DATA_RECIPES,\n  THEATRE: PAGE_DATA_THEATRE,\n  TRAVEL: PAGE_DATA_TRAVEL\n};\n","import { ICONS } from \"../resources\";\nimport { PAGE_DATA } from \"../pages\";\n\nexport const HOMEPAGE_ROUTE: IHomepageRoute = {\n  title: \"Home\",\n  dest: \"/\"\n};\n\nexport const PAGE_ROUTES: Array<IRoute> = [\n  {\n    dest: \"/gigs\",\n    icon: ICONS.MICROPHONE,\n    title: \"gigs\",\n    pageData: PAGE_DATA.GIGS\n  },\n  {\n    dest: \"/recipes\",\n    icon: ICONS.VEG_BOWL,\n    title: \"recipes\",\n    pageData: PAGE_DATA.RECIPES\n  },\n  {\n    dest: \"/theatre\",\n    icon: ICONS.MASKS,\n    title: \"theatre\",\n    pageData: PAGE_DATA.THEATRE\n  },\n  {\n    dest: \"/travel\",\n    icon: ICONS.TRAVEL,\n    title: \"travel\",\n    pageData: PAGE_DATA.TRAVEL\n  }\n];\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { StyledLink } from \"./StyledLink\";\nimport { PAGE_ROUTES } from \"../routes\";\n\nconst FlexContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-areas: \"icon icon\" \"icon icon\";\n`;\n\nconst StyledSvg = styled.img(({ theme }: ThemeProps) => {\n  const iconSizeDesktop = theme.homePage.icon.size.desktop;\n  const iconSizePhone = theme.homePage.icon.size.phone;\n  const iconSizePadding = theme.homePage.icon.padding;\n\n  return css`\n    padding: ${iconSizePadding};\n    width: ${iconSizeDesktop};\n    height: ${iconSizeDesktop};\n\n    @media (max-width: ${theme.breakpoints.phone.maxWidth}) {\n      width: ${iconSizePhone};\n      height: ${iconSizePhone};\n    }\n  `;\n});\n\nexport const HomePage: React.FC = () => (\n  <FlexContainer>\n    <GridContainer>\n      {PAGE_ROUTES.map(({ icon, dest }: IRoute, index: number) => (\n        <StyledLink key={index} to={dest}>\n          <StyledSvg src={icon} />\n        </StyledLink>\n      ))}\n    </GridContainer>\n  </FlexContainer>\n);\n","import styled, { css } from \"styled-components\";\n\ninterface ICircle extends ThemeProps {\n  className?: string;\n  size: string;\n  fontSize: string;\n  invert: boolean;\n  color: string;\n}\n\nexport const Circle = styled.div`\n  border-radius: 50%;\n  text-align: center;\n\n  ${({ size, fontSize, theme }: ICircle) => css`\n    height: ${size};\n    width: ${size};\n    line-height: ${size};\n    border: ${theme.circleBorder};\n    font-size: ${fontSize};\n  `}\n\n  ${({ invert }: ICircle) =>\n    invert &&\n    css`\n      background: #777777;\n      color: white;\n      border-color: transparent;\n    `}\n\n  ${({ color }: ICircle) =>\n    color &&\n    css`\n      background: ${color};\n      color: white;\n      border-color: transparent;\n    `}\n`;\n","import styled from \"styled-components\";\n\nexport const FlexRow = styled.div`\n  display: flex;\n`;\n\nexport const FlexColumn = styled(FlexRow)`\n  flex-direction: column;\n`;\n","import styled, { css } from \"styled-components\";\n\nimport { FONT_SIZES } from \"../styles\";\n\nconst ZERO_MARGIN_AND_PADDING = css`\n  margin: 0;\n  padding: 0;\n`;\n\nconst H1 = styled.h1`\n  font-size: ${FONT_SIZES.XL};\n  ${ZERO_MARGIN_AND_PADDING}\n`;\n\nconst H2 = styled.h2`\n  font-size: ${FONT_SIZES.L};\n  ${ZERO_MARGIN_AND_PADDING}\n`;\n\nconst H3 = styled.h3`\n  font-size: ${FONT_SIZES.M};\n  ${ZERO_MARGIN_AND_PADDING}\n`;\n\nexport const Headers = {\n  H1,\n  H2,\n  H3\n};\n","import styled from \"styled-components\";\n\nexport const Ul = styled.ul`\n  font-weight: bold;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Li = styled.li`\n  font-weight: normal;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface IStyledImage {\n  size: string;\n}\nconst StyledImage = styled.img`\n  height: ${(props: IStyledImage) => props.size};\n  width: ${(props: IStyledImage) => props.size};\n  margin: 0;\n`;\n\ninterface ISvgIcon {\n  className?: string;\n  icon: string;\n  size: string;\n}\n\nexport const SvgIcon = ({ className, icon, size }: ISvgIcon) => (\n  <StyledImage\n    className={className}\n    data-test=\"svg-icon\"\n    src={icon}\n    size={size}\n  />\n);\n","import styled from \"styled-components\";\n\nimport { FONT_SIZES } from \"../styles\";\n\nconst P = styled.p`\n  margin: 0;\n`;\n\nconst P_M = styled(P)`\n  font-size: ${FONT_SIZES.M};\n`;\n\nconst P_S = styled(P)`\n  font-size: ${FONT_SIZES.S};\n`;\n\nconst P_XS = styled(P)`\n  font-size: ${FONT_SIZES.XS};\n`;\n\nconst Span_M = styled.span`\n  font-size: ${FONT_SIZES.M};\n`;\n\nconst Span_S = styled.span`\n  font-size: ${FONT_SIZES.S};\n`;\n\nconst Span_SM = styled.span`\n  font-size: ${FONT_SIZES.SM};\n`;\n\nexport const Text = {\n  P: { M: P_M, S: P_S, XS: P_XS },\n  Span: { M: Span_M, SM: Span_SM, S: Span_S }\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { FlexColumn, FlexRow, Text } from \"../primitives\";\nimport {\n  daysToGo,\n  getDisplayDateText,\n  getCountdownText\n} from \"../utils/global\";\n\ninterface IEventCardTitle {\n  favourite: boolean;\n}\nconst Title = styled(Text.P.M)`\n  ${({ favourite }: IEventCardTitle) =>\n    favourite &&\n    css`\n      ::before {\n        content: \"♥ \";\n      }\n    `}\n\n  font-weight: bold;\n  text-transform: uppercase;\n`;\n\nconst Subtitle = styled(Text.P.S)`\n  font-weight: bold;\n  text-transform: uppercase;\n`;\n\nconst Body = styled(Text.P.S)`\n  padding: 1px 0 3px;\n`;\n\nconst Dates = styled(Text.P.XS)``;\n\nconst ItalicFlexRow = styled(FlexRow)`\n  font-style: italic;\n`;\n\nconst Disclaimer = styled(Text.P.XS)`\n  margin: 8px 0 0 4px;\n`;\n\nconst Countdown = styled(Text.P.S)`\n  font-weight: bold;\n  margin-top: 5px;\n  text-align: left;\n`;\n\nexport const EventCard: React.FC<IEventCard> = ({\n  title,\n  subtitle,\n  favourite,\n  body,\n  dates,\n  company,\n  disclaimer\n}) => {\n  const daysTilGig: number = daysToGo(dates);\n\n  return (\n    <FlexColumn data-test=\"event-card-container\">\n      <Title data-test=\"event-card-title\" favourite={favourite}>\n        {title}\n      </Title>\n\n      {subtitle && (\n        <Subtitle data-test=\"event-card-subtitle\">{subtitle}</Subtitle>\n      )}\n\n      {body && <Body data-test=\"event-card-body\">{body}</Body>}\n\n      <Dates data-test=\"event-card-date\">{getDisplayDateText(dates)}</Dates>\n\n      {daysTilGig >= 0 && (\n        <ItalicFlexRow>\n          <Countdown>{getCountdownText(daysTilGig)}</Countdown>\n\n          {disclaimer && <Disclaimer>({disclaimer})</Disclaimer>}\n        </ItalicFlexRow>\n      )}\n    </FlexColumn>\n  );\n};\n","export const daysToGo = (dates: Array<Date>, id: string = \"\"): number => {\n  const secondsInADay: number = 24 * 60 * 60;\n  const dateDifference: number = dates[0].valueOf() - new Date().valueOf();\n\n  return Math.floor(dateDifference / (secondsInADay * 1000) + 1);\n};\n","import { DAYS_OF_THE_WEEK, MONTHS } from \"../../constants\";\n\nexport const getDisplayDateText = (dates: Array<Date>): string => {\n  const stringifyDate = (date: Date): string => {\n    const weekday: number = date.getDay();\n    const day: number = date.getDate();\n    const month: number = date.getMonth();\n    const year: number = date.getFullYear();\n\n    return `${DAYS_OF_THE_WEEK[weekday]} ${day} ${MONTHS[month]} ${year}`;\n  };\n\n  return dates.length > 1\n    ? `${stringifyDate(dates[0])} to ${stringifyDate(dates[1])}`\n    : stringifyDate(dates[0]);\n};\n","export const getCountdownText = (daysToGo: number): string => {\n  if (daysToGo === 0) return \"TODAY\";\n  if (daysToGo === 1) return daysToGo + \" DAY TO GO\";\n  return daysToGo + \" DAYS TO GO\";\n};\n","import React, { useContext } from \"react\";\nimport styled, { ThemeContext } from \"styled-components\";\n\nimport { Text, Headers, SvgIcon } from \"../../primitives\";\n\nconst { H2 } = Headers;\n\nconst Container = styled.div`\n  display: flex;\n  padding: ${props => props.theme.section.header.padding};\n`;\n\nconst SectionCount = styled(Text.Span.S)`\n  margin-left: ${props => props.theme.section.count.margin.left};\n`;\n\nconst SectionSubcount = styled(SectionCount)`\n  opacity: ${props => props.theme.fadedOpacity};\n`;\n\nconst TextContainer = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nconst StyledIcon = styled(SvgIcon)`\n  padding-top: ${props => props.theme.section.icon.padding.top};\n`;\n\ntype PageSectionHeaderProps = {\n  text: string;\n  showCounts: boolean;\n  data: Array<any>;\n  icon?: IImageSrc;\n  dataTest: string;\n};\n\nexport const PageSectionHeader: React.FC<PageSectionHeaderProps> = ({\n  text,\n  showCounts,\n  data,\n  icon,\n  dataTest\n}) => {\n  //@ts-ignore\n  const starredDataCount = data && data.filter(item => item.star).length;\n  const theme = useContext(ThemeContext);\n\n  return (\n    <Container data-test={dataTest}>\n      <TextContainer data-test=\"section-header-text-container\">\n        <H2 data-test=\"section-header-text\">{text}</H2>\n\n        {showCounts && data && data.length > 1 && (\n          <SectionCount data-test=\"section-count\">{data.length}</SectionCount>\n        )}\n\n        {showCounts && starredDataCount > 0 && (\n          <SectionSubcount data-test=\"section-count\">\n            {starredDataCount}\n          </SectionSubcount>\n        )}\n      </TextContainer>\n\n      {icon && (\n        <StyledIcon\n          data-test=\"section-header-icon\"\n          icon={icon}\n          size={theme.section.icon.size}\n        />\n      )}\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\n\nimport { FlexRow } from \"../primitives\";\n\nexport const CentredOnPhone = styled(FlexRow)`\n  @media (max-width: ${props => props.theme.breakpoints.phone.maxWidth}) {\n    // @media (orientation: portrait) {\n    justify-content: center;\n    text-align: center;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { MEASUREMENTS, NO_UNIT_COST_FOR_RECIPE_EXISTS } from \"../../constants\";\nimport { calculateRecipeCost } from \"../../utils/global\";\n\nimport { CentredOnPhone } from \"../CentredOnPhone\";\n\nconst CostPerPortionContainer = styled.div`\n  font-size: 80%;\n`;\n\nconst BoldSpan = styled.span`\n  font-weight: bold;\n`;\n\ntype Props = {\n  ingredients: IRecipeIngredients;\n  makes?: IRecipeMakes;\n  title: string;\n};\n\nexport const RecipeCardCost: React.FC<Props> = ({\n  ingredients,\n  makes,\n  title\n}) => {\n  const { displayCost, displayUnitCost } = calculateRecipeCost({\n    ingredients,\n    yieldQuantity: makes && makes.quantity,\n    recipeTitle: title\n  });\n\n  return (\n    <CentredOnPhone>\n      <div>\n        approx. <BoldSpan>{displayCost}</BoldSpan> to make\n        {displayUnitCost !== NO_UNIT_COST_FOR_RECIPE_EXISTS &&\n          makes &&\n          makes.measurement &&\n          makes.quantity > 1 &&\n          makes.measurement !== MEASUREMENTS.GRAM && (\n            <CostPerPortionContainer>\n              <BoldSpan>{displayUnitCost}</BoldSpan> per {makes.measurement}\n            </CostPerPortionContainer>\n          )}\n      </div>\n    </CentredOnPhone>\n  );\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { Circle, Headers } from \"../../primitives\";\n\ntype IStyledH3 = { favourite: boolean };\nconst StyledH3 = styled(Headers.H3)`\n  font-weight: 300;\n  flex: 1;\n\n  ${(props: IStyledH3) =>\n    props.favourite &&\n    css`\n      ::before {\n        content: \"♥ \";\n      }\n    `}\n`;\n\nconst FlexRow = styled.div`\n  display: flex;\n`;\n\ntype Props = { title: string; diet: IRecipeDiet; favourite?: boolean };\n\nexport const RecipeCardHeader: React.FC<Props> = ({\n  title,\n  diet: { abbreviation, color },\n  favourite = false\n}) => (\n  <FlexRow>\n    <StyledH3 favourite={favourite}>{title}</StyledH3>\n    <Circle fontSize=\"13px\" size=\"25px\" invert color={color}>\n      {abbreviation}\n    </Circle>\n  </FlexRow>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Ul, Li } from \"../../primitives\";\nimport {\n  concatenateMakesWithDefaultIngredientsHeader,\n  generateIngredientListItem\n} from \"../../utils/global\";\n\nconst ingredientSectionPaddingBottom = \"10px\";\n\nconst IngredientSection = styled.div`\n  :not(:last-child) {\n    padding-bottom: ${ingredientSectionPaddingBottom};\n  }\n`;\n\ninterface IRecipeCardIngredients {\n  makes?: IRecipeMakes;\n  ingredients: IRecipeIngredients;\n}\n\nexport const RecipeCardIngredients: React.FC<IRecipeCardIngredients> = ({\n  makes,\n  ingredients\n}) => {\n  const ingredientsAreSeparated: boolean = ingredients.length > 1;\n  const defaultIngredientsHeader: string = \"ingredients\";\n  const ingredientsHeader: string = makes\n    ? concatenateMakesWithDefaultIngredientsHeader(\n        makes,\n        defaultIngredientsHeader\n      )\n    : defaultIngredientsHeader;\n\n  return (\n    <Ul>\n      {ingredientsHeader}\n\n      {ingredientsAreSeparated\n        ? ingredients.map(\n            (ingredientSection: Array<IRecipeIngredient>, index: number) => (\n              <IngredientSection key={index}>\n                {ingredientSection.map(\n                  (ingredient: IRecipeIngredient, subIndex: number) => (\n                    <Li key={subIndex}>\n                      {generateIngredientListItem(ingredient)}\n                    </Li>\n                  )\n                )}\n              </IngredientSection>\n            )\n          )\n        : ingredients[0].map((ingredient: IRecipeIngredient, index: number) => (\n            <Li key={index}>{generateIngredientListItem(ingredient)}</Li>\n          ))}\n    </Ul>\n  );\n};\n","import { MEASUREMENTS } from \"../../constants\";\n\nimport { concatenateQuantityAndMeasurement } from \"../local\";\n\nexport const concatenateMakesWithDefaultIngredientsHeader = (\n  makes: IRecipeMakes,\n  defaultIngredientsHeader: string\n): string => {\n  const { quantity, measurement } = makes;\n\n  const quantitySpaceMeasurement: string =\n    quantity.toString() + \" \" + measurement;\n\n  const quantityAndMeasurement: string =\n    measurement === MEASUREMENTS.GRAM || measurement === MEASUREMENTS.MILLILITRE\n      ? concatenateQuantityAndMeasurement(quantity.toString(), measurement)\n      : quantity === 1\n      ? quantitySpaceMeasurement\n      : quantitySpaceMeasurement + \"s\";\n\n  return `${defaultIngredientsHeader} (makes ${quantityAndMeasurement})`;\n};\n","import React from \"react\";\n\nimport { Ul, Li } from \"../../primitives\";\n\ninterface RecipeCardMethodProps {\n  method: IRecipeMethod;\n}\n\nexport const RecipeCardMethod: React.FC<RecipeCardMethodProps> = ({\n  method\n}) => (\n  <Ul>\n    method\n    {method.map((item, index) => (\n      <Li key={index}>• {item}</Li>\n    ))}\n  </Ul>\n);\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { CentredOnPhone } from \"../CentredOnPhone\";\n\nconst StyledImage = styled.img(\n  ({\n    theme: {\n      recipe: {\n        image: { size }\n      }\n    }\n  }: ThemeProps) => css`\n    height: ${size};\n    width: ${size};\n  `\n);\n\ntype Props = { imageSource: IRecipeImage };\n\nexport const RecipeCardImage: React.FC<Props> = ({ imageSource }) => (\n  <CentredOnPhone>\n    <StyledImage src={imageSource} />\n  </CentredOnPhone>\n);\n","import React from \"react\";\n\nimport { Ul, Li } from \"../../primitives\";\nimport { getServeWithListItem } from \"../../utils/global\";\n\ntype RecipeCardServeWithProps = { serveWith: IServeWith };\n\nexport const RecipeCardServeWith: React.FC<RecipeCardServeWithProps> = ({\n  serveWith\n}) => (\n  <Ul>\n    serve with\n    {serveWith.map((item: Array<IRecipeIngredient>, index: number) => (\n      <Li key={index}>{getServeWithListItem(item)}</Li>\n    ))}\n  </Ul>\n);\n","export const getServeWithListItem = (\n  serveWithItems: Array<IRecipeIngredient>\n): string => {\n  let stringList = serveWithItems[0].ingredient.displayText;\n\n  for (let i = 1; i < serveWithItems.length; i++) {\n    const ingredient = serveWithItems[i].ingredient.displayText;\n    if (i === serveWithItems.length - 1) {\n      stringList += ` or ${ingredient}`;\n    } else {\n      stringList += `, ${ingredient}`;\n    }\n  }\n  return stringList;\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\ninterface ChildrenContainerProps extends ThemeProps {\n  bodyHeight: IBodyHeight;\n}\nconst ChildrenContainer = styled.div`\n  &.initial-state {\n    max-height: unset;\n  }\n\n  transition: ${(props: ChildrenContainerProps) =>\n      props.theme.animationDuration}s\n    ease;\n  overflow: hidden;\n  max-height: 0;\n\n  &.child-visible {\n    max-height: ${(props: ChildrenContainerProps) => props.bodyHeight}px;\n  }\n`;\n\ninterface ClickableRegionProps {\n  expandedAutomatically?: boolean;\n}\nconst ClickableRegion = styled.div`\n  ${(props: ClickableRegionProps) =>\n    !props.expandedAutomatically &&\n    css`\n      cursor: pointer;\n    `}\n`;\n\ntype IBodyHeight = number | null;\n\ninterface VisibilityToggleProps {\n  expandedAutomatically?: boolean;\n  onlyHeaderClickable?: boolean;\n  headerComponent: React.ReactNode;\n  children: React.ReactNode;\n}\n\nexport const VisibilityToggle: React.FC<VisibilityToggleProps> = ({\n  expandedAutomatically = false,\n  onlyHeaderClickable = false,\n  headerComponent,\n  children\n}) => {\n  const [childIsVisible, switchChildVisibility] = React.useState<boolean>(\n    expandedAutomatically\n  );\n  const [childrenContainerHeight, setChildrenContainerHeight] = React.useState<\n    IBodyHeight\n  >(null);\n\n  const refCallback = (element: HTMLDivElement): void => {\n    if (element && !childrenContainerHeight)\n      setChildrenContainerHeight(element.getBoundingClientRect().height);\n  };\n\n  const getChildrenContainerClass = (\n    bodyHeight: number | null,\n    childIsVisible: boolean\n  ): string =>\n    !bodyHeight\n      ? \"initial-state\"\n      : childIsVisible\n      ? \"child-visible\"\n      : \"child-invisible\";\n\n  const hiddenPanel = (\n    <ChildrenContainer\n      data-test=\"visibility-toggle-children\"\n      className={getChildrenContainerClass(\n        childrenContainerHeight,\n        childIsVisible\n      )}\n      bodyHeight={childrenContainerHeight}\n      ref={refCallback}\n    >\n      {children}\n    </ChildrenContainer>\n  );\n\n  const dataTestVisibilityToggle = \"visibility-toggle-container\";\n\n  return onlyHeaderClickable ? (\n    <>\n      <ClickableRegion\n        expandedAutomatically={expandedAutomatically}\n        data-test={dataTestVisibilityToggle}\n        onClick={() =>\n          !expandedAutomatically && switchChildVisibility(!childIsVisible)\n        }\n      >\n        {headerComponent}\n      </ClickableRegion>\n      {hiddenPanel}\n    </>\n  ) : (\n    <ClickableRegion\n      data-test={dataTestVisibilityToggle}\n      onClick={() => switchChildVisibility(!childIsVisible)}\n    >\n      {headerComponent}\n      {hiddenPanel}\n    </ClickableRegion>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { RecipeCardCost } from \"./RecipeCardCost\";\nimport { RecipeCardHeader } from \"./RecipeCardHeader\";\nimport { RecipeCardIngredients } from \"./RecipeCardIngredients\";\nimport { RecipeCardMethod } from \"./RecipeCardMethod\";\nimport { RecipeCardImage } from \"./RecipeCardImage\";\nimport { RecipeCardServeWith } from \"./RecipeCardServeWith\";\nimport { VisibilityToggle } from \"../VisibilityToggle\";\n\nconst RecipeBody = styled.div`\n  padding-top: 5px;\n\n  > * {\n    padding: 10px 0 5px;\n  }\n`;\n\nexport const RecipeCard: React.FC<IRecipeCard> = ({\n  title,\n  makes,\n  ingredients,\n  method,\n  favourite,\n  serveWith,\n  newRecipe,\n  hide,\n  diet,\n  image\n}) => {\n  if (hide) return null;\n\n  return (\n    <VisibilityToggle\n      expandedAutomatically={newRecipe}\n      headerComponent={\n        <RecipeCardHeader title={title} diet={diet} favourite={favourite} />\n      }\n    >\n      <RecipeBody>\n        <RecipeCardIngredients makes={makes} ingredients={ingredients} />\n        {serveWith && <RecipeCardServeWith serveWith={serveWith} />}\n        {method && <RecipeCardMethod method={method} />}\n        {image && <RecipeCardImage imageSource={image} />}\n        <RecipeCardCost ingredients={ingredients} makes={makes} title={title} />\n      </RecipeBody>\n    </VisibilityToggle>\n  );\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { FlexRow, Text } from \"../primitives\";\n\ninterface ListEntryProps extends ThemeProps {\n  favourite?: boolean;\n  star?: boolean;\n  faded?: boolean;\n}\nconst ListEntry = styled(Text.P.S)`\n  ${(props: ListEntryProps) =>\n    props.favourite &&\n    css`\n      ::before {\n        content: \"♥ \";\n      }\n    `}\n\n  ${(props: ListEntryProps) =>\n    props.star &&\n    css`\n      ::before {\n        content: \"★ \";\n      }\n    `}\n\n  flex: 1;\n  ${(props: ListEntryProps) =>\n    props.faded && `opacity: ${props.theme.fadedOpacity};`}\n`;\n\ninterface PastCountProps extends ThemeProps {\n  leaderboard: boolean;\n}\nconst PastCount = styled(Text.P.S)`\n  text-align: right;\n  margin-left: ${(props: PastCountProps) => (props.leaderboard ? \"10px\" : 0)};\n  width: ${(props: PastCountProps) =>\n    props.theme.section.body.basicList.count.width};\n  font-weight: bold;\n`;\n\nconst FutureCount = styled(PastCount)`\n  opacity: ${(props: ThemeProps) => props.theme.fadedOpacity};\n`;\n\nexport const CountedListItem: React.FC<ICountedListItem> = ({\n  listEntry,\n  favourite,\n  star,\n  futureCount,\n  pastCount,\n  ignoreCountInfo,\n  leaderboard = false\n}) => {\n  const showFutureCount = futureCount > 0 && (pastCount > 0 || leaderboard);\n  const showPastCount =\n    (leaderboard && pastCount > 0) ||\n    pastCount > 1 ||\n    (futureCount > 0 && pastCount > 0);\n\n  return (\n    <FlexRow>\n      <ListEntry\n        faded={!ignoreCountInfo && pastCount === 0}\n        favourite={favourite}\n        star={star}\n      >\n        {listEntry}\n      </ListEntry>\n\n      {!ignoreCountInfo && showFutureCount && (\n        // @ts-ignore\n        <FutureCount>{futureCount}</FutureCount>\n      )}\n      {!ignoreCountInfo && showPastCount && (\n        <PastCount leaderboard={leaderboard}>{pastCount}</PastCount>\n      )}\n    </FlexRow>\n  );\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { PAGE_SECTION_TYPES } from \"../../constants\";\n\nimport { EventCard } from \"../EventCard\";\nimport { PageSectionHeader } from \"./PageSectionHeader\";\nimport { RecipeCard } from \"../RecipeCard\";\nimport { CountedListItem } from \"../CountedListItem\";\nimport { VisibilityToggle } from \"../VisibilityToggle\";\n\nconst PageSectionContainer = styled.section`\n  background: ${props => props.theme.colors.gainsboro};\n  box-shadow: ${props => props.theme.section.boxShadow};\n  border-radius: ${props => props.theme.section.borderRadius};\n\n  padding: 0 ${props => props.theme.section.padding.horizontal};\n  margin-bottom: ${props => props.theme.section.margin.bottom};\n`;\n\ninterface SectionBodyProps extends ThemeProps {\n  isEventCards: boolean;\n}\nconst SectionBody = styled.div`\n  ${({ theme, isEventCards }: SectionBodyProps) => css`\n    padding-bottom: ${theme.section.body.padding.bottom};\n\n    > * {\n      border-bottom: ${theme.section.body.basicList.border.bottom};\n      padding: ${isEventCards\n        ? `${theme.section.body.eventCardList.padding.vertical} 0`\n        : `${theme.section.body.basicList.padding.vertical} 0`};\n    }\n\n    > *:last-child {\n      ${isEventCards && `padding-bottom: 5px;`}\n      border-bottom: 0;\n    }\n\n    ${isEventCards &&\n    css`\n      > *:first-child {\n        padding-top: 0;\n      }\n    `}\n  `}\n`;\n\nconst RecipeGroupBody = styled.div`\n  > * {\n    border-bottom: ${props => props.theme.recipe.border.bottom};\n    padding: ${props => props.theme.recipe.title.padding.vertical} 0;\n  }\n\n  > *:first-child {\n    padding-top: ${props => props.theme.recipe.first.padding.top};\n  }\n\n  > *:last-child {\n    border-bottom: 0;\n    padding-bottom: ${props => props.theme.recipe.last.padding.bottom};\n  }\n`;\n\nexport const PageSection: React.FC<IPageSection> = ({\n  details: { id, title, type },\n  icon,\n  data,\n  showSectionLength = false,\n  expandedAutomatically = false,\n  leaderboard\n}) => {\n  const isEventCards: boolean = type === PAGE_SECTION_TYPES.EVENT_CARDS;\n  const isRecipes: boolean = type === PAGE_SECTION_TYPES.RECIPES;\n  const isCountedList: boolean = type === PAGE_SECTION_TYPES.COUNTED_LIST;\n\n  // Precautionary exit\n  const proceed =\n    data.length > 0 ||\n    // e.g. if pesto is hidden, do not show sauces section because there will be no section children\n    (isRecipes && data.filter((item: IRecipeCard) => !item.hide).length);\n  if (!proceed) return null;\n\n  return (\n    <PageSectionContainer data-test={id && `${id}-section`}>\n      <VisibilityToggle\n        onlyHeaderClickable={isRecipes}\n        expandedAutomatically={expandedAutomatically}\n        headerComponent={\n          <PageSectionHeader\n            text={title}\n            showCounts={showSectionLength}\n            data={data}\n            icon={icon}\n            dataTest=\"visibility-toggle-header\"\n          />\n        }\n      >\n        <section data-test=\"section-content\">\n          {isRecipes ? (\n            <RecipeGroupBody>\n              {data.map((item: IRecipeCard, index: number) => (\n                <RecipeCard key={index} {...item} />\n              ))}\n            </RecipeGroupBody>\n          ) : (\n            <SectionBody\n              data-test=\"page-section-content\"\n              isEventCards={isEventCards}\n            >\n              {data.map((item: any, index: number) => {\n                if (isEventCards) return <EventCard key={index} {...item} />;\n\n                if (isCountedList)\n                  return (\n                    <CountedListItem\n                      key={index}\n                      {...item}\n                      leaderboard={leaderboard}\n                    />\n                  );\n\n                return null;\n              })}\n            </SectionBody>\n          )}\n        </section>\n      </VisibilityToggle>\n    </PageSectionContainer>\n  );\n};\n","import React from \"react\";\nimport styled, { ThemeContext } from \"styled-components\";\n\nimport { FlexRow, Headers, Text, SvgIcon } from \"../primitives\";\nimport { StyledLink } from \"./StyledLink\";\n\nconst { H1 } = Headers;\n\nconst TitleTextContainer = styled.div`\n  display: flex;\n  flex: 1;\n  text-transform: lowercase;\n  margin-bottom: ${props => props.theme.page.header.margin.bottom};\n`;\n\nconst PastCount = styled(Text.Span.SM)`\n  padding: ${props => props.theme.page.count.padding};\n`;\n\nconst FutureCount = styled(PastCount)`\n  opacity: ${props => props.theme.fadedOpacity};\n`;\n\nconst PaddedFlexRow = styled(FlexRow)`\n  padding-bottom: ${props => props.theme.pageTitleMarginBottom};\n`;\n\nconst SvgContainer = styled.div`\n  margin-top: ${props => props.theme.page.icon.margin.top};\n`;\n\ninterface PageTitleProps {\n  titleText: string;\n  pastCount?: number;\n  futureCount?: number;\n  icon: IImageSrc;\n}\n\nexport const PageTitle: React.FC<PageTitleProps> = ({\n  titleText,\n  pastCount,\n  futureCount,\n  icon\n}) => {\n  const theme = React.useContext(ThemeContext);\n\n  return (\n    <PaddedFlexRow data-test=\"page-title-container\">\n      <TitleTextContainer data-test=\"page-title-text-container\">\n        <H1 data-test=\"page-title-text\">{titleText}</H1>\n\n        {!!pastCount && pastCount > 0 && (\n          <PastCount data-test=\"page-title-past-count\">{pastCount}</PastCount>\n        )}\n        {!!futureCount && futureCount > 0 && (\n          <FutureCount data-test=\"page-title-future-count\">\n            {futureCount}\n          </FutureCount>\n        )}\n      </TitleTextContainer>\n\n      <StyledLink data-test=\"page-title-link\" to=\"/\">\n        <SvgContainer>\n          <SvgIcon icon={icon} size={theme.page.icon.size} />\n        </SvgContainer>\n      </StyledLink>\n    </PaddedFlexRow>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { PageTitle } from \"./PageTitle\";\n\nconst StyledPageShell = styled.section`\n  padding: ${props => props.theme.page.shell.padding};\n`;\n\ninterface PageShellProps {\n  title: string;\n  icon: IImageSrc;\n  pageData: IPageData;\n  children: React.ReactNode;\n}\n\nexport const PageShell: React.FC<PageShellProps> = ({\n  title,\n  icon,\n  pageData,\n  children\n}) => {\n  const { pastCount, futureCount } = pageData;\n\n  return (\n    <StyledPageShell data-test=\"page-shell\">\n      <PageTitle\n        titleText={title}\n        pastCount={pastCount}\n        futureCount={futureCount}\n        icon={icon}\n      />\n\n      {children}\n    </StyledPageShell>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { HomePage, PageShell, PageSection } from \"../components\";\nimport { HOMEPAGE_ROUTE, PAGE_ROUTES } from \"../routes\";\n\nconst SectionsContainer = styled.div`\n  > *:last-child {\n    border-bottom: 0;\n  }\n`;\n\nconst Page: React.FC<IRoute> = ({ icon, title, pageData }) => (\n  <PageShell title={title} icon={icon} pageData={pageData}>\n    <SectionsContainer data-test=\"page-sections\">\n      {pageData.sections.map((item: IPageSection, index: number) => (\n        <PageSection key={index} {...item} />\n      ))}\n    </SectionsContainer>\n  </PageShell>\n);\n\nexport const App: React.FC = () => (\n  <BrowserRouter>\n    <Switch>\n      {PAGE_ROUTES.map((route: IRoute, index: number) => (\n        <Route key={index} path={route.dest}>\n          <Page {...route} />\n        </Route>\n      ))}\n\n      <Route path={HOMEPAGE_ROUTE.dest}>\n        <HomePage />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport { App } from \"./app\";\nimport { THEME, GlobalStyle } from \"./styles\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={THEME}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}