{"version":3,"sources":["resources/svg sync /^/.//.*/.svg$","resources/svg/artist.svg","resources/svg/book.svg","resources/svg/brain.svg","resources/svg/cake.svg","resources/svg/camera.svg","resources/svg/city.svg","resources/svg/cloche.svg","resources/svg/flag.svg","resources/svg/heart.svg","resources/svg/loading.svg","resources/svg/map_pin.svg","resources/svg/masks.svg","resources/svg/microphone.svg","resources/svg/notepad.svg","resources/svg/palm_tree.svg","resources/svg/peace_sign.svg","resources/svg/people.svg","resources/svg/roller_coaster.svg","resources/svg/stadium.svg","resources/svg/stars.svg","resources/svg/tent.svg","resources/svg/theatre.svg","resources/svg/toast.svg","resources/svg/town_hall.svg","resources/svg/travel.svg","resources/svg/veg_bowl.svg","resources/jpg sync /^/.//.*/.jpg$","resources/jpg/baked_beans.jpg","resources/jpg/banana_cake.jpg","resources/jpg/bolognese.jpg","resources/jpg/brownies.jpg","resources/jpg/carbonara.jpg","resources/jpg/crumble.jpg","resources/jpg/flapjacks.jpg","resources/jpg/kale_crispy.jpg","resources/jpg/lasagne.jpg","resources/jpg/mashed_potato.jpg","resources/jpg/piri_piri.jpg","resources/jpg/ratatouille.jpg","resources/jpg/rogan_josh.jpg","resources/jpg/shepherds_pie.jpg","primitives/Circle.ts","primitives/Lists.ts","primitives/Flex.ts","primitives/Link.ts","primitives/SvgIcon.tsx","styles/css.ts","styles/colors.ts","styles/font-sizes.ts","styles/theme.ts","styles/GlobalStyle.ts","primitives/Text.ts","components/CentredOnPhone/index.ts","components/CountedListItem/index.tsx","@constants/actors.ts","@constants/diets.ts","@constants/festivals.ts","@constants/friends.ts","@constants/locations.ts","@constants/measurements.ts","@constants/musicians.ts","@constants/music-venues.ts","@constants/ingredients/baking/flour.ts","@constants/ingredients/baking/sugar.ts","@constants/ingredients/baking/syrups.ts","@constants/ingredients/baking/index.ts","@constants/ingredients/carbs/pasta.ts","@constants/ingredients/carbs/rice.ts","@constants/ingredients/carbs/grains.ts","@constants/ingredients/carbs/index.ts","@constants/ingredients/carbs/bread.ts","@constants/ingredients/dairy/milk.ts","@constants/ingredients/dairy/index.ts","@constants/ingredients/fruit/dried-fruit.ts","@constants/ingredients/fruit/fresh-fruit.ts","@constants/ingredients/fruit/frozen-fruit.ts","@constants/ingredients/fruit/juice.ts","@constants/ingredients/fruit/index.ts","@constants/ingredients/herbs/dried-herbs.ts","@constants/ingredients/herbs/fresh-herbs.ts","@constants/ingredients/herbs/index.ts","@constants/ingredients/protein/beans.ts","@constants/ingredients/protein/seitan.ts","@constants/ingredients/protein/index.ts","@constants/ingredients/seasoning/dried-seasoning.ts","@constants/ingredients/seasoning/oils.ts","@constants/unicode.ts","@constants/ingredients/seasoning/pastes.ts","@constants/ingredients/seasoning/salt.ts","@constants/ingredients/seasoning/sauces.ts","@constants/ingredients/seasoning/vinegars.ts","@constants/ingredients/seasoning/index.ts","@constants/ingredients/nuts-seeds/nuts.ts","@constants/ingredients/nuts-seeds/seeds.ts","@constants/ingredients/nuts-seeds/index.ts","@constants/ingredients/veg/canned-veg.ts","@constants/ingredients/veg/fresh-veg.ts","@constants/ingredients/veg/frozen-veg.ts","@constants/ingredients/veg/index.ts","@constants/ingredients/index.ts","@constants/page-sections.ts","@constants/plays.ts","@constants/theatre-venues.ts","@constants/ticket-types.ts","@constants/index.ts","components/EventCard/index.tsx","pages/theatre/index.ts","components/EventCard/utils.ts","resources/index.ts","data/gigs/gigs-2006.ts","data/gigs/gigs-2007.ts","data/gigs/gigs-2008.ts","data/gigs/gigs-2009.ts","data/gigs/gigs-2010.ts","data/gigs/gigs-2011.ts","data/gigs/gigs-2012.ts","data/gigs/gigs-2013.ts","data/gigs/gigs-2014.ts","data/gigs/gigs-2015.ts","data/gigs/gigs-2016.ts","data/gigs/gigs-2017.ts","data/gigs/gigs-2018.ts","data/gigs/gigs-2019.ts","data/gigs/gigs-2020.ts","data/gigs/gigs-2021.ts","data/gigs/index.ts","data/theatre/theatre-2016.ts","data/theatre/theatre-2017.ts","data/theatre/theatre-2018.ts","data/theatre/theatre-2019.ts","data/theatre/theatre-2020.ts","data/theatre/index.ts","data/travel/travel-1997.ts","data/travel/travel-1998.ts","data/travel/travel-1999.ts","data/travel/travel-2000.ts","data/travel/travel-2001.ts","data/travel/travel-2002.ts","data/travel/travel-2003.ts","data/travel/travel-2004.ts","data/travel/travel-2005.ts","data/travel/travel-2006.ts","data/travel/travel-2007.ts","data/travel/travel-2008.ts","data/travel/travel-2009.ts","data/travel/travel-2010.ts","data/travel/travel-2011.ts","data/travel/travel-2012.ts","data/travel/travel-2013.ts","data/travel/travel-2014.ts","data/travel/travel-2015.ts","data/travel/travel-2016.ts","data/travel/travel-2017.ts","data/travel/travel-2018.ts","data/travel/travel-2019.ts","data/travel/travel-2020.ts","data/travel/index.ts","data/travel/travel-bucket-list.ts","utils/numberToCurrencyString.ts","utils/concatenateQuantityAndMeasurement.ts","utils/calculateIngredientCost.ts","utils/convertIngredientQuantity.ts","utils/calculateRecipeCost.ts","utils/console-logs.ts","utils/generateIngredientListItem.ts","utils/decimalToFractionString.ts","utils/moveTheSuffixToPrefix.ts","utils/formatNames.ts","utils/isInFuture.ts","utils/recipeMethodEntries.ts","utils/itemIsFavourited.ts","data/recipes/mains/bolognese.ts","data/recipes/mains/carbonara.ts","data/recipes/mains/lasagne.ts","data/recipes/mains/risotto.ts","data/recipes/mains/rogan-josh.ts","data/recipes/mains/shepherds-pie.ts","data/recipes/mains/sweet-and-sour.ts","data/recipes/mains/index.ts","data/recipes/sauces/pesto.ts","data/recipes/sauces/piri-piri.ts","data/recipes/sauces/index.ts","data/recipes/sides/baked-beans.ts","data/recipes/sides/bang-bang-cauliflower.ts","data/recipes/sides/crispy-kale.ts","data/recipes/sides/mashed-potato.ts","data/recipes/sides/ratatouille.ts","data/recipes/sides/index.ts","data/recipes/sides/tofu-scramble.ts","data/recipes/sweets/banana-cake.ts","data/recipes/sweets/blueberry-pancakes.ts","data/recipes/sweets/brownies.ts","data/recipes/sweets/cookies.ts","data/recipes/sweets/crumble.ts","data/recipes/sweets/flapjacks.ts","data/recipes/sweets/lemon-drizzle.ts","data/recipes/sweets/scones.ts","data/recipes/sweets/index.ts","data/recipes/recipes-coming-soon.ts","data/recipes/index.ts","pages/factory.ts","utils/getPageSectionItemCounts.ts","pages/gigs/factory.ts","pages/gigs/index.ts","pages/recipes/index.ts","pages/recipes/factory.ts","pages/travel/index.ts","config/routes.ts","config/index.ts","components/HomePage/index.tsx","components/Disclosure/index.tsx","components/PageSection/styles.tsx","components/PageSection/PageSectionHeader.tsx","components/RecipeCard/RecipeCardList.tsx","components/RecipeCard/factory.ts","components/RecipeCard/styles.ts","components/RecipeCard/index.tsx","utils/getIngredientsHeader.ts","components/PageSection/index.tsx","components/PageTitle/index.tsx","components/PageShell/index.tsx","app/index.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Circle","styled","div","size","fontSize","theme","css","circleBorder","invert","color","Ul","ul","showBullets","Li","li","FlexSpan","span","FlexRow","FlexRowGrow","FlexColumn","FlexLiGrow","Link","ReactRouterDomLink","StyledImage","img","props","SvgIcon","className","icon","data-test","src","CSS","ZERO_MARGIN_AND_PADDING","COLORS","FONT_SIZES","BORDER_BLACK_THIN","BORDER_GRAY_THIN","THEME_page","count","padding","header","margin","bottom","top","shell","fontFamily","THEME","fadedOpacity","listItemGroupVerticalSpacing","scrollbarSize","textColor","breakpoints","phone","maxWidth","countedList","border","width","vertical","leaderboardAdditonalHorizontalSpace","eventCardList","finalEventCardPaddingBottom","recipe","image","dietIcon","title","first","last","homePage","desktop","section","background","borderRadius","boxShadow","rgba","left","horizontal","transition","page","GlobalStyle","createGlobalStyle","normalize","SeventyFivePercentSpan","H1","h1","H2","h2","H3","h3","CentredOnPhone","CountedListItemPastCount","leaderboard","CountedListItemFutureCount","CountedListItemText","favourite","star","faded","CountedListItem","text","futureCount","pastCount","ignoreCountInfo","showFutureCount","showPastCount","ACTORS","ADAM_JAMES","name","ADI_CHUGH","AIMEE_LOU_WOOD","BENJAMIN_ALUWIHARE","CLAIRE_FOY","DAVID_MOORST","GWENDOLINE_CHRISITE","HAMMED_ANIMASHAUN","HATTY_JONES","JASON_WATKINS","JOHN_MCCREA","KATHERINE_PARKINSON","LAURIE_KYNASTON","LEE_INGLEBY","MATT_SMITH","MILLY_THOMAS","NINA_SOSANYA","OLIVER_CHRIS","PETER_MCPHERSON","SARA_BAREILLES","SIAN_CLIFFORD","SURANNE_JONES","TIMOTHEE_CHALAMET","DIETS","VEGAN","abbreviation","VEGETARIAN","FESTIVALS","AREA_10_NYE","BESTIVAL","festival","BRIGHTON_PRIDE","CHINGFEST","DECAYDANCE","DEFECTED_BRISTOL","FABRIC_NYE","GLASTONBURY","HOMOBLOC","KALEIDOSCOPE","LOVEBOX","MAD_COOL","MANCHESTER_PRIDE","MIGHTY_HOOPLA","NOTION_SUMMER_PARTY","ON_THE_RUN_II","PARKLIFE","TRANSMISSION","TRIBAL_SESSIONS","V_FESTIVAL","WAREHOUSE_PROJECT","FRIENDS","CFS","initials","JHC","AISHA","ALEX_FAYE","ALICE_R","AMY_B","AMY_C","ANNIE_B","ASH","BECKY","BETH_O","BETH_SH","BETH_SP","BLAINE","CAITY","CAITLIN","gigs","travel","CARMEN","CAMERON","CHELSEA","CHLOE","CHRISTELLE","COBY_B","COURTNEY","DAD","theatre","DARREN","DAN","DOM","ELLE_O","ELINORE_G","ELISE","ELLIE_F","ELLIE_G","ELLIE_P","ELLIE_S","EMMA","FANNY","GEMMA","GEORGE","GRACE","HANNA","HARRIET_B","HARRIET_K","HEATHER_C","JAIMINI","JAMIE","JAZZ","JERRY","JOE","JESS","JUNAID","KATE_B","KIERAN_S","KIRSTEN","KYLE","LAURA","LEAH","LEWIS","LINDSAY_A","LINDSEY_S","LOUISE","LUKE_J","LUKE_S","MARIA","MEGAN","MUM","NATALIE","NAV","OSCAR","PATRICIA","POOJA","POPPY","ROB_G","RYAN","SAM_B","SARAH_WA","SARAH_W","SIAN","SIMAN","SONYA","STEVE_R","THOM","TOM","TONYA","KEY_WEST","LOCATIONS","BARBADOS","island","attractions","HARRISONS_CAVE","BELGIUM","cities","BRUGES","YPRES","BATTLEFIELDS","BELFRY_OF_BRUGES","BRAZIL","RIO_DE_JANEIRO","MODERN_ART_MUSEUM_RIO","foreignName","COPACABANA_BEACH","ROCINHA_FAVELA","CHRIST_THE_REDEEMER","SELARON_STEPS","HANG_GLIDING","highlight","PICO_DO_PAPAGAIO","englishName","islands","ILHA_GRANDE","CANADA","NIAGARA_FALLS","CROATIA","DUBROVNIK","DUBROVNIK_CABLE_CAR","DUBROVNIK_WALLS","CUBA","HAVANA","capital","towns","VARADERO","CYPRUS","PAPHOS","PAPHOS_ARCHAEOLOGICAL_PARK","CZECH_REPUBLIC","PRAGUE","JOHN_LENNON_WALL","VYSEHRAD","DENMARK","COPENHAGEN","LOUISIANA_ART_MUSEUM","ECUADOR","BANOS","GUAYAQUIL","OTAVALO","QUITO","EQUATOR_MONUMENT","OTAVALO_MARKET","TORTOISE_PARK","PAILON_DEL_DIABLO","COTOPAXI","GALAPAGOS","EGYPT","CAIRO","SHARM_EL_SHEIKH","GIZA_PYRAMIDS_SPHINX","FRANCE","MONACO","NICE","PARIS","SACRE_COEUR","LOUVRE","ARC_DE_TRIOMPHE","AIR_SPACE_MUSEUM","SCIENCE_MUSEUM","EIFFEL_TOWER","NOTRE_DAME","DISNEYLAND_PARIS","themePark","PARC_ASTERIX","GERMANY","BERLIN","REICHSTAG","HOLOCAUST_MEMORIAL","BRANDENBURG_GATE","BERLIN_WALL","EAST_SIDE_GALLERY","GREECE","KOS","regions","HALKIDIKI","HUNGARY","BUDAPEST","PARLIAMENT_BUILDING","THERMAL_BATH_SZECHENYI","CITADELLA","IRELAND","ST_STEPHENS_GREEN_PARK","DUBLIN_PRISON","GUINNESS_STOREHOUSE","DUBLIN","ITALY","SICILY","NAPLES","MILAN","ROME","VATICAN","CATANIA","VENICE","POMPEII","JESOLO","SORRENTO","ARCO_DELLA_PACE","SEMPIONE_PARK","MILAN_MALL","COLOSSEUM","TREVI_FOUNTAIN","VESUVIUS","ETNA","LAOS","LUANG_PRABANG","VIENTIANE","KUANG_SI_FALLS","ELEPHANT_VILLAGE","BUDDHA_PARK","NETHERLANDS","AMSTERDAM","GRONINGEN","STEDELIJK_MUSEUM","SEX_MUSEUM","GRONINGEN_MUSEUM","NORWAY","OSLO","HOVEDOYA","PERU","AREQUIPA","CUSCO","LIMA","HUARAZ","COLCA_CANYON","LAGUNA_69","JUNGLE_ZIPLINE","MACHU_PICCHU","HUACACHINA","HUASCARAN_PARK","MANU","RAINBOW_MOUNTAIN","MANCORA","PARACAS","villages","POLAND","KRAKOW","AUSCHWITZ_BIRKENAU","WIELICZKA_SALT_MINE","WIELICZKA","PORTUGAL","LISBON","PORTIMAO","ZOOMARINE","OCENARIO_DE_LISBOA","FERRAGUDO","TAVIRA","VILAMOURA","SPAIN","BARCELONA","MADRID","CIUTADELLA_PARK","PARK_GUELL","PARQUE_WARNER","SIAM_PARK","PORTAVENTURA","TENERIFE","IBIZA","MINORCA","LANZAROTE","THAILAND","BANGKOK","CHIANG_MAI","CHIANG_RAI","KOH_PHI_PHI","KOH_PHANGAN","KOH_TAO","WHITE_TEMPLE","MAYA_BAY","PAI_CANYON","TIGER_KINGDOM","GRAND_PALACE","SKY_BAR","KRABI","PAI","UGANDA","JINJA","RAFTING_NALUBALE","NILE_SOURCE","UAE","DUBAI","AQUAVENTURE","BURJ_KHALIFA","UK","insignificant","ALTON_TOWERS","BLACKPOOL_PLEASURE_BEACH","WINTER_WONDERLAND","THORPE_PARK","EDEN_PROJECT","TATE_BRITAIN","LONDON_EYE","RICHMOND_PARK","SHERWOOD_FOREST","CALKE_ABBEY","BATTERSEA_PARK","CRYSTAL_PALACE_PARK","QUEEN_ELIZABETH_OLYMPIC_PARK","VICTORIA_PARK","GREENWICH_PARK","KEW_GARDENS","EPPING_FOREST","HAMPSTEAD_HEATH","V_A_MUSEUM","TATE_MODERN","NATURAL_HISTORY_MUSEUM","LAKE_DISTRICT","HADRIANS_WALL","ANGLESEY","BATH","BLACKPOOL","BRIGHTON","BRISTOL","BIRMINGHAM","CAMBRIDGE","COVENTRY","DERBY","HULL","LEEDS","LEICESTER","LINCOLN","LONDON","LIVERPOOL","MANCHESTER","NEWCASTLE","NORWICH","NOTTINGHAM","OXFORD","SHEFFIELD","WOLVERHAMPTON","YORK","CORNWALL","DONCASTER","HARROGATE","ILKLEY","MILTON_KEYNES","STRATFORD","MANSFIELD","NEWARK","NEWQUAY","PADSTOW","TENBY","SCARBOROUGH","USA","ALCATRAZ_PRISON","FISHERMANS_WHARF","FARMERS_MARKET","HOLLYWOOD_WALK_OF_FAME","WHITE_HOUSE","CAPITOL_BUILDING","WASHINGTON_MONUMENT","LINCOLN_MEMORIAL","TIMES_SQUARE","BROOKLYN_BRIDGE","WORLD_TRADE_CENTER","GOLDEN_GATE_BRIDGE","CENTRAL_PARK","VENICE_BEACH","DISNEYLAND_CALIFORNIA_ADVENTURE","DISNEY_MGM_STUDIOS","DISNEY_ANIMAL_KINGDOM","DISNEY_EPCOT","WET_N_WILD_ORLANDO","BLIZZARD_BEACH","DISNEY_MAGIC_KINGDOM","UNIVERSAL_STUDIOS_FLORIDA","UNIVERSALS_ISLANDS_OF_ADVENTURE","GRAND_CANYON","KNOTTS_BERRY_FARM","SEAWORLD_ORLANDO","BUSCH_GARDENS_WILLIAMSBURG","BUSCH_GARDENS_TAMPA","SIX_FLAGS_AMERICA","SIX_FLAGS_MAGIC_MOUNTAIN","SIX_FLAGS_NEW_ENGLAND","BOSTON_MASSACHUSETTS","LAS_VEGAS","VIRGINIA_BEACH","LOS_ANGELES","NEW_YORK_CITY","SAN_FRANCISCO","SPRINGFIELD_MASSACHUSETTS","WASHINGTON_DC","ALCATRAZ","MARTHAS_VINEYARD","CAPE_COD","FLORIDA_KEYS","ISLAMORADA","states","FLORIDA","NEW_YORK","MASSACHUSETTS","VIRGINIA","SAINSBURYS_SEASONING_COST","quantity","measurement","price","MEASUREMENTS","MUSICIANS","AURORA","THE_ACADEMY_IS","ALESSIA_CARA","ALEX_CHAPMAN","ALL_AMERICAN_REJECTS","ALLIE_X","ALL_TIME_LOW","ALMA","AMOS_LEE","ANNA_OF_THE_NORTH","ADELE","ANASTACIA","ANNE_MARIE","AQUILO","ARCTIC_MONKEYS","ARIANA_GRANDA","AUDITION","BAAUER","BANANARAMA","BANKS","BASTILLE","BAYNK","BEARS_DEN","BECKY_HILL","BEN_HOWARD","BETSY","BETTY_WHO","BEYONCE","BICEP","BILLIE_EILISH","BLACK_KIDS","B_O_B","BONDAX","BON_IVER","BONTAN","BORNS","BOYS_LIKE_GIRLS","BLONDE","BREACH","BRIGITTE_APHRODITE","BRITNEY_SPEARS","BROODS","BULOW","CAMILA_CABELLO","CARIBOU","CARLY_RAE_JEPSEN","CARL_COX","CAROLINE_POLACHEK","CELESTE","CHARLI_ADAMS","CHARLI_XCX","CHARLOTTE_CHURCH","CHELSEA_CUTLER","CHEMICAL_BROTHERS","CHERYL","CHLOE_X_HALLE","CHRISTINE_AND_THE_QUEENS","CHRVCHES","CLAIRO","CLEAN_BANDIT","COBRA_STARSHIP","CODE","CRUEL_YOUTH","CUTE_IS_WHAT_WE_AIM_FOR","CYRIL_HAHN","DANIEL_AVERY","DAUGHTER","DAVID_RODIGAN","DIPLO","DISCLOSURE","DIZZEE_RASCAL","DRUMS","DUKE_DUMONT","DUA_LIPA","DUSKY","DYLAN","EARTHEATER","EATS_EVERYTHING","ELDERBROOK","ELIZA_DOOLITTLE","ELLA_EYRE","ELLIE_GOULDING","EMAROSA","FALL_OUT_BOY","FKA_TWIGS","FLEETWOOD_MAC","FLIGHT_FACILITIES","FLORENCE_AND_THE_MACHINE","FOREVER_THE_SICKEST_KIDS","FOURS","FOUR_TET","FOXES","FRANCES","FRANCIS_AND_THE_LIGHTS","FRANK_OCEAN","FREYA_RIDINGS","THE_FRIDAY_NIGHT_BOYS","FRIEND_WITHIN","FUN_LOVIN_CRIMINALS","GABRIELLE","GEORGE_EZRA","GEORGE_FITZGERALD","GEORGIA","G_FLIP","GLOWIE","GORGON_CITY","GRACEY","GREEN_VELVET","GRIMES","GROOVE_ARMADA","GRYFFIN","GYM_CLASS_HEROES","HAIM","HALSEY","HANNAH_WANTS","HAUX","HEIDI","HEY_MONDAY","HOLLY_HUMBERSTONE","HORSE_MEAT_DISCO","INCOGNITO","JAMES_BAY","JAMES_BLAKE","JAMIE_JONES","JAMIE_T","JAMIE_XX","JAX_JONES","JAY_Z","JEREMY_ZUCKER","JESS_GLYNNE","JESSIE_WARE","JOE_GODDARD","JOHNNY_MARR","JONAS_BLUE","JONES","JON_HOPKINS","JORIS_VOORN","JORJA_SMITH","JOSH_BUTLER","JOY_ORBISON","JOSEF_SALVAT","JULIA_MICHAELS","JULIO_BASHMORE","JUSTIN_BIEBER","JUSTIN_MARTIN","KAH_LO","KANYE_WEST","KATE_NASH","KATY_PERRY","KAYTRANADA","KESHA","KIASMOS","KIDNAP","KIDS_IN_GLASS_HOUSES","THE_KILLERS","KIM_PETRAS","KOLSCH","KYGO","LADY_GAGA","LADY_STARLIGHT","LANA_DEL_REY","LANE_8","LANY","LA_ROUX","LAUV","L_DEVINE","LELAND","LENNON_STELLA","LEON","LILY_ALLEN","LISSIE","LITTLE_COMETS","LITTLE_DRAGON","LONDON_GRAMMAR","LORDE","LUCY_ROSE","LYKKE_LI","LYVES","MACEO_PLEX","MALLRAT","MAGGIE_ROGERS","THE_MAINE","MAJOR_LAZER","MARY_J_BLIGE","MARINA","MARTIN_SOLVEIG","MELANIE_MARTINEZ","METRO_STATION","MICHAEL_KIWANUKA","MIDLAND","MIGUEL","MIKE_POSNER","MILEY_CYRUS","MISHA_B","M_0","MK","MNEK","MO","MUNA","MURA_MASA","NAAZ","NAO","NASTY_CHERRY","NATASHA_BEDINGFIELD","NAVVY","NICKI_MINAJ","NOEL_GALLAGHERS_HIGH_FLYING_BIRDS","OH_ANNIE_OH","OKAYWILL","PALE_WAVES","PALOMA_FAITH","PANIC_AT_THE_DISCO","PARAMORE","PAUL_WOOLFORD","PET_SHOP_BOYS","PHILIP_GEORGE","PRETENDERS","PVRIS","RAINBOW_KITTEN_SURPRISE","RALEIGH_RITCHIE","RALPH","REDLIGHT","RIHANNA","RINA_SAWAYAMA","RITON","RIXTON","ROBINSON","ROBYN","ROMY","ROOSEVELT","ROUTE_94","RYN_WEAVER","RUDIMENTAL","RUFUS_DU_SOL","RYAN_BEATTY","SABRINA_CLAUDIO","SAINT_JHN","SAM_SMITH","SASHA_SLOAN","SBTRKT","SEEB","SEGA_BODEGA","SEINABO_SEY","SEVDALIZA","SIA","SIGRID","SISTER_SLEDGE","SKY_FERREIRA","SLIIMY","SOFI_TUKKER","SOAK","SONIKKU","SOPHIE","SOPHIE_ELLIS_BEXTOR","SOUL_WAX","THE_SMYTHS","THE_SPILL_CANVAS","SKREAM","SUNDAY_GIRL","TAYLOR_SWIFT","TENSNAKE","TEN_WALLS","TERROR_JR","TOM_ODELL","TORI_KELLY","TOURIST","TOVE_LO","TROYE_SIVAN","TULISA","TWENTY_ONE_PILOTS","TWO_FEET","TYGA","VERITE","WE_THE_KINGS","WILL_YOUNG","THE_XX","YEARS_AND_YEARS","YOU_ME_AT_SIX","YOUSEF","ZARA_LARSSON","MUSIC_VENUES","ALEXANDRA_PALACE","ALEXANDRA_PALACE_THEATRE","BRIXTON_ACADEMY","BROCKWELL_PARK","CAMDEN_ASSEMBLY","CORSICA_STUDIOS","COURTYARD_THEATRE","DINGWALLS","THE_GARAGE","EARTH","EGG","ELECTRIC_BRIXTON","ELECTROWERKZ","FABRIC","FINSBURY_PARK","HAMMERSMITH_APOLLO","HEAVEN","HOXTON_HALL","HOXTON_SQUARE_BAR_AND_KITCHEN","ISLINGTON_ASSEMBLY_HALL","KENTISH_TOWN_FORUM","KOKO","LAFAYETTE","LAYLOW","LONDON_STADIUM","MINISTRY_OF_SOUND","MOTH_CLUB","OLD_BLUE_LAST","OMEARA","OSLO_HACKNEY","OVAL_SPACE","THE_O2","PRINTWORKS","QUEEN_OF_HOXTON","RIDGEWAY_PARK","ROUNDHOUSE","ROYAL_ALBERT_HALL","ROYAL_FESTIVAL_HALL","SCALA","SERVANT_JAZZ_QUARTERS","SHEPHERDS_BUSH_EMPIRE","ST_GILES_IN_THE_FIELD","TOTTENHAM_HOTSPUR_STADIUM","TWICKENHAM_STADIUM","TROXY","VILLAGE_UNDERGROUND","WEMBLEY_STADIUM","XOYO","ZIGFRID_VON_UNDERBELLY","ACADEMY_MANCHESTER","ACADEMY_2_MANCHESTER","ALBERT_HALL_MANCHESTER","APOLLO_MANCHESTER","ARENA_MANCHESTER","CASTLEFIELD_BOWL","DEAF_INSTITUTE","GORILLA","HEATON_PARK","MAYFIELD_DEPOT","RITZ_MANCHESTER","RUBY_LOUNGE","SANKEYS","STORE_STREET","BODEGA","ARENA_NOTTINGHAM","RESCUE_ROOMS","ROCK_CITY","TRENT_UNIVERSITY_NOTTINGHAM","ACADEMY_BIRMINGHAM","ACADEMY_2_BIRMINGHAM","ALEXANDRA_THEATRE","BARFLY_BIRMINGHAM","INSTITUTE_BIRMINGHAM","NEC_ARENA_BIRMINGHAM","NIA_ARENA_BIRMINGHAM","COCKPIT_LEEDS","DE_MONTFORT_HALL","ENGINE_SHED","IFEMA_MADRID","LULWORTH_ESTATE","MOTION","PRESTON_PARK","SCHWUZ","SHEFFIELD_ARENA","TRESOR","WESTON_PARK","WOLVERHAMPTON_CIVIC_HALL","WORTHY_FARM","FLOUR","CORNFLOUR","displayText","cost","FLOUR_PLAIN","FLOUR_SELF_RAISING","SUGAR","SUGAR_BROWN","SUGAR_BROWN_DARK","SUGAR_BROWN_LIGHT","SUGAR_CASTER_GOLDEN","SUGAR_DEMERARA","SUGAR_GRANULATED","SUGAR_ICING","SYRUPS","LEMON_EXTRACT","NECTAR_AGAVE","SYRUP_GOLDEN","VANILLA_EXTRACT","BAKING","BAKING_POWDER","BICARBONATE_OF_SODA","CHOCOLATE_DARK","COCOA_POWDER","PASTA","SPAGHETTI","PASTA_LASAGNE_SHEET_DRIED","RICE","RICE_BASMATI","RICE_BROWN","RICE_RISOTTO_ARBORIO","GRAINS","OATS","CARBS","BREAD_GARLIC","BREAD_SOURDOUGH","BREAD_SOURDOUGH_DARK","POPPADOMS","MILK","MILK_COCONUT_CANNED","MILK_ALMOND_UNSWEETENED","MILK_OAT","DAIRY","BUTTER_VEGAN","CREAM_OAT","CHEESE_VEGAN_SLICE","FRUIT_DRIED","APRICOTS_DRIED","BLUEBERRIES_DRIED","CRANBERRIES_DRIED","RAISINS","FRUIT_FRESH","APPLE_BRAMLEY","BANANA","BLACKBERRIES_FRESH","BLUEBERRIES_FRESH","LEMON","LEMON_LARGE","LIME","PINEAPPLE","RASPBERRIES_FRESH","FRUIT_FROZEN","BLACKBERRIES_FROZEN","RASPBERRIES_FROZEN","JUICE","LEMON_JUICE","LEMON_JUICE_FRESH","LIME_JUICE_FRESH","FRUIT","HERBS_DRIED","BASIL_DRIED","HERBS_MIXED_DRIED","OREGANO_DRIED","ROSEMARY_DRIED","THYME_DRIED","HERBS_FRESH","BASIL_FRESH","payFullAmountAlways","CORIANDER_FRESH","PARSLEY_FRESH","SAGE_FRESH","HERBS","BEANS","BEANS_BAKED","BEANS_HARICOT","BEANS_KIDNEY","SEITAN","GLUTEN_WHEAT_VITAL","PROTEIN","CHICKPEAS","EGGS","LENTIL_RED_DRY","TOFU","DRIED_SEASONING","PAPRIKA","ONION_POWDER","GARLIC_GRANULES","PAPRIKA_SMOKED","TURMERIC_GROUND","ALLSPICE_GROUND","CHILLI_POWDER","CINNAMON_GROUND","CHILLI_CRUSHED_DRIED","NUTMEG_GROUND","YEAST_NUTRITIONAL","STOCK_POWDER_VEGAN","OILS","OIL_OLIVE","OIL_SUNFLOWER","UNICODE","PASTES","CURRY_PASTE_MADRAS","CURRY_PASTE_ROGAN_JOSH","TOMATO_PUREE","SALT","SALT_BLACK","SALT_TABLE","SALT_ROCK_FRESH","SAUCES","LIQUID_SMOKE","SOY_SAUCE","KETCHUP_TOMATO","SRIRACHA","SWEET_CHILLI_SAUCE","VINEGARS","VINEGAR_BALSAMIC","VINEGAR_CIDER","VINEGAR_WHITE_WINE","SEASONING","PEPPER_BLACK_FRESH","PEPPER_BLACK_GROUND","WINE_RED","CHILLI_RED_FRESH","CHILLI_BIRD_EYE_FRESH","GINGER_FRESH","NUTMEG_FRESH","NUTS","NUTS_CASHEWS","NUTS_PINE","SEEDS","SEEDS_CHIA","SEEDS_POPPY","SEEDS_FLAX_GROUND","SEEDS_PUMPKIN","SEEDS_SESAME","SEEDS_SUNFLOWER","NUTS_AND_SEEDS","VEG_CANNED","TOMATO_CHOPPED","TOMATO_PASSATA","TOMATO_SUN_DRIED","VEG_FRESH","ASPARAGUS","AUBERGINE","BEANS_GREEN","BROCCOLI","BUTTERNUT_SQUASH","CARROT","CAULIFLOWER_REGULAR","CELERY_STICK","COURGETTE","GARLIC_CLOVE","KALE","LEEK","MUSHROOMS","MUSHROOMS_CHESTNUT","ONION_WHITE_MEDIUM","ONION_RED_MEDIUM","ONION_SPRING","PEPPER_RED","PEPPER_GREEN","PEPPER_ORANGE","PEPPER_MIXED","POTATO_MARIS_PIPER","POTATO_BAKING","POTATO_SWEET","SPINACH","VEG_FROZEN","PETITS_POIS_FROZEN","VEGETABLES_MIXED_FROZEN","VEG","INGREDIENTS","WATER","WATER_BOILING","EVENT_CARD_TYPES","PAGE_SECTION_DATA_TYPES","PAGE_SECTION_IDS","ACTOR","type","ATTRACTION","BUCKET_LIST","CITY","COUNTRY","FESTIVAL","FRIEND","ISLAND","HIGHLIGHT","MUSICIAN","REGION","PLAY","THEATRE_VENUES","THEME_PARK","TOWN","UP_NEXT","RECIPES_COMING_SOON","PLAYS","AFTERGLOW","CONSENT","DUST","EVERYBODYS_TALKING_ABOUT_JAMIE","FERRYMAN","FROZEN","HOME_IM_DARLING","INHERITANCE","KINKY_BOOTS","LEAVE_TO_REMAIN","LOST_UNFOUND","LUNGS","MATILDA","MIDSUMMER_NIGHTS_DREAM","SON","THAT_GIRL","UGLY_LIES_THE_BONE","UNCLE_VANYA","WAITRESS","WICKED","YOUNG_MARX","ADELPHI","APOLLO","APOLLO_VICTORIA","BRIDGE","DUKE_OF_YORKS","GIELGUD","HAROLD_PINTER","LYRIC","NATIONAL","NOEL_COWARD","OLD_RED_LION","OLD_VIC","PLAYHOUSE","ROYAL_HAYMARKET","TRAFALGAR_STUDIOS","WATERLOO_EAST","WHITE_BEAR","ROYAL_SHAKESPEARE","TICKET_TYPES","DAYS_OF_THE_WEEK","MONTHS","params","EventCardTitle","ItalicBoldFlexRow","EventCardSubtitle","StyledFlexColumn","EventCard","subtitle","body","dates","disclaimer","daysTilGig","dateDifference","valueOf","Date","Math","ceil","daysToGo","stringifyDate","date","weekday","getDay","day","getDate","month","getMonth","year","getFullYear","length","getDisplayDateText","getCountdownText","requireSvg","require","requireJpg","photo","ICONS","ARTIST","BOOK","BRAIN","CAKE","CAMERA","CLOCHE","FLAG","HEART","MAP_PIN","MASKS","MICROPHONE","NOTEPAD","PALM_TREE","PEACE_SIGN","PEOPLE","ROLLER_COASTER","STADIUM","STARS","TENT","THEATRE","TOAST","TOWN_HALL","TRAVEL","VEG_BOWL","PHOTOS","BAKED_BEANS","BANANA_CAKE","BOLOGNESE","BROWNIES","CARBONARA","CRUMBLE","FLAPJACKS","KALE_CRISPY","LASAGNE","MASHED_POTATO","PIRI_PIRI","RATATOUILLE","ROGAN_JOSH","SHEPHERDS_PIE","GIGS_2006","headline","venue","company","GIGS_2007","support","lineup","GIGS_2008","GIGS_2009","GIGS_2010","GIGS_2011","GIGS_2012","GIGS_2013","GIGS_2014","GIGS_2015","GIGS_2016","GIGS_2017","GIGS_2018","GIGS_2019","GIGS_2020","ticketType","GIGS_2021","ALL","ALL_GROUPED_BY_YEAR","DATA_GIGS","THEATRE_2016","play","THEATRE_2017","THEATRE_2018","cast","THEATRE_2019","THEATRE_2020","DATA_THEATRE","TRAVEL_1997","TRAVEL_1998","TRAVEL_1999","TRAVEL_2000","TRAVEL_2001","TRAVEL_2002","hidden","TRAVEL_2003","TRAVEL_2004","TRAVEL_2005","notAbroad","TRAVEL_2006","TRAVEL_2007","TRAVEL_2008","TRAVEL_2009","TRAVEL_2010","TRAVEL_2011","TRAVEL_2012","TRAVEL_2013","TRAVEL_2014","TRAVEL_2015","TRAVEL_2016","TRAVEL_2017","TRAVEL_2018","TRAVEL_2019","TRAVEL_2020","DATA_TRAVEL","numberToCurrencyString","number","decimalPrecision","round","toFixed","concatenateQuantityAndMeasurement","displayQuantity","parseInt","calculateIngredientCost","ingredient","ingredientQuantity","ingredientMeasurement","inventory","inventoryQuantity","inventoryMeasurement","inventoryPrice","alert","convertIngredientQuantity","calculateRecipeCost","ingredients","yieldQuantity","recipeTitle","CONSOLE_LOG_RECIPE_COST_CALCULATIONS","logDashedLine","console","log","consoleLogRecipeTitle","runningRecipeCost","forEach","ingredientSection","recipeIngredient","recipeIngredientCost","displayIngredient","outputLine","toString","consoleLogCostedIngredient","unitCost","costDisplayText","unitCostDisplayText","generateIngredientListItem","optional","notes","ingredientText","decimal","decimalToFractionString","slice","displayQuantityMeasurementIngredients","moveTheSuffixToPrefix","word","substring","formatNames","inputData","Array","isArray","array","item","outputString","index","isInFuture","today","setDate","yesterday","recipeMethodEntries","FOLD_IN_FLOUR_MIX","LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN","MAKE_FLAX_EGG","bakeForAbout","minutes","skewer","wellRisen","defaultText","additionalText","preheatOven","degreesCelcius","bakingTray","ovenTemperature","transferToLoafTin","sunkenCentre","itemIsFavourited","itemToInspect","favouritedData","dataItem","serveWith","method","makes","diet","hide","RISOTTO","SWEET_AND_SOUR","MAINS","category","data","PESTO","BANG_BANG_CAULIFLOWER","CRISPY_KALE","SIDES","BLUEBERRY_PANCAKES","COOKIES","LEMON_DRIZZLE","SWEETS","sort","a","b","DATA_RECIPES","CATEGORISED","COMING_SOON","mapToCountedList","items","filter","allData","bucketListMode","mapToListEntry","itemToCount","includes","getPageSectionItemCounts","values","toLowerCase","localeCompare","generatePropertyArrayFromObject","object","childLevelProperty","topLevelProperty","arrayFilteredByTopLevelProperty","arrayFilteredByChildLevelProperty","concat","apply","mapToEventCard","eventCardType","mapDataToEventCard","mapYearsToEventCardPageSections","years","details","showSectionLength","mapYearGroupToSection","FAVOURITES","mapToCountedListWrapper","CL_BUCKET_LIST","CL_FESTIVALS","CL_FRIENDS","CL_MUSICIANS","CL_VENUES","UPCOMING","gig","SECTIONS_STATS","SECTIONS_YEARS","PAGE_GIGS","sections","theatreTrip","actors","friends","plays","venues","PAGE_THEATRE","SECTIONS_RECIPE_GROUPS","expandedAutomatically","maprecipeGroupToSection","SECTION_COMING_SOON","PAGE_RECIPES","countries","themeParks","highlights","CITIES","TOWNS","THEME_PARKS","HIGHLIGHTS","ISLANDS","COUNTRIES","mapTripToEventCards","PAGE_TRAVEL","HOMEPAGE_ROUTE","PAGE_ROUTES","dest","FlexContainer","GridContainer","StyledSvg","iconSizeDesktop","iconSizePhone","iconSizePadding","HomePage","key","to","PanelContainer","bodyHeight","ClickableRegion","Disclosure","onlyHeaderClickable","headerComponent","children","React","useState","panelIsVisible","switchPanelVisibility","panelContainerHeight","setPanelContainerHeight","hiddenPanel","getPanelContainerClass","ref","element","getBoundingClientRect","height","onClick","PageSectionContainer","SectionPanelList","isEventCards","RecipeGroupList","PageSectionHeaderContainer","PageSectionPrimaryCount","PageSectionSecondaryCount","StyledIcon","PageSectionHeader","showCounts","dataTest","starredDataCount","useContext","ThemeContext","StyledLi","addPaddingTop","RecipeCardList","mapMethodToListItems","mapServeWithToListItems","getServeWithListItem","lineOptions","output","mapRecipeIngredientsToListItems","ingredientsGroups","ingredientsWithPaddingFlags","ingredientsGroup","INDEX_HIGH","INDEX_LOW","push","RecipeCardTitle","RecipeCardImage","RecipeBody","PaddedFlexColumn","RecipeCard","newRecipe","ingredientsHeader","defaultIngredientsHeader","quantitySpaceMeasurement","quantityAndMeasurement","getIngredientsHeader","PageSection","isCountedList","isRecipes","isFriendsSection","recipes","countedListItems","eventCards","Recipes","CountedList","listItem","EventCards","eventCard","TitleTextContainer","PageTitlePrimaryCount","PageTitleSecondaryCount","PaddedFlexRow","pageTitleMarginBottom","SvgContainer","PageTitleComponent","titleText","StyledPageShell","PageShell","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.76052580.chunk.js","sourcesContent":["var map = {\n\t\"./artist.svg\": 38,\n\t\"./book.svg\": 39,\n\t\"./brain.svg\": 40,\n\t\"./cake.svg\": 41,\n\t\"./camera.svg\": 42,\n\t\"./city.svg\": 43,\n\t\"./cloche.svg\": 44,\n\t\"./flag.svg\": 45,\n\t\"./heart.svg\": 46,\n\t\"./loading.svg\": 47,\n\t\"./map_pin.svg\": 48,\n\t\"./masks.svg\": 49,\n\t\"./microphone.svg\": 50,\n\t\"./notepad.svg\": 51,\n\t\"./palm_tree.svg\": 52,\n\t\"./peace_sign.svg\": 53,\n\t\"./people.svg\": 54,\n\t\"./roller_coaster.svg\": 55,\n\t\"./stadium.svg\": 56,\n\t\"./stars.svg\": 57,\n\t\"./tent.svg\": 58,\n\t\"./theatre.svg\": 59,\n\t\"./toast.svg\": 60,\n\t\"./town_hall.svg\": 61,\n\t\"./travel.svg\": 62,\n\t\"./veg_bowl.svg\": 63\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 37;","module.exports = __webpack_public_path__ + \"static/media/artist.7b2f9742.svg\";","module.exports = __webpack_public_path__ + \"static/media/book.76291941.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.09b4a667.svg\";","module.exports = __webpack_public_path__ + \"static/media/cake.fd8c22a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.90fcc14d.svg\";","module.exports = __webpack_public_path__ + \"static/media/city.c6cfa7a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloche.0db1256b.svg\";","module.exports = __webpack_public_path__ + \"static/media/flag.b4a08446.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.50bdf1aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.f1b12302.svg\";","module.exports = __webpack_public_path__ + \"static/media/map_pin.71135c81.svg\";","module.exports = __webpack_public_path__ + \"static/media/masks.d8da85e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/microphone.45f98fc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/notepad.4eca818e.svg\";","module.exports = __webpack_public_path__ + \"static/media/palm_tree.4f07f732.svg\";","module.exports = __webpack_public_path__ + \"static/media/peace_sign.05525562.svg\";","module.exports = __webpack_public_path__ + \"static/media/people.af13270c.svg\";","module.exports = __webpack_public_path__ + \"static/media/roller_coaster.6bcd9568.svg\";","module.exports = __webpack_public_path__ + \"static/media/stadium.5bff58bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/stars.86e33730.svg\";","module.exports = __webpack_public_path__ + \"static/media/tent.2c2dd363.svg\";","module.exports = __webpack_public_path__ + \"static/media/theatre.e5eaee16.svg\";","module.exports = __webpack_public_path__ + \"static/media/toast.df12ac4b.svg\";","module.exports = __webpack_public_path__ + \"static/media/town_hall.c00cc7ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/travel.d9baea5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/veg_bowl.ee16e10a.svg\";","var map = {\n\t\"./baked_beans.jpg\": 65,\n\t\"./banana_cake.jpg\": 66,\n\t\"./bolognese.jpg\": 67,\n\t\"./brownies.jpg\": 68,\n\t\"./carbonara.jpg\": 69,\n\t\"./crumble.jpg\": 70,\n\t\"./flapjacks.jpg\": 71,\n\t\"./kale_crispy.jpg\": 72,\n\t\"./lasagne.jpg\": 73,\n\t\"./mashed_potato.jpg\": 74,\n\t\"./piri_piri.jpg\": 75,\n\t\"./ratatouille.jpg\": 76,\n\t\"./rogan_josh.jpg\": 77,\n\t\"./shepherds_pie.jpg\": 78\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 64;","module.exports = __webpack_public_path__ + \"static/media/baked_beans.b17978e3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banana_cake.ae9fd9b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bolognese.b9573028.jpg\";","module.exports = __webpack_public_path__ + \"static/media/brownies.84692604.jpg\";","module.exports = __webpack_public_path__ + \"static/media/carbonara.9848608a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crumble.263fe8b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flapjacks.0d5f26e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kale_crispy.b5419d7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lasagne.8d8fb594.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mashed_potato.5c438d68.jpg\";","module.exports = __webpack_public_path__ + \"static/media/piri_piri.42719ce5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ratatouille.971440f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rogan_josh.904346f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shepherds_pie.d49c0165.jpg\";","import styled, { css } from \"styled-components\";\n\ninterface ICircle extends IThemeProp {\n  className?: string;\n  size: string;\n  fontSize: string;\n  invert: boolean;\n  color: string;\n}\n\nexport const Circle = styled.div`\n  border-radius: 50%;\n  text-align: center;\n\n  ${({ size, fontSize, theme }: ICircle) => css`\n    height: ${size};\n    width: ${size};\n    line-height: ${size};\n    border: ${theme.circleBorder};\n    font-size: ${fontSize};\n  `}\n\n  ${({ invert }: ICircle) =>\n    invert &&\n    css`\n      background: #777777;\n      color: white;\n      border-color: transparent;\n    `}\n\n  ${({ color }: ICircle) =>\n    color &&\n    css`\n      background: ${color};\n      color: white;\n      border-color: transparent;\n    `}\n`;\n","import styled, { css } from \"styled-components\";\n\ninterface StyledUlProps {\n  showBullets?: boolean;\n}\n\nexport const Ul = styled.ul`\n  margin: 0;\n  padding: 0;\n\n  ${({ showBullets }: StyledUlProps) =>\n    showBullets\n      ? css`\n          list-style-type: square;\n          list-style-position: inside;\n        `\n      : css`\n          list-style-type: none;\n        `}\n`;\n\nexport const Li = styled.li``;\n","import styled from \"styled-components\";\n\nimport { Li } from \"./Lists\";\n\nexport const FlexSpan = styled.span`\n  display: flex;\n`;\n\nexport const FlexSpanGrow = styled(FlexSpan)`\n  flex: 1;\n`;\n\nexport const FlexRow = styled.div`\n  display: flex;\n`;\n\nexport const FlexRowGrow = styled(FlexRow)`\n  flex: 1;\n`;\n\nexport const FlexColumn = styled(FlexRow)`\n  flex-direction: column;\n`;\n\nexport const FlexLiGrow = styled(Li)`\n  display: flex;\n  flex: 1;\n`;\n","import { Link as ReactRouterDomLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Link = styled(ReactRouterDomLink)`\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  text-decoration: none;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface IStyledImage {\n  size: string;\n}\nconst StyledImage = styled.img`\n  height: ${(props: IStyledImage) => props.size};\n  width: ${(props: IStyledImage) => props.size};\n  margin: 0;\n`;\n\ninterface ISvgIcon {\n  className?: string;\n  icon: string;\n  size: string;\n}\n\nexport const SvgIcon = ({ className, icon, size }: ISvgIcon) => (\n  <StyledImage\n    className={className}\n    data-test=\"svg-icon\"\n    src={icon}\n    size={size}\n  />\n);\n","import { css } from \"styled-components\";\n\nconst ZERO_MARGIN_AND_PADDING = css`\n  margin: 0;\n  padding: 0;\n`;\n\nexport const CSS = { ZERO_MARGIN_AND_PADDING };\n","export const COLORS: IColors = {\n  gainsboro: \"gainsboro\",\n  darkGreen: \"darkGreen\",\n  green: \"green\",\n  amethystSmoke: \"#a186b0\",\n  baliHai: \"#86a3b0\",\n  gray: \"#808080\",\n  hillary: \"#b0a186\",\n  sprout: \"#b9d1a3\",\n  black: \"#000000\"\n};\n","export const FONT_SIZES: IFontSizes = {\n  XxL: \"4.375rem\",\n  XL: \"2rem\",\n  L: \"1.5rem\",\n  M: \"1rem\",\n  S: \"0.75rem\"\n};\n","import { rgba } from \"polished\";\n\nimport { COLORS } from \"./colors\";\n\nconst countMarginLeft: PxValue = \"5px\";\n\nconst BORDER_BLACK_THIN: IBorder = `1px solid ${COLORS.black}`;\nconst BORDER_GRAY_THIN: IBorder = `1px solid ${COLORS.gray}`;\n\nconst THEME_homePage: ITheme_Homepage = {\n  icon: { padding: \"1.5vmin\", size: { desktop: \"25vmin\", phone: \"42vmin\" } }\n};\n\nconst THEME_page: ITheme_Page = {\n  count: { padding: `12px 0 0 ${countMarginLeft}` },\n  header: { margin: { bottom: \"30px\" } },\n  icon: { margin: { top: \"15px\" }, size: \"60px\" },\n  shell: { padding: \"25px 20px\" }\n};\n\nconst THEME_countedList: ITheme_CountedList = {\n  border: { bottom: BORDER_GRAY_THIN },\n  count: { width: \"25px\" },\n  padding: { vertical: \"5px\" },\n  leaderboardAdditonalHorizontalSpace: \"10px\"\n};\n\nconst THEME_eventCardList: ITheme_EventCardList = {\n  padding: { vertical: \"10px\" },\n  finalEventCardPaddingBottom: \"5px\"\n};\n\nconst THEME_pageSection: ITheme_PageSection = {\n  background: COLORS.gainsboro,\n  border: { bottom: BORDER_BLACK_THIN },\n  borderRadius: \"10px\",\n  boxShadow: `0 1px 2px ${rgba(COLORS.gray, 0.5)}`,\n  count: { margin: { left: countMarginLeft } },\n  header: { padding: \"12px 0\" },\n  icon: { padding: { top: \"2px\" }, size: \"34px\" },\n  margin: { bottom: \"20px\" },\n  padding: { horizontal: \"12px\", bottom: \"5px\" },\n  transition: \"all 0.4s ease\"\n};\n\nconst THEME_recipe: ITheme_Recipes = {\n  border: { bottom: BORDER_GRAY_THIN },\n  image: { size: \"300px\" },\n  dietIcon: { margin: { top: \"4px\" }, size: \"24px\" },\n  title: { padding: { vertical: \"15px\" } },\n  first: { padding: { top: \"10px\" } },\n  last: { padding: { bottom: \"20px\" } }\n};\n\nconst THEME_breakpoints: IBreakpoints = { phone: { maxWidth: \"480px\" } };\n\nexport const fontFamily: IFontFamily = \"-apple-system, Helvetica, sans-serif\";\nexport const scrollbarSize: IScrollbarSize = \"0.7rem\";\n\nexport const THEME: ITheme = {\n  // Surface level\n  circleBorder: BORDER_BLACK_THIN,\n  fadedOpacity: 0.5,\n  fontFamily,\n  listItemGroupVerticalSpacing: \"10px\",\n  scrollbarSize,\n  textColor: COLORS.black,\n\n  // Nested level\n  breakpoints: THEME_breakpoints,\n  countedList: THEME_countedList,\n  eventCardList: THEME_eventCardList,\n  recipe: THEME_recipe,\n  homePage: THEME_homePage,\n  section: THEME_pageSection,\n  page: THEME_page\n};\n","import { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"polished\";\n\nimport { fontFamily, scrollbarSize } from \"./theme\";\n\nexport const GlobalStyle = createGlobalStyle`\n  ${normalize()}\n  \n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n  \n  ::-webkit-scrollbar {\n    width: ${scrollbarSize};\n    height: ${scrollbarSize};\n  }\n  \n  ::-webkit-scrollbar-track {\n    background: rgba(180, 178, 183, 0.3);\n    border: 1px solid rgba(180, 178, 183, 0.3);\n    border-radius: ${scrollbarSize};\n  }\n  \n  ::-webkit-scrollbar-thumb {\n    cursor: pointer;\n    background: rgba(0, 0, 0, 0.3);\n    border: 1px solid rgba(180, 178, 183, 0.3);\n    border-radius: ${scrollbarSize};\n  }\n  \n  ::-webkit-scrollbar-thumb:hover {\n    background: rgba(0, 0, 0, 0.5);\n    border-color: rgba(180, 178, 183, 0.5);\n  }\n  \n  ::-webkit-scrollbar-corner {\n    background-color: transparent;\n  }\n\n  body {\n    font-family: ${fontFamily};\n\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  \n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Old versions of Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none; /* Non-prefixed version, currently supported by Chrome, Opera and Firefox */\n  }\n  \n  body:before {\n    margin: 0;\n    content: \"\";\n    display: block;\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -10;\n    /* background: linear-gradient(white, lightGrey) no-repeat center center; */\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n  }\n  \n`;\n","import styled from \"styled-components\";\n\nimport { FONT_SIZES, CSS } from \"styles\";\n\nexport const SeventyFivePercentSpan = styled.span`\n  font-size: 75%;\n`;\n\nexport const H1 = styled.h1`\n  ${CSS.ZERO_MARGIN_AND_PADDING}\n  font-size: ${FONT_SIZES.XxL};\n`;\n\nexport const H2 = styled.h2`\n  ${CSS.ZERO_MARGIN_AND_PADDING}\n  font-size: ${FONT_SIZES.XL};\n`;\n\nexport const H3 = styled.h3`\n  ${CSS.ZERO_MARGIN_AND_PADDING}\n  font-size: ${FONT_SIZES.L};\n`;\n","import styled from \"styled-components\";\n\nimport { FlexRow } from \"primitives\";\n\nexport const CentredOnPhone = styled(FlexRow)`\n  @media (max-width: ${props => props.theme.breakpoints.phone.maxWidth}) {\n    justify-content: center;\n    text-align: center;\n  }\n`;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { FlexLiGrow } from \"primitives\";\n\ninterface ICountedListItemPastCount extends IThemeProp {\n  leaderboard?: boolean;\n}\nconst CountedListItemPastCount = styled.span`\n  ${({\n    leaderboard,\n    theme: {\n      countedList: {\n        count: { width },\n        leaderboardAdditonalHorizontalSpace\n      }\n    }\n  }: ICountedListItemPastCount) => css`\n    font-weight: bold;\n    text-align: right;\n    width: ${width};\n    margin-left: ${leaderboard ? leaderboardAdditonalHorizontalSpace : 0};\n  `}\n`;\n\nconst CountedListItemFutureCount = styled(CountedListItemPastCount)`\n  opacity: ${(props: IThemeProp) => props.theme.fadedOpacity};\n`;\n\ninterface CountedListItemTextProps extends IThemeProp {\n  favourite?: boolean;\n  star?: boolean;\n  faded: boolean;\n}\n\nconst CountedListItemText = styled.span`\n  ${(props: CountedListItemTextProps) =>\n    props.favourite &&\n    css`\n      ::before {\n        content: \"♥ \";\n      }\n    `}\n\n  ${(props: CountedListItemTextProps) =>\n    props.star &&\n    css`\n      ::before {\n        content: \"★ \";\n      }\n    `}\n\n  flex: 1;\n  ${(props: CountedListItemTextProps) =>\n    props.faded && `opacity: ${props.theme.fadedOpacity};`}\n`;\n\nexport const CountedListItem: React.FC<ICountedListItem> = ({\n  text,\n  favourite,\n  star,\n  futureCount,\n  pastCount,\n  ignoreCountInfo,\n  leaderboard = false\n}) => {\n  const showFutureCount: boolean =\n    futureCount > 0 && (pastCount > 0 || leaderboard);\n  const showPastCount: boolean =\n    (leaderboard && pastCount > 0) ||\n    pastCount > 1 ||\n    (futureCount > 0 && pastCount > 0);\n\n  return (\n    <FlexLiGrow>\n      <CountedListItemText\n        faded={!ignoreCountInfo && pastCount === 0}\n        favourite={favourite}\n        star={star}\n      >\n        {text}\n      </CountedListItemText>\n\n      {!ignoreCountInfo && showFutureCount && (\n        <CountedListItemFutureCount>{futureCount}</CountedListItemFutureCount>\n      )}\n\n      {!ignoreCountInfo && showPastCount && (\n        <CountedListItemPastCount leaderboard={leaderboard}>\n          {pastCount}\n        </CountedListItemPastCount>\n      )}\n    </FlexLiGrow>\n  );\n};\n","export const ACTORS: IActors = {\n  // A\n  ADAM_JAMES: { name: \"Adam James\" },\n  ADI_CHUGH: { name: \"Adi Chugh\" },\n  AIMEE_LOU_WOOD: { name: \"Aimee Lou Wood\" },\n  // B\n  BENJAMIN_ALUWIHARE: { name: \"Benjamin Aluwihare\" },\n  // C\n  CLAIRE_FOY: { name: \"Claire Foy\", favourite: true },\n  //\n  DAVID_MOORST: { name: \"David Moorst\" },\n  // G\n  GWENDOLINE_CHRISITE: { name: \"Gwendoline Christie\" },\n  // H\n  HAMMED_ANIMASHAUN: { name: \"Hammed Animashaun\" },\n  HATTY_JONES: { name: \"Hatty Jones\" },\n  // J\n  JASON_WATKINS: { name: \"Jason Watkins\" },\n  JOHN_MCCREA: { name: \"John McCrea\" },\n  // K\n  KATHERINE_PARKINSON: { name: \"Katherine Parkinson\", favourite: true },\n  // L\n  LAURIE_KYNASTON: { name: \"Laurie Kynaston\", favourite: true },\n  LEE_INGLEBY: { name: \"Lee Ingleby\" },\n  // M\n  MATT_SMITH: { name: \"Matt Smith\" },\n  MILLY_THOMAS: { name: \"Milly Thomas\" },\n  // N\n  NINA_SOSANYA: { name: \"Nina Sosanya\" },\n  // O\n  OLIVER_CHRIS: { name: \"Oliver Chris\" },\n  // P\n  PETER_MCPHERSON: { name: \"Peter McPherson\" },\n  // S\n  SARA_BAREILLES: { name: \"Sara Bareilles\" },\n  SIAN_CLIFFORD: { name: \"Sian Clifford\", favourite: true },\n  SURANNE_JONES: { name: \"Suranne Jones\", favourite: true },\n  // T\n  TIMOTHEE_CHALAMET: { name: \"Timothée Chalamet\", favourite: true }\n};\n","import { COLORS } from \"styles\";\n\ninterface IDiets {\n  VEGAN: IRecipeDiet;\n  VEGETARIAN: IRecipeDiet;\n}\n\nexport const DIETS: IDiets = {\n  VEGAN: { abbreviation: \"Ve\", color: COLORS.darkGreen },\n  VEGETARIAN: { abbreviation: \"V\", color: COLORS.green }\n};\n","export const FESTIVALS: IFestivals = {\n  // A\n  AREA_10_NYE: { name: \"Area 10 NYE\" },\n  // B\n  BESTIVAL: { name: \"Bestival\", festival: true },\n  BRIGHTON_PRIDE: { name: \"Brighton Pride\", festival: true },\n  // C\n  CHINGFEST: { name: \"Chingfest\" },\n  // D\n  DECAYDANCE: { name: \"Decaydance\", festival: true },\n  DEFECTED_BRISTOL: { name: \"Defected In the House Day & Night Party\" },\n  // F\n  FABRIC_NYE: { name: \"Fabric NYE\" },\n  // G\n  GLASTONBURY: { name: \"Glastonbury\", festival: true, favourite: true },\n  // H\n  HOMOBLOC: { name: \"Homobloc\", festival: true },\n  // K\n  KALEIDOSCOPE: { name: \"Kaleidoscope\", festival: true },\n  // L\n  LOVEBOX: { name: \"Lovebox\", festival: true },\n  // M\n  MAD_COOL: { name: \"Mad Cool\", festival: true },\n  MANCHESTER_PRIDE: { name: \"Manchester Pride\", festival: true },\n  MIGHTY_HOOPLA: { name: \"Mighty Hoopla\", festival: true },\n  // N\n  NOTION_SUMMER_PARTY: { name: \"Notion Summer Party\" },\n  // O\n  ON_THE_RUN_II: { name: \"On the Run II\" },\n  // P\n  PARKLIFE: { name: \"Parklife\", festival: true },\n  // T\n  TRANSMISSION: { name: \"Transmission\", festival: true },\n  TRIBAL_SESSIONS: { name: \"Tribal Sessions\" },\n  // V\n  V_FESTIVAL: { name: \"V Festival\", festival: true },\n  // W\n  WAREHOUSE_PROJECT: {\n    name: \"Warehouse Project\",\n    festival: true,\n    favourite: true\n  }\n};\n","type IFRIENDS = { [name: string]: IFriend };\n\nconst GROUPS: IFRIENDS = {\n  CFS: { name: \"Colonel Frank Seely\", initials: \"CFS\" },\n  JHC: { name: \"JHC\", initials: \"JHC\" }\n};\n\nexport const FRIENDS: IFRIENDS = {\n  ...GROUPS,\n  // A\n  AISHA: { name: \"Aisha Saeed\", initials: \"AS\" },\n  ALEX_FAYE: { name: \"Alex-Faye Grundy\", initials: \"AG\" },\n  ALICE_R: { name: \"Alice Roder\", initials: \"AR\" },\n  AMY_B: { name: \"Amy Bagni\", initials: \"AB\" },\n  AMY_C: { name: \"Amy Calcutt\", initials: \"AC\" },\n  ANNIE_B: { name: \"Annie Butcher\", initials: \"AB\" },\n  ASH: { name: \"Ash Moreton\", initials: \"AM\" },\n  // B\n  BECKY: { name: \"Becky Mills\", initials: \"BM\" },\n  BETH_O: { name: \"Beth Oakes\", initials: \"BO\" },\n  BETH_SH: { name: \"Beth Shears\", initials: \"BS\" },\n  BETH_SP: { name: \"Beth Speller\", initials: \"BS\" },\n  BLAINE: { name: \"Blaine Pearson\", initials: \"BP\" },\n  // C\n  CAITY: { name: \"Caity Dalby\", initials: \"CD\" },\n  CAITLIN: { name: \"Caitlin McCaig\", initials: \"CM\", gigs: true, travel: true },\n  CARMEN: { name: \"Carmen Dalglish\", initials: \"CD\", travel: true },\n  CAMERON: { name: \"Cameron Blackburn\", initials: \"CB\" },\n  CHELSEA: { name: \"Chelsea Cunningham\", initials: \"CC\" },\n  CHLOE: { name: \"Chloé White\", initials: \"CW\" },\n  CHRISTELLE: { name: \"Christelle Mutunda\", initials: \"CM\" },\n  COBY_B: { name: \"Coby Blackburn\", initials: \"CB\" },\n  COURTNEY: { name: \"Courtney Lawson\", initials: \"CL\" },\n  // D\n  DAD: { name: \"Dad\", initials: \"D\", gigs: true, theatre: true, travel: true },\n  DARREN: { name: \"Darren Taylor\", initials: \"DT\", gigs: true, theatre: true },\n  DAN: {\n    name: \"Dan Sparrow\",\n    initials: \"DS\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  DOM: { name: \"Dominic Coyne\", initials: \"DC\", theatre: true },\n  // E\n  ELLE_O: { name: \"Elle Oldroyd\", initials: \"EO\" },\n  ELINORE_G: { name: \"Elinore Gillespie\", initials: \"EG\" },\n  ELISE: { name: \"Elise Morley\", initials: \"EM\" },\n  ELLIE_F: { name: \"Ellie Forman\", initials: \"EF\" },\n  ELLIE_G: { name: \"Ellie Gurkin\", initials: \"EG\", travel: true },\n  ELLIE_P: { name: \"Ellie Pearce\", initials: \"EP\" },\n  ELLIE_S: { name: \"Ellie Spanovic\", initials: \"ES\" },\n  EMMA: {\n    name: \"Emma Codrington\",\n    initials: \"EC\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  // F\n  FANNY: { name: \"Fanny Lindqvist\", initials: \"FL\" },\n  // G\n  GEMMA: { name: \"Gemma Gilderthorp\", initials: \"GG\" },\n  GEORGE: { name: \"George Littlehales\", initials: \"GL\" },\n  GRACE: { name: \"Grace Hulme\", initials: \"GH\", travel: true },\n  // H\n  HANNA: { name: \"Hanna Frogner\", initials: \"HF\" },\n  HARRIET_B: { name: \"Harriet Boyle\", initials: \"HB\" },\n  HARRIET_K: { name: \"Harriet Kesterton\", initials: \"HK\" },\n  HEATHER_C: { name: \"Heather Chiles\", initials: \"HC\" },\n  // J\n  JAIMINI: { name: \"Jaimini Popat\", initials: \"JP\" },\n  JAMIE: {\n    name: \"Jamie Halket\",\n    initials: \"JH\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  JAZZ: { name: \"Jasminder Thind\", initials: \"JT\" },\n  JERRY: { name: \"Jerry Edwards\", initials: \"JE\", gigs: true, theatre: true },\n  JOE: { name: \"Joe Edwards\", initials: \"JE\", theatre: true },\n  JESS: { name: \"Jess Smith\", initials: \"JS\" },\n  JUNAID: { name: \"Junaid Khan\", initials: \"JK\" },\n  // K\n  KATE_B: { name: \"Kate Bowmar\", initials: \"KB\" },\n  KIERAN_S: { name: \"Kieran Sawford\", initials: \"KS\" },\n  KIRSTEN: { name: \"Kirsten Jackson\", initials: \"KJ\" },\n  KYLE: { name: \"Kyle Hough\", initials: \"KH\" },\n  // L\n  LAURA: { name: \"Laura Capece-Galeota\", initials: \"LC\" },\n  LEAH: { name: \"Leah Slater-Radway\", initials: \"LS\" },\n  LEWIS: { name: \"Lewis Steadman\", initials: \"LS\", gigs: true, theatre: true },\n  LINDSAY_A: { name: \"Lindsay Aspinall\", initials: \"LA\" },\n  LINDSEY_S: { name: \"Lindsey Skelton\", initials: \"LS\" },\n  LOUISE: { name: \"Louise Blackburn\", initials: \"LB\" },\n  LUKE_J: { name: \"Luke Jones\", initials: \"LJ\" },\n  LUKE_S: { name: \"Luke Stern\", initials: \"LS\" },\n  // M\n  MARIA: { name: \"Maria Taylor\", initials: \"MT\", theatre: true },\n  MEGAN: { name: \"Megan Blackburn\", initials: \"MB\", gigs: true },\n  MUM: { name: \"Mum\", initials: \"M\", gigs: true, theatre: true, travel: true },\n  // N\n  NATALIE: { name: \"Natalie Lambert\", initials: \"NL\" },\n  NAV: { name: \"Navneet Bhogal\", initials: \"NB\" },\n  // O\n  OSCAR: { name: \"Oscar Murray\", initials: \"OM\" },\n  // P\n  PATRICIA: { name: \"Patricia Diaconescu\", initials: \"PD\" },\n  POOJA: { name: \"Pooja Dhir\", initials: \"PD\", travel: true },\n  POPPY: { name: \"Poppy Smith\", initials: \"PS\", gigs: true },\n  // R\n  ROB_G: { name: \"Robert Gall\", initials: \"RG\" },\n  RYAN: { name: \"Ryan Mills\", initials: \"RM\", gigs: true, travel: true },\n  // S\n  SAM_B: { name: \"Sam Berrie\", initials: \"SB\" },\n  SARAH_WA: { name: \"Sarah Walker\", initials: \"SW\" },\n  SARAH_W: { name: \"Sarah Whitaker\", initials: \"SW\" },\n  SIAN: {\n    name: \"Sian Rodway-Smith\",\n    initials: \"SR\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  SIMAN: { name: \"Siman Pone\", initials: \"SP\" },\n  SONYA: { name: \"Sonya Pardi\", initials: \"SP\", gigs: true },\n  STEVE_R: { name: \"Steve Richards\", initials: \"SR\" },\n  // T\n  THOM: { name: \"Thom Stephanakis\", initials: \"TS\" },\n  TOM: { name: \"Tom Chinda-Coutts\", initials: \"TC\", gigs: true, travel: true },\n  TONYA: { name: \"Tonya France\", initials: \"TF\", gigs: true, travel: true }\n};\n","const KEY_WEST = { name: \"Key West\" };\n\nexport const LOCATIONS: IAllCountries = {\n  // B\n  BARBADOS: {\n    name: \"Barbados\",\n    island: true,\n    attractions: { HARRISONS_CAVE: { name: \"Harrison's Cave\" } }\n  },\n  BELGIUM: {\n    name: \"Belgium\",\n    cities: { BRUGES: { name: \"Bruges\" }, YPRES: { name: \"Ypres\" } },\n    attractions: {\n      BATTLEFIELDS: { name: \"Battlefields\" },\n      BELFRY_OF_BRUGES: { name: \"Belfry of Bruges\" }\n    }\n  },\n  // BELIZE: {\n  //   name: \"Belize\",\n  //   cities: {\n  //     BELIZE_CITY: { name: \"Belize City\" },\n  //     capital: true\n  //   },\n  //   islands: {\n  //     AMBERGRIS_CAYE: { name: \"Ambergris Caye\" },\n  //     CAYE_CAULKER: { name: \"Caye Caulker\" }\n  //   },\n  //   attractions: {\n  //     BARRIER_REEF: { name: \"Belize Barrier Reef\", highlight: true }\n  //   }\n  // },\n  BRAZIL: {\n    name: \"Brazil\",\n    cities: { RIO_DE_JANEIRO: { name: \"Rio de Janeiro\" } },\n    attractions: {\n      MODERN_ART_MUSEUM_RIO: {\n        name: \"Modern Art Museum Rio\",\n        foreignName: \"Museu de Arte Moderna do Rio de Janeiro\"\n      },\n      COPACABANA_BEACH: { name: \"Copacabana Beach\" },\n      ROCINHA_FAVELA: { name: \"Rocinha Favela\" },\n      CHRIST_THE_REDEEMER: { name: \"Cristo Redentor\" },\n      SELARON_STEPS: {\n        name: \"Selarón Steps\",\n        foreignName: \"Escadaria Selarón\"\n      },\n      HANG_GLIDING: { name: \"São Conrado Hang-Gliding\", highlight: true },\n      PICO_DO_PAPAGAIO: {\n        name: \"Pico do Papagaio\",\n        englishName: \"Parrot's Peak\",\n        foreignName: \"Pico do Papagaio\",\n        highlight: true\n      }\n    },\n    islands: { ILHA_GRANDE: { name: \"Ilha Grande\" } }\n  },\n  // C\n  CANADA: {\n    name: \"Canada\",\n    cities: { NIAGARA_FALLS: { name: \"Niagara Falls\" } },\n    attractions: { NIAGARA_FALLS: { name: \"Niagara Falls\", highlight: true } }\n  },\n  // COSTA_RICA: {\n  //   name: \"Costa Rica\",\n  //   cities: {\n  //     SAN_JOSE: { name: \"San Jose\", capital: true }\n  //   },\n  //   towns: {\n  //     MONTEVERDE: { name: \"Monteverde\" },\n  //     PUERTO_VIEJO: { name: \"Puerto Viejo\" }\n  //   },\n  //   attractions: {\n  //     CORCOVADO: { name: \"Corcovado National Park\", highlight: true },\n  //     JAGUAR_RESCUE_CENTER: { name: \"Jaguar Rescue Center\" }\n  //   }\n  // },\n  CROATIA: {\n    name: \"Croatia\",\n    cities: { DUBROVNIK: { name: \"Dubrovnik\" } },\n    attractions: {\n      DUBROVNIK_CABLE_CAR: { name: \"Dubrovnik Cable Car\" },\n      DUBROVNIK_WALLS: { name: \"Walls of Dubrovnik\", highlight: true }\n    }\n  },\n  CUBA: {\n    name: \"Cuba\",\n    island: true,\n    cities: { HAVANA: { name: \"Havana\", capital: true } },\n    towns: { VARADERO: { name: \"Varadero\" } }\n  },\n  CYPRUS: {\n    name: \"Cyprus\",\n    cities: { PAPHOS: { name: \"Paphos\" } },\n    attractions: {\n      PAPHOS_ARCHAEOLOGICAL_PARK: { name: \"Paphos Archaeological Park\" }\n    }\n  },\n  CZECH_REPUBLIC: {\n    name: \"Czech Republic\",\n    cities: { PRAGUE: { name: \"Prague\", capital: true } },\n    attractions: {\n      JOHN_LENNON_WALL: { name: \"John Lennon Wall\" },\n      VYSEHRAD: { name: \"Vyšehrad\" }\n    }\n  },\n  // D\n  DENMARK: {\n    name: \"Denmark\",\n    cities: { COPENHAGEN: { name: \"Copenhagen\" } },\n    attractions: {\n      LOUISIANA_ART_MUSEUM: { name: \"Louisiana Museum of Modern Art\" }\n    }\n  },\n  // E\n  ECUADOR: {\n    name: \"Ecuador\",\n    cities: {\n      BANOS: { name: \"Baños\" },\n      GUAYAQUIL: { name: \"Guayaquil\" },\n      OTAVALO: { name: \"Otavalo\" },\n      QUITO: { name: \"Quito\", capital: true }\n    },\n    attractions: {\n      EQUATOR_MONUMENT: {\n        name: \"Equator Monument\",\n        foreignName: \"Ciudad Mitad del Mundo\"\n      },\n      OTAVALO_MARKET: { name: \"Otavalo Market\" },\n      TORTOISE_PARK: {\n        name: \"Giant Tortoise Reserve\",\n        foreignName: \"Reserva el Chato\"\n      },\n      PAILON_DEL_DIABLO: { name: \"Pailon del Diablo\", highlight: true },\n      COTOPAXI: { name: \"Cotopaxi Volcano\", highlight: true }\n    },\n    islands: { GALAPAGOS: { name: \"Galápagos Islands\" } }\n  },\n  EGYPT: {\n    name: \"Egypt\",\n    cities: {\n      CAIRO: { name: \"Cairo\", capital: true },\n      SHARM_EL_SHEIKH: { name: \"Sharm El Sheikh\" }\n    },\n    attractions: {\n      GIZA_PYRAMIDS_SPHINX: {\n        name: \"Giza Pyramids & Great Sphinx\",\n        highlight: true\n      }\n    }\n  },\n  // F\n  FRANCE: {\n    name: \"France\",\n    cities: {\n      MONACO: { name: \"Monaco\" },\n      NICE: { name: \"Nice\" },\n      PARIS: { name: \"Paris\", capital: true }\n    },\n    attractions: {\n      SACRE_COEUR: { name: \"Sacré-Cœur\" },\n      LOUVRE: { name: \"Louvre\" },\n      ARC_DE_TRIOMPHE: { name: \"Arc de Triomphe\" },\n      AIR_SPACE_MUSEUM: { name: \"National Air and Space Museum of France\" },\n      SCIENCE_MUSEUM: { name: \"Paris Science Museum\" },\n      EIFFEL_TOWER: { name: \"Eiffel Tower\" },\n      NOTRE_DAME: { name: \"Notre-Dame de Paris\" },\n      DISNEYLAND_PARIS: { name: \"Disneyland Paris\", themePark: true },\n      PARC_ASTERIX: { name: \"Parc Astérix\", themePark: true }\n    }\n  },\n  // G\n  GERMANY: {\n    name: \"Germany\",\n    cities: { BERLIN: { name: \"Berlin\", capital: true } },\n    attractions: {\n      REICHSTAG: { name: \"Reichstag Building\" },\n      HOLOCAUST_MEMORIAL: { name: \"Holocaust Memorial\" },\n      BRANDENBURG_GATE: { name: \"Brandenburg Gate\" },\n      BERLIN_WALL: { name: \"Berlin Wall\" },\n      EAST_SIDE_GALLERY: { name: \"East Side Gallery\" }\n    }\n  },\n  GREECE: {\n    name: \"Greece\",\n    islands: { KOS: { name: \"Kos\" } },\n    regions: { HALKIDIKI: { name: \"Halkidiki\" } }\n  },\n  // H\n  HUNGARY: {\n    name: \"Hungary\",\n    cities: { BUDAPEST: { name: \"Budapest\", capital: true } },\n    attractions: {\n      PARLIAMENT_BUILDING: { name: \"Hungarian Parliament Building\" },\n      THERMAL_BATH_SZECHENYI: { name: \"Széchenyi Thermal Bath\" },\n      CITADELLA: { name: \"Citadella\" }\n    }\n  },\n  // I\n  IRELAND: {\n    name: \"Ireland\",\n    attractions: {\n      ST_STEPHENS_GREEN_PARK: { name: \"St. Stephen's Green Park\" },\n      DUBLIN_PRISON: { name: \"Kilmainham Gaol\" },\n      GUINNESS_STOREHOUSE: { name: \"Guinness Storehouse\" }\n    },\n    cities: { DUBLIN: { name: \"Dublin\", capital: true } }\n  },\n  ITALY: {\n    name: \"Italy\",\n    regions: {\n      SICILY: { name: \"Sicily\" }\n    },\n    cities: {\n      NAPLES: { name: \"Naples\" },\n      MILAN: { name: \"Milan\" },\n      ROME: { name: \"Rome\", capital: true },\n      VATICAN: { name: \"Vatican City\" },\n      CATANIA: { name: \"Catania\" },\n      VENICE: { name: \"Venice\" },\n      POMPEII: { name: \"Pompeii\" }\n    },\n    towns: { JESOLO: { name: \"Jesolo\" }, SORRENTO: { name: \"Sorrento\" } },\n    attractions: {\n      ARCO_DELLA_PACE: { name: \"Arco della Pace\" },\n      SEMPIONE_PARK: { name: \"Sempione Park\" },\n      MILAN_MALL: { name: \"Galleria Vittorio Emanuele II\" },\n      COLOSSEUM: { name: \"Colosseum\" },\n      TREVI_FOUNTAIN: { name: \"Trevi Fountain\" },\n      VESUVIUS: { name: \"Mount Vesuvius\" },\n      ETNA: { name: \"Mount Etna\" }\n    }\n  },\n  // L\n  LAOS: {\n    name: \"Laos\",\n    cities: {\n      LUANG_PRABANG: { name: \"Luang Prabang\" },\n      VIENTIANE: { name: \"Vientiane\", capital: true }\n    },\n    attractions: {\n      KUANG_SI_FALLS: { name: \"Kuang Si Falls\", highlight: true },\n      ELEPHANT_VILLAGE: { name: \"Elephant Village\" },\n      BUDDHA_PARK: { name: \"Buddha Park\" }\n    }\n  },\n  // N\n  NETHERLANDS: {\n    name: \"Netherlands\",\n    cities: {\n      AMSTERDAM: { name: \"Amsterdam\", capital: true },\n      GRONINGEN: { name: \"Groningen\" }\n    },\n    attractions: {\n      STEDELIJK_MUSEUM: { name: \"Stedelijk Museum Amsterdam\" },\n      SEX_MUSEUM: { name: \"Venustempel Sex Museum\" },\n      GRONINGEN_MUSEUM: { name: \"Groninger Museum\" }\n    }\n  },\n  NORWAY: {\n    name: \"Norway\",\n    cities: { OSLO: { name: \"Oslo\", capital: true } },\n    islands: { HOVEDOYA: { name: \"Hovedøya\" } }\n  },\n  // P\n  PERU: {\n    name: \"Peru\",\n    cities: {\n      AREQUIPA: { name: \"Arequipa\" },\n      CUSCO: { name: \"Cusco\" },\n      LIMA: { name: \"Lima\", capital: true },\n      HUARAZ: { name: \"Huaraz\" }\n    },\n    attractions: {\n      COLCA_CANYON: { name: \"Colca Canyon\" },\n      LAGUNA_69: { name: \"Laguna 69\", highlight: true },\n      JUNGLE_ZIPLINE: {\n        name: \"Santa Teresa Vertikal Zipline\",\n        highlight: true\n      },\n      MACHU_PICCHU: { name: \"Machu Picchu\", highlight: true },\n      HUACACHINA: { name: \"Huacachina Sand Dunes\", highlight: true },\n      HUASCARAN_PARK: { name: \"Huascaran National Park\" },\n      MANU: { name: \"Manú National Park\" },\n      RAINBOW_MOUNTAIN: { name: \"Rainbow Mountain\", highlight: true }\n    },\n    towns: { MANCORA: { name: \"Mancora\" }, PARACAS: { name: \"Paracas\" } },\n    villages: { HUACACHINA: { name: \"Huacachina\" } }\n  },\n  POLAND: {\n    name: \"Poland\",\n    cities: { KRAKOW: { name: \"Kraków\" } },\n    attractions: {\n      AUSCHWITZ_BIRKENAU: { name: \"Auschwitz-Birkenau\", highlight: true },\n      WIELICZKA_SALT_MINE: { name: \"Wieliczka Salt Mine\" }\n    },\n    towns: { WIELICZKA: { name: \"Wieliczka\" } }\n  },\n  PORTUGAL: {\n    name: \"Portugal\",\n    cities: {\n      LISBON: { name: \"Lisbon\", capital: true },\n      PORTIMAO: { name: \"Portimão\" }\n    },\n    attractions: {\n      ZOOMARINE: { name: \"Zoomarine Algarve\" },\n      OCENARIO_DE_LISBOA: {\n        name: \"Lisbon Oceanarium\",\n        foreignName: \"Oceanário de Lisboa\"\n      }\n    },\n    towns: {\n      FERRAGUDO: { name: \"Ferragudo\" },\n      TAVIRA: { name: \"Tavira\" },\n      VILAMOURA: { name: \"Vilamoura\" }\n    }\n  },\n  // S\n  SPAIN: {\n    name: \"Spain\",\n    cities: {\n      BARCELONA: { name: \"Barcelona\" },\n      MADRID: { name: \"Madrid\", capital: true }\n    },\n    attractions: {\n      CIUTADELLA_PARK: { name: \"Ciutadella Park\" },\n      PARK_GUELL: { name: \"Park Güell\", highlight: true },\n      PARQUE_WARNER: { name: \"Parque Warner Madrid\", themePark: true },\n      SIAM_PARK: { name: \"Siam Park\", themePark: true },\n      PORTAVENTURA: { name: \"PortAventura\", themePark: true }\n    },\n    islands: {\n      TENERIFE: { name: \"Tenerife\" },\n      IBIZA: { name: \"Ibiza\" },\n      MINORCA: { name: \"Minorca\" },\n      LANZAROTE: { name: \"Lanzarote\" }\n    }\n  },\n  // T\n  THAILAND: {\n    name: \"Thailand\",\n    cities: {\n      BANGKOK: { name: \"Bangkok\", capital: true },\n      CHIANG_MAI: { name: \"Chiang Mai\" },\n      CHIANG_RAI: { name: \"Chiang Rai\" }\n    },\n    islands: {\n      KOH_PHI_PHI: { name: \"Koh Phi Phi\" },\n      KOH_PHANGAN: { name: \"Koh Phangan\" },\n      KOH_TAO: { name: \"Koh Tao\" }\n    },\n    attractions: {\n      WHITE_TEMPLE: { name: \"Wat Rong Khun\" },\n      MAYA_BAY: { name: \"Maya Bay\" },\n      PAI_CANYON: { name: \"Pai Canyon\", highlight: true },\n      TIGER_KINGDOM: { name: \"Tiger Kingdom\" },\n      GRAND_PALACE: { name: \"Grand Palace Bangkok\", highlight: true },\n      SKY_BAR: { name: \"Sky Bar Bangkok\" }\n    },\n    towns: { KRABI: { name: \"Krabi\" }, PAI: { name: \"Pai\" } }\n  },\n  // U\n  UGANDA: {\n    name: \"Uganda\",\n    cities: { JINJA: { name: \"Jinja\" } },\n    attractions: {\n      RAFTING_NALUBALE: {\n        name: \"River Nile Nalubale Rafting\",\n        highlight: true\n      },\n      NILE_SOURCE: { name: \"Source of the Nile\" }\n    }\n  },\n  UAE: {\n    name: \"United Arab Emirates\",\n    cities: { DUBAI: { name: \"Dubai\" } },\n    attractions: {\n      AQUAVENTURE: { name: \"Aquaventure Waterpark\", themePark: true },\n      BURJ_KHALIFA: { name: \"Burj Khalifa\" }\n    }\n  },\n  UK: {\n    name: \"United Kingdom\",\n    insignificant: true,\n    attractions: {\n      ALTON_TOWERS: {\n        name: \"Alton Towers\",\n        insignificant: true,\n        themePark: true\n      },\n      BLACKPOOL_PLEASURE_BEACH: {\n        name: \"Blackpool Pleasure Beach\",\n        insignificant: true,\n        themePark: true\n      },\n      WINTER_WONDERLAND: {\n        name: \"Winter Wonderland\",\n        insignificant: true,\n        themePark: true\n      },\n      THORPE_PARK: {\n        name: \"Thorpe Park\",\n        insignificant: true,\n        themePark: true\n      },\n      EDEN_PROJECT: { name: \"Eden Project\", insignificant: true },\n      TATE_BRITAIN: { name: \"Tate Britain\", insignificant: true },\n      LONDON_EYE: { name: \"London Eye\", insignificant: true },\n      RICHMOND_PARK: { name: \"Richmond Park\", insignificant: true },\n      SHERWOOD_FOREST: { name: \"Sherwood Forest\", insignificant: true },\n      CALKE_ABBEY: { name: \"Calke Abbey\", insignificant: true },\n      BATTERSEA_PARK: { name: \"Battersea Park\", insignificant: true },\n      CRYSTAL_PALACE_PARK: { name: \"Crystal Palace Park\", insignificant: true },\n      QUEEN_ELIZABETH_OLYMPIC_PARK: {\n        name: \"Queen Elizabeth Olympic Park\",\n        insignificant: true\n      },\n      VICTORIA_PARK: { name: \"Victoria Park\", insignificant: true },\n      GREENWICH_PARK: { name: \"Greenwich Park\", insignificant: true },\n      KEW_GARDENS: { name: \"Kew Gardens\", insignificant: true },\n      EPPING_FOREST: { name: \"Epping Forest\", insignificant: true },\n      HAMPSTEAD_HEATH: { name: \"Hampstead Heath\", insignificant: true },\n      V_A_MUSEUM: {\n        name: \"Victoria and Albert Museum\",\n        insignificant: true\n      },\n      SCIENCE_MUSEUM: { name: \"Science Museum\", insignificant: true },\n      TATE_MODERN: { name: \"Tate Modern\", insignificant: true },\n      NATURAL_HISTORY_MUSEUM: {\n        name: \"Natural History Museum London\",\n        insignificant: true\n      },\n      LAKE_DISTRICT: { name: \"Lake District\" },\n      HADRIANS_WALL: { name: \"Hadrian's Wall\", insignificant: true }\n    },\n    islands: {\n      ANGLESEY: { name: \"Anglesey\", insignificant: true }\n    },\n    cities: {\n      BATH: { name: \"Bath\", insignificant: true },\n      BLACKPOOL: { name: \"Blackpool\", insignificant: true },\n      BRIGHTON: { name: \"Brighton\", insignificant: true },\n      BRISTOL: { name: \"Bristol\", insignificant: true },\n      BIRMINGHAM: { name: \"Birmingham\", insignificant: true },\n      CAMBRIDGE: { name: \"Cambridge\", insignificant: true },\n      COVENTRY: { name: \"Coventry\", insignificant: true },\n      DERBY: { name: \"Derby\", insignificant: true },\n      HULL: { name: \"Hull\", insignificant: true },\n      LEEDS: { name: \"Leeds\", insignificant: true },\n      LEICESTER: { name: \"Leicester\", insignificant: true },\n      LINCOLN: { name: \"Lincoln\", insignificant: true },\n      LONDON: { name: \"London\", insignificant: true },\n      LIVERPOOL: { name: \"Liverpool\", insignificant: true },\n      MANCHESTER: { name: \"Manchester\", insignificant: true },\n      NEWCASTLE: { name: \"Newcastle\", insignificant: true },\n      NORWICH: { name: \"Norwich\", insignificant: true },\n      NOTTINGHAM: { name: \"Nottingham\", insignificant: true },\n      OXFORD: { name: \"Oxford\", insignificant: true },\n      SHEFFIELD: { name: \"Sheffield\", insignificant: true },\n      WOLVERHAMPTON: { name: \"Wolverhampton\", insignificant: true },\n      YORK: { name: \"York\", insignificant: true }\n    },\n    regions: { CORNWALL: { name: \"Cornwall\" } },\n    towns: {\n      DONCASTER: { name: \"Doncaster\", insignificant: true },\n      HARROGATE: { name: \"Harrogate\", insignificant: true },\n      ILKLEY: { name: \"Ilkley\", insignificant: true },\n      MILTON_KEYNES: { name: \"Milton Keynes\", insignificant: true },\n      STRATFORD: { name: \"Stratford-upon-Avon\", insignificant: true },\n      MANSFIELD: { name: \"Mansfield\", insignificant: true },\n      NEWARK: { name: \"Newark\", insignificant: true },\n      NEWQUAY: { name: \"Newquay\", insignificant: true },\n      PADSTOW: { name: \"Padstow\", insignificant: true },\n      TENBY: { name: \"Tenby\", insignificant: true },\n      SCARBOROUGH: { name: \"Scarborough\", insignificant: true }\n    }\n  },\n  USA: {\n    name: \"United States\",\n\n    attractions: {\n      ALCATRAZ_PRISON: {\n        name: \"Alcatraz Federal Penitentiary\",\n        highlight: true\n      },\n      FISHERMANS_WHARF: { name: \"Fisherman's Wharf\" },\n      FARMERS_MARKET: { name: \"Farmers Market\" },\n      HOLLYWOOD_WALK_OF_FAME: { name: \"Hollywood Walk of Fame\" },\n      WHITE_HOUSE: { name: \"White House\" },\n      CAPITOL_BUILDING: { name: \"Capitol Building\" },\n      WASHINGTON_MONUMENT: { name: \"Washington Monument\" },\n      LINCOLN_MEMORIAL: { name: \"Lincoln Memorial\" },\n      TIMES_SQUARE: { name: \"Times Square\" },\n      BROOKLYN_BRIDGE: { name: \"Brooklyn Bridge\" },\n      WORLD_TRADE_CENTER: { name: \"World Trade Center\" },\n      GOLDEN_GATE_BRIDGE: { name: \"Golden Gate Bridge\", highlight: true },\n      CENTRAL_PARK: { name: \"Central Park\", highlight: true },\n      // CLEARWATER_BEACH: { name: \"Clearwater Beach\" },\n      VENICE_BEACH: { name: \"Venice Beach\" },\n      DISNEYLAND_CALIFORNIA_ADVENTURE: {\n        name: \"Disneyland California Adventure\",\n        themePark: true\n      },\n      DISNEY_MGM_STUDIOS: { name: \"Disney-MGM Studios\", themePark: true },\n      DISNEY_ANIMAL_KINGDOM: {\n        name: \"Disney's Animal Kingdom\",\n        themePark: true\n      },\n      DISNEY_EPCOT: { name: \"Epcot\", themePark: true },\n      WET_N_WILD_ORLANDO: { name: \"Wet 'n Wild Orlando\", themePark: true },\n      BLIZZARD_BEACH: { name: \"Blizzard Beach Water Park\", themePark: true },\n      DISNEY_MAGIC_KINGDOM: { name: \"Magic Kingdom Park\", themePark: true },\n      UNIVERSAL_STUDIOS_FLORIDA: {\n        name: \"Universal Studios Florida\",\n        themePark: true\n      },\n      UNIVERSALS_ISLANDS_OF_ADVENTURE: {\n        name: \"Universal's Islands of Adventure\",\n        themePark: true\n      },\n      GRAND_CANYON: { name: \"Grand Canyon\", highlight: true },\n      KNOTTS_BERRY_FARM: { name: \"Knott's Berry Farm\", themePark: true },\n      SEAWORLD_ORLANDO: { name: \"SeaWorld Orlando\", themePark: true },\n      BUSCH_GARDENS_WILLIAMSBURG: {\n        name: \"Busch Gardens Williamsburg\",\n        themePark: true\n      },\n      BUSCH_GARDENS_TAMPA: { name: \"Busch Gardens Tampa\", themePark: true },\n      SIX_FLAGS_AMERICA: { name: \"Six Flags America\", themePark: true },\n      SIX_FLAGS_MAGIC_MOUNTAIN: {\n        name: \"Six Flags Magic Mountain\",\n        themePark: true\n      },\n      SIX_FLAGS_NEW_ENGLAND: { name: \"Six Flags New England\", themePark: true }\n    },\n    cities: {\n      BOSTON_MASSACHUSETTS: { name: \"Boston\" },\n      KEY_WEST,\n      LAS_VEGAS: { name: \"Las Vegas\" },\n      VIRGINIA_BEACH: { name: \"Virginia Beach\" },\n      LOS_ANGELES: { name: \"Los Angeles\" },\n      NEW_YORK_CITY: { name: \"New York City\" },\n      SAN_FRANCISCO: { name: \"San Francisco\" },\n      SPRINGFIELD_MASSACHUSETTS: { name: \"Springfield\" },\n      WASHINGTON_DC: { name: \"Washington DC\", capital: true }\n    },\n    islands: {\n      KEY_WEST,\n      ALCATRAZ: { name: \"Alcatraz\" },\n      MARTHAS_VINEYARD: { name: \"Martha's Vineyard\" }\n    },\n    regions: {\n      CAPE_COD: { name: \"Cape Cod\" },\n      FLORIDA_KEYS: { name: \"Florida Keys\" },\n      ISLAMORADA: { name: \"Islamorada\" }\n    },\n    states: {\n      FLORIDA: { name: \"Florida\" },\n      NEW_YORK: { name: \"New York\" },\n      MASSACHUSETTS: { name: \"Massachusetts\" },\n      VIRGINIA: { name: \"Virginia\" }\n    }\n  }\n};\n","const TABLESPOON: string = \"tbsp\";\n\nexport const SAINSBURYS_SEASONING_COST: IIngredientCost = {\n  quantity: 6,\n  measurement: TABLESPOON,\n  price: 1\n};\n\nexport const MEASUREMENTS: IMeasurements = {\n  // WEIGHT\n  GRAM: \"g\",\n  KILOGRAM: \"kg\",\n\n  // SPOONS\n  TEASPOON: \"tsp\",\n  TABLESPOON,\n\n  // CAPACITY\n  MILLILITRE: \"ml\",\n  LITRE: \"L\",\n\n  // LENGTH\n  CENTIMETRE: \"cm\",\n\n  // COLLOQUIAL\n  CAN: \"can\",\n  SPRIG: \"sprig\",\n  SLICE: \"slice\",\n  JAR: \"jar\",\n  PORTION: \"portion\",\n  SERVING: \"serving\",\n  CHUNK: \"chunk\",\n  SEGMENT: \"segment\",\n  PANCAKE: \"pancake\"\n};\n","export const MUSICIANS: IMusicians = {\n  // 123\n  \"1975\": { name: \"1975, The\" },\n  \"100_GECS\": { name: \"100 gecs\" },\n  // A\n  AURORA: { name: \"Aurora\" },\n  THE_ACADEMY_IS: { name: \"Academy Is..., The\" },\n  ALESSIA_CARA: { name: \"Alessia Cara\" },\n  ALEX_CHAPMAN: { name: \"Alex Chapman\" },\n  ALL_AMERICAN_REJECTS: { name: \"All-American Rejects, The\" },\n  ALLIE_X: { name: \"Allie X\" },\n  ALL_TIME_LOW: { name: \"All Time Low\" },\n  ALMA: { name: \"Alma\" },\n  AMOS_LEE: { name: \"Amos Lee\" },\n  ANNA_OF_THE_NORTH: { name: \"Anna of the North\" },\n  ADELE: { name: \"Adele\" },\n  ANASTACIA: { name: \"Anastacia\" },\n  ANNE_MARIE: { name: \"Anne-Marie\" },\n  AQUILO: { name: \"Aquilo\" },\n  ARCTIC_MONKEYS: { name: \"Arctic Monkeys\" },\n  ARIANA_GRANDA: { name: \"Ariana Grande\" },\n  AUDITION: { name: \"Audition, The\" },\n  // B\n  BAAUER: { name: \"Baauer\" },\n  BANANARAMA: { name: \"Bananarama\" },\n  BANKS: { name: \"Banks\" },\n  BASTILLE: { name: \"Bastille\" },\n  BAYNK: { name: \"BAYNK\" },\n  BEARS_DEN: { name: \"Bear's Den\" },\n  BECKY_HILL: { name: \"Becky Hill\" },\n  BEN_HOWARD: { name: \"Ben Howard\" },\n  BETSY: { name: \"Betsy\" },\n  BETTY_WHO: { name: \"Betty Who\" },\n  BEYONCE: { name: \"Beyoncé\" },\n  BICEP: { name: \"Bicep\" },\n  BILLIE_EILISH: { name: \"Billie Eilish\" },\n  BLACK_KIDS: { name: \"Black Kids\" },\n  B_O_B: { name: \"B.o.B\" },\n  BONDAX: { name: \"Bondax\" },\n  BON_IVER: { name: \"Bon Iver\" },\n  BONTAN: { name: \"Bontan\" },\n  BORNS: { name: \"BØRNS\" },\n  BOYS_LIKE_GIRLS: { name: \"Boys Like Girls\" },\n  BLONDE: { name: \"Blonde\" },\n  BREACH: { name: \"Breach\" },\n  BRIGITTE_APHRODITE: { name: \"Brigitte Aphrodite\" },\n  BRITNEY_SPEARS: { name: \"Britney Spears\" },\n  BROODS: { name: \"Broods\" },\n  BULOW: { name: \"bülow\" },\n  // C\n  CAMILA_CABELLO: { name: \"Camila Cabello\" },\n  CARIBOU: { name: \"Caribou\" },\n  CARLY_RAE_JEPSEN: { name: \"Carly Rae Jepsen\" },\n  CARL_COX: { name: \"Carl Cox\" },\n  CAROLINE_POLACHEK: { name: \"Caroline Polachek\" },\n  CELESTE: { name: \"Celeste\" },\n  CHARLI_ADAMS: { name: \"Charli Adams\" },\n  CHARLI_XCX: { name: \"Charli XCX\" },\n  CHARLOTTE_CHURCH: { name: \"Charlotte Church\" },\n  CHELSEA_CUTLER: { name: \"Chelsea Cutler\" },\n  CHEMICAL_BROTHERS: { name: \"Chemical Brothers, The\" },\n  CHERYL: { name: \"Cheryl\" },\n  CHLOE_X_HALLE: { name: \"Chloe x Halle\" },\n  CHRISTINE_AND_THE_QUEENS: { name: \"Christine and the Queens\" },\n  CHRVCHES: { name: \"CHVRCHES\" },\n  CLAIRO: { name: \"Clairo\" },\n  CLEAN_BANDIT: { name: \"Clean Bandit\" },\n  COBRA_STARSHIP: { name: \"Cobra Starship\" },\n  CODE: { name: \"Code, The\" },\n  CRUEL_YOUTH: { name: \"Cruel Youth\", favourite: true },\n  CUTE_IS_WHAT_WE_AIM_FOR: { name: \"Cute Is What We Aim for\" },\n  CYRIL_HAHN: { name: \"Cyril Hahn\" },\n  // D\n  DANIEL_AVERY: { name: \"Daniel Avery\" },\n  DAUGHTER: { name: \"Daughter\" },\n  DAVID_RODIGAN: { name: \"David Rodigan\" },\n  DIPLO: { name: \"Diplo\" },\n  DISCLOSURE: { name: \"Disclosure\" },\n  DIZZEE_RASCAL: { name: \"Dizzee Rascal\" },\n  DRUMS: { name: \"Drums, The\" },\n  DUKE_DUMONT: { name: \"Duke Dumont\" },\n  DUA_LIPA: { name: \"Dua Lipa\" },\n  DUSKY: { name: \"Dusky\" },\n  DYLAN: { name: \"Dylan\" },\n  // E\n  EARTHEATER: { name: \"Eartheater\" },\n  EATS_EVERYTHING: { name: \"Eats Everything\" },\n  ELDERBROOK: { name: \"Elderbrook\" },\n  ELIZA_DOOLITTLE: { name: \"Eliza Doolittle\" },\n  ELLA_EYRE: { name: \"Ella Eyre\" },\n  ELLIE_GOULDING: { name: \"Ellie Goulding\" },\n  EMAROSA: { name: \"Emarosa\" },\n  // F\n  FALL_OUT_BOY: { name: \"Fall Out Boy\" },\n  FKA_TWIGS: { name: \"FKA twigs\" },\n  FLEETWOOD_MAC: { name: \"Fleetwood Mac\" },\n  FLIGHT_FACILITIES: { name: \"Flight Facilities\" },\n  FLORENCE_AND_THE_MACHINE: { name: \"Florence + the Machine\" },\n  FOREVER_THE_SICKEST_KIDS: { name: \"Forever the Sickest Kids\" },\n  FOURS: { name: \"Fours\" },\n  FOUR_TET: { name: \"Four Tet\" },\n  FOXES: { name: \"Foxes\" },\n  FRANCES: { name: \"Frances\" },\n  FRANCIS_AND_THE_LIGHTS: { name: \"Francis and the Lights\" },\n  FRANK_OCEAN: { name: \"Frank Ocean\" },\n  FREYA_RIDINGS: { name: \"Freya Ridings\" },\n  THE_FRIDAY_NIGHT_BOYS: { name: \"Friday Night Boys, The\" },\n  FRIEND_WITHIN: { name: \"Friend Within\" },\n  FUN_LOVIN_CRIMINALS: { name: \"Fun Lovin' Criminals\" },\n  // G\n  GABRIELLE: { name: \"Gabrielle\" },\n  GEORGE_EZRA: { name: \"George Ezra\" },\n  GEORGE_FITZGERALD: { name: \"George FitzGerald\" },\n  GEORGIA: { name: \"Georgia\" },\n  G_FLIP: { name: \"G Flip\" },\n  GLOWIE: { name: \"Glowie\" },\n  GORGON_CITY: { name: \"Gorgon City\" },\n  GRACEY: { name: \"GRACEY\" },\n  GREEN_VELVET: { name: \"Green Velvet\" },\n  GRIMES: { name: \"Grimes\" },\n  GROOVE_ARMADA: { name: \"Groove Armada\" },\n  GRYFFIN: { name: \"Gryffin\" },\n  GYM_CLASS_HEROES: { name: \"Gym Class Heroes\" },\n  // H\n  HAIM: { name: \"HAIM\" },\n  HALSEY: { name: \"Halsey\" },\n  HANNAH_WANTS: { name: \"Hannah Wants\" },\n  HAUX: { name: \"Haux\" },\n  HEIDI: { name: \"Heidi\" },\n  HEY_MONDAY: { name: \"Hey Monday\" },\n  HOLLY_HUMBERSTONE: { name: \"Holly Humberstone\" },\n  HORSE_MEAT_DISCO: { name: \"Horse Meat Disco\" },\n  // I\n  INCOGNITO: { name: \"Incognito\" },\n  // J\n  JAMES_BAY: { name: \"James Bay\" },\n  JAMES_BLAKE: { name: \"James Blake\" },\n  JAMIE_JONES: { name: \"Jamie Jones\" },\n  JAMIE_T: { name: \"Jamie T\" },\n  JAMIE_XX: { name: \"Jamie xx\" },\n  JAX_JONES: { name: \"Jax Jones\" },\n  JAY_Z: { name: \"JAY Z\" },\n  JEREMY_ZUCKER: { name: \"Jeremy Zucker\" },\n  JESS_GLYNNE: { name: \"Jess Glynne\" },\n  JESSIE_WARE: { name: \"Jessie Ware\" },\n  JOE_GODDARD: { name: \"Joe Goddard\" },\n  JOHNNY_MARR: { name: \"Johnny Marr\" },\n  JONAS_BLUE: { name: \"Jonas Blue\" },\n  JONES: { name: \"Jones\" },\n  JON_HOPKINS: { name: \"Jon Hopkins\" },\n  JORIS_VOORN: { name: \"Joris Voorn\" },\n  JORJA_SMITH: { name: \"Jorja Smith\" },\n  JOSH_BUTLER: { name: \"Josh Butler\" },\n  JOY_ORBISON: { name: \"Joy Orbison\" },\n  JOSEF_SALVAT: { name: \"Josef Salvat\" },\n  JULIA_MICHAELS: { name: \"Julia Michaels\" },\n  JULIO_BASHMORE: { name: \"Julio Bashmore\" },\n  JUSTIN_BIEBER: { name: \"Justin Bieber\" },\n  JUSTIN_MARTIN: { name: \"Justin Martin\" },\n  // K\n  KAH_LO: { name: \"Kah-Lo\" },\n  KANYE_WEST: { name: \"Kanye West\" },\n  KATE_NASH: { name: \"Kate Nash\" },\n  KATY_PERRY: { name: \"Katy Perry\" },\n  KAYTRANADA: { name: \"Kaytranada\" },\n  KESHA: { name: \"Kesha\" },\n  KIASMOS: { name: \"Kiasmos\" },\n  KIDNAP: { name: \"Kidnap\" },\n  KIDS_IN_GLASS_HOUSES: { name: \"Kids In Glass Houses\" },\n  THE_KILLERS: { name: \"Killers, The\" },\n  KIM_PETRAS: { name: \"Kim Petras\" },\n  KOLSCH: { name: \"Kölsch\" },\n  KYGO: { name: \"Kygo\" },\n  // L\n  LADY_GAGA: { name: \"Lady Gaga\" },\n  LADY_STARLIGHT: { name: \"Lady Starlight\" },\n  LANA_DEL_REY: { name: \"Lana Del Rey\", favourite: true },\n  LANE_8: { name: \"Lane 8\" },\n  LANY: { name: \"LANY\" },\n  LA_ROUX: { name: \"La Roux\" },\n  LAUV: { name: \"Lauv\" },\n  L_DEVINE: { name: \"L Devine\" },\n  LELAND: { name: \"Leland\" },\n  LENNON_STELLA: { name: \"Lennon Stella\" },\n  LEON: { name: \"LÉON\" },\n  LILY_ALLEN: { name: \"Lily Allen\" },\n  LISSIE: { name: \"Lissie\" },\n  LITTLE_COMETS: { name: \"Little Comets\" },\n  LITTLE_DRAGON: { name: \"Little Dragon\" },\n  LONDON_GRAMMAR: { name: \"London Grammar\" },\n  LORDE: { name: \"Lorde\" },\n  LUCY_ROSE: { name: \"Lucy Rose\" },\n  LYKKE_LI: { name: \"Lykke Li\" },\n  LYVES: { name: \"Lyves\" },\n  // M\n  MACEO_PLEX: { name: \"Maceo Plex\" },\n  MALLRAT: { name: \"Mallrat\" },\n  MAGGIE_ROGERS: { name: \"Maggie Rogers\" },\n  THE_MAINE: { name: \"Maine, The\" },\n  MAJOR_LAZER: { name: \"Major Lazer\" },\n  MARY_J_BLIGE: { name: \"Mary J. Blige\" },\n  MARINA: { name: \"MARINA\" },\n  MARTIN_SOLVEIG: { name: \"Martin Solveig\" },\n  MELANIE_MARTINEZ: { name: \"Melanie Martinez\" },\n  METRO_STATION: { name: \"Metro Station\" },\n  MICHAEL_KIWANUKA: { name: \"Michael Kiwanuka\" },\n  MIDLAND: { name: \"Midland\" },\n  MIGUEL: { name: \"Miguel\" },\n  MIKE_POSNER: { name: \"Mike Posner\" },\n  MILEY_CYRUS: { name: \"Miley Cyrus\" },\n  MISHA_B: { name: \"Misha B\" },\n  M_0: { name: \"M.O\" },\n  MK: { name: \"MK\" },\n  MNEK: { name: \"MNEK\" },\n  MO: { name: \"MØ\" },\n  MUNA: { name: \"MUNA\" },\n  MURA_MASA: { name: \"Mura Masa\" },\n  // N\n  NAAZ: { name: \"Naaz\" },\n  NAO: { name: \"Nao\" },\n  NASTY_CHERRY: { name: \"Nasty Cherry\" },\n  NATASHA_BEDINGFIELD: { name: \"Natasha Bedingfield\" },\n  NAVVY: { name: \"Navvy\" },\n  NICKI_MINAJ: { name: \"Nicki Minaj\" },\n  NOEL_GALLAGHERS_HIGH_FLYING_BIRDS: {\n    name: \"Noel Gallagher's High Flying Birds\"\n  },\n  // O\n  OH_ANNIE_OH: { name: \"Oh Annie Oh\" },\n  OKAYWILL: { name: \"okaywill\" },\n  // P\n  PALE_WAVES: { name: \"Pale Waves\" },\n  PALOMA_FAITH: { name: \"Paloma Faith\" },\n  PANIC_AT_THE_DISCO: { name: \"Panic! At the Disco\" },\n  PARAMORE: { name: \"Paramore\" },\n  PAUL_WOOLFORD: { name: \"Paul Woolford\" },\n  PET_SHOP_BOYS: { name: \"Pet Shop Boys\" },\n  PHILIP_GEORGE: { name: \"Philip George\" },\n  PRETENDERS: { name: \"Pretenders\" },\n  PVRIS: { name: \"PVRIS\" },\n  // R\n  RAINBOW_KITTEN_SURPRISE: { name: \"Rainbow Kitten Surprise\" },\n  RALEIGH_RITCHIE: { name: \"Raleigh Ritchie\" },\n  RALPH: { name: \"Ralph\" },\n  REDLIGHT: { name: \"Redlight\" },\n  RIHANNA: { name: \"Rihanna\" },\n  RINA_SAWAYAMA: { name: \"Rina Sawayama\" },\n  RITON: { name: \"Riton\" },\n  RIXTON: { name: \"Rixton\" },\n  ROBINSON: { name: \"Robinson\" },\n  ROBYN: { name: \"Robyn\" },\n  ROMY: { name: \"Romy\" },\n  ROOSEVELT: { name: \"Roosevelt\" },\n  ROUTE_94: { name: \"Route 94\" },\n  RYN_WEAVER: { name: \"Ryn Weaver\", favourite: true },\n  RUDIMENTAL: { name: \"Rudimental\" },\n  RUFUS_DU_SOL: { name: \"RÜFÜS DU SOL\" },\n  RYAN_BEATTY: { name: \"Ryan Beatty\" },\n  // S\n  SABRINA_CLAUDIO: { name: \"Sabrina Claudio\" },\n  SAINT_JHN: { name: \"SAINt JHN\" },\n  SAM_SMITH: { name: \"Sam Smith\" },\n  SASHA_SLOAN: { name: \"Sasha Sloan\" },\n  SBTRKT: { name: \"SBTRKT\" },\n  SEEB: { name: \"Seeb\" },\n  SEGA_BODEGA: { name: \"Sega Bodega\" },\n  SEINABO_SEY: { name: \"Seinabo Sey\" },\n  SEVDALIZA: { name: \"Sevdaliza\" },\n  SIA: { name: \"Sia\" },\n  SIGRID: { name: \"Sigrid\" },\n  SISTER_SLEDGE: { name: \"Sister Sledge\" },\n  SKY_FERREIRA: { name: \"Sky Ferreira\", favourite: true },\n  SLIIMY: { name: \"Sliimy\" },\n  SOFI_TUKKER: { name: \"Sofi Tukker\" },\n  SOAK: { name: \"SOAK\" },\n  SONIKKU: { name: \"SONIKKU\" },\n  SOPHIE: { name: \"SOPHIE\" },\n  SOPHIE_ELLIS_BEXTOR: { name: \"Sophie Ellis-Bextor\" },\n  SOUL_WAX: { name: \"Soul Wax\" },\n  THE_SMYTHS: { name: \"Smyths, The\" },\n  THE_SPILL_CANVAS: { name: \"Spill Canvas, The\" },\n  SKREAM: { name: \"Skream\" },\n  SUNDAY_GIRL: { name: \"Sunday Girl\" },\n  // T\n  TAYLOR_SWIFT: { name: \"Taylor Swift\" },\n  TENSNAKE: { name: \"Tensnake\" },\n  TEN_WALLS: { name: \"Ten Walls\" },\n  TERROR_JR: { name: \"Terror Jr\" },\n  TOM_ODELL: { name: \"Tom Odell\" },\n  TORI_KELLY: { name: \"Tori Kelly\" },\n  TOURIST: { name: \"Tourist\" },\n  TOVE_LO: { name: \"Tove Lo\" },\n  TROYE_SIVAN: { name: \"Troye Sivan\" },\n  TULISA: { name: \"Tulisa\" },\n  TWENTY_ONE_PILOTS: { name: \"Twenty One Pilots\" },\n  TWO_FEET: { name: \"Two Feet\" },\n  TYGA: { name: \"Tyga\" },\n  // V\n  VERITE: { name: \"VÉRITÉ\" },\n  // W\n  WE_THE_KINGS: { name: \"We the Kings\" },\n  WILL_YOUNG: { name: \"Will Young\" },\n  // X\n  THE_XX: { name: \"xx, The\" },\n  // Y\n  YEARS_AND_YEARS: { name: \"Years & Years\" },\n  YOU_ME_AT_SIX: { name: \"You Me At Six\" },\n  YOUSEF: { name: \"Yousef\" },\n  // Z\n  ZARA_LARSSON: { name: \"Zara Larsson\" }\n};\n","const MUSIC_VENUES_LONDON: IMusicVenues = {\n  // A\n  ALEXANDRA_PALACE: { name: \"Alexandra Palace\" },\n  ALEXANDRA_PALACE_THEATRE: {\n    name: \"Alexandra Palace Theatre\",\n    favourite: true\n  },\n  // B\n  BRIXTON_ACADEMY: { name: \"Brixton Academy\", favourite: true },\n  BROCKWELL_PARK: { name: \"Brockwell Park\" },\n  // C\n  CAMDEN_ASSEMBLY: { name: \"Camden Assembly\" },\n  CORSICA_STUDIOS: { name: \"Corsica Studios\" },\n  COURTYARD_THEATRE: { name: \"Courtyard Theatre\" },\n  // D\n  DINGWALLS: { name: \"Dingwalls\" },\n  THE_GARAGE: { name: \"Garage, The\" },\n  // E\n  EARTH: { name: \"EartH\" },\n  EGG: { name: \"Egg\" },\n  ELECTRIC_BRIXTON: { name: \"Electric Brixton\" },\n  ELECTROWERKZ: { name: \"Electrowerkz\" },\n  // F\n  FABRIC: { name: \"Fabric\" },\n  FINSBURY_PARK: { name: \"Finsbury Park\" },\n  // H\n  HAMMERSMITH_APOLLO: { name: \"Hammersmith Apollo\" },\n  HEAVEN: { name: \"Heaven\" },\n  HOXTON_HALL: { name: \"Hoxton Hall\" },\n  HOXTON_SQUARE_BAR_AND_KITCHEN: { name: \"Hoxton Square Bar & Kitchen\" },\n  // I\n  ISLINGTON_ASSEMBLY_HALL: { name: \"Islington Assembly Hall\", favourite: true },\n  // K\n  KENTISH_TOWN_FORUM: { name: \"Kentish Town Forum\" },\n  KOKO: { name: \"Koko\", favourite: true },\n  // L\n  LAFAYETTE: { name: \"Lafayette\" },\n  LAYLOW: { name: \"Laylow\" },\n  LONDON_STADIUM: { name: \"London Stadium\" },\n  // M\n  MINISTRY_OF_SOUND: { name: \"Ministry of Sound\" },\n  MOTH_CLUB: { name: \"Moth Club\", favourite: true },\n  // O\n  OLD_BLUE_LAST: { name: \"Old Blue Last\", favourite: true },\n  OMEARA: { name: \"Omeara\" },\n  OSLO_HACKNEY: { name: \"Oslo Hackney\" },\n  OVAL_SPACE: { name: \"Oval Space\" },\n  THE_O2: { name: \"O2, The\" },\n  // P\n  PRINTWORKS: { name: \"Printworks\", favourite: true },\n  // Q\n  QUEEN_OF_HOXTON: { name: \"Queen of Hoxton\" },\n  // R\n  RIDGEWAY_PARK: { name: \"Ridgeway Park\" },\n  ROUNDHOUSE: { name: \"Roundhouse\", favourite: true },\n  ROYAL_ALBERT_HALL: { name: \"Royal Albert Hall\", favourite: true },\n  ROYAL_FESTIVAL_HALL: { name: \"Royal Festival Hall\", favourite: true },\n  // S\n  SCALA: { name: \"Scala\" },\n  SERVANT_JAZZ_QUARTERS: { name: \"Servant Jazz Quarters\" },\n  SHEPHERDS_BUSH_EMPIRE: { name: \"Shepherd's Bush Empire\" },\n  ST_GILES_IN_THE_FIELD: { name: \"St Giles-in-the-Fields\" },\n  // T\n  TOTTENHAM_HOTSPUR_STADIUM: { name: \"Tottenham Hotspur Stadium\" },\n  TWICKENHAM_STADIUM: { name: \"Twickenham Stadium\" },\n  TROXY: { name: \"Troxy\" },\n  // V\n  VICTORIA_PARK: { name: \"Victoria Park\" },\n  VILLAGE_UNDERGROUND: { name: \"Village Underground\" },\n  // W\n  WEMBLEY_STADIUM: { name: \"Wembley Stadium\" },\n  // X\n  XOYO: { name: \"XOYO\" },\n  // Z\n  ZIGFRID_VON_UNDERBELLY: { name: \"Zigfrid von Underbelly\" }\n};\n\nconst MUSIC_VENUES_BIRMINGHAM: IMusicVenues = {\n  // A\n  ACADEMY_BIRMINGHAM: { name: \"Birmingham Academy\" },\n  ACADEMY_2_BIRMINGHAM: { name: \"Birmingham Academy 2\" },\n  ALEXANDRA_THEATRE: { name: \"Alexandra Theatre\" },\n  // B\n  BARFLY_BIRMINGHAM: { name: \"Birmingham Barfly\" },\n  // I\n  INSTITUTE_BIRMINGHAM: { name: \"Birmingham Institute\" },\n  // N\n  NEC_ARENA_BIRMINGHAM: { name: \"Birmingham NEC Arena\" },\n  NIA_ARENA_BIRMINGHAM: { name: \"Birmingham NIA Arena\" }\n};\n\nconst MUSIC_VENUES_NOTTINGHAM: IMusicVenues = {\n  // B\n  BODEGA: { name: \"Bodega\" },\n  ARENA_NOTTINGHAM: { name: \"Nottingham Arena\" },\n  // R\n  RESCUE_ROOMS: { name: \"Rescue Rooms\" },\n  ROCK_CITY: { name: \"Rock City\" },\n  // T\n  TRENT_UNIVERSITY_NOTTINGHAM: { name: \"Nottingham Trent University\" }\n};\n\nconst MUSIC_VENUES_MANCHESTER: IMusicVenues = {\n  // A\n  ACADEMY_MANCHESTER: { name: \"Manchester Academy\" },\n  ACADEMY_2_MANCHESTER: { name: \"Manchester Academy 2\" },\n  ALBERT_HALL_MANCHESTER: { name: \"Manchester Albert Hall\", favourite: true },\n  APOLLO_MANCHESTER: { name: \"Manchester Apollo\" },\n  ARENA_MANCHESTER: { name: \"Manchester Arena\" },\n  // C\n  CASTLEFIELD_BOWL: { name: \"Castlefield Bowl\" },\n  // D\n  DEAF_INSTITUTE: { name: \"Deaf Institute\" },\n  // G\n  GORILLA: { name: \"Gorilla\" },\n  // H\n  HEATON_PARK: { name: \"Heaton Park\" },\n  // R\n  MAYFIELD_DEPOT: { name: \"Mayfield Depot\" },\n  // R\n  RITZ_MANCHESTER: { name: \"Manchester Ritz\" },\n  RUBY_LOUNGE: { name: \"Ruby Lounge\" },\n  // S\n  SANKEYS: { name: \"Sankeys\" },\n  STORE_STREET: { name: \"Store Street\" }\n};\n\nconst MUSIC_VENUES_ELSEWHERE: IMusicVenues = {\n  // C\n  COCKPIT_LEEDS: { name: \"The Cockpit Leeds\" },\n  // D\n  DE_MONTFORT_HALL: { name: \"Leicester De Montfort Hall\" },\n  // E\n  ENGINE_SHED: { name: \"Lincoln Engine Shed\" },\n  // I\n  IFEMA_MADRID: { name: \"IFEMA\" },\n  // L\n  LULWORTH_ESTATE: { name: \"Lulworth Estate\" },\n  // M\n  MOTION: { name: \"Motion\" },\n  // P\n  PRESTON_PARK: { name: \"Preston Park\" },\n  // S\n  SCHWUZ: { name: \"SchwuZ Berlin\", insignificant: true },\n  SHEFFIELD_ARENA: { name: \"Sheffield Arena\" },\n  // T\n  TRESOR: { name: \"Tresor Berlin\", insignificant: true },\n  // W\n  WESTON_PARK: { name: \"Weston Park\" },\n  WOLVERHAMPTON_CIVIC_HALL: { name: \"Wolverhampton Civic Hall\" },\n  WORTHY_FARM: { name: \"Worthy Farm\", favourite: true }\n};\n\nexport const MUSIC_VENUES: IMusicVenues = {\n  ...MUSIC_VENUES_LONDON,\n  ...MUSIC_VENUES_MANCHESTER,\n  ...MUSIC_VENUES_NOTTINGHAM,\n  ...MUSIC_VENUES_BIRMINGHAM,\n  ...MUSIC_VENUES_ELSEWHERE\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FLOUR: IInventoryIngredients = {\n  CORNFLOUR: {\n    displayText: \"cornflour\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.3 }\n  },\n  FLOUR_PLAIN: {\n    displayText: \"plain flour\",\n    cost: { quantity: 1.5, measurement: MEASUREMENTS.KILOGRAM, price: 0.75 }\n  },\n  FLOUR_SELF_RAISING: {\n    displayText: \"self-raising flour\",\n    cost: { quantity: 1.5, measurement: MEASUREMENTS.KILOGRAM, price: 0.75 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SUGAR: IInventoryIngredients = {\n  SUGAR_BROWN: {\n    displayText: \"brown sugar (light or dark)\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  SUGAR_BROWN_DARK: {\n    displayText: \"dark brown sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  SUGAR_BROWN_LIGHT: {\n    displayText: \"light brown sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  SUGAR_CASTER_GOLDEN: {\n    displayText: \"golden caster sugar\",\n    cost: { quantity: 1000, measurement: MEASUREMENTS.GRAM, price: 1.9 }\n  },\n  SUGAR_DEMERARA: {\n    displayText: \"demerara sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  SUGAR_GRANULATED: {\n    displayText: \"granulated sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.55 }\n  },\n  SUGAR_ICING: {\n    displayText: \"icing sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SYRUPS: IInventoryIngredients = {\n  LEMON_EXTRACT: {\n    displayText: \"lemon extract\",\n    cost: { quantity: 38, measurement: MEASUREMENTS.MILLILITRE, price: 1.5 }\n  },\n  NECTAR_AGAVE: {\n    displayText: \"agave nectar\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.MILLILITRE, price: 4 }\n  },\n  SYRUP_GOLDEN: {\n    displayText: \"golden syrup\",\n    cost: { quantity: 600, measurement: MEASUREMENTS.GRAM, price: 1.9 }\n  },\n  VANILLA_EXTRACT: {\n    displayText: \"vanilla extract\",\n    cost: { quantity: 35, measurement: MEASUREMENTS.MILLILITRE, price: 1.3 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nimport { FLOUR } from \"./flour\";\nimport { SUGAR } from \"./sugar\";\nimport { SYRUPS } from \"./syrups\";\n\nexport const BAKING: IInventoryIngredients = {\n  ...FLOUR,\n  ...SUGAR,\n  ...SYRUPS,\n\n  BAKING_POWDER: {\n    displayText: \"baking powder\",\n    cost: { quantity: 170, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  BICARBONATE_OF_SODA: {\n    displayText: \"bicarbonate of soda\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  CHOCOLATE_DARK: {\n    displayText: \"dark chocolate\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 1.7 }\n  },\n  COCOA_POWDER: {\n    displayText: \"cocoa powder\",\n    cost: { quantity: 190, measurement: MEASUREMENTS.GRAM, price: 2.75 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const PASTA: IInventoryIngredients = {\n  SPAGHETTI: {\n    displayText: \"spaghetti\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.6 }\n  },\n  PASTA: { displayText: \"pasta\" },\n  PASTA_LASAGNE_SHEET_DRIED: {\n    displayText: \"dried lasagne sheet\",\n    cost: { quantity: 20, price: 0.7 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const RICE: IInventoryIngredients = {\n  RICE: { displayText: \"rice\" },\n  RICE_BASMATI: {\n    displayText: \"basmati rice\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.1 }\n  },\n  RICE_BROWN: {\n    displayText: \"brown rice\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.85 }\n  },\n  RICE_RISOTTO_ARBORIO: {\n    displayText: \"arborio risotto rice\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.25 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const GRAINS: IInventoryIngredients = {\n  OATS: {\n    displayText: \"oats\",\n    cost: { quantity: 2000, measurement: MEASUREMENTS.GRAM, price: 3 }\n  }\n};\n","import { BREAD } from \"./bread\";\nimport { PASTA } from \"./pasta\";\nimport { RICE } from \"./rice\";\nimport { GRAINS } from \"./grains\";\n\nexport const CARBS: IInventoryIngredients = {\n  ...BREAD,\n  ...PASTA,\n  ...RICE,\n  ...GRAINS,\n\n  POPPADOMS: { displayText: \"poppadoms\" }\n};\n","export const BREAD: IInventoryIngredients = {\n  BREAD_GARLIC: { displayText: \"garlic bread\" },\n  BREAD_SOURDOUGH: { displayText: \"sourdough\" },\n  BREAD_SOURDOUGH_DARK: { displayText: \"dark sourdough\" }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const MILK: IInventoryIngredients = {\n  MILK_COCONUT_CANNED: {\n    displayText: \"coconut milk\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 1 }\n  },\n  MILK_ALMOND_UNSWEETENED: {\n    displayText: \"unsweetened almond milk\",\n    cost: { quantity: 750, measurement: MEASUREMENTS.MILLILITRE, price: 2 }\n  },\n  MILK_OAT: {\n    displayText: \"Oatly\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.LITRE, price: 1.8 }\n  },\n  MILK: {\n    displayText: \"milk\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.LITRE, price: 1 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nimport { MILK } from \"./milk\";\n\nexport const DAIRY: IInventoryIngredients = {\n  ...MILK,\n\n  BUTTER_VEGAN: {\n    displayText: \"dairy-free buttery spread\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  CREAM_OAT: {\n    displayText: \"oat cream\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.MILLILITRE, price: 0.95 }\n  },\n  CHEESE_VEGAN_SLICE: {\n    displayText: \"vegan cheese slices\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 2.6 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FRUIT_DRIED: IInventoryIngredients = {\n  APRICOTS_DRIED: {\n    displayText: \"dried apricots\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 2.7 }\n  },\n  BLUEBERRIES_DRIED: {\n    displayText: \"dried blueberries\",\n    cost: { quantity: 75, measurement: MEASUREMENTS.GRAM, price: 2.25 }\n  },\n  CRANBERRIES_DRIED: {\n    displayText: \"dried cranberries\",\n    cost: { quantity: 75, measurement: MEASUREMENTS.GRAM, price: 1.15 }\n  },\n  RAISINS: {\n    displayText: \"raisins\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.8 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FRUIT_FRESH: IInventoryIngredients = {\n  APPLE_BRAMLEY: {\n    displayText: \"Bramley apple\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.KILOGRAM, price: 2 }\n  },\n  BANANA: {\n    displayText: \"banana\",\n    cost: { quantity: 1, price: 0.2 }\n  },\n  BLACKBERRIES_FRESH: {\n    displayText: \"fresh blackberries\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  },\n  BLUEBERRIES_FRESH: {\n    displayText: \"fresh blueberries\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  LEMON: {\n    displayText: \"lemon\",\n    cost: { quantity: 1, price: 0.3 }\n  },\n  LEMON_LARGE: {\n    displayText: \"large lemon\",\n    cost: { quantity: 1, price: 0.4 }\n  },\n  LIME: {\n    displayText: \"lime\",\n    cost: { quantity: 1, price: 0.3 }\n  },\n  PINEAPPLE: {\n    displayText: \"pineapple\",\n    cost: { quantity: 1, price: 1.1 }\n  },\n  RASPBERRIES_FRESH: {\n    displayText: \"fresh raspberries\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FRUIT_FROZEN: IInventoryIngredients = {\n  BLACKBERRIES_FROZEN: {\n    displayText: \"frozen blackberries\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  RASPBERRIES_FROZEN: {\n    displayText: \"frozen raspberries\",\n    cost: { quantity: 350, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const JUICE = {\n  LEMON_JUICE: {\n    displayText: \"lemon juice\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.MILLILITRE, price: 0.7 }\n  },\n  LEMON_JUICE_FRESH: {\n    displayText: \"fresh lemon juice\",\n    cost: { quantity: 3, measurement: MEASUREMENTS.TABLESPOON, price: 0.3 }\n  },\n  LIME_JUICE_FRESH: {\n    displayText: \"fresh lime juice\",\n    cost: { quantity: 3, measurement: MEASUREMENTS.TABLESPOON, price: 0.5 }\n  }\n};\n","import { FRUIT_DRIED } from \"./dried-fruit\";\nimport { FRUIT_FRESH } from \"./fresh-fruit\";\nimport { FRUIT_FROZEN } from \"./frozen-fruit\";\nimport { JUICE } from \"./juice\";\n\nexport const FRUIT = {\n  ...FRUIT_DRIED,\n  ...FRUIT_FRESH,\n  ...FRUIT_FROZEN,\n  ...JUICE\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const HERBS_DRIED: IInventoryIngredients = {\n  BASIL_DRIED: {\n    displayText: \"dried basil\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  },\n  HERBS_MIXED_DRIED: {\n    displayText: \"dried mixed herbs\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 0.75 }\n  },\n  OREGANO_DRIED: {\n    displayText: \"dried oregano\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  },\n  ROSEMARY_DRIED: {\n    displayText: \"dried rosemary\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  },\n  THYME_DRIED: {\n    displayText: \"dried thyme\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const HERBS_FRESH: IInventoryIngredients = {\n  BASIL_FRESH: {\n    displayText: \"fresh basil\",\n    cost: {\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM,\n      price: 0.75,\n      payFullAmountAlways: true\n    }\n  },\n  CORIANDER_FRESH: {\n    displayText: \"fresh coriander\",\n    cost: {\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM,\n      price: 0.75,\n      payFullAmountAlways: true\n    }\n  },\n  PARSLEY_FRESH: {\n    displayText: \"fresh parsley\",\n    cost: {\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM,\n      price: 0.75,\n      payFullAmountAlways: true\n    }\n  },\n  SAGE_FRESH: {\n    displayText: \"fresh sage\"\n  }\n};\n","import { HERBS_DRIED } from \"./dried-herbs\";\nimport { HERBS_FRESH } from \"./fresh-herbs\";\n\nexport const HERBS: IInventoryIngredients = { ...HERBS_DRIED, ...HERBS_FRESH };\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const BEANS: IInventoryIngredients = {\n  BEANS_BAKED: { displayText: \"baked beans\" },\n  BEANS_HARICOT: {\n    displayText: \"haricot beans\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 0.55 }\n  },\n  BEANS_KIDNEY: {\n    displayText: \"kidney beans\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 0.55 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SEITAN: IInventoryIngredients = {\n  GLUTEN_WHEAT_VITAL: {\n    displayText: \"vital wheat gluten\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.99 }\n  },\n  SEITAN: { displayText: \"seitan\" }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nimport { BEANS } from \"./beans\";\nimport { SEITAN } from \"./seitan\";\n\nexport const PROTEIN: IInventoryIngredients = {\n  ...BEANS,\n  ...SEITAN,\n\n  CHICKPEAS: {\n    displayText: \"chickpeas\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 1 }\n  },\n  EGGS: { displayText: \"egg\", cost: { quantity: 6, price: 2.1 } },\n  LENTIL_RED_DRY: {\n    displayText: \"dry red lentils\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.15 }\n  },\n  TOFU: {\n    displayText: \"tofu\",\n    cost: { quantity: 280, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS, SAINSBURYS_SEASONING_COST } from \"../../measurements\";\n\nexport const DRIED_SEASONING: IInventoryIngredients = {\n  PAPRIKA: {\n    displayText: \"paprika\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  ONION_POWDER: {\n    displayText: \"onion powder\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  GARLIC_GRANULES: {\n    displayText: \"garlic granules\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  PAPRIKA_SMOKED: {\n    displayText: \"smoked paprika\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  TURMERIC_GROUND: {\n    displayText: \"ground turmeric\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  ALLSPICE_GROUND: {\n    displayText: \"ground allspice\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  CHILLI_POWDER: {\n    displayText: \"chilli powder\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  CINNAMON_GROUND: {\n    displayText: \"ground cinnamon\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  CHILLI_CRUSHED_DRIED: {\n    displayText: \"dried crushed chillis\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  NUTMEG_GROUND: {\n    displayText: \"ground nutmeg\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  YEAST_NUTRITIONAL: {\n    displayText: \"nutritional yeast flakes\",\n    cost: { quantity: 125, measurement: MEASUREMENTS.GRAM, price: 3.4 }\n  },\n  STOCK_POWDER_VEGAN: {\n    displayText: \"vegan stock powder\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const OILS: IInventoryIngredients = {\n  OIL_OLIVE: {\n    displayText: \"olive oil\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.MILLILITRE, price: 3 }\n  },\n  OIL_SUNFLOWER: {\n    displayText: \"sunflower oil\",\n    cost: { quantity: 1000, measurement: MEASUREMENTS.MILLILITRE, price: 1.2 }\n  }\n};\n","export const UNICODE: { [character: string]: string } = {\n  // INGREDIENTS\n  JALAPENOS: \"jalape\\u00f1os\",\n  TOMATO_PUREE: \"tomato pur\\u00e9e\",\n\n  // FRACTIONS\n  QUARTER: \"\\u00bc\",\n  THIRD: \"\\u2153\",\n  HALF: \"\\u00bd\",\n  TWO_THIRDS: \"\\u2154\",\n  THREE_QUARTERS: \"\\u00be\",\n\n  // MISC\n  DEGREES_CELCIUS: \"\\u00b0C\"\n};\n","import { MEASUREMENTS } from \"../../measurements\";\nimport { UNICODE } from \"../../unicode\";\n\nexport const PASTES: IInventoryIngredients = {\n  CURRY_PASTE_MADRAS: {\n    displayText: \"Madras curry paste\",\n    cost: { quantity: 283, measurement: MEASUREMENTS.GRAM, price: 2.25 }\n  },\n  CURRY_PASTE_ROGAN_JOSH: {\n    displayText: \"Rogan Josh curry paste\",\n    cost: { quantity: 283, measurement: MEASUREMENTS.GRAM, price: 2.3 }\n  },\n  TOMATO_PUREE: {\n    displayText: UNICODE.TOMATO_PUREE,\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 0.5 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SALT: IInventoryIngredients = {\n  SALT_BLACK: {\n    displayText: \"black salt (kala namak)\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 2.9 }\n  },\n  SALT_TABLE: {\n    displayText: \"table salt\",\n    cost: { price: 0 }\n  },\n  SALT_ROCK_FRESH: {\n    displayText: \"freshly ground rock salt\",\n    cost: { price: 0 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SAUCES: IInventoryIngredients = {\n  LIQUID_SMOKE: {\n    displayText: \"liquid smoke\",\n    cost: { quantity: 475, measurement: MEASUREMENTS.MILLILITRE, price: 6.7 }\n  },\n  SOY_SAUCE: {\n    displayText: \"soy sauce\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.MILLILITRE, price: 0.7 }\n  },\n  KETCHUP_TOMATO: {\n    displayText: \"tomato ketchup\",\n    cost: { quantity: 570, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  SRIRACHA: {\n    displayText: \"sriracha\",\n    cost: { quantity: 455, measurement: MEASUREMENTS.MILLILITRE, price: 3.1 }\n  },\n  SWEET_CHILLI_SAUCE: {\n    displayText: \"sweet chilli sauce\",\n    cost: { quantity: 230, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VINEGARS: IInventoryIngredients = {\n  VINEGAR_BALSAMIC: {\n    displayText: \"balsamic vinegar\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.MILLILITRE, price: 2 }\n  },\n  VINEGAR_CIDER: {\n    displayText: \"cider vinegar\",\n    cost: { quantity: 350, measurement: MEASUREMENTS.MILLILITRE, price: 1.6 }\n  },\n  VINEGAR_WHITE_WINE: {\n    displayText: \"white wine vinegar\",\n    cost: { quantity: 350, measurement: MEASUREMENTS.MILLILITRE, price: 1.6 }\n  }\n};\n","import { MEASUREMENTS, SAINSBURYS_SEASONING_COST } from \"../../measurements\";\n\nimport { DRIED_SEASONING } from \"./dried-seasoning\";\nimport { OILS } from \"./oils\";\nimport { PASTES } from \"./pastes\";\nimport { SALT } from \"./salt\";\nimport { SAUCES } from \"./sauces\";\nimport { VINEGARS } from \"./vinegars\";\n\nexport const SEASONING: IInventoryIngredients = {\n  ...DRIED_SEASONING,\n  ...OILS,\n  ...PASTES,\n  ...SALT,\n  ...SAUCES,\n  ...VINEGARS,\n\n  PEPPER_BLACK_FRESH: {\n    displayText: \"freshly ground black pepper\",\n    cost: { price: 0 }\n  },\n  PEPPER_BLACK_GROUND: {\n    displayText: \"ground black pepper\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  WINE_RED: {\n    displayText: \"red wine\",\n    cost: { quantity: 750, measurement: MEASUREMENTS.MILLILITRE, price: 6.5 }\n  },\n  CHILLI_RED_FRESH: {\n    displayText: \"fresh red chilli\",\n    cost: { quantity: 2, price: 0.6 }\n  },\n  CHILLI_BIRD_EYE_FRESH: {\n    displayText: \"bird eye chillies\",\n    cost: { quantity: 20, measurement: MEASUREMENTS.GRAM, price: 0.7 }\n  },\n  GINGER_FRESH: {\n    displayText: \"fresh ginger\",\n    cost: { payFullAmountAlways: true, price: 0.3 }\n  },\n  NUTMEG_FRESH: {\n    displayText: \"freshly grated whole nutmeg\",\n    cost: SAINSBURYS_SEASONING_COST\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const NUTS: IInventoryIngredients = {\n  NUTS_CASHEWS: {\n    displayText: \"cashew nuts\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 3 }\n  },\n  NUTS_PINE: {\n    displayText: \"pine nuts\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 3.6 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SEEDS: IInventoryIngredients = {\n  SEEDS_CHIA: {\n    displayText: \"chia seeds\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  },\n  SEEDS_POPPY: {\n    displayText: \"poppy seeds\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 0.9 }\n  },\n  SEEDS_FLAX_GROUND: {\n    displayText: \"ground flax seeds\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 4 }\n  },\n  SEEDS_PUMPKIN: {\n    displayText: \"pumpkin seeds\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  SEEDS_SESAME: {\n    displayText: \"sesame seeds\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  SEEDS_SUNFLOWER: {\n    displayText: \"sunflower seeds\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 1 }\n  }\n};\n","import { NUTS } from \"./nuts\";\nimport { SEEDS } from \"./seeds\";\n\nexport const NUTS_AND_SEEDS: IInventoryIngredients = { ...NUTS, ...SEEDS };\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VEG_CANNED: IInventoryIngredients = {\n  TOMATO_CHOPPED: {\n    displayText: \"chopped tomatoes\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 0.5 }\n  },\n  TOMATO_PASSATA: {\n    displayText: \"passata\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.45 }\n  },\n  TOMATO_SUN_DRIED: {\n    displayText: \"sun dried tomatoes\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.JAR, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VEG_FRESH: IInventoryIngredients = {\n  ASPARAGUS: { displayText: \"asparagus\" },\n  AUBERGINE: { displayText: \"aubergine\", cost: { quantity: 1, price: 0.7 } },\n  BEANS_GREEN: {\n    displayText: \"green beans\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  BROCCOLI: { displayText: \"broccoli\", cost: { quantity: 1, price: 0.7 } },\n  BUTTERNUT_SQUASH: {\n    displayText: \"butternut squash\",\n    cost: { quantity: 1, price: 1.5 }\n  },\n  CARROT: { displayText: \"carrot\", cost: { quantity: 1, price: 0.12 } },\n  CAULIFLOWER_REGULAR: {\n    displayText: \"cauliflower\",\n    cost: { quantity: 1, price: 1 }\n  },\n  CELERY_STICK: {\n    displayText: \"celery stick\",\n    cost: { quantity: 1, price: 0.3 }\n  },\n  COURGETTE: { displayText: \"courgette\", cost: { quantity: 1, price: 0.35 } },\n  GARLIC_CLOVE: {\n    displayText: \"garlic clove\",\n    cost: { quantity: 10, price: 0.3 }\n  },\n  KALE: {\n    displayText: \"kale\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1.05 }\n  },\n  LEEK: { displayText: \"leek\", cost: { quantity: 1, price: 0.7 } },\n  MUSHROOMS: {\n    displayText: \"mushrooms\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  MUSHROOMS_CHESTNUT: {\n    displayText: \"chestnut mushrooms\",\n    cost: { quantity: 300, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  ONION_WHITE_MEDIUM: {\n    displayText: \"white onion\",\n    cost: { quantity: 1, price: 0.2 }\n  },\n  ONION_RED_MEDIUM: {\n    displayText: \"red onion\",\n    cost: { quantity: 1, price: 0.25 }\n  },\n  ONION_SPRING: {\n    displayText: \"spring onion\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 0.55 }\n  },\n  PEPPER_RED: { displayText: \"red pepper\", cost: { quantity: 1, price: 0.5 } },\n  PEPPER_GREEN: {\n    displayText: \"green pepper\",\n    cost: { quantity: 1, price: 0.5 }\n  },\n  PEPPER_ORANGE: {\n    displayText: \"orange pepper\",\n    cost: { quantity: 1, price: 0.5 }\n  },\n  PEPPER_MIXED: {\n    displayText: \"mixed pepper\",\n    cost: { quantity: 3, price: 1.3 }\n  },\n  POTATO_MARIS_PIPER: { displayText: \"Maris Piper potatoes\" },\n  POTATO_BAKING: {\n    displayText: \"baking potato\",\n    cost: { quantity: 1, price: 0.4 }\n  },\n  POTATO_SWEET: {\n    displayText: \"sweet potato\",\n    cost: { quantity: 1, price: 0.5 }\n  },\n  SPINACH: {\n    displayText: \"spinach\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VEG_FROZEN: IInventoryIngredients = {\n  PETITS_POIS_FROZEN: {\n    displayText: \"frozen petits pois\",\n    cost: { quantity: 910, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  },\n  VEGETABLES_MIXED_FROZEN: {\n    displayText: \"frozen mixed vegetables\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.KILOGRAM, price: 1.3 }\n  }\n};\n","import { VEG_CANNED } from \"./canned-veg\";\nimport { VEG_FRESH } from \"./fresh-veg\";\nimport { VEG_FROZEN } from \"./frozen-veg\";\n\nexport const VEG: IInventoryIngredients = {\n  ...VEG_CANNED,\n  ...VEG_FRESH,\n  ...VEG_FROZEN\n};\n","import { BAKING } from \"./baking\";\nimport { CARBS } from \"./carbs\";\nimport { DAIRY } from \"./dairy\";\nimport { FRUIT } from \"./fruit\";\nimport { HERBS } from \"./herbs\";\nimport { PROTEIN } from \"./protein\";\nimport { SEASONING } from \"./seasoning\";\nimport { NUTS_AND_SEEDS } from \"./nuts-seeds\";\nimport { VEG } from \"./veg\";\n\nexport const INGREDIENTS: IInventoryIngredients = {\n  ...BAKING,\n  ...CARBS,\n  ...DAIRY,\n  ...FRUIT,\n  ...HERBS,\n  ...NUTS_AND_SEEDS,\n  ...PROTEIN,\n  ...SEASONING,\n  ...VEG,\n\n  WATER: { displayText: \"water\", cost: { price: 0 } },\n  WATER_BOILING: { displayText: \"boiling water\", cost: { price: 0 } }\n};\n","interface IEventCardTypes {\n  GIG: IEventCardType;\n  THEATRE: IEventCardType;\n  TRIP: IEventCardType;\n}\n\nexport const EVENT_CARD_TYPES: IEventCardTypes = {\n  GIG: \"gig\",\n  THEATRE: \"theatre\",\n  TRIP: \"trip\"\n};\n\ninterface I_PAGE_SECTION_DATA_TYPES {\n  RECIPES: IPageSecionType;\n  COUNTED_LIST: IPageSecionType;\n  EVENT_CARDS: IPageSecionType;\n}\n\nexport const PAGE_SECTION_DATA_TYPES: I_PAGE_SECTION_DATA_TYPES = {\n  RECIPES: \"recipes\",\n  COUNTED_LIST: \"counted-list\",\n  EVENT_CARDS: \"event-cards\"\n};\n\ninterface AllPageSectionTitles {\n  ACTOR: IPageSectionDetails;\n  ATTRACTION: IPageSectionDetails;\n  BUCKET_LIST: IPageSectionDetails;\n  CITY: IPageSectionDetails;\n  COUNTRY: IPageSectionDetails;\n  FESTIVAL: IPageSectionDetails;\n  HIGHLIGHT: IPageSectionDetails;\n  ISLAND: IPageSectionDetails;\n  FRIEND: IPageSectionDetails;\n  MUSICIAN: IPageSectionDetails;\n  MUSIC_VENUES: IPageSectionDetails;\n  REGION: IPageSectionDetails;\n  PLAY: IPageSectionDetails;\n  THEATRE_VENUES: IPageSectionDetails;\n  TOWN: IPageSectionDetails;\n  THEME_PARK: IPageSectionDetails;\n  UP_NEXT: IPageSectionDetails;\n  RECIPES_COMING_SOON: IPageSectionDetails;\n}\n\nconst actor: string = \"actors\";\nconst attraction: string = \"attractions\";\nconst city: string = \"cities\";\nconst country: string = \"countries\";\nconst festival: string = \"festivals\";\nconst friend: string = \"friends\";\nconst highlight: string = \"highlights\";\nconst island: string = \"islands\";\nconst musician: string = \"artists\";\nconst musicVenue: string = \"venues\";\nconst play: string = \"plays\";\nconst region: string = \"regions\";\nconst theatreVenue: string = \"theatres\";\nconst town: string = \"towns\";\n\nexport const PAGE_SECTION_IDS: AllPageSectionTitles = {\n  ACTOR: {\n    title: actor,\n    id: actor,\n    type: PAGE_SECTION_DATA_TYPES.COUNTED_LIST\n  },\n  ATTRACTION: {\n    title: attraction,\n    id: attraction,\n    type: PAGE_SECTION_DATA_TYPES.COUNTED_LIST\n  },\n  BUCKET_LIST: {\n    title: \"bucket list\",\n    id: \"bucket-list\",\n    type: PAGE_SECTION_DATA_TYPES.COUNTED_LIST\n  },\n  CITY: { title: city, id: city, type: PAGE_SECTION_DATA_TYPES.COUNTED_LIST },\n  COUNTRY: {\n    title: country,\n    id: country,\n    type: PAGE_SECTION_DATA_TYPES.COUNTED_LIST\n  },\n  FESTIVAL: {\n    title: festival,\n    id: festival,\n    type: PAGE_SECTION_DATA_TYPES.COUNTED_LIST\n  },\n  FRIEND: {\n    title: friend,\n    id: friend,\n    type: PAGE_SECTION_DATA_TYPES.COUNTED_LIST\n  },\n  ISLAND: {\n    title: island,\n    id: island,\n    type: PAGE_SECTION_DATA_TYPES.COUNTED_LIST\n  },\n  HIGHLIGHT: {\n    title: highlight,\n    id: highlight,\n    type: PAGE_SECTION_DATA_TYPES.COUNTED_LIST\n  },\n  MUSICIAN: {\n    title: musician,\n    id: musician,\n    type: PAGE_SECTION_DATA_TYPES.COUNTED_LIST\n  },\n  MUSIC_VENUES: {\n    title: musicVenue,\n    id: musicVenue,\n    type: PAGE_SECTION_DATA_TYPES.COUNTED_LIST\n  },\n  REGION: {\n    title: region,\n    id: region,\n    type: PAGE_SECTION_DATA_TYPES.COUNTED_LIST\n  },\n  PLAY: { title: play, id: play, type: PAGE_SECTION_DATA_TYPES.COUNTED_LIST },\n  THEATRE_VENUES: {\n    title: theatreVenue,\n    id: theatreVenue,\n    type: PAGE_SECTION_DATA_TYPES.COUNTED_LIST\n  },\n  THEME_PARK: {\n    title: \"theme parks\",\n    id: \"theme-parks\",\n    type: PAGE_SECTION_DATA_TYPES.COUNTED_LIST\n  },\n  TOWN: { title: town, id: town, type: PAGE_SECTION_DATA_TYPES.COUNTED_LIST },\n  UP_NEXT: {\n    title: \"up next\",\n    id: \"up-next\",\n    type: PAGE_SECTION_DATA_TYPES.EVENT_CARDS\n  },\n  RECIPES_COMING_SOON: {\n    title: \"coming soon\",\n    id: \"coming-soon\",\n    type: PAGE_SECTION_DATA_TYPES.COUNTED_LIST\n  }\n};\n","export const PLAYS: IPlays = {\n  // 123\n  \"1984\": { name: \"1984\" },\n  \"4000_MILES\": { name: \"4000 Miles\" },\n  // A\n  AFTERGLOW: { name: \"Afterglow\" },\n  // C\n  CONSENT: { name: \"Consent\" },\n  // D\n  DUST: { name: \"Dust\" },\n  // E\n  EVERYBODYS_TALKING_ABOUT_JAMIE: { name: \"Everybody's Talking About Jamie\" },\n  // F\n  FERRYMAN: { name: \"Ferryman, The\" },\n  FROZEN: { name: \"Frozen\" },\n  // H\n  HOME_IM_DARLING: { name: \"Home, I'm Darling\" },\n  // I\n  INHERITANCE: { name: \"Inheritance, The\" },\n  // K\n  KINKY_BOOTS: { name: \"Kinky Boots\" },\n  // L\n  LEAVE_TO_REMAIN: { name: \"Leave to Remain\" },\n  LOST_UNFOUND: { name: \"Lost Unfound\" },\n  LUNGS: { name: \"Lungs\" },\n  // M\n  MATILDA: { name: \"Matilda\" },\n  MIDSUMMER_NIGHTS_DREAM: { name: \"A Midsummer Night's Dream\" },\n  // S\n  SON: { name: \"The Son\" },\n  // T\n  THAT_GIRL: { name: \"That Girl\" },\n  // U\n  UGLY_LIES_THE_BONE: { name: \"Ugly Lies the Bone\" },\n  UNCLE_VANYA: { name: \"Uncle Vanya\" },\n  // W\n  WAITRESS: { name: \"Waitress\" },\n  WICKED: { name: \"Wicked\" },\n  // Y\n  YOUNG_MARX: { name: \"Young Marx\" }\n};\n","const LONDON: ITheatreVenues = {\n  // A\n  ADELPHI: { name: \"Adelphi Theatre\" },\n  APOLLO: { name: \"Apollo Theatre\" },\n  APOLLO_VICTORIA: { name: \"Apollo Victoria Theatre\" },\n  // B\n  BRIDGE: { name: \"Bridge Theatre\" },\n  // C\n  CAMBRIDGE: { name: \"Cambridge Theatre\" },\n  // D\n  DUKE_OF_YORKS: { name: \"Duke of York's Theatre\" },\n  // G\n  GIELGUD: { name: \"Gielgud Theatre\" },\n  // H\n  HAROLD_PINTER: { name: \"Harold Pinter Theatre\" },\n  // L\n  LYRIC: { name: \"Lyric Hammersmith\" },\n  // N\n  NATIONAL: { name: \"National Theatre\" },\n  NOEL_COWARD: { name: \"Noël Coward Theatre\" },\n  // O\n  OLD_RED_LION: { name: \"Old Red Lion Theatre\" },\n  OLD_VIC: { name: \"The Old Vic\" },\n  // P\n  PLAYHOUSE: { name: \"Playhouse Theatre\" },\n  // R\n  ROYAL_HAYMARKET: { name: \"Theatre Royal Haymarket\" },\n  // T\n  TRAFALGAR_STUDIOS: { name: \"Trafalgar Studios\" },\n  // W\n  WATERLOO_EAST: { name: \"Waterloo East Theatre\" },\n  WHITE_BEAR: { name: \"White Bear Theatre\" }\n};\n\nconst STRATFORD: ITheatreVenues = {\n  ROYAL_SHAKESPEARE: { name: \"Royal Shakespeare Theatre\" }\n};\n\nexport const THEATRE_VENUES: ITheatreVenues = {\n  ...LONDON,\n  ...STRATFORD\n};\n","export const TICKET_TYPES: ITicketTypes = {\n  // A\n  AXS_MOBILE_APP: \"AXS app ticket\",\n  // D\n  DICE: \"Dice mobile ticket\",\n  // F\n  FESTICKET_PDF: \"Festicket e-Ticket PDF\",\n  // G\n  GIGS_AND_TOURS_POSTAL: \"Gigs and Tours postal ticket\",\n  // K\n  KABOODLE_ETICKET: \"Kaboodle eTicket\",\n  // S\n  SEE_TICKETS_PRINT_AT_HOME: \"SeeTickets print-at-home\",\n  // T\n  TICKETWEB: `Ticketweb PDF`,\n  TICKETMASTER_ETICKET: \"Ticketmaster eTicket\"\n};\n","export { ACTORS } from \"./actors\";\nexport { DIETS } from \"./diets\";\nexport { FESTIVALS } from \"./festivals\";\nexport { FRIENDS } from \"./friends\";\nexport { LOCATIONS } from \"./locations\";\nexport { MEASUREMENTS, SAINSBURYS_SEASONING_COST } from \"./measurements\";\nexport { MUSICIANS } from \"./musicians\";\nexport { MUSIC_VENUES } from \"./music-venues\";\nexport { INGREDIENTS } from \"./ingredients\";\nexport {\n  PAGE_SECTION_IDS,\n  EVENT_CARD_TYPES,\n  PAGE_SECTION_DATA_TYPES\n} from \"./page-sections\";\nexport { PLAYS } from \"./plays\";\nexport { THEATRE_VENUES } from \"./theatre-venues\";\nexport { TICKET_TYPES } from \"./ticket-types\";\nexport { UNICODE } from \"./unicode\";\n\nexport const NO_UNIT_COST_FOR_RECIPE_EXISTS: string =\n  \"NO_UNIT_COST_FOR_RECIPE_EXISTS\";\n\nexport const DAYS_OF_THE_WEEK: Array<string> = [\n  \"Sun\",\n  \"Mon\",\n  \"Tue\",\n  \"Wed\",\n  \"Thu\",\n  \"Fri\",\n  \"Sat\"\n];\n\nexport const MONTHS: Array<string> = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\"\n];\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { FlexColumn, FlexRow, H3, SeventyFivePercentSpan } from \"primitives\";\n\nimport { getCountdownText, getDisplayDateText, daysToGo } from \"./utils\";\n\nconst verticalSpaceBetweenEventCardRows: PxValue = \"3px\";\n\ninterface EventCardTitleProps {\n  favourite: boolean;\n}\nconst EventCardTitle = styled(H3)`\n  ${({ favourite }: EventCardTitleProps) =>\n    favourite &&\n    css`\n      ::before {\n        content: \"♥ \";\n      }\n    `}\n\n  font-weight: bold;\n  text-transform: uppercase;\n`;\n\nconst ItalicBoldFlexRow = styled(FlexRow)`\n  font-style: italic;\n\n  > *:not(:first-child) {\n    margin-top: 3px;\n    margin-left: 5px;\n  }\n`;\n\nconst EventCardSubtitle = styled.span`\n  font-weight: bold;\n  text-transform: uppercase;\n`;\n\nconst StyledFlexColumn = styled(FlexColumn)`\n  > *:not(:first-child) {\n    padding-top: ${verticalSpaceBetweenEventCardRows};\n  }\n`;\n\nexport const EventCard: React.FC<IEventCard> = ({\n  title,\n  subtitle,\n  favourite,\n  body,\n  dates,\n  disclaimer\n}) => {\n  const daysTilGig: number = daysToGo(dates);\n\n  return (\n    <StyledFlexColumn data-test=\"event-card-container\">\n      <div>\n        <EventCardTitle data-test=\"event-card-title\" favourite={favourite}>\n          {title}\n        </EventCardTitle>\n\n        {subtitle && (\n          <EventCardSubtitle data-test=\"event-card-subtitle\">\n            {subtitle}\n          </EventCardSubtitle>\n        )}\n      </div>\n\n      {body && <span data-test=\"event-card-body\">{body}</span>}\n\n      <SeventyFivePercentSpan data-test=\"event-card-date\">\n        {getDisplayDateText(dates)}\n      </SeventyFivePercentSpan>\n\n      {daysTilGig >= 0 && (\n        <ItalicBoldFlexRow>\n          <strong>{getCountdownText(daysTilGig)}</strong>\n\n          {disclaimer && (\n            <SeventyFivePercentSpan>({disclaimer})</SeventyFivePercentSpan>\n          )}\n        </ItalicBoldFlexRow>\n      )}\n    </StyledFlexColumn>\n  );\n};\n","import {\n  ACTORS,\n  EVENT_CARD_TYPES,\n  FRIENDS,\n  PLAYS,\n  PAGE_SECTION_IDS,\n  THEATRE_VENUES\n} from \"@constants\";\nimport { DATA_THEATRE } from \"data\";\nimport { ICONS } from \"resources\";\nimport { isInFuture } from \"utils\";\n\nimport {\n  mapToCountedList,\n  mapYearsToEventCardPageSections,\n  mapToEventCard\n} from \"../factory\";\n\nconst { ALL, ALL_GROUPED_BY_YEAR } = DATA_THEATRE;\n\nconst eventCardType = EVENT_CARD_TYPES.THEATRE;\nconst mapTheatreVisitToEventCards = (params: any) =>\n  mapToEventCard({ ...params, eventCardType });\n\nconst FAVOURITES: Array<ITheatreData> = ALL.filter(item => item.favourite);\nconst UPCOMING = ALL.filter(theatreTrip => isInFuture(theatreTrip.dates));\n\nconst mapToCountedListWrapper = (params: any) =>\n  mapToCountedList({\n    ...params,\n    allData: ALL,\n    favouritedData: FAVOURITES\n  });\n\nconst actors: any = mapToCountedListWrapper({\n  items: ACTORS,\n  id: PAGE_SECTION_IDS.ACTOR\n});\nconst friends: any = mapToCountedListWrapper({\n  items: FRIENDS,\n  id: PAGE_SECTION_IDS.FRIEND,\n  filter: \"theatre\"\n});\nconst plays: any = mapToCountedListWrapper({\n  items: PLAYS,\n  id: PAGE_SECTION_IDS.PLAY\n});\nconst venues: any = mapToCountedListWrapper({\n  items: THEATRE_VENUES,\n  id: PAGE_SECTION_IDS.THEATRE_VENUES\n});\n\nconst SECTIONS_STATS: Array<IPageSection> = [\n  {\n    details: PAGE_SECTION_IDS.ACTOR,\n    icon: ICONS.ARTIST,\n    data: actors\n  },\n  {\n    details: PAGE_SECTION_IDS.FRIEND,\n    icon: ICONS.PEOPLE,\n    data: friends\n  },\n  {\n    details: PAGE_SECTION_IDS.PLAY,\n    icon: ICONS.BOOK,\n    data: plays,\n    showSectionLength: true\n  },\n  {\n    details: PAGE_SECTION_IDS.THEATRE_VENUES,\n    icon: ICONS.THEATRE,\n    data: venues,\n    showSectionLength: true\n  },\n  {\n    details: PAGE_SECTION_IDS.UP_NEXT,\n    icon: ICONS.NOTEPAD,\n    data: mapTheatreVisitToEventCards({ data: UPCOMING }),\n    showSectionLength: true\n  }\n];\n\nconst SECTIONS_YEARS: Array<IPageSection> = mapYearsToEventCardPageSections({\n  years: ALL_GROUPED_BY_YEAR,\n  eventCardType\n});\n\nconst sections: Array<IPageSection> = [...SECTIONS_STATS, ...SECTIONS_YEARS];\n\nexport const PAGE_THEATRE: IPageData = { sections };\n","import { DAYS_OF_THE_WEEK, MONTHS } from \"@constants\";\n\nexport const getCountdownText = (daysToGo: number): string => {\n  if (daysToGo === 0) return \"TODAY\";\n  if (daysToGo === 1) return daysToGo + \" DAY TO GO\";\n  return daysToGo + \" DAYS TO GO\";\n};\n\nexport const daysToGo = (dates: Array<Date>): number => {\n  const secondsInADay: number = 24 * 60 * 60;\n  const dateDifference: number = dates[0].valueOf() - new Date().valueOf();\n\n  return Math.ceil(dateDifference / (secondsInADay * 1000));\n};\n\nexport const getDisplayDateText = (dates: Array<Date>): string => {\n  const stringifyDate = (date: Date): string => {\n    const weekday: number = date.getDay();\n    const day: number = date.getDate();\n    const month: number = date.getMonth();\n    const year: number = date.getFullYear();\n\n    return `${DAYS_OF_THE_WEEK[weekday]} ${day} ${MONTHS[month]} ${year}`;\n  };\n\n  return dates.length > 1\n    ? `${stringifyDate(dates[0])} to ${stringifyDate(dates[1])}`\n    : stringifyDate(dates[0]);\n};\n","const requireSvg = (icon: string): IImageSrc => require(`./svg/${icon}.svg`);\nconst requireJpg = (photo: string): IImageSrc => require(`./jpg/${photo}.jpg`);\n\nexport const ICONS: IconsObject = {\n  // A\n  ARTIST: requireSvg(\"artist\"),\n  // B\n  BOOK: requireSvg(\"book\"),\n  BRAIN: requireSvg(\"brain\"),\n  // C\n  CAKE: requireSvg(\"cake\"),\n  CAMERA: requireSvg(\"camera\"),\n  CITY: requireSvg(\"city\"),\n  CLOCHE: requireSvg(\"cloche\"),\n  // F\n  FLAG: requireSvg(\"flag\"),\n  // H\n  HEART: requireSvg(\"heart\"),\n  // M\n  MAP_PIN: requireSvg(\"map_pin\"),\n  MASKS: requireSvg(\"masks\"),\n  MICROPHONE: requireSvg(\"microphone\"),\n  // N\n  NOTEPAD: requireSvg(\"notepad\"),\n  // P\n  PALM_TREE: requireSvg(\"palm_tree\"),\n  PEACE_SIGN: requireSvg(\"peace_sign\"),\n  PEOPLE: requireSvg(\"people\"),\n  // R\n  ROLLER_COASTER: requireSvg(\"roller_coaster\"),\n  // S\n  STADIUM: requireSvg(\"stadium\"),\n  STARS: requireSvg(\"stars\"),\n  // T\n  TENT: requireSvg(\"tent\"),\n  THEATRE: requireSvg(\"theatre\"),\n  TOAST: requireSvg(\"toast\"),\n  TOWN_HALL: requireSvg(\"town_hall\"),\n  TRAVEL: requireSvg(\"travel\"),\n  // V\n  VEG_BOWL: requireSvg(\"veg_bowl\")\n};\n\nexport const PHOTOS: PhotosObject = {\n  // B\n  BAKED_BEANS: requireJpg(\"baked_beans\"),\n  BANANA_CAKE: requireJpg(\"banana_cake\"),\n  BOLOGNESE: requireJpg(\"bolognese\"),\n  BROWNIES: requireJpg(\"brownies\"),\n  // C\n  CARBONARA: requireJpg(\"carbonara\"),\n  CRUMBLE: requireJpg(\"crumble\"),\n  // F\n  FLAPJACKS: requireJpg(\"flapjacks\"),\n  // K\n  KALE_CRISPY: requireJpg(\"kale_crispy\"),\n  // L\n  LASAGNE: requireJpg(\"lasagne\"),\n  // M\n  MASHED_POTATO: requireJpg(\"mashed_potato\"),\n  // P\n  PIRI_PIRI: requireJpg(\"piri_piri\"),\n  // R\n  RATATOUILLE: requireJpg(\"ratatouille\"),\n  ROGAN_JOSH: requireJpg(\"rogan_josh\"),\n  // S\n  SHEPHERDS_PIE: requireJpg(\"shepherds_pie\")\n};\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2006: Array<IGigData> = [\n  {\n    headline: MUSICIANS.ALL_AMERICAN_REJECTS,\n    dates: [new Date(\"2006-09-23\")],\n    venue: MUSIC_VENUES.APOLLO_MANCHESTER,\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2007: Array<IGigData> = [\n  {\n    headline: MUSICIANS.FALL_OUT_BOY,\n    support: [MUSICIANS.COBRA_STARSHIP],\n    dates: [new Date(\"2007-04-03\")],\n    venue: MUSIC_VENUES.APOLLO_MANCHESTER,\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    festival: FESTIVALS.DECAYDANCE,\n    lineup: [\n      MUSICIANS.COBRA_STARSHIP,\n      MUSICIANS.THE_ACADEMY_IS,\n      MUSICIANS.GYM_CLASS_HEROES,\n      MUSICIANS.PANIC_AT_THE_DISCO,\n      MUSICIANS.FALL_OUT_BOY\n    ],\n    dates: [new Date(\"2007-08-22\")],\n    venue: MUSIC_VENUES.HAMMERSMITH_APOLLO,\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN],\n    favourite: true\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2008: Array<IGigData> = [\n  {\n    headline: MUSICIANS.KATE_NASH,\n    support: [MUSICIANS.BLACK_KIDS],\n    venue: MUSIC_VENUES.WOLVERHAMPTON_CIVIC_HALL,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2008-03-01\")]\n  },\n  {\n    headline: MUSICIANS.PANIC_AT_THE_DISCO,\n    support: [MUSICIANS.METRO_STATION],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.MEGAN, FRIENDS.MUM, FRIENDS.EMMA],\n    dates: [new Date(\"2008-03-15\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.ADELE,\n    venue: MUSIC_VENUES.ALEXANDRA_THEATRE,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2008-05-04\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BOYS_LIKE_GIRLS,\n    support: [MUSICIANS.WE_THE_KINGS, MUSICIANS.CUTE_IS_WHAT_WE_AIM_FOR],\n    venue: MUSIC_VENUES.ACADEMY_2_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN],\n    dates: [new Date(\"2008-05-31\")]\n  },\n  {\n    headline: MUSICIANS.THE_ACADEMY_IS,\n    support: [MUSICIANS.WE_THE_KINGS, MUSICIANS.THE_MAINE],\n    venue: MUSIC_VENUES.BARFLY_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.MEGAN, FRIENDS.EMMA],\n    dates: [new Date(\"2008-09-20\")]\n  },\n  {\n    headline: MUSICIANS.FALL_OUT_BOY,\n    support: [MUSICIANS.BOYS_LIKE_GIRLS, MUSICIANS.YOU_ME_AT_SIX],\n    venue: MUSIC_VENUES.NEC_ARENA_BIRMINGHAM,\n    dates: [new Date(\"2008-10-19\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2009: Array<IGigData> = [\n  {\n    headline: MUSICIANS.FALL_OUT_BOY,\n    support: [MUSICIANS.HEY_MONDAY, MUSICIANS.KIDS_IN_GLASS_HOUSES],\n    dates: [new Date(\"2009-03-05\")],\n    company: [FRIENDS.MUM, FRIENDS.MEGAN, FRIENDS.EMMA],\n    venue: MUSIC_VENUES.ARENA_MANCHESTER\n  },\n  {\n    headline: MUSICIANS.YOU_ME_AT_SIX,\n    support: [MUSICIANS.EMAROSA, MUSICIANS.THE_SPILL_CANVAS],\n    dates: [new Date(\"2009-03-07\")],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.MEGAN, FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.KATY_PERRY,\n    support: [MUSICIANS.SLIIMY],\n    favourite: true,\n    dates: [new Date(\"2009-08-25\")],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.LOUISE, FRIENDS.MEGAN, FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    support: [MUSICIANS.THE_XX],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    dates: [new Date(\"2009-09-20\")],\n    favourite: true,\n    company: [FRIENDS.DAD]\n  },\n  {\n    headline: MUSICIANS.ALL_TIME_LOW,\n    support: [MUSICIANS.THE_FRIDAY_NIGHT_BOYS, MUSICIANS.AUDITION],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    dates: [new Date(\"2009-10-02\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.ARCTIC_MONKEYS,\n    dates: [new Date(\"2009-11-22\")],\n    company: [FRIENDS.MUM, FRIENDS.DAD],\n    venue: MUSIC_VENUES.ARENA_NOTTINGHAM\n  },\n  {\n    headline: MUSICIANS.PARAMORE,\n    support: [MUSICIANS.YOU_ME_AT_SIX],\n    venue: MUSIC_VENUES.NIA_ARENA_BIRMINGHAM,\n    dates: [new Date(\"2009-12-11\")],\n    company: [FRIENDS.MEGAN, FRIENDS.EMMA, FRIENDS.MUM]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2010: Array<IGigData> = [\n  {\n    headline: MUSICIANS.YOU_ME_AT_SIX,\n    support: [MUSICIANS.WE_THE_KINGS, MUSICIANS.FOREVER_THE_SICKEST_KIDS],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    dates: [new Date(\"2010-03-09\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    support: [MUSICIANS.DRUMS],\n    venue: MUSIC_VENUES.WOLVERHAMPTON_CIVIC_HALL,\n    company: [FRIENDS.DAD, FRIENDS.EMMA, FRIENDS.MUM],\n    dates: [new Date(\"2010-05-10\")]\n  },\n  {\n    headline: MUSICIANS.PALOMA_FAITH,\n    support: [MUSICIANS.ELIZA_DOOLITTLE],\n    venue: MUSIC_VENUES.DE_MONTFORT_HALL,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2010-11-05\")]\n  },\n  {\n    headline: MUSICIANS.MARINA,\n    venue: MUSIC_VENUES.TRENT_UNIVERSITY_NOTTINGHAM,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2010-11-07\")]\n  },\n  {\n    headline: MUSICIANS.ELLIE_GOULDING,\n    support: [MUSICIANS.SUNDAY_GIRL],\n    venue: MUSIC_VENUES.ENGINE_SHED,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2010-11-08\")]\n  },\n  {\n    headline: MUSICIANS.PARAMORE,\n    support: [MUSICIANS.B_O_B],\n    venue: MUSIC_VENUES.SHEFFIELD_ARENA,\n    company: [FRIENDS.EMMA, FRIENDS.MEGAN, FRIENDS.MUM],\n    dates: [new Date(\"2010-11-11\")]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2011: Array<IGigData> = [\n  {\n    headline: MUSICIANS.KATE_NASH,\n    support: [MUSICIANS.BRIGITTE_APHRODITE],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.TONYA, FRIENDS.KIRSTEN],\n    dates: [new Date(\"2011-03-22\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.KATY_PERRY,\n    venue: MUSIC_VENUES.ARENA_NOTTINGHAM,\n    company: [FRIENDS.JESS, FRIENDS.BLAINE, FRIENDS.ELLIE_S, FRIENDS.POOJA],\n    dates: [new Date(\"2011-03-30\")]\n  },\n  {\n    headline: MUSICIANS.ADELE,\n    support: [MUSICIANS.MICHAEL_KIWANUKA],\n    venue: MUSIC_VENUES.INSTITUTE_BIRMINGHAM,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2011-04-18\")]\n  },\n  {\n    headline: MUSICIANS.ADELE,\n    support: [MUSICIANS.AMOS_LEE],\n    venue: MUSIC_VENUES.DE_MONTFORT_HALL,\n    company: [FRIENDS.EMMA, FRIENDS.MUM],\n    dates: [new Date(\"2011-09-13\")]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2012: Array<IGigData> = [\n  {\n    headline: MUSICIANS.SBTRKT,\n    support: [MUSICIANS.DISCLOSURE],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2012-02-28\")]\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    venue: MUSIC_VENUES.NEC_ARENA_BIRMINGHAM,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2012-03-13\")]\n  },\n  {\n    headline: MUSICIANS.LITTLE_COMETS,\n    venue: MUSIC_VENUES.COCKPIT_LEEDS,\n    company: [FRIENDS.EMMA],\n    dates: [new Date(\"2012-04-23\")]\n  },\n  {\n    headline: MUSICIANS.KATE_NASH,\n    venue: MUSIC_VENUES.BODEGA,\n    company: [FRIENDS.TONYA, FRIENDS.SONYA, FRIENDS.KIRSTEN],\n    dates: [new Date(\"2012-06-22\")]\n  },\n  {\n    headline: MUSICIANS.MARINA,\n    venue: MUSIC_VENUES.INSTITUTE_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    dates: [new Date(\"2012-06-29\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.LADY_GAGA,\n    venue: MUSIC_VENUES.TWICKENHAM_STADIUM,\n    company: [FRIENDS.EMMA],\n    dates: [new Date(\"2012-09-08\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.NICKI_MINAJ,\n    support: [MUSICIANS.MISHA_B, MUSICIANS.TYGA],\n    venue: MUSIC_VENUES.ARENA_NOTTINGHAM,\n    company: [FRIENDS.ELLIE_S, FRIENDS.BLAINE],\n    dates: [new Date(\"2012-10-21\")]\n  },\n  {\n    headline: MUSICIANS.LITTLE_COMETS,\n    venue: MUSIC_VENUES.RESCUE_ROOMS,\n    company: [FRIENDS.SARAH_W, FRIENDS.BETH_SH],\n    dates: [new Date(\"2012-10-31\")]\n  },\n  {\n    headline: MUSICIANS.THE_KILLERS,\n    venue: MUSIC_VENUES.SHEFFIELD_ARENA,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2012-11-08\")]\n  },\n  {\n    headline: MUSICIANS.BEN_HOWARD,\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.STEVE_R],\n    dates: [new Date(\"2012-11-22\")]\n  },\n  {\n    headline: MUSICIANS.ELLIE_GOULDING,\n    venue: MUSIC_VENUES.ROCK_CITY,\n    favourite: true,\n    company: [FRIENDS.BLAINE, FRIENDS.JESS, FRIENDS.ELLIE_G],\n    dates: [new Date(\"2012-12-11\")]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2013: Array<IGigData> = [\n  {\n    headline: MUSICIANS.BASTILLE,\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2013-03-21\")]\n  },\n  {\n    headline: MUSICIANS.RIHANNA,\n    venue: MUSIC_VENUES.NEC_ARENA_BIRMINGHAM,\n    company: [FRIENDS.JESS],\n    dates: [new Date(\"2013-07-18\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.CHRVCHES,\n    venue: MUSIC_VENUES.RITZ_MANCHESTER,\n    company: [FRIENDS.SIMAN],\n    dates: [new Date(\"2013-10-14\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2014: Array<IGigData> = [\n  {\n    headline: MUSICIANS.FOXES,\n    venue: MUSIC_VENUES.RUBY_LOUNGE,\n    company: [FRIENDS.SIMAN],\n    dates: [new Date(\"2014-03-08\")]\n  },\n  {\n    headline: MUSICIANS.CLEAN_BANDIT,\n    venue: MUSIC_VENUES.ACADEMY_2_MANCHESTER,\n    company: [FRIENDS.SIAN],\n    dates: [new Date(\"2014-05-07\")]\n  },\n  {\n    headline: MUSICIANS.LORDE,\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2014-06-05\")]\n  },\n  {\n    festival: FESTIVALS.PARKLIFE,\n    lineup: [\n      MUSICIANS.FOXES,\n      MUSICIANS.ROUTE_94,\n      MUSICIANS.REDLIGHT,\n      MUSICIANS.BREACH,\n      MUSICIANS.RUDIMENTAL,\n      MUSICIANS.ELLA_EYRE,\n      MUSICIANS.CLEAN_BANDIT,\n      MUSICIANS.SAM_SMITH,\n      MUSICIANS.LONDON_GRAMMAR,\n      MUSICIANS.BASTILLE,\n      MUSICIANS.DISCLOSURE\n    ],\n    venue: MUSIC_VENUES.HEATON_PARK,\n    company: [FRIENDS.JESS, FRIENDS.POOJA, FRIENDS.TONYA],\n    dates: [new Date(\"2014-06-07\"), new Date(\"2014-06-08\")]\n  },\n  {\n    headline: MUSICIANS.SBTRKT,\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.THOM],\n    dates: [new Date(\"2014-09-30\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [\n      MUSICIANS.JAX_JONES,\n      MUSICIANS.DUKE_DUMONT,\n      MUSICIANS.CYRIL_HAHN,\n      MUSICIANS.FRIEND_WITHIN\n    ],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2014-10-04\")]\n  },\n  {\n    headline: MUSICIANS.CLEAN_BANDIT,\n    support: [MUSICIANS.YEARS_AND_YEARS],\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.SIAN],\n    dates: [new Date(\"2014-10-17\")]\n  },\n  {\n    headline: MUSICIANS.LADY_GAGA,\n    venue: MUSIC_VENUES.ARENA_MANCHESTER,\n    company: [FRIENDS.SIMAN],\n    dates: [new Date(\"2014-10-21\")]\n  },\n  {\n    headline: MUSICIANS.SAM_SMITH,\n    support: [MUSICIANS.TORI_KELLY],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2014-10-28\")]\n  },\n  {\n    headline: MUSICIANS.CHRVCHES,\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.SIMAN],\n    dates: [new Date(\"2014-11-06\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [\n      MUSICIANS.KIDNAP,\n      MUSICIANS.BONDAX,\n      MUSICIANS.GORGON_CITY,\n      MUSICIANS.REDLIGHT\n    ],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.AMY_B, FRIENDS.ELLE_O],\n    dates: [new Date(\"2014-11-07\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [\n      MUSICIANS.GEORGE_FITZGERALD,\n      MUSICIANS.SKREAM,\n      MUSICIANS.PAUL_WOOLFORD,\n      MUSICIANS.GREEN_VELVET\n    ],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.ALEX_FAYE],\n    dates: [new Date(\"2014-11-15\")]\n  },\n  {\n    headline: MUSICIANS.LA_ROUX,\n    venue: MUSIC_VENUES.RITZ_MANCHESTER,\n    company: [FRIENDS.EMMA],\n    dates: [new Date(\"2014-11-16\")]\n  },\n  {\n    headline: MUSICIANS.LADY_GAGA,\n    support: [MUSICIANS.LADY_STARLIGHT],\n    venue: MUSIC_VENUES.SHEFFIELD_ARENA,\n    company: [FRIENDS.GRACE],\n    dates: [new Date(\"2014-11-20\")]\n  },\n  {\n    headline: MUSICIANS.LILY_ALLEN,\n    venue: MUSIC_VENUES.APOLLO_MANCHESTER,\n    company: [FRIENDS.SIAN],\n    dates: [new Date(\"2014-11-25\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [MUSICIANS.MIDLAND, MUSICIANS.JOY_ORBISON, MUSICIANS.DUSKY],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.EMMA, FRIENDS.BECKY, FRIENDS.NATALIE],\n    dates: [new Date(\"2014-12-06\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2015: Array<IGigData> = [\n  {\n    festival: FESTIVALS.TRANSMISSION,\n    lineup: [MUSICIANS.TEN_WALLS, MUSICIANS.DUSKY, MUSICIANS.YOUSEF],\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.CHLOE, FRIENDS.AMY_B, FRIENDS.BETH_SP],\n    dates: [new Date(\"2015-02-07\")]\n  },\n  {\n    festival: FESTIVALS.TRIBAL_SESSIONS,\n    lineup: [MUSICIANS.JOSH_BUTLER, MUSICIANS.BONTAN, MUSICIANS.GREEN_VELVET],\n    venue: MUSIC_VENUES.SANKEYS,\n    company: [FRIENDS.TONYA, FRIENDS.ALEX_FAYE],\n    dates: [new Date(\"2015-02-13\")]\n  },\n  {\n    festival: FESTIVALS.TRANSMISSION,\n    lineup: [MUSICIANS.JAX_JONES, MUSICIANS.DUKE_DUMONT, MUSICIANS.BLONDE],\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.BETH_SP],\n    dates: [new Date(\"2015-02-27\")]\n  },\n  {\n    festival: FESTIVALS.TRANSMISSION,\n    lineup: [MUSICIANS.EATS_EVERYTHING, MUSICIANS.CARL_COX],\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.SONYA, FRIENDS.TONYA, FRIENDS.ALEX_FAYE],\n    dates: [new Date(\"2015-04-03\")]\n  },\n  {\n    headline: MUSICIANS.ARIANA_GRANDA,\n    support: [MUSICIANS.RIXTON],\n    venue: MUSIC_VENUES.ARENA_MANCHESTER,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2015-06-04\")]\n  },\n  {\n    festival: FESTIVALS.PARKLIFE,\n    lineup: [\n      MUSICIANS.BONDAX,\n      MUSICIANS.JUSTIN_MARTIN,\n      MUSICIANS.JULIO_BASHMORE,\n      MUSICIANS.TENSNAKE,\n      MUSICIANS.JAMES_BAY,\n      MUSICIANS.MK,\n      MUSICIANS.DANIEL_AVERY,\n      MUSICIANS.BAAUER,\n      MUSICIANS.DUSKY,\n      MUSICIANS.DAVID_RODIGAN,\n      MUSICIANS.GEORGE_FITZGERALD,\n      MUSICIANS.KAYTRANADA,\n      MUSICIANS.TEN_WALLS\n    ],\n    venue: MUSIC_VENUES.HEATON_PARK,\n    company: [\n      FRIENDS.SONYA,\n      FRIENDS.TONYA,\n      FRIENDS.AMY_B,\n      FRIENDS.ELLE_O,\n      FRIENDS.CHLOE\n    ],\n    dates: [new Date(\"2015-06-06\"), new Date(\"2015-06-07\")]\n  },\n  {\n    festival: FESTIVALS.GLASTONBURY,\n    lineup: [\n      MUSICIANS.JAMES_BAY,\n      MUSICIANS.MARY_J_BLIGE,\n      MUSICIANS.SBTRKT,\n      MUSICIANS.CARIBOU,\n      MUSICIANS.FLORENCE_AND_THE_MACHINE,\n      MUSICIANS.MACEO_PLEX,\n      MUSICIANS.DUSKY,\n      MUSICIANS.SKREAM,\n      MUSICIANS.GEORGE_EZRA,\n      MUSICIANS.YEARS_AND_YEARS,\n      MUSICIANS.JESSIE_WARE,\n      MUSICIANS.BEN_HOWARD,\n      MUSICIANS.KANYE_WEST,\n      MUSICIANS.JAMIE_JONES,\n      MUSICIANS.FOUR_TET,\n      MUSICIANS.THE_SMYTHS,\n      MUSICIANS.SOAK,\n      MUSICIANS.SEINABO_SEY,\n      MUSICIANS.CHARLI_XCX,\n      MUSICIANS.GROOVE_ARMADA,\n      MUSICIANS.JAMIE_T,\n      MUSICIANS.CHEMICAL_BROTHERS\n    ],\n    venue: MUSIC_VENUES.WORTHY_FARM,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.GRACE,\n      FRIENDS.ELLIE_G,\n      FRIENDS.EMMA,\n      FRIENDS.THOM,\n      FRIENDS.FANNY,\n      FRIENDS.HANNA\n    ],\n    dates: [new Date(\"2015-06-26\"), new Date(\"2015-06-28\")]\n  },\n  {\n    headline: MUSICIANS.NOEL_GALLAGHERS_HIGH_FLYING_BIRDS,\n    support: [MUSICIANS.JOHNNY_MARR],\n    venue: MUSIC_VENUES.CASTLEFIELD_BOWL,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2015-07-11\")]\n  },\n  {\n    headline: MUSICIANS.MIGUEL,\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.SIAN],\n    dates: [new Date(\"2015-10-18\")]\n  },\n  {\n    headline: MUSICIANS.CHRVCHES,\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2015-11-19\")]\n  },\n  {\n    headline: MUSICIANS.LISSIE,\n    venue: MUSIC_VENUES.ACADEMY_2_MANCHESTER,\n    dates: [new Date(\"2015-12-05\")],\n    company: [],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.FABRIC_NYE,\n    lineup: [MUSICIANS.GEORGE_FITZGERALD, MUSICIANS.EATS_EVERYTHING],\n    venue: MUSIC_VENUES.FABRIC,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.SONYA,\n      FRIENDS.FANNY,\n      FRIENDS.HANNA,\n      FRIENDS.LAURA\n    ],\n    dates: [new Date(\"2015-12-31\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2016: Array<IGigData> = [\n  {\n    headline: MUSICIANS.HALSEY,\n    support: [MUSICIANS.BORNS],\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2016-02-22\")]\n  },\n  {\n    headline: MUSICIANS.JOSEF_SALVAT,\n    venue: MUSIC_VENUES.GORILLA,\n    favourite: true,\n    company: [],\n    dates: [new Date(\"2016-03-06\")]\n  },\n  {\n    headline: MUSICIANS.TROYE_SIVAN,\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2016-04-18\")]\n  },\n  {\n    headline: MUSICIANS.TOURIST,\n    venue: MUSIC_VENUES.DEAF_INSTITUTE,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2016-05-10\")]\n  },\n  {\n    festival: FESTIVALS.GLASTONBURY,\n    lineup: [\n      MUSICIANS.NAO,\n      MUSICIANS.CHRISTINE_AND_THE_QUEENS,\n      MUSICIANS.AURORA,\n      MUSICIANS.DAUGHTER,\n      MUSICIANS.DISCLOSURE,\n      MUSICIANS.CARL_COX,\n      MUSICIANS.FOUR_TET,\n      MUSICIANS.MACEO_PLEX,\n      MUSICIANS.ALESSIA_CARA,\n      MUSICIANS.TOM_ODELL,\n      MUSICIANS[1975],\n      MUSICIANS.WILL_YOUNG,\n      MUSICIANS.ADELE,\n      MUSICIANS.RALEIGH_RITCHIE,\n      MUSICIANS.YEARS_AND_YEARS,\n      MUSICIANS.ELLIE_GOULDING,\n      MUSICIANS.GRIMES\n    ],\n    venue: MUSIC_VENUES.WORTHY_FARM,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.ELLIE_G,\n      FRIENDS.GRACE,\n      FRIENDS.CAITLIN,\n      FRIENDS.ELLIE_P,\n      FRIENDS.THOM\n    ],\n    dates: [new Date(\"2016-06-24\"), new Date(\"2016-06-26\")]\n  },\n  {\n    headline: MUSICIANS.BEYONCE,\n    venue: MUSIC_VENUES.WEMBLEY_STADIUM,\n    company: [FRIENDS.EMMA],\n    dates: [new Date(\"2016-07-03\")],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.LOVEBOX,\n    lineup: [\n      MUSICIANS.MO,\n      MUSICIANS.RITON,\n      MUSICIANS.DIPLO,\n      MUSICIANS.PAUL_WOOLFORD,\n      MUSICIANS.HEIDI,\n      MUSICIANS.HANNAH_WANTS,\n      MUSICIANS.JORIS_VOORN,\n      MUSICIANS.MAJOR_LAZER\n    ],\n    venue: MUSIC_VENUES.VICTORIA_PARK,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.LAURA,\n      FRIENDS.LUKE_J,\n      FRIENDS.ALICE_R\n    ],\n    dates: [new Date(\"2016-07-15\")]\n  },\n  {\n    festival: FESTIVALS.DEFECTED_BRISTOL,\n    lineup: [MUSICIANS.MK],\n    venue: MUSIC_VENUES.MOTION,\n    dates: [new Date(\"2016-07-30\")],\n    company: [FRIENDS.CHELSEA, FRIENDS.SARAH_W]\n  },\n  {\n    festival: FESTIVALS.BRIGHTON_PRIDE,\n    lineup: [\n      MUSICIANS.DUA_LIPA,\n      MUSICIANS.CARLY_RAE_JEPSEN,\n      MUSICIANS.SISTER_SLEDGE\n    ],\n    venue: MUSIC_VENUES.PRESTON_PARK,\n    company: [\n      FRIENDS.ELLIE_G,\n      FRIENDS.POOJA,\n      FRIENDS.GRACE,\n      FRIENDS.SIAN,\n      FRIENDS.TONYA,\n      FRIENDS.ALICE_R\n    ],\n    dates: [new Date(\"2016-08-06\")]\n  },\n  {\n    festival: FESTIVALS.V_FESTIVAL,\n    lineup: [\n      MUSICIANS.MIKE_POSNER,\n      MUSICIANS.MNEK,\n      MUSICIANS.ZARA_LARSSON,\n      MUSICIANS.PHILIP_GEORGE,\n      MUSICIANS.JESS_GLYNNE,\n      MUSICIANS.FLIGHT_FACILITIES,\n      MUSICIANS.SIA,\n      MUSICIANS.JUSTIN_BIEBER\n    ],\n    venue: MUSIC_VENUES.WESTON_PARK,\n    company: [FRIENDS.SARAH_W, FRIENDS.CHELSEA],\n    dates: [new Date(\"2016-08-21\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [MUSICIANS.DUSKY, MUSICIANS.DANIEL_AVERY],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2016-09-30\")]\n  },\n  {\n    headline: MUSICIANS.ROOSEVELT,\n    venue: MUSIC_VENUES.XOYO,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2016-11-24\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2017: Array<IGigData> = [\n  {\n    headline: MUSICIANS.JONAS_BLUE,\n    venue: MUSIC_VENUES.MINISTRY_OF_SOUND,\n    dates: [new Date(\"2017-01-28\")],\n    company: [\n      FRIENDS.ALICE_R,\n      FRIENDS.TONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.LAURA\n    ]\n  },\n  {\n    headline: MUSICIANS.LYVES,\n    venue: MUSIC_VENUES.SERVANT_JAZZ_QUARTERS,\n    dates: [new Date(\"2017-02-20\")],\n    company: []\n  },\n  {\n    headline: MUSICIANS.DUSKY,\n    venue: MUSIC_VENUES.ELECTRIC_BRIXTON,\n    dates: [new Date(\"2017-02-24\")],\n    favourite: true,\n    company: [FRIENDS.TONYA, FRIENDS.TOM, FRIENDS.CAITLIN, FRIENDS.RYAN]\n  },\n  {\n    headline: MUSICIANS.MARTIN_SOLVEIG,\n    support: [MUSICIANS.JAX_JONES],\n    dates: [new Date(\"2017-03-10\")],\n    venue: MUSIC_VENUES.EGG,\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.BANKS,\n    dates: [new Date(\"2017-03-13\")],\n    venue: MUSIC_VENUES.ROUNDHOUSE,\n    company: [FRIENDS.BECKY, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.TOVE_LO,\n    support: [MUSICIANS.BROODS],\n    dates: [new Date(\"2017-03-17\")],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    company: [FRIENDS.DAN]\n  },\n  {\n    headline: MUSICIANS.MUNA,\n    dates: [new Date(\"2017-03-28\")],\n    venue: MUSIC_VENUES.HOXTON_SQUARE_BAR_AND_KITCHEN,\n    company: [FRIENDS.LUKE_S],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.JORJA_SMITH,\n    dates: [new Date(\"2017-04-03\")],\n    venue: MUSIC_VENUES.VILLAGE_UNDERGROUND,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.VERITE,\n    dates: [new Date(\"2017-04-06\")],\n    venue: MUSIC_VENUES.ELECTROWERKZ,\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.FRANCES,\n    dates: [new Date(\"2017-04-07\")],\n    venue: MUSIC_VENUES.INSTITUTE_BIRMINGHAM,\n    company: [FRIENDS.EMMA, FRIENDS.MUM]\n  },\n  {\n    headline: MUSICIANS.JONES,\n    dates: [new Date(\"2017-05-03\")],\n    venue: MUSIC_VENUES.HOXTON_HALL,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.BETSY,\n    dates: [new Date(\"2017-05-15\")],\n    venue: MUSIC_VENUES.MOTH_CLUB,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.ALMA,\n    dates: [new Date(\"2017-05-16\")],\n    venue: MUSIC_VENUES.OSLO_HACKNEY,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.BETTY_WHO,\n    dates: [new Date(\"2017-05-17\")],\n    venue: MUSIC_VENUES.ZIGFRID_VON_UNDERBELLY,\n    company: [FRIENDS.SIAN]\n  },\n  {\n    headline: MUSICIANS.PARAMORE,\n    dates: [new Date(\"2017-06-19\")],\n    venue: MUSIC_VENUES.ROYAL_ALBERT_HALL,\n    company: [FRIENDS.LUKE_S],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.LOVEBOX,\n    lineup: [\n      MUSICIANS.JOE_GODDARD,\n      MUSICIANS.RUFUS_DU_SOL,\n      MUSICIANS.BICEP,\n      MUSICIANS.JAMIE_XX,\n      MUSICIANS.EATS_EVERYTHING,\n      MUSICIANS.FRANK_OCEAN\n    ],\n    dates: [new Date(\"2017-07-14\")],\n    venue: MUSIC_VENUES.VICTORIA_PARK,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.CAITLIN,\n      FRIENDS.ALICE_R\n    ]\n  },\n  {\n    festival: FESTIVALS.BRIGHTON_PRIDE,\n    lineup: [MUSICIANS.BECKY_HILL, MUSICIANS.YEARS_AND_YEARS],\n    dates: [new Date(\"2017-08-05\")],\n    venue: MUSIC_VENUES.PRESTON_PARK,\n    company: [\n      FRIENDS.LUKE_S,\n      FRIENDS.TONYA,\n      FRIENDS.SONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.LAURA\n    ]\n  },\n  {\n    festival: FESTIVALS.BESTIVAL,\n    lineup: [\n      MUSICIANS.ALMA,\n      MUSICIANS.LITTLE_DRAGON,\n      MUSICIANS.KOLSCH,\n      MUSICIANS.THE_XX,\n      MUSICIANS.MACEO_PLEX,\n      MUSICIANS.JOE_GODDARD,\n      MUSICIANS.FOURS,\n      MUSICIANS.ANNA_OF_THE_NORTH,\n      MUSICIANS.LUCY_ROSE,\n      MUSICIANS.DIZZEE_RASCAL,\n      MUSICIANS.DUSKY,\n      MUSICIANS.CHARLOTTE_CHURCH,\n      MUSICIANS.SOUL_WAX,\n      MUSICIANS.PET_SHOP_BOYS\n    ],\n    dates: [new Date(\"2017-09-08\"), new Date(\"2017-09-10\")],\n    venue: MUSIC_VENUES.LULWORTH_ESTATE,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.RYAN,\n      FRIENDS.DAN,\n      FRIENDS.MARIA,\n      FRIENDS.CAITLIN,\n      FRIENDS.CAITY\n    ]\n  },\n  {\n    headline: MUSICIANS.SIGRID,\n    dates: [new Date(\"2017-09-13\")],\n    venue: MUSIC_VENUES.SCALA,\n    company: [FRIENDS.SIAN]\n  },\n  {\n    headline: MUSICIANS.ALLIE_X,\n    dates: [new Date(\"2017-09-18\")],\n    venue: MUSIC_VENUES.OMEARA,\n    company: [FRIENDS.SIAN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.LORDE,\n    dates: [new Date(\"2017-09-27\")],\n    favourite: true,\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE,\n    company: [FRIENDS.LUKE_S, FRIENDS.CAITLIN, FRIENDS.CAITY]\n  },\n  {\n    headline: MUSICIANS.MURA_MASA,\n    dates: [new Date(\"2017-10-19\")],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.FREYA_RIDINGS,\n    dates: [new Date(\"2017-10-26\")],\n    venue: MUSIC_VENUES.ST_GILES_IN_THE_FIELD,\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.PVRIS,\n    dates: [new Date(\"2017-11-30\")],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    company: [FRIENDS.LUKE_S]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2018: Array<IGigData> = [\n  {\n    headline: MUSICIANS.KYGO,\n    support: [MUSICIANS.GRYFFIN, MUSICIANS.SEEB],\n    venue: MUSIC_VENUES.THE_O2,\n    dates: [new Date(\"2018-02-25\")],\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.CODE,\n    venue: MUSIC_VENUES.CORSICA_STUDIOS,\n    dates: [new Date(\"2018-03-07\")],\n    company: [FRIENDS.JERRY, FRIENDS.JAMIE, FRIENDS.DOM]\n  },\n  {\n    headline: MUSICIANS.GEORGE_FITZGERALD,\n    venue: MUSIC_VENUES.ISLINGTON_ASSEMBLY_HALL,\n    dates: [new Date(\"2018-03-27\")],\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.AQUILO,\n    venue: MUSIC_VENUES.OVAL_SPACE,\n    dates: [new Date(\"2018-04-19\")],\n    company: [FRIENDS.JAMIE]\n  },\n  {\n    headline: MUSICIANS.TWO_FEET,\n    venue: MUSIC_VENUES.ELECTROWERKZ,\n    dates: [new Date(\"2018-05-24\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.KIM_PETRAS,\n    venue: MUSIC_VENUES.COURTYARD_THEATRE,\n    dates: [new Date(\"2018-05-25\")],\n    company: [FRIENDS.JERRY],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.HAIM,\n    support: [MUSICIANS.MAGGIE_ROGERS],\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE,\n    dates: [new Date(\"2018-06-15\")],\n    company: [FRIENDS.EMMA, FRIENDS.BECKY, FRIENDS.CAITLIN]\n  },\n  {\n    festival: FESTIVALS.ON_THE_RUN_II,\n    lineup: [MUSICIANS.JAY_Z, MUSICIANS.BEYONCE],\n    venue: MUSIC_VENUES.LONDON_STADIUM,\n    dates: [new Date(\"2018-06-16\")],\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.TAYLOR_SWIFT,\n    support: [MUSICIANS.CHARLI_XCX, MUSICIANS.CAMILA_CABELLO],\n    venue: MUSIC_VENUES.WEMBLEY_STADIUM,\n    dates: [new Date(\"2018-06-22\")],\n    company: [FRIENDS.DAN],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.NOTION_SUMMER_PARTY,\n    lineup: [\n      MUSICIANS.M_0,\n      MUSICIANS.BONDAX,\n      MUSICIANS.RITON,\n      MUSICIANS.KAH_LO,\n      MUSICIANS.ANNE_MARIE,\n      MUSICIANS.MO\n    ],\n    venue: MUSIC_VENUES.TROXY,\n    dates: [new Date(\"2018-07-27\")],\n    company: [FRIENDS.LUKE_J]\n  },\n  {\n    festival: FESTIVALS.BRIGHTON_PRIDE,\n    lineup: [MUSICIANS.BRITNEY_SPEARS],\n    venue: MUSIC_VENUES.PRESTON_PARK,\n    dates: [new Date(\"2018-08-04\")],\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.SONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.SIAN\n    ]\n  },\n  {\n    headline: MUSICIANS.SOFI_TUKKER,\n    venue: MUSIC_VENUES.KOKO,\n    dates: [new Date(\"2018-09-17\")],\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.LAUV,\n    venue: MUSIC_VENUES.KOKO,\n    dates: [new Date(\"2018-09-18\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.RALPH,\n    venue: MUSIC_VENUES.OLD_BLUE_LAST,\n    dates: [new Date(\"2018-10-15\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.RAINBOW_KITTEN_SURPRISE,\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2018-10-31\")],\n    company: [FRIENDS.JAMIE]\n  },\n  {\n    headline: MUSICIANS.LYKKE_LI,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2018-11-04\")],\n    company: [FRIENDS.EMMA],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    venue: MUSIC_VENUES.THE_O2,\n    dates: [new Date(\"2018-11-21\")],\n    company: [FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.YOU_ME_AT_SIX,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2018-12-03\")],\n    company: [FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2019: Array<IGigData> = [\n  {\n    headline: MUSICIANS[1975],\n    venue: MUSIC_VENUES.THE_O2,\n    dates: [new Date(\"2019-01-19\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.MAGGIE_ROGERS,\n    support: [MUSICIANS.MALLRAT],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-02-19\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.TROYE_SIVAN,\n    support: [MUSICIANS.LELAND],\n    venue: MUSIC_VENUES.HAMMERSMITH_APOLLO,\n    dates: [new Date(\"2019-02-28\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.LANY,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-03-12\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.LEON,\n    venue: MUSIC_VENUES.ISLINGTON_ASSEMBLY_HALL,\n    dates: [new Date(\"2019-04-08\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BULOW,\n    venue: MUSIC_VENUES.COURTYARD_THEATRE,\n    dates: [new Date(\"2019-04-11\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.ROBYN,\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE,\n    dates: [new Date(\"2019-04-12\")],\n    company: [FRIENDS.DAN, FRIENDS.RYAN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BEARS_DEN,\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-04-23\")],\n    company: [FRIENDS.JAMIE]\n  },\n  {\n    headline: MUSICIANS.MARINA,\n    venue: MUSIC_VENUES.ROYAL_ALBERT_HALL,\n    dates: [new Date(\"2019-05-03\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.SASHA_SLOAN,\n    venue: MUSIC_VENUES.DINGWALLS,\n    dates: [new Date(\"2019-05-07\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.G_FLIP,\n    venue: MUSIC_VENUES.THE_GARAGE,\n    dates: [new Date(\"2019-05-15\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.FKA_TWIGS,\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE_THEATRE,\n    dates: [new Date(\"2019-05-28\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.FLEETWOOD_MAC,\n    support: [MUSICIANS.PRETENDERS],\n    venue: MUSIC_VENUES.WEMBLEY_STADIUM,\n    dates: [new Date(\"2019-06-16\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.SOPHIE,\n    favourite: true,\n    venue: MUSIC_VENUES.ROYAL_FESTIVAL_HALL,\n    dates: [new Date(\"2019-08-10\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    festival: FESTIVALS.MANCHESTER_PRIDE,\n    lineup: [\n      MUSICIANS.BECKY_HILL,\n      MUSICIANS.BANANARAMA,\n      MUSICIANS.TULISA,\n      MUSICIANS.CHERYL,\n      MUSICIANS.ARIANA_GRANDA\n    ],\n    venue: MUSIC_VENUES.MAYFIELD_DEPOT,\n    dates: [new Date(\"2019-08-25\")],\n    company: [\n      FRIENDS.DAN,\n      FRIENDS.MARIA,\n      FRIENDS.ASH,\n      FRIENDS.SAM_B,\n      FRIENDS.LINDSAY_A\n    ]\n  },\n  {\n    headline: MUSICIANS.KIM_PETRAS,\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2019-08-27\")],\n    company: [FRIENDS.DARREN, FRIENDS.JERRY]\n  },\n  {\n    festival: FESTIVALS.CHINGFEST,\n    lineup: [MUSICIANS.INCOGNITO, MUSICIANS.NAO],\n    venue: MUSIC_VENUES.RIDGEWAY_PARK,\n    dates: [new Date(\"2019-08-31\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.MUNA,\n    venue: MUSIC_VENUES.VILLAGE_UNDERGROUND,\n    dates: [new Date(\"2019-09-10\")],\n    company: [FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.JULIA_MICHAELS,\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-09-17\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.ELDERBROOK,\n    venue: MUSIC_VENUES.EARTH,\n    dates: [new Date(\"2019-10-12\")],\n    company: [FRIENDS.TONYA, FRIENDS.SONYA, FRIENDS.LAURA]\n  },\n  {\n    headline: MUSICIANS.CHARLI_XCX,\n    support: [MUSICIANS.RINA_SAWAYAMA],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-10-31\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BANKS,\n    support: [MUSICIANS.GLOWIE],\n    venue: MUSIC_VENUES.ROUNDHOUSE,\n    dates: [new Date(\"2019-11-04\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.LAUV,\n    support: [MUSICIANS.CHELSEA_CUTLER],\n    venue: MUSIC_VENUES.KENTISH_TOWN_FORUM,\n    dates: [new Date(\"2019-11-05\")],\n    company: [FRIENDS.JERRY, FRIENDS.POPPY]\n  },\n  {\n    festival: FESTIVALS.HOMOBLOC,\n    lineup: [MUSICIANS.ROMY, MUSICIANS.ROBYN, MUSICIANS.HORSE_MEAT_DISCO],\n    venue: MUSIC_VENUES.MAYFIELD_DEPOT,\n    dates: [new Date(\"2019-11-09\")],\n    company: [FRIENDS.DAN, FRIENDS.MARIA]\n  },\n  {\n    headline: MUSICIANS.SABRINA_CLAUDIO,\n    support: [MUSICIANS.OH_ANNIE_OH],\n    venue: MUSIC_VENUES.ELECTRIC_BRIXTON,\n    dates: [new Date(\"2019-11-19\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.ROBINSON,\n    support: [MUSICIANS.NAVVY],\n    venue: MUSIC_VENUES.QUEEN_OF_HOXTON,\n    dates: [new Date(\"2019-11-20\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.FKA_TWIGS,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-11-25\")],\n    company: [FRIENDS.DARREN, FRIENDS.CAITLIN, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.NAAZ,\n    support: [MUSICIANS.DYLAN],\n    venue: MUSIC_VENUES.CAMDEN_ASSEMBLY,\n    dates: [new Date(\"2019-11-27\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.MUNA,\n    support: [MUSICIANS.L_DEVINE],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-12-03\")],\n    company: [FRIENDS.LEWIS, FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.MELANIE_MARTINEZ,\n    support: [MUSICIANS.NAAZ],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-12-09\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    festival: FESTIVALS.AREA_10_NYE,\n    lineup: [MUSICIANS.MK],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-12-31\")],\n    company: [FRIENDS.TOM, FRIENDS.TONYA, FRIENDS.SONYA]\n  }\n];\n","import { FRIENDS, MUSICIANS, TICKET_TYPES, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2020: Array<IGigData> = [\n  {\n    headline: MUSICIANS.GRACEY,\n    venue: MUSIC_VENUES.LAYLOW,\n    dates: [new Date(\"2020-01-28\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.JOSEF_SALVAT,\n    venue: MUSIC_VENUES.MOTH_CLUB,\n    dates: [new Date(\"2020-02-05\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.KIM_PETRAS,\n    support: [MUSICIANS.ALEX_CHAPMAN],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2020-02-11\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.NASTY_CHERRY,\n    venue: MUSIC_VENUES.THE_GARAGE,\n    dates: [new Date(\"2020-03-03\")],\n    company: [FRIENDS.DARREN, FRIENDS.MEGAN],\n    ticketType: TICKET_TYPES.SEE_TICKETS_PRINT_AT_HOME\n  },\n  {\n    headline: MUSICIANS.CHRISTINE_AND_THE_QUEENS,\n    venue: MUSIC_VENUES.MOTH_CLUB,\n    dates: [new Date(\"2020-03-07\")],\n    favourite: true,\n    company: [FRIENDS.DARREN],\n    ticketType: TICKET_TYPES.GIGS_AND_TOURS_POSTAL\n  },\n  {\n    headline: MUSICIANS.CAROLINE_POLACHEK,\n    support: [MUSICIANS.SEGA_BODEGA],\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2020-03-11\")],\n    company: [FRIENDS.DARREN],\n    ticketType: TICKET_TYPES.DICE\n  },\n  {\n    headline: MUSICIANS.GEORGIA,\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2020-03-12\")],\n    company: [FRIENDS.DARREN],\n    ticketType: TICKET_TYPES.DICE\n  },\n  // {\n  //   headline: MUSICIANS.ALLIE_X,\n  //   venue: MUSIC_VENUES.HEAVEN,\n  //   dates: [new Date(\"2020-06-04\"),\n  //   company: FRIENDS.DARREN,\n  //   ticketType: TICKET_TYPES.DICE,\n  // },\n  // {\n  //   festival: FESTIVALS.MAD_COOL,\n  //   lineup: [MUSICIANS.TWENTY_ONE_PILOTS],\n  //   venue: MUSIC_VENUES.IFEMA_MADRID,\n  //   dates: [new Date(\"2020-07-08\")],\n  //   company: [FRIENDS.DAN],\n  //   ticketType: TICKET_TYPES.FESTICKET_PDF\n  // },\n  // {\n  //   headline: MUSICIANS.LADY_GAGA,\n  //   venue: MUSIC_VENUES.TOTTENHAM_HOTSPUR_STADIUM,\n  //   dates: [new Date(\"2020-07-30\")],\n  //   company: [FRIENDS.RYAN, FRIENDS.DAN, FRIENDS.TOM]\n  // },\n  {\n    headline: MUSICIANS.CARIBOU,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2020-09-13\")],\n    company: [FRIENDS.DARREN],\n    ticketType: TICKET_TYPES.TICKETMASTER_ETICKET\n  },\n  {\n    headline: MUSICIANS.SOPHIE,\n    support: [MUSICIANS.EARTHEATER],\n    venue: MUSIC_VENUES.OVAL_SPACE,\n    dates: [new Date(\"2020-10-17\")],\n    company: [FRIENDS.LEWIS, FRIENDS.JERRY],\n    ticketType: TICKET_TYPES.DICE\n  },\n  {\n    headline: MUSICIANS.LANE_8,\n    venue: MUSIC_VENUES.PRINTWORKS,\n    dates: [new Date(\"2020-10-25\")],\n    company: [FRIENDS.TONYA],\n    ticketType: TICKET_TYPES.DICE\n  },\n  {\n    headline: MUSICIANS.JON_HOPKINS,\n    venue: MUSIC_VENUES.ROYAL_ALBERT_HALL,\n    dates: [new Date(\"2020-12-04\")],\n    company: [FRIENDS.TONYA]\n  }\n];\n","import {\n  FRIENDS,\n  FESTIVALS,\n  MUSICIANS,\n  TICKET_TYPES,\n  MUSIC_VENUES\n} from \"@constants\";\n\nexport const GIGS_2021: Array<IGigData> = [\n  {\n    festival: FESTIVALS.MIGHTY_HOOPLA,\n    venue: MUSIC_VENUES.BROCKWELL_PARK,\n    dates: [new Date(\"2021-06-05\")],\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.MARIA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.DARREN,\n      FRIENDS.SIAN,\n      FRIENDS.CAITLIN,\n      FRIENDS.DAN\n    ],\n    ticketType: TICKET_TYPES.KABOODLE_ETICKET\n  },\n  {\n    headline: MUSICIANS[1975],\n    venue: MUSIC_VENUES.FINSBURY_PARK,\n    dates: [new Date(\"2021-07-10\")],\n    company: [\n      FRIENDS.DAN,\n      FRIENDS.LEWIS,\n      FRIENDS.JERRY,\n      FRIENDS.CAITLIN,\n      FRIENDS.COBY_B\n    ],\n    ticketType: TICKET_TYPES.TICKETMASTER_ETICKET\n  }\n];\n","import { GIGS_2006 } from \"./gigs-2006\";\nimport { GIGS_2007 } from \"./gigs-2007\";\nimport { GIGS_2008 } from \"./gigs-2008\";\nimport { GIGS_2009 } from \"./gigs-2009\";\nimport { GIGS_2010 } from \"./gigs-2010\";\nimport { GIGS_2011 } from \"./gigs-2011\";\nimport { GIGS_2012 } from \"./gigs-2012\";\nimport { GIGS_2013 } from \"./gigs-2013\";\nimport { GIGS_2014 } from \"./gigs-2014\";\nimport { GIGS_2015 } from \"./gigs-2015\";\nimport { GIGS_2016 } from \"./gigs-2016\";\nimport { GIGS_2017 } from \"./gigs-2017\";\nimport { GIGS_2018 } from \"./gigs-2018\";\nimport { GIGS_2019 } from \"./gigs-2019\";\nimport { GIGS_2020 } from \"./gigs-2020\";\nimport { GIGS_2021 } from \"./gigs-2021\";\n\nconst ALL: Array<IGigData> = [\n  ...GIGS_2006,\n  ...GIGS_2007,\n  ...GIGS_2008,\n  ...GIGS_2009,\n  ...GIGS_2010,\n  ...GIGS_2011,\n  ...GIGS_2012,\n  ...GIGS_2013,\n  ...GIGS_2014,\n  ...GIGS_2015,\n  ...GIGS_2016,\n  ...GIGS_2017,\n  ...GIGS_2018,\n  ...GIGS_2019,\n  ...GIGS_2020,\n  ...GIGS_2021\n];\n\nconst ALL_GROUPED_BY_YEAR: Array<Array<IGigData>> = [\n  GIGS_2006,\n  GIGS_2007,\n  GIGS_2008,\n  GIGS_2009,\n  GIGS_2010,\n  GIGS_2011,\n  GIGS_2012,\n  GIGS_2013,\n  GIGS_2014,\n  GIGS_2015,\n  GIGS_2016,\n  GIGS_2017,\n  GIGS_2018,\n  GIGS_2019,\n  GIGS_2020,\n  GIGS_2021\n];\n\nexport const DATA_GIGS = { ALL, ALL_GROUPED_BY_YEAR };\n","import { PLAYS, THEATRE_VENUES, FRIENDS } from \"@constants\";\n\nexport const THEATRE_2016: Array<ITheatreData> = [\n  {\n    play: PLAYS.MIDSUMMER_NIGHTS_DREAM,\n    theatre: THEATRE_VENUES.ROYAL_SHAKESPEARE,\n    dates: [new Date(\"2016-06-17\")],\n    company: [FRIENDS.SIAN]\n  },\n  {\n    play: PLAYS[1984],\n    theatre: THEATRE_VENUES.PLAYHOUSE,\n    dates: [new Date(\"2016-08-13\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    favourite: true\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS } from \"@constants\";\n\nexport const THEATRE_2017: Array<ITheatreData> = [\n  {\n    play: PLAYS.UGLY_LIES_THE_BONE,\n    theatre: THEATRE_VENUES.NATIONAL,\n    dates: [new Date(\"2017-03-25\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    play: PLAYS.KINKY_BOOTS,\n    theatre: THEATRE_VENUES.ADELPHI,\n    dates: [new Date(\"2017-05-23\")],\n    company: [FRIENDS.SIAN]\n  },\n  {\n    play: PLAYS.MATILDA,\n    theatre: THEATRE_VENUES.CAMBRIDGE,\n    dates: [new Date(\"2017-06-07\")],\n    company: [FRIENDS.SIAN, FRIENDS.LUKE_S]\n  },\n  {\n    play: PLAYS.YOUNG_MARX,\n    theatre: THEATRE_VENUES.BRIDGE,\n    dates: [new Date(\"2017-10-24\")],\n    company: [FRIENDS.JHC, FRIENDS.JOE, FRIENDS.JAMIE, FRIENDS.AISHA]\n  },\n  {\n    play: PLAYS.FERRYMAN,\n    favourite: true,\n    theatre: THEATRE_VENUES.GIELGUD,\n    dates: [new Date(\"2017-11-26\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS, ACTORS } from \"@constants\";\n\nexport const THEATRE_2018: Array<ITheatreData> = [\n  {\n    play: PLAYS.FROZEN,\n    theatre: THEATRE_VENUES.ROYAL_HAYMARKET,\n    dates: [new Date(\"2018-04-14\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    cast: [ACTORS.SURANNE_JONES, ACTORS.NINA_SOSANYA, ACTORS.JASON_WATKINS]\n  },\n  {\n    play: PLAYS.EVERYBODYS_TALKING_ABOUT_JAMIE,\n    cast: [ACTORS.JOHN_MCCREA],\n    theatre: THEATRE_VENUES.APOLLO,\n    dates: [new Date(\"2018-05-12\")],\n    company: [FRIENDS.SIAN]\n  },\n  {\n    play: PLAYS.CONSENT,\n    cast: [ACTORS.SIAN_CLIFFORD, ACTORS.ADAM_JAMES, ACTORS.LEE_INGLEBY],\n    theatre: THEATRE_VENUES.HAROLD_PINTER,\n    dates: [new Date(\"2018-06-30\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    play: PLAYS.THAT_GIRL,\n    cast: [ACTORS.HATTY_JONES],\n    theatre: THEATRE_VENUES.OLD_RED_LION,\n    dates: [new Date(\"2018-09-05\")],\n    company: [\n      FRIENDS.JHC,\n      FRIENDS.JOE,\n      FRIENDS.JAMIE,\n      FRIENDS.LEWIS,\n      FRIENDS.DOM\n    ]\n  },\n  {\n    play: PLAYS.DUST,\n    theatre: THEATRE_VENUES.TRAFALGAR_STUDIOS,\n    cast: [ACTORS.MILLY_THOMAS],\n    dates: [new Date(\"2018-10-08\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    favourite: true\n  },\n  {\n    play: PLAYS.INHERITANCE,\n    theatre: THEATRE_VENUES.NOEL_COWARD,\n    dates: [new Date(\"2018-10-27\")],\n    company: [FRIENDS.MUM],\n    favourite: true\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS, ACTORS } from \"@constants\";\n\nexport const THEATRE_2019: Array<ITheatreData> = [\n  {\n    play: PLAYS.WICKED,\n    theatre: THEATRE_VENUES.APOLLO_VICTORIA,\n    dates: [new Date(\"2019-01-12\")],\n    company: [FRIENDS.DAN, FRIENDS.MARIA]\n  },\n  {\n    play: PLAYS.LEAVE_TO_REMAIN,\n    theatre: THEATRE_VENUES.LYRIC,\n    dates: [new Date(\"2019-01-22\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    play: PLAYS.HOME_IM_DARLING,\n    cast: [ACTORS.KATHERINE_PARKINSON],\n    theatre: THEATRE_VENUES.DUKE_OF_YORKS,\n    dates: [new Date(\"2019-03-04\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    play: PLAYS.MIDSUMMER_NIGHTS_DREAM,\n    cast: [\n      ACTORS.GWENDOLINE_CHRISITE,\n      ACTORS.DAVID_MOORST,\n      ACTORS.OLIVER_CHRIS,\n      ACTORS.HAMMED_ANIMASHAUN\n    ],\n    theatre: THEATRE_VENUES.BRIDGE,\n    dates: [new Date(\"2019-08-08\")],\n    company: [FRIENDS.JHC, FRIENDS.JERRY, FRIENDS.JOE, FRIENDS.LEWIS]\n  },\n  {\n    play: PLAYS.SON,\n    cast: [ACTORS.LAURIE_KYNASTON],\n    theatre: THEATRE_VENUES.DUKE_OF_YORKS,\n    dates: [new Date(\"2019-09-28\")],\n    company: [FRIENDS.MUM]\n  },\n  {\n    play: PLAYS.LOST_UNFOUND,\n    theatre: THEATRE_VENUES.WHITE_BEAR,\n    dates: [new Date(\"2019-10-09\")],\n    company: [FRIENDS.JERRY, FRIENDS.LEWIS, FRIENDS.DOM, FRIENDS.JAMIE]\n  },\n\n  {\n    play: PLAYS.LUNGS,\n    theatre: THEATRE_VENUES.OLD_VIC,\n    cast: [ACTORS.CLAIRE_FOY, ACTORS.MATT_SMITH],\n    dates: [new Date(\"2019-10-26\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    favourite: true\n  },\n  {\n    play: PLAYS.AFTERGLOW,\n    cast: [ACTORS.PETER_MCPHERSON, ACTORS.ADI_CHUGH, ACTORS.BENJAMIN_ALUWIHARE],\n    theatre: THEATRE_VENUES.WATERLOO_EAST,\n    dates: [new Date(\"2019-11-30\")],\n    company: [FRIENDS.DAN]\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS, ACTORS } from \"@constants\";\n\nexport const THEATRE_2020: Array<ITheatreData> = [\n  {\n    play: PLAYS.WAITRESS,\n    theatre: THEATRE_VENUES.ADELPHI,\n    dates: [new Date(\"2020-02-18\")],\n    company: [FRIENDS.DARREN],\n    cast: [ACTORS.SARA_BAREILLES]\n  },\n  {\n    play: PLAYS.UNCLE_VANYA,\n    theatre: THEATRE_VENUES.HAROLD_PINTER,\n    dates: [new Date(\"2020-02-19\")],\n    cast: [ACTORS.AIMEE_LOU_WOOD],\n    company: [FRIENDS.MUM]\n  }\n  // {\n  //   play: PLAYS[\"4000_MILES\"],\n  //   theatre: THEATRE_VENUES.OLD_VIC,\n  //   dates: [new Date(\"2020-05-09\"),\n  //   cast: ACTORS.TIMOTHEE_CHALAMET,\n  //   company: [FRIENDS.MUM, FRIENDS.EMMA]\n  // }\n];\n","import { THEATRE_2016 } from \"./theatre-2016\";\nimport { THEATRE_2017 } from \"./theatre-2017\";\nimport { THEATRE_2018 } from \"./theatre-2018\";\nimport { THEATRE_2019 } from \"./theatre-2019\";\nimport { THEATRE_2020 } from \"./theatre-2020\";\n\nconst ALL: Array<ITheatreData> = [\n  ...THEATRE_2016,\n  ...THEATRE_2017,\n  ...THEATRE_2018,\n  ...THEATRE_2019,\n  ...THEATRE_2020\n];\n\nconst ALL_GROUPED_BY_YEAR: Array<Array<ITheatreData>> = [\n  THEATRE_2016,\n  THEATRE_2017,\n  THEATRE_2018,\n  THEATRE_2019,\n  THEATRE_2020\n];\n\nexport const DATA_THEATRE = { ALL, ALL_GROUPED_BY_YEAR };\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_1997: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.SPAIN.islands.TENERIFE],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"1997-02-05\"), new Date(\"1997-02-12\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_1998: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.SPAIN.islands.LANZAROTE],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"1998-02-01\"), new Date(\"1998-02-14\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_1999: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.FRANCE.attractions.DISNEYLAND_PARIS],\n    subtitle: [LOCATIONS.FRANCE],\n    dates: [new Date(\"1999-05-27\"), new Date(\"1999-05-30\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.SPAIN.islands.MINORCA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"1999-07-23\"), new Date(\"1999-08-06\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2000: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.SPAIN.islands.MINORCA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2000-07-28\"), new Date(\"2000-08-11\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2001: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.SPAIN.islands.IBIZA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2001-08-20\"), new Date(\"2001-09-03\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2002: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.USA.states.FLORIDA],\n    subtitle: [LOCATIONS.USA],\n    hidden: [\n      LOCATIONS.USA.attractions.BUSCH_GARDENS_TAMPA,\n      LOCATIONS.USA.attractions.DISNEY_EPCOT,\n      LOCATIONS.USA.attractions.UNIVERSALS_ISLANDS_OF_ADVENTURE,\n      LOCATIONS.USA.attractions.UNIVERSAL_STUDIOS_FLORIDA,\n      LOCATIONS.USA.attractions.DISNEY_ANIMAL_KINGDOM,\n      LOCATIONS.USA.attractions.DISNEY_MGM_STUDIOS,\n      LOCATIONS.USA.attractions.DISNEY_MAGIC_KINGDOM,\n      LOCATIONS.USA.attractions.BLIZZARD_BEACH,\n      LOCATIONS.USA.attractions.SEAWORLD_ORLANDO\n    ],\n    dates: [new Date(\"2002-05-23\"), new Date(\"2002-06-12\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2003: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.PORTUGAL],\n    hidden: [LOCATIONS.PORTUGAL.attractions.ZOOMARINE],\n    dates: [new Date(\"2003-07-31\"), new Date(\"2003-08-14\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2004: Array<ITravelData> = [\n  {\n    title: [\n      LOCATIONS.USA.states.NEW_YORK,\n      LOCATIONS.CANADA.cities.NIAGARA_FALLS,\n      LOCATIONS.USA.states.MASSACHUSETTS\n    ],\n    subtitle: [\n      LOCATIONS.USA.cities.NEW_YORK_CITY,\n      LOCATIONS.CANADA.cities.NIAGARA_FALLS,\n      LOCATIONS.USA.cities.BOSTON_MASSACHUSETTS,\n      LOCATIONS.USA.cities.SPRINGFIELD_MASSACHUSETTS,\n      LOCATIONS.USA.regions.CAPE_COD,\n      LOCATIONS.USA.islands.MARTHAS_VINEYARD\n    ],\n    hidden: [\n      LOCATIONS.USA,\n      LOCATIONS.USA.attractions.CENTRAL_PARK,\n      LOCATIONS.USA.attractions.TIMES_SQUARE,\n      LOCATIONS.USA.attractions.BROOKLYN_BRIDGE,\n      LOCATIONS.USA.attractions.WORLD_TRADE_CENTER,\n      LOCATIONS.CANADA,\n      LOCATIONS.CANADA.attractions.NIAGARA_FALLS,\n      LOCATIONS.USA.attractions.SIX_FLAGS_NEW_ENGLAND\n    ],\n    dates: [new Date(\"2004-07-30\"), new Date(\"2004-08-17\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.DAD]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2005: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.SPAIN.attractions.PORTAVENTURA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2005-07-26\"), new Date(\"2005-08-02\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.GREECE.regions.HALKIDIKI],\n    subtitle: [LOCATIONS.GREECE],\n    dates: [new Date(\"2005-08-18\"), new Date(\"2005-08-23\")],\n    company: [\n      FRIENDS.EMMA,\n      FRIENDS.LOUISE,\n      FRIENDS.MEGAN,\n      FRIENDS.MUM,\n      FRIENDS.CAMERON\n    ]\n  },\n  {\n    title: [LOCATIONS.UK.attractions.LAKE_DISTRICT],\n    notAbroad: true,\n    subtitle: [LOCATIONS.UK],\n    dates: [new Date(\"2005-10-22\"), new Date(\"2005-10-24\")],\n    company: [FRIENDS.EMMA, FRIENDS.MUM]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2006: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.USA.states.FLORIDA],\n    subtitle: [LOCATIONS.USA],\n    hidden: [\n      LOCATIONS.USA.attractions.BUSCH_GARDENS_TAMPA,\n      LOCATIONS.USA.attractions.VENICE_BEACH,\n      LOCATIONS.USA.attractions.UNIVERSALS_ISLANDS_OF_ADVENTURE,\n      LOCATIONS.USA.attractions.SEAWORLD_ORLANDO,\n      LOCATIONS.USA.attractions.DISNEY_MGM_STUDIOS,\n      LOCATIONS.USA.attractions.WET_N_WILD_ORLANDO\n    ],\n    dates: [new Date(\"2006-07-25\"), new Date(\"2006-08-05\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.ITALY.towns.SORRENTO, LOCATIONS.ITALY.cities.POMPEII],\n    subtitle: [LOCATIONS.ITALY],\n    hidden: [\n      LOCATIONS.ITALY.attractions.VESUVIUS,\n      LOCATIONS.ITALY.cities.NAPLES\n    ],\n    dates: [new Date(\"2006-08-18\"), new Date(\"2006-08-25\")],\n    company: [\n      FRIENDS.MUM,\n      FRIENDS.EMMA,\n      FRIENDS.LOUISE,\n      FRIENDS.MEGAN,\n      FRIENDS.CAMERON\n    ]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2007: Array<ITravelData> = [\n  {\n    title: [\n      LOCATIONS.USA.cities.SAN_FRANCISCO,\n      LOCATIONS.USA.cities.LOS_ANGELES\n    ],\n    subtitle: [LOCATIONS.USA],\n    hidden: [\n      LOCATIONS.USA.attractions.GOLDEN_GATE_BRIDGE,\n      LOCATIONS.USA.attractions.FISHERMANS_WHARF,\n      LOCATIONS.USA.attractions.ALCATRAZ_PRISON,\n      LOCATIONS.USA.attractions.KNOTTS_BERRY_FARM,\n      LOCATIONS.USA.attractions.HOLLYWOOD_WALK_OF_FAME,\n      LOCATIONS.USA.islands.ALCATRAZ,\n      LOCATIONS.USA.attractions.DISNEYLAND_CALIFORNIA_ADVENTURE\n    ],\n    dates: [new Date(\"2007-07-24\"), new Date(\"2007-08-05\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.UK.regions.CORNWALL],\n    notAbroad: true,\n    subtitle: [LOCATIONS.UK],\n    dates: [new Date(\"2007-08-11\"), new Date(\"2007-08-18\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2008: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.ITALY.cities.ROME, LOCATIONS.ITALY.cities.VATICAN],\n    subtitle: [LOCATIONS.ITALY],\n    hidden: [\n      LOCATIONS.ITALY.attractions.COLOSSEUM,\n      LOCATIONS.ITALY.attractions.TREVI_FOUNTAIN\n    ],\n    dates: [new Date(\"2008-02-08\"), new Date(\"2008-02-10\")],\n    company: [FRIENDS.EMMA, FRIENDS.DAD]\n  },\n  {\n    title: [LOCATIONS.FRANCE.cities.PARIS],\n    subtitle: [LOCATIONS.FRANCE],\n    hidden: [\n      LOCATIONS.FRANCE.attractions.AIR_SPACE_MUSEUM,\n      LOCATIONS.FRANCE.attractions.ARC_DE_TRIOMPHE,\n      LOCATIONS.FRANCE.attractions.EIFFEL_TOWER,\n      LOCATIONS.FRANCE.attractions.LOUVRE,\n      LOCATIONS.FRANCE.attractions.SCIENCE_MUSEUM,\n      LOCATIONS.FRANCE.attractions.SACRE_COEUR,\n      LOCATIONS.FRANCE.attractions.PARC_ASTERIX,\n      LOCATIONS.FRANCE.attractions.AIR_SPACE_MUSEUM\n    ],\n    dates: [new Date(\"2008-04-15\"), new Date(\"2008-04-19\")],\n    company: [\n      FRIENDS.CFS,\n      FRIENDS.BLAINE,\n      FRIENDS.ELLIE_S,\n      FRIENDS.NAV,\n      FRIENDS.ANNIE_B,\n      FRIENDS.JUNAID,\n      FRIENDS.GEMMA,\n      FRIENDS.SARAH_W\n    ]\n  },\n  {\n    title: [LOCATIONS.USA.cities.WASHINGTON_DC, LOCATIONS.USA.states.VIRGINIA],\n    subtitle: [LOCATIONS.USA],\n    hidden: [\n      LOCATIONS.USA.cities.VIRGINIA_BEACH,\n      LOCATIONS.USA.attractions.WASHINGTON_MONUMENT,\n      LOCATIONS.USA.attractions.SIX_FLAGS_AMERICA,\n      LOCATIONS.USA.attractions.LINCOLN_MEMORIAL,\n      LOCATIONS.USA.attractions.CAPITOL_BUILDING,\n      LOCATIONS.USA.attractions.WHITE_HOUSE,\n      LOCATIONS.USA.attractions.BUSCH_GARDENS_WILLIAMSBURG\n    ],\n    dates: [new Date(\"2008-07-13\"), new Date(\"2008-07-24\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.PORTUGAL.towns.VILAMOURA],\n    subtitle: [LOCATIONS.PORTUGAL],\n    dates: [new Date(\"2008-08-07\"), new Date(\"2008-08-14\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2009: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.BELGIUM.attractions.BATTLEFIELDS],\n    subtitle: [LOCATIONS.BELGIUM],\n    hidden: [LOCATIONS.BELGIUM.cities.YPRES],\n    dates: [new Date(\"2009-06-12\"), new Date(\"2009-06-15\")],\n    company: [\n      FRIENDS.CFS,\n      FRIENDS.ELLIE_S,\n      FRIENDS.GRACE,\n      FRIENDS.BLAINE,\n      FRIENDS.POOJA,\n      FRIENDS.ELLIE_G,\n      FRIENDS.GEORGE,\n      FRIENDS.KIERAN_S\n    ]\n  },\n  {\n    title: [\n      LOCATIONS.USA.cities.LAS_VEGAS,\n      LOCATIONS.USA.attractions.GRAND_CANYON,\n      LOCATIONS.USA.cities.LOS_ANGELES\n    ],\n    hidden: [\n      LOCATIONS.USA.attractions.HOLLYWOOD_WALK_OF_FAME,\n      LOCATIONS.USA.attractions.SIX_FLAGS_MAGIC_MOUNTAIN,\n      LOCATIONS.USA.attractions.FARMERS_MARKET\n    ],\n    subtitle: [LOCATIONS.USA],\n    dates: [new Date(\"2009-07-21\"), new Date(\"2009-07-31\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.GREECE.islands.KOS],\n    subtitle: [LOCATIONS.GREECE],\n    dates: [new Date(\"2009-08-12\"), new Date(\"2009-08-19\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2010: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.UAE.cities.DUBAI],\n    subtitle: [LOCATIONS.UAE],\n    hidden: [\n      LOCATIONS.UAE.attractions.AQUAVENTURE,\n      LOCATIONS.UAE.attractions.BURJ_KHALIFA\n    ],\n    dates: [new Date(\"2010-07-26\"), new Date(\"2010-08-03\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.PORTUGAL.towns.FERRAGUDO],\n    subtitle: [LOCATIONS.PORTUGAL],\n    dates: [new Date(\"2010-08-13\"), new Date(\"2010-08-18\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    hidden: [LOCATIONS.PORTUGAL.cities.PORTIMAO]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2011: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.UK.regions.CORNWALL],\n    notAbroad: true,\n    subtitle: [LOCATIONS.UK],\n    dates: [new Date(\"2011-07-01\"), new Date(\"2011-07-04\")],\n    company: [\n      FRIENDS.BLAINE,\n      FRIENDS.GRACE,\n      FRIENDS.POOJA,\n      FRIENDS.JESS,\n      FRIENDS.ELLIE_G,\n      FRIENDS.CARMEN,\n      FRIENDS.KYLE\n    ]\n  },\n  {\n    title: [LOCATIONS.USA.regions.FLORIDA_KEYS],\n    subtitle: [LOCATIONS.USA.regions.ISLAMORADA, LOCATIONS.USA.cities.KEY_WEST],\n    dates: [new Date(\"2011-08-02\"), new Date(\"2011-08-10\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA],\n    hidden: [LOCATIONS.USA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2012: Array<ITravelData> = [\n  {\n    title: [\n      LOCATIONS.EGYPT.cities.SHARM_EL_SHEIKH,\n      LOCATIONS.EGYPT.cities.CAIRO\n    ],\n    subtitle: [LOCATIONS.EGYPT],\n    hidden: [LOCATIONS.EGYPT.attractions.GIZA_PYRAMIDS_SPHINX],\n    dates: [new Date(\"2012-07-22\"), new Date(\"2012-07-29\")],\n    company: [FRIENDS.DAD]\n  },\n  {\n    title: [LOCATIONS.ITALY.towns.JESOLO, LOCATIONS.ITALY.cities.VENICE],\n    subtitle: [LOCATIONS.ITALY],\n    dates: [new Date(\"2012-08-20\"), new Date(\"2012-08-26\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2013: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.CUBA],\n    subtitle: [LOCATIONS.CUBA.cities.HAVANA, LOCATIONS.CUBA.towns.VARADERO],\n    dates: [new Date(\"2013-08-16\"), new Date(\"2013-08-26\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2014: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.BARBADOS],\n    dates: [new Date(\"2014-06-16\"), new Date(\"2014-06-24\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA],\n    hidden: [LOCATIONS.BARBADOS.attractions.HARRISONS_CAVE]\n  },\n  {\n    title: [LOCATIONS.THAILAND, LOCATIONS.LAOS],\n    subtitle: [\n      LOCATIONS.THAILAND.cities.BANGKOK,\n      LOCATIONS.THAILAND.islands.KOH_PHANGAN,\n      LOCATIONS.THAILAND.islands.KOH_TAO,\n      LOCATIONS.THAILAND.islands.KOH_PHI_PHI,\n      LOCATIONS.THAILAND.cities.CHIANG_MAI,\n      LOCATIONS.THAILAND.towns.PAI,\n      LOCATIONS.LAOS.cities.LUANG_PRABANG,\n      LOCATIONS.LAOS.cities.VIENTIANE\n    ],\n    hidden: [\n      LOCATIONS.THAILAND.attractions.SKY_BAR,\n      LOCATIONS.THAILAND.attractions.GRAND_PALACE,\n      LOCATIONS.THAILAND.attractions.TIGER_KINGDOM,\n      LOCATIONS.THAILAND.attractions.WHITE_TEMPLE,\n      LOCATIONS.LAOS.attractions.BUDDHA_PARK,\n      LOCATIONS.LAOS.attractions.ELEPHANT_VILLAGE,\n      LOCATIONS.THAILAND.attractions.MAYA_BAY,\n      LOCATIONS.THAILAND.towns.KRABI,\n      LOCATIONS.THAILAND.attractions.PAI_CANYON,\n      LOCATIONS.THAILAND.cities.CHIANG_RAI,\n      LOCATIONS.LAOS.attractions.KUANG_SI_FALLS\n    ],\n    dates: [new Date(\"2014-07-07\"), new Date(\"2014-08-04\")],\n    company: [FRIENDS.TONYA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2015: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.FRANCE.cities.PARIS],\n    subtitle: [LOCATIONS.FRANCE],\n    hidden: [\n      LOCATIONS.FRANCE.attractions.SACRE_COEUR,\n      LOCATIONS.FRANCE.attractions.LOUVRE,\n      LOCATIONS.FRANCE.attractions.ARC_DE_TRIOMPHE,\n      LOCATIONS.FRANCE.attractions.NOTRE_DAME,\n      LOCATIONS.FRANCE.attractions.EIFFEL_TOWER,\n      LOCATIONS.FRANCE.attractions.NOTRE_DAME\n    ],\n    dates: [new Date(\"2015-03-21\"), new Date(\"2015-03-24\")],\n    company: [\n      FRIENDS.POOJA,\n      FRIENDS.SONYA,\n      FRIENDS.CARMEN,\n      FRIENDS.TONYA,\n      FRIENDS.GRACE,\n      FRIENDS.ELLIE_G\n    ]\n  },\n  {\n    title: [LOCATIONS.UGANDA],\n    subtitle: [LOCATIONS.UGANDA.cities.JINJA],\n    hidden: [\n      LOCATIONS.UGANDA.attractions.NILE_SOURCE,\n      LOCATIONS.UGANDA.attractions.RAFTING_NALUBALE\n    ],\n    dates: [new Date(\"2015-08-04\"), new Date(\"2015-09-05\")],\n    company: [\n      FRIENDS.AMY_C,\n      FRIENDS.HEATHER_C,\n      FRIENDS.OSCAR,\n      FRIENDS.LEAH,\n      FRIENDS.ELINORE_G,\n      FRIENDS.ELISE,\n      FRIENDS.SARAH_WA,\n      FRIENDS.HEATHER_C,\n      FRIENDS.LEAH,\n      FRIENDS.ROB_G,\n      FRIENDS.KATE_B,\n      FRIENDS.COURTNEY\n    ]\n  },\n  {\n    title: [{ name: \"interrailing\" }],\n    subtitle: [\n      LOCATIONS.GERMANY.cities.BERLIN,\n      LOCATIONS.CZECH_REPUBLIC.cities.PRAGUE,\n      LOCATIONS.POLAND.cities.KRAKOW,\n      LOCATIONS.HUNGARY.cities.BUDAPEST\n    ],\n    hidden: [\n      LOCATIONS.GERMANY,\n      LOCATIONS.GERMANY.attractions.BERLIN_WALL,\n      LOCATIONS.GERMANY.attractions.BRANDENBURG_GATE,\n      LOCATIONS.GERMANY.attractions.EAST_SIDE_GALLERY,\n      LOCATIONS.GERMANY.attractions.HOLOCAUST_MEMORIAL,\n      LOCATIONS.GERMANY.attractions.REICHSTAG,\n      LOCATIONS.CZECH_REPUBLIC,\n      LOCATIONS.CZECH_REPUBLIC.attractions.JOHN_LENNON_WALL,\n      LOCATIONS.CZECH_REPUBLIC.attractions.VYSEHRAD,\n      LOCATIONS.POLAND,\n      LOCATIONS.POLAND.towns.WIELICZKA,\n      LOCATIONS.POLAND.attractions.WIELICZKA_SALT_MINE,\n      LOCATIONS.POLAND.attractions.AUSCHWITZ_BIRKENAU,\n      LOCATIONS.HUNGARY,\n      LOCATIONS.HUNGARY.attractions.CITADELLA,\n      LOCATIONS.HUNGARY.attractions.PARLIAMENT_BUILDING,\n      LOCATIONS.HUNGARY.attractions.THERMAL_BATH_SZECHENYI\n    ],\n    dates: [new Date(\"2015-09-10\"), new Date(\"2015-09-24\")],\n    company: [FRIENDS.SIAN]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2016: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.IRELAND.cities.DUBLIN],\n    subtitle: [LOCATIONS.IRELAND],\n    dates: [new Date(\"2016-02-05\"), new Date(\"2016-02-07\")],\n    company: [FRIENDS.SIAN],\n    hidden: [\n      LOCATIONS.IRELAND.attractions.DUBLIN_PRISON,\n      LOCATIONS.IRELAND.attractions.ST_STEPHENS_GREEN_PARK,\n      LOCATIONS.IRELAND.attractions.GUINNESS_STOREHOUSE\n    ]\n  },\n  {\n    title: [LOCATIONS.PORTUGAL.towns.TAVIRA],\n    subtitle: [LOCATIONS.PORTUGAL],\n    dates: [new Date(\"2016-06-09\"), new Date(\"2016-06-16\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.ECUADOR, LOCATIONS.PERU],\n    subtitle: [\n      LOCATIONS.ECUADOR.cities.QUITO,\n      LOCATIONS.ECUADOR.cities.OTAVALO,\n      LOCATIONS.ECUADOR.attractions.COTOPAXI,\n      LOCATIONS.ECUADOR.cities.BANOS,\n      LOCATIONS.ECUADOR.islands.GALAPAGOS,\n      LOCATIONS.PERU.towns.MANCORA,\n      LOCATIONS.PERU.cities.HUARAZ,\n      LOCATIONS.PERU.cities.LIMA,\n      LOCATIONS.PERU.towns.PARACAS,\n      LOCATIONS.PERU.villages.HUACACHINA,\n      LOCATIONS.PERU.cities.AREQUIPA,\n      LOCATIONS.PERU.attractions.COLCA_CANYON,\n      LOCATIONS.PERU.cities.CUSCO,\n      LOCATIONS.PERU.attractions.MANU,\n      LOCATIONS.PERU.attractions.RAINBOW_MOUNTAIN,\n      LOCATIONS.PERU.attractions.MACHU_PICCHU\n    ],\n    hidden: [\n      LOCATIONS.ECUADOR.attractions.EQUATOR_MONUMENT,\n      LOCATIONS.ECUADOR.attractions.OTAVALO_MARKET,\n      LOCATIONS.ECUADOR.attractions.PAILON_DEL_DIABLO,\n      LOCATIONS.ECUADOR.cities.GUAYAQUIL,\n      LOCATIONS.ECUADOR.attractions.TORTOISE_PARK,\n      LOCATIONS.PERU.attractions.HUASCARAN_PARK,\n      LOCATIONS.PERU.attractions.LAGUNA_69,\n      LOCATIONS.PERU.attractions.HUACACHINA,\n      LOCATIONS.PERU.attractions.JUNGLE_ZIPLINE\n    ],\n    dates: [new Date(\"2016-10-03\"), new Date(\"2016-11-10\")],\n    company: [FRIENDS.SARAH_W, FRIENDS.SIAN]\n  },\n  {\n    title: [\n      LOCATIONS.BRAZIL.cities.RIO_DE_JANEIRO,\n      LOCATIONS.BRAZIL.islands.ILHA_GRANDE\n    ],\n    hidden: [\n      LOCATIONS.BRAZIL.attractions.HANG_GLIDING,\n      LOCATIONS.BRAZIL.attractions.MODERN_ART_MUSEUM_RIO,\n      LOCATIONS.BRAZIL.attractions.COPACABANA_BEACH,\n      LOCATIONS.BRAZIL.attractions.ROCINHA_FAVELA,\n      LOCATIONS.BRAZIL.attractions.PICO_DO_PAPAGAIO,\n      LOCATIONS.BRAZIL.attractions.SELARON_STEPS,\n      LOCATIONS.BRAZIL.attractions.CHRIST_THE_REDEEMER\n    ],\n    subtitle: [LOCATIONS.BRAZIL],\n    dates: [new Date(\"2016-12-01\"), new Date(\"2016-12-11\")],\n    company: [FRIENDS.SIAN]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2017: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.ITALY.cities.MILAN],\n    subtitle: [LOCATIONS.ITALY],\n    dates: [new Date(\"2017-05-12\"), new Date(\"2017-05-14\")],\n    company: [\n      FRIENDS.AISHA,\n      FRIENDS.JOE,\n      FRIENDS.JAMIE,\n      FRIENDS.PATRICIA,\n      FRIENDS.JAZZ,\n      FRIENDS.JHC\n    ],\n    hidden: [\n      LOCATIONS.ITALY.attractions.MILAN_MALL,\n      LOCATIONS.ITALY.attractions.SEMPIONE_PARK,\n      LOCATIONS.ITALY.attractions.ARCO_DELLA_PACE\n    ]\n  },\n  {\n    title: [LOCATIONS.SPAIN.cities.BARCELONA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2017-05-12\"), new Date(\"2017-05-14\")],\n    company: [\n      FRIENDS.SIAN,\n      FRIENDS.LINDSEY_S,\n      FRIENDS.BETH_O,\n      FRIENDS.ELLIE_F,\n      FRIENDS.HARRIET_K\n    ],\n    hidden: [\n      LOCATIONS.SPAIN.attractions.PARK_GUELL,\n      LOCATIONS.SPAIN.attractions.CIUTADELLA_PARK\n    ]\n  },\n  {\n    title: [LOCATIONS.SPAIN.islands.TENERIFE],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2017-06-15\"), new Date(\"2017-06-18\")],\n    company: [FRIENDS.LUKE_S],\n    hidden: [LOCATIONS.SPAIN.attractions.SIAM_PARK]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2018: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.DENMARK.cities.COPENHAGEN],\n    subtitle: [LOCATIONS.DENMARK],\n    dates: [new Date(\"2018-01-19\"), new Date(\"2018-01-22\")],\n    company: [FRIENDS.LUKE_S],\n    hidden: [LOCATIONS.DENMARK.attractions.LOUISIANA_ART_MUSEUM]\n  },\n  {\n    title: [LOCATIONS.CYPRUS.cities.PAPHOS],\n    subtitle: [LOCATIONS.CYPRUS],\n    dates: [new Date(\"2018-05-17\"), new Date(\"2018-05-21\")],\n    company: [FRIENDS.SIAN],\n    hidden: [LOCATIONS.CYPRUS.attractions.PAPHOS_ARCHAEOLOGICAL_PARK]\n  },\n  {\n    title: [LOCATIONS.CROATIA.cities.DUBROVNIK],\n    subtitle: [LOCATIONS.CROATIA],\n    dates: [new Date(\"2018-06-02\"), new Date(\"2018-06-09\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA],\n    hidden: [\n      LOCATIONS.CROATIA.attractions.DUBROVNIK_WALLS,\n      LOCATIONS.CROATIA.attractions.DUBROVNIK_CABLE_CAR\n    ]\n  },\n  {\n    title: [LOCATIONS.NETHERLANDS.cities.GRONINGEN],\n    subtitle: [LOCATIONS.NETHERLANDS],\n    hidden: [LOCATIONS.NETHERLANDS.attractions.GRONINGEN_MUSEUM],\n    dates: [new Date(\"2018-07-14\"), new Date(\"2018-07-16\")],\n    company: [FRIENDS.CARMEN]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2019: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.NETHERLANDS.cities.AMSTERDAM],\n    subtitle: [LOCATIONS.NETHERLANDS],\n    hidden: [\n      LOCATIONS.NETHERLANDS.attractions.SEX_MUSEUM,\n      LOCATIONS.NETHERLANDS.attractions.STEDELIJK_MUSEUM\n    ],\n    dates: [new Date(\"2019-02-01\"), new Date(\"2019-02-04\")],\n    company: [FRIENDS.CAITLIN, FRIENDS.TONYA, FRIENDS.RYAN, FRIENDS.TOM]\n  },\n  {\n    title: [LOCATIONS.PORTUGAL.cities.LISBON],\n    subtitle: [LOCATIONS.PORTUGAL],\n    hidden: [LOCATIONS.PORTUGAL.attractions.OCENARIO_DE_LISBOA],\n    dates: [new Date(\"2019-02-08\"), new Date(\"2019-02-10\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.BELGIUM.cities.BRUGES],\n    subtitle: [LOCATIONS.BELGIUM],\n    hidden: [LOCATIONS.BELGIUM.attractions.BELFRY_OF_BRUGES],\n    dates: [new Date(\"2019-05-17\"), new Date(\"2019-05-19\")],\n    company: [FRIENDS.JAMIE]\n  },\n  {\n    title: [LOCATIONS.ITALY.cities.CATANIA],\n    subtitle: [LOCATIONS.ITALY.regions.SICILY],\n    hidden: [LOCATIONS.ITALY, LOCATIONS.ITALY.attractions.ETNA],\n    dates: [new Date(\"2019-07-10\"), new Date(\"2019-07-15\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.FRANCE.cities.NICE],\n    subtitle: [LOCATIONS.FRANCE],\n    hidden: [LOCATIONS.FRANCE.cities.MONACO],\n    dates: [new Date(\"2019-06-08\"), new Date(\"2019-06-14\")],\n    company: [FRIENDS.SIAN]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2020: Array<ITravelData> = [\n  {\n    title: [LOCATIONS.NORWAY.cities.OSLO],\n    subtitle: [LOCATIONS.NORWAY],\n    hidden: [LOCATIONS.NORWAY.islands.HOVEDOYA],\n    dates: [new Date(\"2020-02-27\"), new Date(\"2020-03-01\")],\n    company: [FRIENDS.RYAN, FRIENDS.CAITLIN, FRIENDS.TOM, FRIENDS.TONYA]\n  }\n  // {\n  //   title: [LOCATIONS.BELIZE, LOCATIONS.COSTA_RICA],\n  //   subtitle: [\n  //     LOCATIONS.BELIZE.islands.CAYE_CAULKER,\n  //     LOCATIONS.BELIZE.attractions.BARRIER_REEF,\n  //     LOCATIONS.COSTA_RICA.attractions.CORCOVADO,\n  //     LOCATIONS.COSTA_RICA.towns.MONTEVERDE,\n  //     LOCATIONS.COSTA_RICA.towns.PUERTO_VIEJO\n  //   ],\n  //   hidden: [\n  //     LOCATIONS.BELIZE.cities.BELIZE_CITY,\n  //     LOCATIONS.BELIZE.islands.AMBERGRIS_CAYE,\n  //     LOCATIONS.COSTA_RICA.cities.SAN_JOSE,\n  //     LOCATIONS.COSTA_RICA.attractions.JAGUAR_RESCUE_CENTER\n  //   ],\n  //   dates: [new Date(\"2020-05-14\"), new Date(\"2020-06-01\")],\n  //   company: FRIENDS.SIAN\n  // },\n  // {\n  //   title: LOCATIONS.SPAIN.cities.MADRID,\n  //   subtitle: LOCATIONS.SPAIN,\n  //   hidden: [LOCATIONS.SPAIN.attractions.PARQUE_WARNER],\n  //   dates: [new Date(\"2020-07-07\"), new Date(\"2020-07-10\")],\n  //   company: FRIENDS.DAN\n  // }\n];\n","import { TRAVEL_1997 } from \"./travel-1997\";\nimport { TRAVEL_1998 } from \"./travel-1998\";\nimport { TRAVEL_1999 } from \"./travel-1999\";\nimport { TRAVEL_2000 } from \"./travel-2000\";\nimport { TRAVEL_2001 } from \"./travel-2001\";\nimport { TRAVEL_2002 } from \"./travel-2002\";\nimport { TRAVEL_2003 } from \"./travel-2003\";\nimport { TRAVEL_2004 } from \"./travel-2004\";\nimport { TRAVEL_2005 } from \"./travel-2005\";\nimport { TRAVEL_2006 } from \"./travel-2006\";\nimport { TRAVEL_2007 } from \"./travel-2007\";\nimport { TRAVEL_2008 } from \"./travel-2008\";\nimport { TRAVEL_2009 } from \"./travel-2009\";\nimport { TRAVEL_2010 } from \"./travel-2010\";\nimport { TRAVEL_2011 } from \"./travel-2011\";\nimport { TRAVEL_2012 } from \"./travel-2012\";\nimport { TRAVEL_2013 } from \"./travel-2013\";\nimport { TRAVEL_2014 } from \"./travel-2014\";\nimport { TRAVEL_2015 } from \"./travel-2015\";\nimport { TRAVEL_2016 } from \"./travel-2016\";\nimport { TRAVEL_2017 } from \"./travel-2017\";\nimport { TRAVEL_2018 } from \"./travel-2018\";\nimport { TRAVEL_2019 } from \"./travel-2019\";\nimport { TRAVEL_2020 } from \"./travel-2020\";\nimport { TRAVEL_BUCKET_LIST as BUCKET_LIST } from \"./travel-bucket-list\";\n\nconst ALL: Array<ITravelData> = [\n  ...TRAVEL_1997,\n  ...TRAVEL_1998,\n  ...TRAVEL_1999,\n  ...TRAVEL_2000,\n  ...TRAVEL_2001,\n  ...TRAVEL_2002,\n  ...TRAVEL_2003,\n  ...TRAVEL_2004,\n  ...TRAVEL_2005,\n  ...TRAVEL_2006,\n  ...TRAVEL_2007,\n  ...TRAVEL_2008,\n  ...TRAVEL_2009,\n  ...TRAVEL_2010,\n  ...TRAVEL_2011,\n  ...TRAVEL_2012,\n  ...TRAVEL_2013,\n  ...TRAVEL_2014,\n  ...TRAVEL_2015,\n  ...TRAVEL_2016,\n  ...TRAVEL_2017,\n  ...TRAVEL_2018,\n  ...TRAVEL_2019,\n  ...TRAVEL_2020\n];\n\nconst ALL_GROUPED_BY_YEAR: Array<Array<ITravelData>> = [\n  TRAVEL_1997,\n  TRAVEL_1998,\n  TRAVEL_1999,\n  TRAVEL_2000,\n  TRAVEL_2001,\n  TRAVEL_2002,\n  TRAVEL_2003,\n  TRAVEL_2004,\n  TRAVEL_2005,\n  TRAVEL_2006,\n  TRAVEL_2007,\n  TRAVEL_2008,\n  TRAVEL_2009,\n  TRAVEL_2010,\n  TRAVEL_2011,\n  TRAVEL_2012,\n  TRAVEL_2013,\n  TRAVEL_2014,\n  TRAVEL_2015,\n  TRAVEL_2016,\n  TRAVEL_2017,\n  TRAVEL_2018,\n  TRAVEL_2019,\n  TRAVEL_2020\n];\n\nexport const DATA_TRAVEL = { ALL, ALL_GROUPED_BY_YEAR, BUCKET_LIST };\n","export const TRAVEL_BUCKET_LIST: Array<INameFavourite> = [\n  // ATTRACTIONS\n  { name: \"Victoria Falls\" },\n\n  // CITIES\n  { name: \"Buenos Aires\", favourite: true },\n  { name: \"Edinburgh\", favourite: true },\n  { name: \"Stockholm\" },\n  { name: \"Porto\" },\n  { name: \"Florence\" },\n  { name: \"Valencia\" },\n  { name: \"Vienna\" },\n\n  // COUNTIRES\n  { name: \"Australia\" },\n  { name: \"Bolivia\" },\n  { name: \"Colombia\" },\n  { name: \"Indonesia\" },\n  { name: \"Japan\", favourite: true },\n  { name: \"Mexico\" },\n  { name: \"New Zealand\" },\n  { name: \"Philippines\", favourite: true },\n  { name: \"Tanzania\" }\n];\n","export const numberToCurrencyString = (\n  number: number,\n  decimalPrecision?: number\n): string => {\n  if (decimalPrecision && decimalPrecision === 1)\n    return `£${(Math.round(number * 10) / 10).toFixed(2)}`;\n\n  // Default to 2dp (£1.89)\n  return `£${(Math.round(number * 100) / 100).toFixed(2)}`;\n};\n","import { MEASUREMENTS } from \"@constants\";\n\nexport const concatenateQuantityAndMeasurement = (\n  displayQuantity: string,\n  measurement: IIngredientMeasurement\n) => {\n  if (\n    measurement === MEASUREMENTS.GRAM ||\n    measurement === MEASUREMENTS.KILOGRAM ||\n    measurement === MEASUREMENTS.MILLILITRE ||\n    measurement === MEASUREMENTS.CENTIMETRE ||\n    measurement === MEASUREMENTS.LITRE\n  ) {\n    // 2 + g = 2g\n    return displayQuantity + measurement;\n  }\n\n  if (\n    measurement === MEASUREMENTS.TEASPOON ||\n    measurement === MEASUREMENTS.TABLESPOON\n  ) {\n    // 2 + tsp = 2 tsp\n    return displayQuantity + \" \" + measurement;\n  }\n\n  if (measurement === MEASUREMENTS.JAR || measurement === MEASUREMENTS.CAN) {\n    if (parseInt(displayQuantity) > 1)\n      return displayQuantity + \" \" + measurement + \"s\";\n    return displayQuantity + \" \" + measurement;\n  }\n\n  return displayQuantity;\n};\n","import { convertIngredientQuantity } from \"./convertIngredientQuantity\";\n\ntype ICalculateIngredientCost = {\n  ingredient: IInventoryIngredient;\n  quantity?: IIngredientQuantity;\n  measurement: IIngredientMeasurement;\n};\n\nexport const calculateIngredientCost = ({\n  ingredient,\n  quantity,\n  measurement\n}: ICalculateIngredientCost): number => {\n  if (!quantity) return 0;\n\n  let [ingredientQuantity, ingredientMeasurement] = [quantity, measurement];\n\n  // Extract the attached inventory cost information\n  const inventory = ingredient.cost;\n  const inventoryQuantity = inventory && inventory.quantity;\n  const inventoryMeasurement = inventory && inventory.measurement;\n  const inventoryPrice = inventory && inventory.price;\n\n  // Charge nothing for zero-cost items or items (water, salt, pepper)\n  if (inventoryPrice === 0 || (!ingredientQuantity && !ingredientMeasurement))\n    return 0;\n\n  // Certain items like fresh herbs will cost the full amount always\n  //@ts-ignore\n  if (inventory && inventory.payFullAmountAlways) return inventoryPrice;\n\n  // If ingredient and inventory MEASUREMENTS don't already match, attempt to make them match\n  if (ingredientMeasurement !== inventoryMeasurement) {\n    ingredientQuantity = convertIngredientQuantity(\n      ingredientQuantity,\n      ingredientMeasurement,\n      inventoryMeasurement\n    );\n\n    ingredientMeasurement = inventoryMeasurement;\n  }\n\n  // Now the ingredient and inventory MEASUREMENTS should match, perform simple proportion calculation\n  if (\n    ingredientMeasurement === inventoryMeasurement ||\n    (!ingredientMeasurement && !inventoryMeasurement)\n  )\n    //@ts-ignore\n    return (ingredientQuantity / inventoryQuantity) * inventoryPrice;\n\n  // If the ingredient and inventory MEASUREMENTS still don't match, throw a deliberate error\n  alert(\"ERROR\");\n  return 0;\n};\n","import { MEASUREMENTS } from \"@constants\";\n\nexport const convertIngredientQuantity = (\n  ingredientQuantity: IIngredientQuantity,\n  ingredientMeasurement: IIngredientMeasurement,\n  inventoryMeasurement: IIngredientMeasurement\n): number => {\n  switch (true) {\n    // 1 tsp = 5.9ml\n    case ingredientMeasurement === MEASUREMENTS.TEASPOON &&\n      inventoryMeasurement === MEASUREMENTS.MILLILITRE:\n      return ingredientQuantity * 5.9;\n\n    // 1 tbsp = 17.8ml\n    case ingredientMeasurement === MEASUREMENTS.TABLESPOON &&\n      inventoryMeasurement === MEASUREMENTS.MILLILITRE:\n      return ingredientQuantity * 17.8;\n\n    // 1000g = 1kg, 1000 ml = 1L\n    case (ingredientMeasurement === MEASUREMENTS.GRAM &&\n      inventoryMeasurement === MEASUREMENTS.KILOGRAM) ||\n      (ingredientMeasurement === MEASUREMENTS.MILLILITRE &&\n        inventoryMeasurement === MEASUREMENTS.LITRE):\n      return ingredientQuantity / 1000;\n\n    // 1kg = 1000g, 1L = 1000ml\n    case (ingredientMeasurement === MEASUREMENTS.KILOGRAM &&\n      inventoryMeasurement === MEASUREMENTS.GRAM) ||\n      (ingredientMeasurement === MEASUREMENTS.LITRE &&\n        inventoryMeasurement === MEASUREMENTS.MILLILITRE):\n      return ingredientQuantity * 1000;\n\n    // 1 tbsp = 3tsp\n    case ingredientMeasurement === MEASUREMENTS.TABLESPOON &&\n      inventoryMeasurement === MEASUREMENTS.TEASPOON:\n      return ingredientQuantity * 3;\n\n    // 3 tsp = 1 tsp\n    case ingredientMeasurement === MEASUREMENTS.TEASPOON &&\n      inventoryMeasurement === MEASUREMENTS.TABLESPOON:\n      return ingredientQuantity / 3;\n\n    // ROUGH ESTIMATE: 1 tbsp = 12g\n    case ingredientMeasurement === MEASUREMENTS.TABLESPOON &&\n      inventoryMeasurement === MEASUREMENTS.GRAM:\n      return ingredientQuantity * 12;\n\n    // ROUGH ESTIMATE: 1 tsp = 4g\n    case ingredientMeasurement === MEASUREMENTS.TEASPOON &&\n      inventoryMeasurement === MEASUREMENTS.GRAM:\n      return ingredientQuantity * 4;\n\n    default:\n      alert(\"ERROR!\");\n      return 0;\n  }\n};\n","import { CONSOLE_LOG_RECIPE_COST_CALCULATIONS } from \"config\";\nimport { NO_UNIT_COST_FOR_RECIPE_EXISTS } from \"@constants\";\n\nimport { numberToCurrencyString } from \"./numberToCurrencyString\";\nimport {\n  consoleLogCostedIngredient,\n  consoleLogRecipeTitle\n} from \"./console-logs\";\nimport { calculateIngredientCost } from \"./calculateIngredientCost\";\n\ninterface ICalculateRecipeCost {\n  ingredients: Array<Array<IRecipeIngredient>>;\n  yieldQuantity?: IIngredientQuantity;\n  recipeTitle: string;\n}\n\nexport const calculateRecipeCost = ({\n  ingredients,\n  yieldQuantity,\n  recipeTitle\n}: ICalculateRecipeCost): {\n  costDisplayText: string;\n  unitCostDisplayText: string;\n} => {\n  if (CONSOLE_LOG_RECIPE_COST_CALCULATIONS) consoleLogRecipeTitle(recipeTitle);\n\n  let runningRecipeCost: number = 5;\n\n  ingredients.forEach(ingredientSection => {\n    ingredientSection.forEach(recipeIngredient => {\n      // @ts-ignore\n      const recipeIngredientCost = calculateIngredientCost(recipeIngredient);\n\n      runningRecipeCost += recipeIngredientCost;\n\n      if (CONSOLE_LOG_RECIPE_COST_CALCULATIONS) {\n        const { quantity, measurement, ingredient } = recipeIngredient;\n        consoleLogCostedIngredient({\n          cost: recipeIngredientCost,\n          //@ts-ignore\n          quantity,\n          measurement,\n          ingredient\n        });\n      }\n    });\n  });\n\n  const unitCost: number | undefined =\n    yieldQuantity && runningRecipeCost / yieldQuantity;\n  const costDisplayText: string = numberToCurrencyString(runningRecipeCost, 1);\n  const unitCostDisplayText: string = unitCost\n    ? numberToCurrencyString(unitCost, 1)\n    : NO_UNIT_COST_FOR_RECIPE_EXISTS;\n\n  return { costDisplayText, unitCostDisplayText };\n};\n","import { numberToCurrencyString } from \"./numberToCurrencyString\";\nimport { concatenateQuantityAndMeasurement } from \"./concatenateQuantityAndMeasurement\";\n\nexport const consoleLogRecipeTitle = (title: string): void => {\n  const logDashedLine = (): void => console.log(\"----------\");\n\n  logDashedLine();\n  console.log(title);\n  logDashedLine();\n};\n\ninterface IConsoleLogCostedIngredient {\n  cost: number;\n  quantity: IIngredientQuantity;\n  measurement: IIngredientMeasurement;\n  ingredient: IInventoryIngredient;\n}\n\nexport const consoleLogCostedIngredient = ({\n  cost,\n  quantity,\n  measurement,\n  ingredient\n}: IConsoleLogCostedIngredient): void => {\n  if (!quantity || cost === 0) return;\n\n  const displayIngredient = ingredient.displayText;\n  const displayPrice: string = numberToCurrencyString(cost);\n  const stringQuantityMeasurement: string = concatenateQuantityAndMeasurement(\n    quantity.toString(),\n    measurement\n  );\n\n  const outputLine: string =\n    displayPrice +\n    \" for \" +\n    stringQuantityMeasurement +\n    \" \" +\n    displayIngredient;\n\n  console.log(outputLine);\n};\n","import { decimalToFractionString } from \"./decimalToFractionString\";\nimport { concatenateQuantityAndMeasurement } from \"./concatenateQuantityAndMeasurement\";\n\nconst POTATO = \"potato\";\n\nexport const generateIngredientListItem = ({\n  quantity,\n  measurement,\n  ingredient,\n  optional,\n  notes\n}: IRecipeIngredient): string => {\n  const ingredientText: string = ingredient.displayText;\n\n  // Can we return the ingredient with no measurement, i.e. \"freshly ground rock salt\"\n  if (!quantity && !measurement) return ingredientText;\n\n  // Do we need to turn a decimal to a more aesthetically-pleasing fraction?\n  //@ts-ignore\n  const displayQuantity: string = decimalToFractionString(quantity);\n\n  // Ensure it says \"2 limes\" instead of \"2 lime\" or \"3 potatoes\" instead of \"3 potato\"\n  const displayIngredient: string =\n    //@ts-ignore\n    quantity > 1 && !measurement\n      ? ingredientText.slice(-POTATO.length) === POTATO\n        ? ingredientText + \"es\"\n        : ingredientText + \"s\"\n      : ingredientText;\n\n  // Establish if there will be a space between the quantity and the unit of measurement\n  const displayQuantityMeasurement = concatenateQuantityAndMeasurement(\n    displayQuantity,\n    measurement\n  );\n\n  // Concatenate the quantity and measurement with the ingredient itself\n  const displayQuantityMeasurementIngredients =\n    displayQuantityMeasurement + \" \" + displayIngredient;\n\n  // Append the ingredient notes or \"optional\" text if required\n  return optional\n    ? displayQuantityMeasurementIngredients + \" (optional)\"\n    : notes\n    ? `${displayQuantityMeasurementIngredients} (${notes})`\n    : displayQuantityMeasurementIngredients;\n};\n","import { UNICODE } from \"@constants\";\n\nexport const decimalToFractionString = (decimal: number): string => {\n  switch (decimal) {\n    case 0.25:\n      return UNICODE.QUARTER;\n    case 0.5:\n      return UNICODE.HALF;\n    case 1.5:\n      return 1 + UNICODE.HALF;\n    case 2.5:\n      return 2 + UNICODE.HALF;\n    case 3.5:\n      return 3 + UNICODE.HALF;\n    default:\n      return decimal.toString();\n  }\n};\n","export const moveTheSuffixToPrefix = (word: string): string => {\n  const THE_SUFFIX = \", The\";\n\n  if (word.slice(-5) === THE_SUFFIX)\n    return `The ${word.substring(0, word.length - THE_SUFFIX.length)}`;\n\n  return word;\n};\n","import { moveTheSuffixToPrefix } from \"./moveTheSuffixToPrefix\";\n\nexport const formatNames = (inputData: any): string => {\n  // if (!inputData) return null;\n\n  if (!inputData) {\n    // console.log(inputData);\n    return \"\";\n  }\n\n  if (!Array.isArray(inputData))\n    return inputData.name && moveTheSuffixToPrefix(inputData.name);\n\n  const array = inputData.map(\n    item => item.name && moveTheSuffixToPrefix(item.name)\n  );\n\n  let outputString: string = \"\";\n  array.forEach(\n    (name: string, index: number) =>\n      (outputString += index === array.length - 1 ? name : `${name}, `)\n  );\n  return outputString;\n};\n","export const isInFuture = (dates: Array<Date>): boolean => {\n  const yesterday = (): number => {\n    const today: Date = new Date();\n    return today.setDate(today.getDate() - 1);\n  };\n\n  const dateToCompare: number = dates[0].valueOf();\n\n  return dateToCompare > yesterday();\n};\n","import { UNICODE } from \"@constants\";\n\ninterface IBakeForAbout {\n  minutes: number;\n  skewer?: boolean;\n  wellRisen?: boolean;\n}\ninterface IPreheatOven {\n  degreesCelcius: number;\n  bakingTray?: boolean;\n}\ninterface ITransferToLoafTin {\n  sunkenCentre?: boolean;\n}\ninterface IRecipeMethodEntries {\n  FOLD_IN_FLOUR_MIX: string;\n  LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN: string;\n  MAKE_FLAX_EGG: string;\n  bakeForAbout: (params: IBakeForAbout) => string;\n  preheatOven: (params: IPreheatOven) => string;\n  transferToLoafTin: (params: ITransferToLoafTin) => string;\n}\n\nexport const recipeMethodEntries = (): IRecipeMethodEntries => {\n  const FOLD_IN_FLOUR_MIX: string =\n    \"in small batches, sieve the flour mix into the mixture and gently fold in until there are no more flour pockets\";\n  const LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN: string =\n    \"leave to cool before removing from loaf tin\";\n  const MAKE_FLAX_EGG: string =\n    \"make flax egg by stirring ground flax seeds with water and leaving to rest for at least 5 minutes until it thickens\";\n\n  const bakeForAbout = ({\n    minutes,\n    skewer = false,\n    wellRisen = false\n  }: IBakeForAbout): string => {\n    const defaultText = `bake for about ${minutes} minutes`;\n    const additionalText =\n      (skewer && \"just until skewer runs clean\") ||\n      (wellRisen && \"until well-risen and slightly golden\");\n\n    if (!additionalText) return defaultText;\n    return `${defaultText} (${additionalText})`;\n  };\n\n  const preheatOven = ({\n    degreesCelcius,\n    bakingTray = false\n  }: IPreheatOven): string => {\n    const ovenTemperature = degreesCelcius + UNICODE.DEGREES_CELCIUS;\n\n    if (!bakingTray) return \"preheat oven to \" + ovenTemperature;\n    return \"preheat baking tray in oven at \" + ovenTemperature;\n  };\n\n  const transferToLoafTin = ({\n    sunkenCentre = false\n  }: ITransferToLoafTin): string => {\n    const defaultText = \"transfer mixture to non-stick loaf tin\";\n    const additionalText =\n      sunkenCentre &&\n      \"create slightly sunken centre to help the cake rise more evenly\";\n\n    if (!additionalText) return defaultText;\n    return `${defaultText} (${additionalText})`;\n  };\n\n  return {\n    FOLD_IN_FLOUR_MIX,\n    LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN,\n    MAKE_FLAX_EGG,\n    bakeForAbout,\n    preheatOven,\n    transferToLoafTin\n  };\n};\n","import { PAGE_SECTION_IDS } from \"@constants\";\n\ninterface IItemIsFavourited {\n  itemToInspect: any;\n  id: IPageSectionDetails;\n  favouritedData: Array<any>;\n}\n\nexport const itemIsFavourited = ({\n  itemToInspect,\n  id,\n  favouritedData\n}: IItemIsFavourited) => {\n  let itemIsFavourited = false;\n\n  favouritedData.forEach((dataItem: any) => {\n    if (\n      (id === PAGE_SECTION_IDS.MUSICIAN &&\n        itemToInspect === dataItem.headline) ||\n      (id === PAGE_SECTION_IDS.PLAY && itemToInspect === dataItem.play)\n    )\n      itemIsFavourited = true;\n  });\n\n  return itemIsFavourited;\n};\n","import { INGREDIENTS, MEASUREMENTS, UNICODE, DIETS } from \"@constants\";\nimport { PHOTOS } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.CHILLI_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.LIQUID_SMOKE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOFU,\n      quantity: 280,\n      measurement: MEASUREMENTS.GRAM\n    },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.CARROT, quantity: 4 },\n    { ingredient: INGREDIENTS.CELERY_STICK, quantity: 4 },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BASIL_FRESH,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OREGANO_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PUREE,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [\n    { ingredient: INGREDIENTS.SPAGHETTI },\n    { ingredient: INGREDIENTS.RICE_BROWN }\n  ],\n  [{ ingredient: INGREDIENTS.BREAD_GARLIC }]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 180 }),\n  \"make paste from yeast, soy, oil, crushed garlic, chilli powder, liquid smoke\",\n  \"drain tofu, use both fingers to crumble into small pieces\",\n  \"mix tofu with smokey paste until evenly covered\",\n  \"bake for 40 minutes in a non-stick loaf tin (stir tofu twice throughout, do not let it burn)\",\n  \"set tofu aside\",\n  \"fry onion in water so it never sticks or burns\",\n  \"when the onion has softened and the water has reduced, pour over some olive oil\",\n  \"add grated carrot, grated celery and finely diced mushrooms to frying pan\",\n  `meanwhile, blend basil with stock, ${UNICODE.TOMATO_PUREE}, black pepper, oregano and some water`,\n  \"pour blend over the frying vegetables, fry for about 10 minutes until water reduces\",\n  \"pour over chopped tomatoes\",\n  \"cover, simmer for around 30 minutes (stirring regularly)\",\n  \"stir in tofu, remove from heat\"\n];\n\nconst title: IRecipeTitle = \"bolognese\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst image: IImageSrc = PHOTOS.BOLOGNESE;\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const BOLOGNESE: IRecipeCard = {\n  title,\n  ingredients,\n  favourite: true,\n  makes,\n  serveWith,\n  diet,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS } from \"resources\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.TOMATO_SUN_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.JAR\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.LIQUID_SMOKE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 750,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.SPINACH,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.NUTS_CASHEWS,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_BLACK,\n      quantity: 1.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.SPAGHETTI,\n      quantity: 400,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.ONION_WHITE_MEDIUM,\n      quantity: 2\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 7\n    },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS_CHESTNUT,\n      quantity: 300,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"thoroughly drain sun dried tomatoes from oil\",\n  \"chop tomatoes into many smaller pieces\",\n  \"marinade tomatoes in soy sauce and liquid smoke\",\n  \"chop the onion, mushroom and garlic\",\n  `blend almond milk with spinach, cashews, yeast, cornflour, salt and pepper`,\n  \"fry diced onion, crushed garlic, sliced mushrooms and thyme in butter (and some water) until softened\",\n  \"cook spaghetti as per packet instructions, drain and set aside\",\n  \"pour green sauce over frying vegetables, stirring until it thickens\",\n  \"remove from heat and stir in spaghetti and tomatoes until evenly covered\"\n];\n\nconst title: IRecipeTitle = \"carbonara\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.CARBONARA;\n\nexport const CARBONARA: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  method,\n  hide: true,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, UNICODE, DIETS } from \"@constants\";\nimport { PHOTOS } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.PEPPER_MIXED, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS_CHESTNUT,\n      quantity: 300,\n      measurement: MEASUREMENTS.GRAM\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 5 },\n    {\n      ingredient: INGREDIENTS.BASIL_FRESH,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.HERBS_MIXED_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_BALSAMIC,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PUREE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.SPINACH,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.LENTIL_RED_DRY,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 5,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 1,\n      measurement: MEASUREMENTS.LITRE\n    },\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ],\n  [\n    { ingredient: INGREDIENTS.PASTA_LASAGNE_SHEET_DRIED, quantity: 10 },\n    { ingredient: INGREDIENTS.COURGETTE, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.CHEESE_VEGAN_SLICE,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.BREAD_GARLIC }]\n];\n\nconst method: IRecipeMethod = [\n  \"fry diced onion in oil and water for at least 5 minutes\",\n  \"add diced peppers, mushrooms, crushed garlic and fry for at least 10 minutes (replenishing the water to prevent burning)\",\n  `blend basil with stock powder, dried herbs, soy sauce, black pepper, balsamic vinegar, ${UNICODE.TOMATO_PUREE}, sugar and some water`,\n  \"pour basil blend into fried vegetables and stir throughly\",\n  \"add spinach and allow it to reduce\",\n  \"stir in chopped tomatoes and lentils\",\n  \"reduce heat, cover and simmer for at least 30 minutes\",\n  \"soak lasagne sheets in cold water\",\n  \"stir flour into medium hot olive oil\",\n  \"pour in the milk and whisk until it thickens (never give up, great arm workout)\",\n  \"remove from heat, season with salt and pepper\",\n  preheatOven({ degreesCelcius: 190 }),\n  `spoon ${UNICODE.THIRD} of each into an oven-proof dish (in the following order): ragu, lasagne sheets, white sauce, sliced raw courgettes`,\n  \"repeat previous step twice\",\n  \"seal the dish with vegan cheese slices\",\n  \"bake for 35 minutes\"\n];\nconst title: IRecipeTitle = \"lasagne\";\nconst makes: IRecipeMakes = { quantity: 6, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.LASAGNE;\n\nexport const LASAGNE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  diet,\n  serveWith,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.BUTTERNUT_SQUASH,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.ONION_WHITE_MEDIUM,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.LEEK,\n      quantity: 2\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 5\n    },\n    {\n      ingredient: INGREDIENTS.RICE_RISOTTO_ARBORIO,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 1,\n      measurement: MEASUREMENTS.LITRE\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BEANS_GREEN,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.SALT_ROCK_FRESH }],\n  [{ ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }],\n  [{ ingredient: INGREDIENTS.SAGE_FRESH, notes: \"crispy\" }]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 200 }),\n  \"roast evenly-cubed squash for 40 minutes (in some olive oil, salt and pepper)\",\n  \"fry diced onion and leek with crushed garlic in half the butter (and some water) for about 10 minutes until soft\",\n  \"toss in uncooked rice and stir for 2 minutes\",\n  \"boil water, then add 200ml at a time, replenishing as soon as the rice becomes almost dry\",\n  \"stir constantly and be patient\",\n  \"add finely sliced green beans shortly into the rice cooking\",\n  \"remove from heat, stir in squash, yeast, salt, pepper, remaining butter\"\n];\nconst title: IRecipeTitle = \"risotto\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const RISOTTO: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  method\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS } from \"resources\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.ONION_RED_MEDIUM, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.CURRY_PASTE_ROGAN_JOSH,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.GINGER_FRESH,\n      quantity: 3,\n      measurement: MEASUREMENTS.CENTIMETRE\n    },\n    {\n      ingredient: INGREDIENTS.CORIANDER_FRESH,\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.POTATO_SWEET,\n      quantity: 1,\n      notes: \"large\"\n    },\n    {\n      ingredient: INGREDIENTS.CHICKPEAS,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.PETITS_POIS_FROZEN,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK_COCONUT_CANNED,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.SPINACH,\n      quantity: 260,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.RICE }],\n  [{ ingredient: INGREDIENTS.KALE }, { ingredient: INGREDIENTS.POPPADOMS }]\n];\n\nconst method: IRecipeMethod = [\n  \"fry diced onion in oil, curry paste and some water on a medium heat for at least 10 minutes\",\n  \"meanwhile, blend coriander with some water\",\n  \"add grated ginger, diced sweet potato, drained chickpeas and blended coriander to frying pan\",\n  \"fry for about 20 minutes, regularly replenishing the water\",\n  \"add chopped tomatoes, bring to the boil\",\n  \"reduce heat and simmer for at least 30 minutes\",\n  \"stir in petit pois, coconut milk and spinach\"\n];\nconst title: IRecipeTitle = \"rogan josh\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.ROGAN_JOSH;\n\nexport const ROGAN_JOSH: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, UNICODE, DIETS } from \"@constants\";\nimport { PHOTOS } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven, bakeForAbout } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.POTATO_BAKING, quantity: 3 },\n    { ingredient: INGREDIENTS.POTATO_SWEET, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 100,\n      measurement: MEASUREMENTS.MILLILITRE\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 5 },\n    { ingredient: INGREDIENTS.CARROT, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS_CHESTNUT,\n      quantity: 300,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.ROSEMARY_DRIED,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PUREE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.WINE_RED,\n      quantity: 250,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.PETITS_POIS_FROZEN,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON,\n      optional: true\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.ASPARAGUS, notes: \"pan-fried\" }]\n];\n\nconst method: IRecipeMethod = [\n  \"peel and chop potato into smallish chunks (it cooks quicker and makes it easier to mash)\",\n  \"boil potatoes for about 25 minutes until soft and easily mashable\",\n  \"mash potato, then stir in butter, salt, pepper and some water to loosen it\",\n  \"elsewhere, fry diced onion with crushed garlic, sliced mushrooms and diced carrot all together in the oil and some water\",\n  \"shower vegetables in salt, pepper and dried herbs\",\n  \"keep replenishing the vegetables with splashes of water so they never or stick to the saucepan\",\n  `add ${UNICODE.TOMATO_PUREE} and stock powder`,\n  // \"once softened, add red wine (and lentils)\",\n  \"once softened, stir in red wine\",\n  // \"stir continuously whilst simmering for at least 30 minutes, adding water where necessary\",\n  \"simmer for at least 30 minutes, adding water where necessary\",\n  preheatOven({ degreesCelcius: 180 }),\n  \"remove from heat, stir in cornflour, yeast flakes and peas\",\n  \"transfer filling to oven-proof dish, cover with mashed potato and fork lines onto the topping\",\n  bakeForAbout({ minutes: 40 })\n];\n\nconst title: IRecipeTitle = \"shepherd's pie\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.SHEPHERDS_PIE;\nconst makes: IRecipeMakes = { quantity: 7, measurement: MEASUREMENTS.PORTION };\n\nexport const SHEPHERDS_PIE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  hide: true,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 5 },\n    {\n      ingredient: INGREDIENTS.GINGER_FRESH,\n      quantity: 3,\n      measurement: MEASUREMENTS.CENTIMETRE\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_WHITE_WINE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 4,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.KETCHUP_TOMATO,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.CHILLI_CRUSHED_DRIED,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 300,\n      measurement: MEASUREMENTS.MILLILITRE\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 1.5,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOFU,\n      quantity: 280,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.CARROT, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_RED, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_GREEN, quantity: 1 },\n    { ingredient: INGREDIENTS.PINEAPPLE, quantity: 1 }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.RICE_BASMATI }]\n];\n\nconst method: IRecipeMethod = [\n  \"mix cornflour with water, set solution aside\",\n  \"fry crushed garlic and grated ginger in a small saucepan for 1 minute\",\n  \"pour over soy, vinegar, ketchup, crushed chillis and water\",\n  \"add cornflour solution, stir for about 10 minutes until the sauce thickens, remove from heat\",\n  \"drain the tofu, chop into bite-sized chunks\",\n  \"mix cornflour with salt, pepper and oil\",\n  \"coat sides of tofu chunks in cornflour paste\",\n  \"fry tofu on medium-high heat for 5 minutes, set aside\",\n  \"chop pineapple, pepper and onion chunkily but slice carrot very thinly\",\n  \"fry vegetables in oil and some water until charred\",\n  \"toss in the pineapple, tofu and pour over the sauce\",\n  \"simmer for at least 5 minutes to let the flavours infuse, serve\"\n];\nconst title: IRecipeTitle = \"sweet and sour\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const SWEET_AND_SOUR: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  method\n};\n","import { BOLOGNESE } from \"./bolognese\";\nimport { CARBONARA } from \"./carbonara\";\nimport { LASAGNE } from \"./lasagne\";\nimport { RISOTTO } from \"./risotto\";\nimport { ROGAN_JOSH } from \"./rogan-josh\";\nimport { SHEPHERDS_PIE } from \"./shepherds-pie\";\nimport { SWEET_AND_SOUR } from \"./sweet-and-sour\";\n\nexport const MAINS: IRecipeGroup = {\n  category: \"mains\",\n  data: [\n    BOLOGNESE,\n    CARBONARA,\n    LASAGNE,\n    RISOTTO,\n    ROGAN_JOSH,\n    SHEPHERDS_PIE,\n    SWEET_AND_SOUR\n  ]\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.BASIL_FRESH,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.NUTS_PINE,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 4,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 3\n    },\n    {\n      ingredient: INGREDIENTS.LEMON_JUICE_FRESH,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_CIDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 50,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 25,\n      measurement: MEASUREMENTS.MILLILITRE\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"transfer all ingredients to blender\",\n  \"blend until smooth\",\n  \"store in refrigerator for up to 1 week\"\n];\n\nconst title: IRecipeTitle = \"pesto\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst makes: IRecipeMakes = { quantity: 100, measurement: MEASUREMENTS.GRAM };\n\nexport const PESTO: IRecipeCard = {\n  title,\n  ingredients,\n  diet,\n  makes,\n  method\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS } from \"resources\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.PEPPER_RED, quantity: 1 },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 1 },\n\n    {\n      ingredient: INGREDIENTS.CHILLI_BIRD_EYE_FRESH,\n      quantity: 20,\n      measurement: MEASUREMENTS.GRAM,\n      notes: \"stalk removed\"\n    },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_WHITE_WINE,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 10 },\n    { ingredient: INGREDIENTS.LEMON, quantity: 1, notes: \"zest and juice\" },\n    {\n      ingredient: INGREDIENTS.PAPRIKA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.OREGANO_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"transfer all ingredients to blender and blitz until smooth\",\n  \"transfer to a saucepan and heat on low for about 20 minutes\",\n  \"remove from heat, leave to cool\",\n  \"keep refrigerated in a jar for up to 2 weeks\"\n];\n\nconst title: IRecipeTitle = \"piri piri\";\nconst makes: IRecipeMakes = { quantity: 475, measurement: MEASUREMENTS.GRAM };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.PIRI_PIRI;\n\nexport const PIRI_PIRI: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { PESTO } from \"./pesto\";\nimport { PIRI_PIRI } from \"./piri-piri\";\n\nexport const SAUCES: IRecipeGroup = {\n  category: \"sauces\",\n  data: [PESTO, PIRI_PIRI]\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS } from \"resources\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.ONION_WHITE_MEDIUM,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 3\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_RED,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.BEANS_HARICOT,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PASSATA,\n      quantity: 500,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 1,\n      optional: true,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA_SMOKED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.ALLSPICE_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"fry diced onion, garlic and pepper in oil (and some water if need be) for 5-10 minutes\",\n  \"transfer to slow cooker along with passata and seasoning\",\n  \"cook on low for 8 hours or medium for 5 hours\"\n];\n\nconst title: IRecipeTitle = \"baked beans\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.BAKED_BEANS;\n\nexport const BAKED_BEANS: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.CAULIFLOWER_REGULAR, quantity: 1 },\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 200,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TURMERIC_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.SWEET_CHILLI_SAUCE,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.LIME_JUICE_FRESH,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SRIRACHA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 2 },\n    { ingredient: INGREDIENTS.ONION_SPRING },\n    { ingredient: INGREDIENTS.SEEDS_SESAME }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 200 }),\n  \"mix flour, almond milk, salt, pepper, turmeric, paprika in large bowl to make batter\",\n  \"remove all leaves from cauliflower, cut vertically around the stem to release florets\",\n  \"cover all florets in the batter\",\n  \"use tongs to transfer each floret to baking tray\",\n  \"roast the cauliflower for 25 minutes\",\n  \"make bang bang sauce by mixing sweet chilli, soy, lime juice, sriracha, crushed garlic\",\n  \"toss sauce over cauliflower in a heated wok\",\n  \"pour over fried spring onion and sesame seeds\"\n];\n\nconst title: IRecipeTitle = \"bang bang cauliflower\";\nconst makes: IRecipeMakes = { quantity: 2, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const BANG_BANG_CAULIFLOWER: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.KALE,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA_SMOKED,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.CHILLI_POWDER,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 100 }),\n  \"wash and dry kale thoroughly, discard large stems, transfer to large mixing bowl\",\n  \"mix oil with seasoning in a small jug\",\n  \"pour seasoning over kale, toss thoroughly until evenly distributed\",\n  \"transfer seasoned kale to 2 baking trays\",\n  \"bake for 20 minutes, one tray on top of the other\",\n  \"switch tray positions, bake for further 15 minutes\",\n  \"remove from oven, leave to cool\"\n];\n\nconst title: IRecipeTitle = \"crispy kale\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.KALE_CRISPY;\nconst makes: IRecipeMakes = { quantity: 2, measurement: MEASUREMENTS.SERVING };\n\nexport const CRISPY_KALE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  image,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS } from \"resources\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.POTATO_BAKING, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"peel potatoes and chop into small-ish chunks (to speed up the boiling process)\",\n  \"submerge potato chunks in boiling water for at least 25 minutes (until soft enough to easily mash)\",\n  \"drain the boiling water, then use a masher to break down the potato\",\n  \"dissolve salt in the water, then stir into the potato\",\n  \"stir in the butter, then season with black pepper\"\n];\n\nconst title: IRecipeTitle = \"mashed potato\";\nconst makes: IRecipeMakes = { quantity: 2, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.MASHED_POTATO;\n\nexport const MASHED_POTATO: IRecipeCard = {\n  ingredients,\n  title,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.AUBERGINE, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_RED, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_ORANGE, quantity: 1 },\n    { ingredient: INGREDIENTS.COURGETTE, quantity: 2 },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.OREGANO_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.LEMON_JUICE,\n      quantity: 2,\n      optional: true,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 1,\n      optional: true,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 180 }),\n  \"chunkily chop the aubergine, courgette, peppers and onions and distribute evenly across 2 baking trays\",\n  \"drizzle the vegetables in oil, ensuring they are evenly coated, plus season with salt and pepper\",\n  \"roast the vegetables for 1 hour, shaking the veg half way through and switching the position of the trays in the oven\",\n  \"heat oil, lightly fry garlic in a sauceapan for 1 minute\",\n  \"add chopped tomatoes and dried herbs\",\n  \"cover and simmer for 45 minutes\",\n  \"remove sauce from heat, stir in lemon juice, sugar, salt and pepper\",\n  \"transfer all roasted veg to the deeper of the 2 baking trays, pour tomato sauce all over and ensure it is evenly coated\",\n  \"bake for a final 10 minutes\"\n];\n\nconst title: IRecipeTitle = \"ratatouille\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.RATATOUILLE;\n\nexport const RATATOUILLE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image,\n  favourite: true\n};\n","import { BAKED_BEANS } from \"./baked-beans\";\nimport { BANG_BANG_CAULIFLOWER } from \"./bang-bang-cauliflower\";\nimport { CRISPY_KALE } from \"./crispy-kale\";\nimport { MASHED_POTATO } from \"./mashed-potato\";\nimport { RATATOUILLE } from \"./ratatouille\";\nimport { TOFU_SCRAMBLE } from \"./tofu-scramble\";\n\nexport const SIDES: IRecipeGroup = {\n  category: \"sides\",\n  data: [\n    BAKED_BEANS,\n    BANG_BANG_CAULIFLOWER,\n    CRISPY_KALE,\n    MASHED_POTATO,\n    RATATOUILLE,\n    TOFU_SCRAMBLE\n  ]\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.TOFU,\n      quantity: 280,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TURMERIC_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA_SMOKED,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_BLACK,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"drain tofu, crumble into small pieces (using both fingers) into a large mixing bowl\",\n  \"in a small jug, make paste from yeast, turmeric, paprika, salt, pepper, thyme, water and oil\",\n  \"pour the paste over the crumbled tofu and stir until evenly covered\",\n  \"heat the butter over a medium heat in a small saucepan\",\n  \"fry tofu until heated through\"\n];\n\nconst title: IRecipeTitle = \"tofu scramble\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const TOFU_SCRAMBLE: IRecipeCard = {\n  ingredients,\n  makes,\n  method,\n  title,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst {\n  LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN,\n  FOLD_IN_FLOUR_MIX,\n  preheatOven,\n  bakeForAbout,\n  transferToLoafTin\n} = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.BANANA, quantity: 4, notes: \"very ripe\" },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 75,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.FLOUR_SELF_RAISING,\n      quantity: 225,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BICARBONATE_OF_SODA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.CINNAMON_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.NUTMEG_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_ICING,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"blend (peeled) bananas with butter, sugar, oil and vanilla\",\n  \"in a small mixing bowl, weigh flour and stir in the baking powder, bicarbonate of soda, cinnamon and nutmeg\",\n  FOLD_IN_FLOUR_MIX,\n  transferToLoafTin({ sunkenCentre: true }),\n  bakeForAbout({ minutes: 40, skewer: true }),\n  LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN,\n  \"make butter icing by whisking butter with icing sugar and water\",\n  \"evenly spread icing over the cake\"\n];\n\nconst title: IRecipeTitle = \"banana cake\";\nconst makes: IRecipeMakes = { quantity: 10, measurement: MEASUREMENTS.SLICE };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.BANANA_CAKE;\n\nexport const BANANA_CAKE: IRecipeCard = {\n  title,\n  favourite: true,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.EGGS,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_SELF_RAISING,\n      quantity: 175,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK,\n      quantity: 200,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.BLUEBERRIES_FRESH,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.BANANA }],\n  [{ ingredient: INGREDIENTS.RASPBERRIES_FRESH }],\n  [\n    { ingredient: INGREDIENTS.NECTAR_AGAVE },\n    { ingredient: INGREDIENTS.SYRUP_GOLDEN }\n  ],\n  [{ ingredient: INGREDIENTS.SUGAR_ICING }],\n  [{ ingredient: INGREDIENTS.CINNAMON_GROUND }]\n];\n\nconst method: IRecipeMethod = [\n  \"whisk all ingredients except blueberries\",\n  \"fold blueberries into pancake batter\",\n  \"brush frying pan with sunflower oil and heat\",\n  \"drop dessertspoonfuls of batter onto frying pan\",\n  \"flip pancakes once bases are golden brown\",\n  \"remove from heat and serve\"\n];\n\nconst title: IRecipeTitle = \"blueberry pancakes\";\nconst diet: IRecipeDiet = DIETS.VEGETARIAN;\n\nexport const BLUEBERRY_PANCAKES: IRecipeCard = {\n  title,\n  ingredients,\n  serveWith,\n  method,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven, FOLD_IN_FLOUR_MIX, bakeForAbout } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.CHOCOLATE_DARK,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.COCOA_POWDER,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 200,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.RASPBERRIES_FRESH,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"in a large mixing bowl, add chocolate (broken into chunks), oil and butter\",\n  \"rest the large mixing bowl over a small saucepan of hot (not boiling) water and stir until melted, then remove from heat\",\n  \"in a small mixing bowl, weigh flour and combine with sugar and cocoa powder\",\n  \"stir in almond milk and vanilla to the melted chocolate\",\n  FOLD_IN_FLOUR_MIX,\n  \"gently introduce the raspberries to the mixture\",\n  \"transfer to a non-stick baking tin\",\n  bakeForAbout({ minutes: 40, skewer: true }),\n  \"transfer to fridge for 1 hour to speed up cooling and increase fudginess\",\n  \"store in airtight container\"\n];\n\nconst title: IRecipeTitle = \"brownies\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.BROWNIES;\n\nexport const BROWNIES: IRecipeCard = {\n  ingredients,\n  method,\n  diet,\n  image,\n  title,\n  hide: true\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 125,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.CINNAMON_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BICARBONATE_OF_SODA,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 115,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    { ingredient: INGREDIENTS.EGGS, quantity: 1 },\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.OATS,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.RAISINS,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst title: IRecipeTitle = \"cookies\";\nconst makes: IRecipeMakes = { quantity: 20, measurement: \"cookie\" };\nconst diet: IRecipeDiet = DIETS.VEGETARIAN;\n\nexport const COOKIES: IRecipeCard = {\n  ingredients,\n  title,\n  makes,\n  favourite: true,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 350,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 175,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 175,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.APPLE_BRAMLEY,\n      quantity: 1,\n      measurement: MEASUREMENTS.KILOGRAM,\n      notes: \"weighs nearer 700g after peeling and coring\"\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 350,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.RASPBERRIES_FROZEN,\n      quantity: 350,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BLACKBERRIES_FROZEN,\n      quantity: 500,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.CINNAMON_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_DEMERARA,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.CREAM_OAT }]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 160 }),\n  \"mix sieved flour and sieved caster sugar\",\n  \"introduce chunks of butter, use fingertips to form light crumble but don't overwork\",\n  \"blind bake the crumble topping for 40 minutes (shaking half way through)\",\n  \"peel, core and chop the apples into medium chunks\",\n  \"stew apple in the water until softened, remove from heat\",\n  \"stir in demerara sugar, raspberries, blackberries and cinnamon\",\n  \"transfer fruit to oven dish and cover with the crumble topping\",\n  \"bake for 20 minutes\",\n  \"remove from oven, leave to cool for at least 5 minutes before serving\"\n];\n\nconst makes: IRecipeMakes = { quantity: 8, measurement: MEASUREMENTS.PORTION };\nconst title: IRecipeTitle = \"crumble\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.CRUMBLE;\n\nexport const CRUMBLE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  favourite: true,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.APRICOTS_DRIED,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BLUEBERRIES_DRIED,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.CRANBERRIES_DRIED,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OATS,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 140,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SYRUP_GOLDEN,\n      quantity: 90,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"in a large mixing bowl, stir finely chopped fruit and salt into the oats\",\n  \"melt butter in a saucepan with golden syrup and sugar\",\n  \"add melted butter mix to oat mix and stir thoroughly\",\n  \"transfer mixture to non-stick loaf tin, flatten to cover the whole base\",\n  \"bake for 15-20 minutes (depending how gooey you like it, remembering it will solidify more overnight)\",\n  \"leave to cool before cutting into suitably-sized chunks\"\n];\n\nconst title: IRecipeTitle = \"flapjacks\";\nconst makes: IRecipeMakes = { quantity: 12, measurement: MEASUREMENTS.CHUNK };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS.FLAPJACKS;\n\nexport const FLAPJACKS: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst {\n  preheatOven,\n  FOLD_IN_FLOUR_MIX,\n  transferToLoafTin,\n  bakeForAbout\n} = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.MILK_COCONUT_CANNED,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 100,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    { ingredient: INGREDIENTS.LEMON_LARGE, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.LEMON_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.FLOUR_SELF_RAISING,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BICARBONATE_OF_SODA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    { ingredient: INGREDIENTS.LEMON_LARGE, quantity: 1 },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"in a large mixing bowl, whisk the coconut milk with the sugar, oil and lemon juice for at least 3 minutes\",\n  \"stir in the lemon zest, vanilla extract and lemon extract\",\n  \"in a small mixing bowl, weigh flour and combine with baking powder, bicarbonate of soda and salt\",\n  FOLD_IN_FLOUR_MIX,\n  transferToLoafTin({}),\n  bakeForAbout({ minutes: 40, skewer: true }),\n  \"make drizzle topping from zest and juice of lemon plus sugar\",\n  \"leave cake to cool for at least 30 minutes, prod a few holes in the cake\",\n  \"evenly coat drizzle topping\"\n];\n\nconst title: IRecipeTitle = \"lemon drizzle\";\nconst makes: IRecipeMakes = { quantity: 10, measurement: MEASUREMENTS.SLICE };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const LEMON_DRIZZLE: IRecipeCard = {\n  title,\n  ingredients,\n  diet,\n  makes,\n  method,\n  hide: true\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven, bakeForAbout } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 165,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK_OAT,\n      quantity: 85,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.RAISINS,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 200, bakingTray: true }),\n  \"sieve flour and baking powder, combine with sugar and salt\",\n  \"add butter, use fingertips to form fine crumbs\",\n  \"dust the kitchen worktop with flour\",\n  \"slightly warm the milk and pour into the flour mix, use a knife to combine the ingredients\",\n  \"fold in the the raisins\",\n  \"roll out the dough on the worktop to a suitable thickness\",\n  \"cut out scone shapes and place on a baking tray\",\n  bakeForAbout({ minutes: 10, wellRisen: true })\n];\n\nconst title: IRecipeTitle = \"scones\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const SCONES: IRecipeCard = {\n  ingredients,\n  method,\n  diet,\n  title\n};\n","import { BANANA_CAKE } from \"./banana-cake\";\nimport { BLUEBERRY_PANCAKES } from \"./blueberry-pancakes\";\nimport { BROWNIES } from \"./brownies\";\nimport { COOKIES } from \"./cookies\";\nimport { CRUMBLE } from \"./crumble\";\nimport { FLAPJACKS } from \"./flapjacks\";\nimport { LEMON_DRIZZLE } from \"./lemon-drizzle\";\nimport { SCONES } from \"./scones\";\n\nexport const SWEETS: IRecipeGroup = {\n  category: \"sweets\",\n  data: [\n    BANANA_CAKE,\n    BLUEBERRY_PANCAKES,\n    BROWNIES,\n    COOKIES,\n    CRUMBLE,\n    FLAPJACKS,\n    LEMON_DRIZZLE,\n    SCONES\n  ]\n};\n","const recipesComingSoon: Array<string> = [\n  \"gingerbread\",\n  \"spinach sweet potato hash\",\n  \"shortbread\",\n  \"courgette rösti fritters\",\n  \"key lime pie\",\n  \"meatball tagine\",\n  \"aubergine teriyaki\",\n  \"loaded potato skins\",\n  \"mushroom stroganoff\",\n  \"carrot and ginger cake\",\n  \"jackfruit mac\",\n  \"lemon meringue pie\",\n  \"chilli sin carne\",\n  \"passionfruit cheesecake\",\n  \"victoria sponge\",\n  \"thai green curry\",\n  \"dahl\"\n];\n\nexport const RECIPES_COMING_SOON: Array<ICountedListItem> = recipesComingSoon\n  .sort((a, b) => (a > b ? 1 : -1))\n  .map(item => ({\n    text: item,\n    ignoreCountInfo: true,\n    futureCount: 0,\n    pastCount: 0\n  }));\n","import { MAINS } from \"./mains\";\nimport { SAUCES } from \"./sauces\";\nimport { SIDES } from \"./sides\";\nimport { SWEETS } from \"./sweets\";\nimport { RECIPES_COMING_SOON } from \"./recipes-coming-soon\";\n\ninterface IRecipesData {\n  CATEGORISED: Array<IRecipeGroup>;\n  COMING_SOON: Array<ICountedListItem>;\n}\n\nconst CATEGORISED: Array<IRecipeGroup> = [\n  SAUCES,\n  MAINS,\n  SIDES,\n  SWEETS\n].sort((a: IRecipeGroup, b: IRecipeGroup) =>\n  a.category > b.category ? 1 : -1\n);\n\nexport const DATA_RECIPES: IRecipesData = {\n  CATEGORISED,\n  COMING_SOON: RECIPES_COMING_SOON\n};\n","import {\n  PAGE_SECTION_IDS,\n  PAGE_SECTION_DATA_TYPES,\n  EVENT_CARD_TYPES\n} from \"@constants\";\nimport {\n  formatNames,\n  getPageSectionItemCounts,\n  itemIsFavourited,\n  isInFuture\n} from \"utils\";\n\ninterface IMapToCountedList {\n  items: Object;\n  id: IPageSectionDetails;\n  filter: IFilter;\n  allData: Array<any>;\n  favouritedData: Array<any>;\n  bucketListMode: boolean;\n}\n\nexport const mapToCountedList = ({\n  items,\n  id,\n  filter,\n  allData,\n  favouritedData,\n  bucketListMode\n}: IMapToCountedList): Array<ICountedListItem> => {\n  const mapToListEntry = (item: any): ICountedListItem => {\n    const { pastCount, futureCount } = getPageSectionItemCounts({\n      itemToCount: item,\n      data: allData\n    });\n\n    return {\n      text: formatNames(item),\n      ignoreCountInfo: item.insignificant || bucketListMode,\n      pastCount,\n      futureCount,\n      favourite:\n        item.favourite ||\n        itemIsFavourited({\n          itemToInspect: item,\n          id,\n          favouritedData\n        }),\n      star: item.capital\n    };\n  };\n\n  const data: Array<any> = Object.values(items)\n    .filter(item => (filter ? item[filter] : true))\n    .sort((a, b) =>\n      (a.name ? a.name : a)\n        .toLowerCase()\n        .localeCompare((b.name ? b.name : b).toLowerCase())\n    )\n    .map(item => mapToListEntry(item))\n    .filter(({ futureCount, pastCount }) =>\n      bucketListMode ? futureCount === 0 && pastCount === 0 : true\n    )\n    // DO NOT INCLUDE VENUES I'VE NEVER GONE TO ON THE WEBSITE, e.g. \"Lafayette\" venu\n    .filter(\n      ({ futureCount, ignoreCountInfo, pastCount }) =>\n        ignoreCountInfo || futureCount !== 0 || pastCount !== 0\n    );\n\n  return id === PAGE_SECTION_IDS.FRIEND\n    ? data\n        .sort((a, b) => (a.futureCount > b.futureCount ? -1 : 1))\n        .sort((a, b) => (a.pastCount > b.pastCount ? -1 : 1))\n    : data;\n};\n\ninterface IGeneratePropertyArrayFromObject {\n  object: Object;\n  childLevelProperty: string;\n  topLevelProperty?: string;\n}\n\nexport const generatePropertyArrayFromObject = ({\n  object,\n  childLevelProperty,\n  topLevelProperty\n}: IGeneratePropertyArrayFromObject) => {\n  const array: Array<any> = Object.values(object);\n\n  const arrayFilteredByTopLevelProperty: Array<any> = array.filter(\n    item => topLevelProperty && item[topLevelProperty]\n  );\n\n  const arrayFilteredByChildLevelProperty: Array<any> = [].concat.apply(\n    [],\n    array\n      .filter(item => item[childLevelProperty])\n      .map(item => Object.values(item[childLevelProperty]))\n  );\n\n  return [\n    ...arrayFilteredByTopLevelProperty,\n    ...arrayFilteredByChildLevelProperty\n  ];\n};\n\ninterface IMapDataToEventCards {\n  data: Array<any>;\n  eventCardType: IEventCardType;\n}\n\nexport const mapToEventCard = ({\n  data,\n  eventCardType\n}: IMapDataToEventCards): Array<IEventCard> => {\n  const mapDataToEventCard = ({\n    title,\n    subtitle,\n    headline,\n    festival,\n    support,\n    lineup,\n    dates,\n    venue,\n    favourite,\n    company,\n    ticketType,\n    play,\n    cast,\n    theatre\n  }: any): IEventCard => ({\n    //@ts-ignore\n    title: formatNames(\n      title\n        ? title\n        : eventCardType === EVENT_CARD_TYPES.GIG\n        ? headline\n          ? headline\n          : festival\n        : eventCardType === EVENT_CARD_TYPES.THEATRE\n        ? play\n        : null\n    ),\n    //@ts-ignore\n    subtitle: formatNames(\n      subtitle\n        ? subtitle\n        : eventCardType === EVENT_CARD_TYPES.GIG\n        ? lineup\n          ? lineup\n          : support\n        : eventCardType === EVENT_CARD_TYPES.THEATRE\n        ? cast\n        : null\n    ),\n    //@ts-ignore\n    body: formatNames(\n      eventCardType === EVENT_CARD_TYPES.GIG\n        ? venue\n        : eventCardType === EVENT_CARD_TYPES.THEATRE\n        ? theatre\n        : null\n    ),\n    dates,\n    company: company.sort((a: IFriend, b: IFriend) =>\n      a.initials > b.initials ? 1 : -1\n    ),\n    favourite,\n    disclaimer:\n      eventCardType === EVENT_CARD_TYPES.GIG && isInFuture(dates) && ticketType\n  });\n\n  return data.map((item: any) => mapDataToEventCard(item));\n};\n\ntype SingleYearData = Array<IEventCardRawData>;\ntype IMapYearGroupsToSections = {\n  years: Array<SingleYearData>;\n  eventCardType: IEventCardType;\n};\n\nexport const mapYearsToEventCardPageSections = ({\n  years,\n  eventCardType\n}: IMapYearGroupsToSections): Array<IPageSection> => {\n  const mapYearGroupToSection = (year: SingleYearData): IPageSection => {\n    const title = year[0].dates[0].getFullYear().toString();\n\n    return {\n      details: { id: title, title, type: PAGE_SECTION_DATA_TYPES.EVENT_CARDS },\n      showSectionLength: true,\n      data: mapToEventCard({ data: year, eventCardType }).filter(\n        (item: IEventCard) => !isInFuture(item.dates)\n      )\n    };\n  };\n\n  return years.map((year: SingleYearData) => mapYearGroupToSection(year));\n};\n","import { isInFuture } from \"./isInFuture\";\n\ninterface IGetPageSectionItemCounts {\n  itemToCount: any;\n  data: Array<any>;\n}\n\nexport const getPageSectionItemCounts = ({\n  itemToCount,\n  data\n}: IGetPageSectionItemCounts) => {\n  let pastCount: number = 0;\n  let futureCount: number = 0;\n\n  data.forEach((dataItem: any) => {\n    if (\n      // MUSICIAN\n      dataItem.headline === itemToCount ||\n      (dataItem.support && dataItem.support.includes(itemToCount)) ||\n      (dataItem.lineup && dataItem.lineup.includes(itemToCount)) ||\n      // FESTIVAL\n      dataItem.festival === itemToCount ||\n      // FRIEND\n      (dataItem.company && dataItem.company.includes(itemToCount)) ||\n      // MUSIC VENUE\n      dataItem.venue === itemToCount ||\n      // PLAY\n      dataItem.play === itemToCount ||\n      // THEATRE\n      dataItem.theatre === itemToCount ||\n      // LOCATION\n      (dataItem.title && dataItem.title.includes(itemToCount)) ||\n      (dataItem.hidden && dataItem.hidden.includes(itemToCount)) ||\n      (dataItem.subtitle && dataItem.subtitle.includes(itemToCount)) ||\n      // ACTOR\n      (dataItem.cast && dataItem.cast.includes(itemToCount))\n    ) {\n      if (isInFuture(dataItem.dates)) {\n        futureCount += 1;\n      } else {\n        pastCount += 1;\n      }\n    }\n  });\n\n  return { futureCount, pastCount };\n};\n","import {\n  PAGE_SECTION_IDS,\n  MUSIC_VENUES,\n  FRIENDS,\n  MUSICIANS,\n  FESTIVALS\n} from \"@constants\";\nimport { DATA_GIGS } from \"data\";\n\nimport { mapToCountedList } from \"../factory\";\n\nconst { ALL } = DATA_GIGS;\n\nconst FAVOURITES: Array<IGigData> = ALL.filter(item => item.favourite);\n\nconst mapToCountedListWrapper = (params: any) =>\n  mapToCountedList({\n    ...params,\n    allData: ALL,\n    favouritedData: FAVOURITES\n  });\n\nexport const CL_BUCKET_LIST: Array<ICountedListItem> = mapToCountedListWrapper({\n  bucketListMode: true,\n  items: MUSICIANS,\n  id: PAGE_SECTION_IDS.MUSICIAN\n});\n\nexport const CL_FESTIVALS: Array<ICountedListItem> = mapToCountedListWrapper({\n  items: FESTIVALS,\n  id: PAGE_SECTION_IDS.FESTIVAL,\n  filter: \"festival\"\n});\n\nexport const CL_FRIENDS: Array<ICountedListItem> = mapToCountedListWrapper({\n  items: FRIENDS,\n  id: PAGE_SECTION_IDS.FRIEND,\n  filter: \"gigs\"\n});\n\nexport const CL_MUSICIANS: Array<ICountedListItem> = mapToCountedListWrapper({\n  items: MUSICIANS,\n  id: PAGE_SECTION_IDS.MUSICIAN\n});\n\nexport const CL_VENUES: Array<ICountedListItem> = mapToCountedListWrapper({\n  items: MUSIC_VENUES,\n  id: PAGE_SECTION_IDS.MUSIC_VENUES\n});\n","import { EVENT_CARD_TYPES, PAGE_SECTION_IDS } from \"@constants\";\nimport { DATA_GIGS } from \"data\";\nimport { ICONS } from \"resources\";\nimport { isInFuture } from \"utils\";\n\nimport { mapToEventCard, mapYearsToEventCardPageSections } from \"../factory\";\nimport {\n  CL_BUCKET_LIST,\n  CL_FESTIVALS,\n  CL_FRIENDS,\n  CL_MUSICIANS,\n  CL_VENUES\n} from \"./factory\";\n\nconst { ALL, ALL_GROUPED_BY_YEAR } = DATA_GIGS;\n\nconst UPCOMING: Array<IGigData> = ALL.filter(gig => isInFuture(gig.dates));\n\nconst pastCount: number = ALL.length - UPCOMING.length;\nconst futureCount: number = UPCOMING.length;\n\nconst SECTIONS_STATS: Array<IPageSection> = [\n  {\n    details: PAGE_SECTION_IDS.FESTIVAL,\n    showSectionLength: true,\n    icon: ICONS.PEACE_SIGN,\n    data: CL_FESTIVALS\n  },\n  {\n    details: PAGE_SECTION_IDS.MUSICIAN,\n    icon: ICONS.ARTIST,\n    data: CL_MUSICIANS,\n    showSectionLength: true\n  },\n  {\n    details: PAGE_SECTION_IDS.BUCKET_LIST,\n    icon: ICONS.STARS,\n    data: CL_BUCKET_LIST,\n    showSectionLength: true\n  },\n  {\n    details: PAGE_SECTION_IDS.FRIEND,\n    icon: ICONS.PEOPLE,\n    showSectionLength: false,\n    data: CL_FRIENDS\n  },\n  {\n    details: PAGE_SECTION_IDS.UP_NEXT,\n    icon: ICONS.NOTEPAD,\n    data: mapToEventCard({\n      data: UPCOMING,\n      eventCardType: EVENT_CARD_TYPES.GIG\n    }),\n    showSectionLength: true\n  },\n  {\n    details: PAGE_SECTION_IDS.MUSIC_VENUES,\n    icon: ICONS.STADIUM,\n    data: CL_VENUES,\n    showSectionLength: true\n  }\n].sort((a: IPageSection, b: IPageSection) =>\n  a.details.title > b.details.title ? 1 : -1\n);\n\nconst SECTIONS_YEARS: Array<IPageSection> = mapYearsToEventCardPageSections({\n  years: ALL_GROUPED_BY_YEAR,\n  eventCardType: EVENT_CARD_TYPES.GIG\n});\n\nconst sections: Array<IPageSection> = [...SECTIONS_STATS, ...SECTIONS_YEARS];\n\nexport const PAGE_GIGS: IPageData = { pastCount, futureCount, sections };\n","import { PAGE_SECTION_IDS } from \"@constants\";\nimport { DATA_RECIPES } from \"data\";\n\nimport { mapRecipeGroupsToSections } from \"./factory\";\n\nconst SECTIONS_RECIPE_GROUPS: Array<IPageSection> = mapRecipeGroupsToSections(\n  DATA_RECIPES.CATEGORISED\n);\n\nconst SECTION_COMING_SOON: IPageSection = {\n  details: PAGE_SECTION_IDS.RECIPES_COMING_SOON,\n  data: DATA_RECIPES.COMING_SOON\n};\n\nconst sections: Array<IPageSection> = [\n  ...SECTIONS_RECIPE_GROUPS,\n  SECTION_COMING_SOON\n];\n\nexport const PAGE_RECIPES: IPageData = { sections };\n","import { PAGE_SECTION_DATA_TYPES } from \"@constants\";\n\nexport const mapRecipeGroupsToSections = (\n  recipeGroups: Array<IRecipeGroup>\n): Array<IPageSection> => {\n  const maprecipeGroupToSection = ({\n    category,\n    data\n  }: IRecipeGroup): IPageSection => ({\n    details: {\n      id: category,\n      title: category,\n      type: PAGE_SECTION_DATA_TYPES.RECIPES\n    },\n    data,\n    expandedAutomatically: true\n  });\n\n  return recipeGroups.map((item: IRecipeGroup) =>\n    maprecipeGroupToSection(item)\n  );\n};\n","import {\n  EVENT_CARD_TYPES,\n  FRIENDS,\n  LOCATIONS,\n  PAGE_SECTION_IDS\n} from \"@constants\";\nimport { DATA_TRAVEL } from \"data\";\nimport { ICONS } from \"resources\";\nimport { isInFuture } from \"utils\";\n\nimport {\n  mapToCountedList,\n  generatePropertyArrayFromObject,\n  mapToEventCard,\n  mapYearsToEventCardPageSections\n} from \"../factory\";\n\nconst eventCardType = EVENT_CARD_TYPES.TRIP;\nconst mapTripToEventCards = (params: any) =>\n  mapToEventCard({ ...params, eventCardType });\n\nconst { ALL, ALL_GROUPED_BY_YEAR } = DATA_TRAVEL;\n\nconst FAVOURITES: Array<ITravelData> = ALL.filter(item => item.favourite);\nconst UPCOMING: Array<ITravelData> = ALL.filter(item => isInFuture(item.dates));\n\nconst pastCount: number =\n  ALL.filter(item => !item.notAbroad).length - UPCOMING.length;\nconst futureCount: number = UPCOMING.length;\n\nconst countries: Array<any> = Object.values(LOCATIONS);\n\nconst cities: Array<ICity> = generatePropertyArrayFromObject({\n  object: LOCATIONS,\n  childLevelProperty: \"cities\"\n});\n\nconst towns: Array<ITown> = generatePropertyArrayFromObject({\n  object: LOCATIONS,\n  childLevelProperty: \"towns\"\n});\n\nconst islands: Array<IIsland> = generatePropertyArrayFromObject({\n  object: LOCATIONS,\n  childLevelProperty: \"islands\",\n  topLevelProperty: \"island\"\n});\n\nconst attractions: Array<IAttraction> = generatePropertyArrayFromObject({\n  object: LOCATIONS,\n  childLevelProperty: \"attractions\"\n});\n\nconst themeParks: Array<IAttraction> = attractions.filter(\n  item => item.themePark\n);\nconst highlights: Array<IAttraction> = attractions.filter(\n  item => item.highlight\n);\n\nconst mapToCountedListWrapper = (params: any): Array<ICountedListItem> =>\n  mapToCountedList({\n    ...params,\n    allData: ALL,\n    favouritedData: FAVOURITES\n  });\n\nconst BUCKET_LIST: Array<ICountedListItem> = mapToCountedListWrapper({\n  bucketListMode: true,\n  items: DATA_TRAVEL.BUCKET_LIST\n});\nconst CITIES: Array<ICountedListItem> = mapToCountedListWrapper({\n  items: cities,\n  id: PAGE_SECTION_IDS.CITY\n});\nconst TOWNS: Array<ICountedListItem> = mapToCountedListWrapper({\n  items: towns,\n  id: PAGE_SECTION_IDS.TOWN\n});\n// const ATTRACTIONS: any = mapToCountedListWrapper({\n//   items: attractions.filter(item => !item.themePark && !item.highlight),\n//   id: PAGE_SECTION_IDS.ATTRACTION\n// });\nconst THEME_PARKS: Array<ICountedListItem> = mapToCountedListWrapper({\n  items: themeParks,\n  id: PAGE_SECTION_IDS.ATTRACTION\n});\nconst HIGHLIGHTS: Array<ICountedListItem> = mapToCountedListWrapper({\n  items: highlights,\n  id: PAGE_SECTION_IDS.ATTRACTION\n});\nconst ISLANDS: Array<ICountedListItem> = mapToCountedListWrapper({\n  items: islands,\n  id: PAGE_SECTION_IDS.ISLAND\n});\nconst COUNTRIES: Array<ICountedListItem> = mapToCountedListWrapper({\n  items: countries,\n  id: PAGE_SECTION_IDS.COUNTRY\n});\nconst friends: Array<ICountedListItem> = mapToCountedListWrapper({\n  items: FRIENDS,\n  id: PAGE_SECTION_IDS.FRIEND,\n  filter: \"travel\"\n});\n\nconst SECTIONS_STATS: Array<IPageSection> = [\n  {\n    details: PAGE_SECTION_IDS.BUCKET_LIST,\n    icon: ICONS.STARS,\n    data: BUCKET_LIST\n  },\n  {\n    details: PAGE_SECTION_IDS.CITY,\n    icon: ICONS.CITY,\n    showSectionLength: true,\n    data: CITIES\n  },\n  {\n    details: PAGE_SECTION_IDS.COUNTRY,\n    icon: ICONS.FLAG,\n    data: COUNTRIES,\n    showSectionLength: true\n  },\n  {\n    details: PAGE_SECTION_IDS.FRIEND,\n    icon: ICONS.PEOPLE,\n    data: friends\n  },\n  {\n    details: PAGE_SECTION_IDS.HIGHLIGHT,\n    icon: ICONS.MAP_PIN,\n    data: HIGHLIGHTS\n  },\n  {\n    details: PAGE_SECTION_IDS.ISLAND,\n    showSectionLength: true,\n    icon: ICONS.PALM_TREE,\n    data: ISLANDS\n  },\n  {\n    details: PAGE_SECTION_IDS.THEME_PARK,\n    showSectionLength: true,\n    icon: ICONS.ROLLER_COASTER,\n    data: THEME_PARKS\n  },\n  {\n    details: PAGE_SECTION_IDS.TOWN,\n    icon: ICONS.TOWN_HALL,\n    data: TOWNS\n  },\n  {\n    details: PAGE_SECTION_IDS.UP_NEXT,\n    icon: ICONS.NOTEPAD,\n    showSectionLength: true,\n    data: mapTripToEventCards({ data: UPCOMING })\n  }\n];\n\nconst SECTIONS_YEARS: Array<IPageSection> = mapYearsToEventCardPageSections({\n  years: ALL_GROUPED_BY_YEAR,\n  eventCardType\n});\n\nconst sections: Array<IPageSection> = [...SECTIONS_STATS, ...SECTIONS_YEARS];\n\nexport const PAGE_TRAVEL: IPageData = { pastCount, futureCount, sections };\n","import { ICONS } from \"resources\";\nimport { PAGE_GIGS, PAGE_RECIPES, PAGE_THEATRE, PAGE_TRAVEL } from \"pages\";\n\nexport const HOMEPAGE_ROUTE: IHomepageRoute = {\n  title: \"Home\",\n  dest: \"/\"\n};\n\nexport const PAGE_ROUTES: Array<IRoute> = [\n  {\n    dest: \"/gigs\",\n    icon: ICONS.MICROPHONE,\n    title: \"gigs\",\n    page: PAGE_GIGS\n  },\n  {\n    dest: \"/recipes\",\n    icon: ICONS.VEG_BOWL,\n    title: \"recipes\",\n    page: PAGE_RECIPES\n  },\n  {\n    dest: \"/theatre\",\n    icon: ICONS.MASKS,\n    title: \"theatre\",\n    page: PAGE_THEATRE\n  },\n  {\n    dest: \"/travel\",\n    icon: ICONS.TRAVEL,\n    title: \"travel\",\n    page: PAGE_TRAVEL\n  }\n];\n","export { HOMEPAGE_ROUTE, PAGE_ROUTES } from \"./routes\";\n\nexport const CONSOLE_LOG_RECIPE_COST_CALCULATIONS: boolean = false;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { Link } from \"primitives\";\nimport { PAGE_ROUTES } from \"config\";\n\nconst FlexContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-areas: \"icon icon\" \"icon icon\";\n`;\n\nconst StyledSvg = styled.img(({ theme }: IThemeProp) => {\n  const iconSizeDesktop = theme.homePage.icon.size.desktop;\n  const iconSizePhone = theme.homePage.icon.size.phone;\n  const iconSizePadding = theme.homePage.icon.padding;\n\n  return css`\n    padding: ${iconSizePadding};\n    width: ${iconSizeDesktop};\n    height: ${iconSizeDesktop};\n\n    @media (max-width: ${theme.breakpoints.phone.maxWidth}) {\n      width: ${iconSizePhone};\n      height: ${iconSizePhone};\n    }\n  `;\n});\n\nexport const HomePage: React.FC = () => (\n  <FlexContainer>\n    <GridContainer>\n      {PAGE_ROUTES.map(({ icon, dest }: IRoute, index: number) => (\n        <Link key={index} to={dest}>\n          <StyledSvg src={icon} />\n        </Link>\n      ))}\n    </GridContainer>\n  </FlexContainer>\n);\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\ninterface PanelContainerProps extends IThemeProp {\n  bodyHeight: IBodyHeight;\n}\nconst PanelContainer = styled.div`\n  &.initial-state {\n    max-height: unset;\n  }\n\n  ${({\n    theme: {\n      section: { transition }\n    }\n  }: PanelContainerProps) =>\n    css`\n      transition: ${transition};\n    `}\n\n  overflow: hidden;\n  max-height: 0;\n\n  &.panel-visible {\n    max-height: ${(props: PanelContainerProps) => props.bodyHeight}px;\n  }\n`;\n\ninterface ClickableRegionProps {\n  expandedAutomatically?: boolean;\n}\nconst ClickableRegion = styled.div`\n  ${(props: ClickableRegionProps) =>\n    !props.expandedAutomatically &&\n    css`\n      cursor: pointer;\n    `}\n`;\n\ntype IBodyHeight = number | null;\n\ninterface DisclosureProps {\n  expandedAutomatically?: boolean;\n  onlyHeaderClickable?: boolean;\n  headerComponent: React.ReactNode;\n  children: React.ReactNode;\n}\n\nexport const Disclosure: React.FC<DisclosureProps> = ({\n  expandedAutomatically = false,\n  onlyHeaderClickable = false,\n  headerComponent,\n  children\n}) => {\n  const [panelIsVisible, switchPanelVisibility] = React.useState<boolean>(\n    expandedAutomatically\n  );\n  const [panelContainerHeight, setPanelContainerHeight] = React.useState<\n    IBodyHeight\n  >(null);\n\n  const refCallback = (element: HTMLDivElement): void => {\n    if (element && !panelContainerHeight)\n      setPanelContainerHeight(element.getBoundingClientRect().height);\n  };\n\n  const getPanelContainerClass = (\n    bodyHeight: number | null,\n    panelIsVisible: boolean\n  ): string =>\n    !bodyHeight\n      ? \"initial-state\"\n      : panelIsVisible\n      ? \"panel-visible\"\n      : \"panel-invisible\";\n\n  const hiddenPanel = (\n    <PanelContainer\n      data-test=\"disclosure-panel\"\n      className={getPanelContainerClass(panelContainerHeight, panelIsVisible)}\n      bodyHeight={panelContainerHeight}\n      ref={refCallback}\n    >\n      {children}\n    </PanelContainer>\n  );\n\n  const dataTestDisclosure: string = \"disclosure-container\";\n\n  return onlyHeaderClickable ? (\n    <>\n      <ClickableRegion\n        expandedAutomatically={expandedAutomatically}\n        data-test={dataTestDisclosure}\n        onClick={() =>\n          !expandedAutomatically && switchPanelVisibility(!panelIsVisible)\n        }\n      >\n        {headerComponent}\n      </ClickableRegion>\n      {hiddenPanel}\n    </>\n  ) : (\n    <ClickableRegion\n      data-test={dataTestDisclosure}\n      onClick={() => switchPanelVisibility(!panelIsVisible)}\n    >\n      {headerComponent}\n      {hiddenPanel}\n    </ClickableRegion>\n  );\n};\n","import styled, { css } from \"styled-components\";\n\nimport { SvgIcon, FlexRow, Ul } from \"primitives\";\n\nexport const PageSectionContainer = styled.section`\n  ${({\n    theme: {\n      section: { background, boxShadow, borderRadius, padding, margin }\n    }\n  }) => css`\n    background: ${background};\n    box-shadow: ${boxShadow};\n    border-radius: ${borderRadius};\n    padding: 0 ${padding.horizontal};\n    margin-bottom: ${margin.bottom};\n  `}\n`;\n\ninterface SectionPanelListProps extends IThemeProp {\n  isEventCards: boolean;\n}\nexport const SectionPanelList = styled(Ul)`\n  ${({\n    isEventCards,\n    theme: {\n      countedList,\n      eventCardList,\n      section: { padding }\n    }\n  }: SectionPanelListProps) => css`\n    padding-bottom: ${padding.bottom};\n\n    > * {\n      border-bottom: ${countedList.border.bottom};\n      padding: ${isEventCards\n        ? `${eventCardList.padding.vertical} 0`\n        : `${countedList.padding.vertical} 0`};\n    }\n\n    > *:last-child {\n      ${isEventCards &&\n      `padding-bottom: ${eventCardList.finalEventCardPaddingBottom};`}\n      border-bottom: 0;\n    }\n\n    ${isEventCards &&\n    css`\n      > *:first-child {\n        padding-top: 0;\n      }\n    `}\n  `}\n`;\n\nexport const RecipeGroupList = styled(Ul)`\n  ${({\n    theme: {\n      recipe: { border, title, first, last }\n    }\n  }: IThemeProp) => css`\n    > * {\n      border-bottom: ${border.bottom};\n      padding: ${title.padding.vertical} 0;\n    }\n\n    > *:first-child {\n      padding-top: ${first.padding.top};\n    }\n\n    > *:last-child {\n      border-bottom: 0;\n      padding-bottom: ${last.padding.bottom};\n    }\n  `}\n`;\n\nexport const PageSectionHeaderContainer = styled(FlexRow)`\n  padding: ${({\n    theme: {\n      section: { header }\n    }\n  }: IThemeProp) => header.padding};\n`;\n\nexport const PageSectionPrimaryCount = styled.span`\n  margin-left: ${({\n    theme: {\n      section: {\n        count: { margin }\n      }\n    }\n  }: IThemeProp) => margin.left};\n`;\n\nexport const PageSectionSecondaryCount = styled(PageSectionPrimaryCount)`\n  opacity: ${({ theme: { fadedOpacity } }: IThemeProp) => fadedOpacity};\n`;\n\nexport const StyledIcon = styled(SvgIcon)`\n  padding-top: ${({\n    theme: {\n      section: {\n        icon: { padding }\n      }\n    }\n  }: IThemeProp) => padding.top};\n`;\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"styled-components\";\n\nimport { H2, FlexRowGrow } from \"primitives\";\n\nimport {\n  PageSectionHeaderContainer,\n  StyledIcon,\n  PageSectionPrimaryCount,\n  PageSectionSecondaryCount\n} from \"./styles\";\n\ntype PageSectionHeaderProps = {\n  text: string;\n  showCounts: boolean;\n  data: Array<any>;\n  icon?: IImageSrc;\n  dataTest: string;\n};\n\nexport const PageSectionHeader: React.FC<PageSectionHeaderProps> = ({\n  text,\n  showCounts,\n  data,\n  icon,\n  dataTest\n}) => {\n  const starredDataCount = data && data.filter(item => item.star).length;\n  const theme: ITheme = useContext(ThemeContext);\n\n  return (\n    <PageSectionHeaderContainer data-test={dataTest}>\n      <FlexRowGrow data-test=\"section-header-text-container\">\n        <H2 data-test=\"section-header-text\">{text}</H2>\n\n        {showCounts && data && data.length > 1 && (\n          <PageSectionPrimaryCount data-test=\"section-count\">\n            {data.length}\n          </PageSectionPrimaryCount>\n        )}\n\n        {showCounts && starredDataCount > 0 && (\n          <PageSectionSecondaryCount data-test=\"section-count\">\n            {starredDataCount}\n          </PageSectionSecondaryCount>\n        )}\n      </FlexRowGrow>\n\n      {icon && (\n        <StyledIcon\n          data-test=\"section-header-icon\"\n          icon={icon}\n          size={theme.section.icon.size}\n        />\n      )}\n    </PageSectionHeaderContainer>\n  );\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { Ul, Li } from \"primitives\";\n\ninterface StyledLiProps extends IThemeProp {\n  addPaddingTop: boolean | undefined;\n}\n\nconst StyledLi = styled(Li)`\n  ${({\n    addPaddingTop,\n    theme: { listItemGroupVerticalSpacing }\n  }: StyledLiProps) =>\n    addPaddingTop &&\n    css`\n      padding-top: ${listItemGroupVerticalSpacing};\n    `}\n`;\n\ninterface RecipeCardListProps {\n  title: string;\n  items: Array<IListItemWithPaddingTopFlag>;\n  showBullets?: boolean;\n}\n\nexport const RecipeCardList: React.FC<RecipeCardListProps> = ({\n  title,\n  items,\n  showBullets = false\n}) => (\n  <Ul showBullets={showBullets}>\n    <strong>{title}</strong>\n\n    {items.map(\n      ({ text, addPaddingTop }: IListItemWithPaddingTopFlag, index: number) => (\n        <StyledLi key={index} addPaddingTop={addPaddingTop}>\n          {text}\n        </StyledLi>\n      )\n    )}\n  </Ul>\n);\n","import { generateIngredientListItem } from \"utils\";\n\nexport const mapMethodToListItems = (\n  method: IRecipeMethod\n): Array<IListItemWithPaddingTopFlag> =>\n  method.map(\n    (item: string): IListItemWithPaddingTopFlag => ({\n      text: item,\n      addPaddingTop: false\n    })\n  );\n\nexport const mapServeWithToListItems = (\n  serveWith: Array<Array<IRecipeIngredient>>\n): Array<IListItemWithPaddingTopFlag> => {\n  const getServeWithListItem = (\n    lineOptions: Array<IRecipeIngredient>\n  ): string => {\n    let output: string = \"\";\n\n    lineOptions.forEach(\n      ({ ingredient: { displayText } }: IRecipeIngredient, index: number) =>\n        (output +=\n          index === 0\n            ? displayText\n            : index === lineOptions.length - 1\n            ? ` or ${displayText}`\n            : `, ${displayText}`)\n    );\n\n    return output;\n  };\n\n  return serveWith.map(\n    (lineOptions: Array<IRecipeIngredient>): IListItemWithPaddingTopFlag => ({\n      text: getServeWithListItem(lineOptions),\n      addPaddingTop: false\n    })\n  );\n};\n\nexport const mapRecipeIngredientsToListItems = (\n  ingredientsGroups: Array<Array<IRecipeIngredient>>\n): Array<IListItemWithPaddingTopFlag> => {\n  let ingredientsWithPaddingFlags: Array<IListItemWithPaddingTopFlag> = [];\n\n  ingredientsGroups.forEach(\n    (ingredientsGroup: Array<IRecipeIngredient>, INDEX_HIGH: number) => {\n      ingredientsGroup.forEach(\n        (ingredient: IRecipeIngredient, INDEX_LOW: number) => {\n          ingredientsWithPaddingFlags.push({\n            text: generateIngredientListItem(ingredient),\n            addPaddingTop: INDEX_HIGH !== 0 && INDEX_LOW === 0\n          });\n        }\n      );\n    }\n  );\n\n  return ingredientsWithPaddingFlags;\n};\n","import styled, { css } from \"styled-components\";\n\nimport { H3, FlexColumn } from \"primitives\";\n\ninterface IRecipeCardTitle {\n  favourite?: boolean;\n}\nexport const RecipeCardTitle = styled(H3)`\n  font-weight: 300;\n  flex: 1;\n\n  ${(props: IRecipeCardTitle) =>\n    props.favourite &&\n    css`\n      ::before {\n        content: \"♥ \";\n      }\n    `}\n`;\n\nexport const RecipeCardImage = styled.img(\n  ({\n    theme: {\n      recipe: {\n        image: { size }\n      }\n    }\n  }: IThemeProp) => css`\n    height: ${size};\n    width: ${size};\n  `\n);\n\nexport const RecipeBody = styled.div`\n  padding-top: 5px;\n\n  > * {\n    padding: 10px 0 5px;\n  }\n`;\n\nexport const PaddedFlexColumn = styled(FlexColumn)`\n  > *:not(:first-child) {\n    padding-top: 4px;\n  }\n`;\n","import React from \"react\";\n\nimport { MEASUREMENTS, NO_UNIT_COST_FOR_RECIPE_EXISTS } from \"@constants\";\nimport { Circle, FlexRow, SeventyFivePercentSpan } from \"primitives\";\nimport { calculateRecipeCost, getIngredientsHeader } from \"utils\";\n\nimport { CentredOnPhone } from \"../CentredOnPhone\";\nimport { Disclosure } from \"../Disclosure\";\n\nimport { RecipeCardList } from \"./RecipeCardList\";\n\nimport {\n  mapMethodToListItems,\n  mapServeWithToListItems,\n  mapRecipeIngredientsToListItems\n} from \"./factory\";\nimport {\n  RecipeCardTitle,\n  RecipeBody,\n  RecipeCardImage,\n  PaddedFlexColumn\n} from \"./styles\";\n\nexport const RecipeCard: React.FC<IRecipeCard> = ({\n  title,\n  makes,\n  ingredients,\n  method,\n  favourite,\n  serveWith,\n  newRecipe,\n  diet,\n  image\n}) => {\n  const { costDisplayText, unitCostDisplayText } = calculateRecipeCost({\n    ingredients,\n    yieldQuantity: makes && makes.quantity,\n    recipeTitle: title\n  });\n\n  const defaultIngredientsHeader: string = \"ingredients\";\n  const ingredientsHeader: string = makes\n    ? getIngredientsHeader({ makes, defaultIngredientsHeader })\n    : defaultIngredientsHeader;\n\n  return (\n    <Disclosure\n      expandedAutomatically={newRecipe}\n      headerComponent={\n        <FlexRow>\n          <RecipeCardTitle favourite={favourite}>{title}</RecipeCardTitle>\n\n          <Circle fontSize=\"13.5px\" size=\"27px\" invert color={diet.color}>\n            {diet.abbreviation}\n          </Circle>\n        </FlexRow>\n      }\n    >\n      <RecipeBody>\n        <RecipeCardList\n          title={ingredientsHeader}\n          items={mapRecipeIngredientsToListItems(ingredients)}\n        />\n\n        {serveWith && (\n          <RecipeCardList\n            title=\"serve with\"\n            items={mapServeWithToListItems(serveWith)}\n          />\n        )}\n\n        {method && (\n          <RecipeCardList\n            title=\"method\"\n            items={mapMethodToListItems(method)}\n            showBullets\n          />\n        )}\n\n        {image && (\n          <CentredOnPhone>\n            <RecipeCardImage src={image} />\n          </CentredOnPhone>\n        )}\n\n        <CentredOnPhone>\n          <PaddedFlexColumn>\n            <span>\n              approx. <strong>{costDisplayText}</strong> to make\n            </span>\n\n            {unitCostDisplayText !== NO_UNIT_COST_FOR_RECIPE_EXISTS &&\n              makes &&\n              makes.measurement &&\n              makes.quantity > 1 &&\n              makes.measurement !== MEASUREMENTS.GRAM && (\n                <SeventyFivePercentSpan>\n                  <strong>{unitCostDisplayText}</strong> per {makes.measurement}\n                </SeventyFivePercentSpan>\n              )}\n          </PaddedFlexColumn>\n        </CentredOnPhone>\n      </RecipeBody>\n    </Disclosure>\n  );\n};\n","import { MEASUREMENTS } from \"@constants\";\n\nimport { concatenateQuantityAndMeasurement } from \"./concatenateQuantityAndMeasurement\";\n\ninterface IGetIngredientsHeader {\n  defaultIngredientsHeader: string;\n  makes: IRecipeMakes;\n}\n\nexport const getIngredientsHeader = ({\n  makes,\n  defaultIngredientsHeader\n}: IGetIngredientsHeader): string => {\n  const { quantity, measurement } = makes;\n\n  const quantitySpaceMeasurement: string =\n    quantity.toString() + \" \" + measurement;\n\n  const quantityAndMeasurement: string =\n    measurement === MEASUREMENTS.GRAM || measurement === MEASUREMENTS.MILLILITRE\n      ? concatenateQuantityAndMeasurement(quantity.toString(), measurement)\n      : quantity === 1\n      ? quantitySpaceMeasurement\n      : quantitySpaceMeasurement + \"s\";\n\n  return `${defaultIngredientsHeader} (makes ${quantityAndMeasurement})`;\n};\n","import React from \"react\";\n\nimport { PAGE_SECTION_DATA_TYPES, PAGE_SECTION_IDS } from \"@constants\";\nimport { Li } from \"primitives\";\n\nimport { CountedListItem } from \"../CountedListItem\";\nimport { Disclosure } from \"../Disclosure\";\nimport { EventCard } from \"../EventCard\";\nimport { PageSectionHeader } from \"./PageSectionHeader\";\nimport { RecipeCard } from \"../RecipeCard\";\n\nimport {\n  PageSectionContainer,\n  RecipeGroupList,\n  SectionPanelList\n} from \"./styles\";\n\nexport const PageSection: React.FC<IPageSection> = ({\n  details: { id, title, type },\n  icon,\n  data,\n  showSectionLength = false,\n  expandedAutomatically = false\n}) => {\n  const isCountedList: boolean = type === PAGE_SECTION_DATA_TYPES.COUNTED_LIST;\n  const isEventCards: boolean = type === PAGE_SECTION_DATA_TYPES.EVENT_CARDS;\n  const isRecipes: boolean = type === PAGE_SECTION_DATA_TYPES.RECIPES;\n  const isFriendsSection: boolean = id === PAGE_SECTION_IDS.FRIEND.id;\n\n  const noData: boolean =\n    data.length === 0 ||\n    (isRecipes && data.filter((item: IRecipeCard) => !item.hide).length) === 0;\n\n  if (noData) return null;\n\n  return (\n    <Li data-test={`section-${id}`}>\n      <PageSectionContainer>\n        <Disclosure\n          onlyHeaderClickable={isRecipes}\n          expandedAutomatically={expandedAutomatically}\n          headerComponent={\n            <PageSectionHeader\n              text={title}\n              showCounts={showSectionLength}\n              data={data}\n              icon={icon}\n              dataTest=\"disclosure-header\"\n            />\n          }\n        >\n          <section data-test=\"page-section-body\">\n            {isRecipes ? (\n              <Recipes recipes={data} />\n            ) : isCountedList ? (\n              <CountedList\n                countedListItems={data}\n                leaderboard={isFriendsSection}\n              />\n            ) : (\n              isEventCards && <EventCards eventCards={data} />\n            )}\n          </section>\n        </Disclosure>\n      </PageSectionContainer>\n    </Li>\n  );\n};\n\ninterface IRecipes {\n  recipes: Array<IRecipeCard>;\n}\n\nconst Recipes: React.FC<IRecipes> = ({ recipes }) => (\n  <RecipeGroupList>\n    {recipes.map(\n      (item: IRecipeCard, index: number) =>\n        !item.hide && (\n          <Li key={index}>\n            <RecipeCard key={index} {...item} />\n          </Li>\n        )\n    )}\n  </RecipeGroupList>\n);\n\ninterface ICountedList {\n  countedListItems: Array<ICountedListItem>;\n  leaderboard?: boolean;\n}\n\nconst CountedList: React.FC<ICountedList> = ({\n  countedListItems,\n  leaderboard\n}) => (\n  <SectionPanelList data-test=\"page-section-panel\" isEventCards={false}>\n    {countedListItems.map((listItem: ICountedListItem, index: number) => (\n      <CountedListItem key={index} {...listItem} leaderboard={leaderboard} />\n    ))}\n  </SectionPanelList>\n);\n\ninterface IEventCards {\n  eventCards: Array<IEventCard>;\n}\n\nconst EventCards: React.FC<IEventCards> = ({ eventCards }) => (\n  <SectionPanelList data-test=\"page-section-panel\" isEventCards>\n    {eventCards.map((eventCard: IEventCard, index: number) => (\n      <Li key={index}>\n        <EventCard key={index} {...eventCard} />\n      </Li>\n    ))}\n  </SectionPanelList>\n);\n","import React from \"react\";\nimport styled, { ThemeContext } from \"styled-components\";\n\nimport { FlexRow, H1, SvgIcon, Link } from \"primitives\";\n\nconst TitleTextContainer = styled.div`\n  display: flex;\n  flex: 1;\n  text-transform: lowercase;\n  margin-bottom: ${props => props.theme.page.header.margin.bottom};\n`;\n\nconst PageTitlePrimaryCount = styled.span`\n  padding: ${props => props.theme.page.count.padding};\n`;\n\nconst PageTitleSecondaryCount = styled(PageTitlePrimaryCount)`\n  opacity: ${props => props.theme.fadedOpacity};\n`;\n\nconst PaddedFlexRow = styled(FlexRow)`\n  padding-bottom: ${props => props.theme.pageTitleMarginBottom};\n`;\n\nconst SvgContainer = styled.div`\n  margin-top: ${props => props.theme.page.icon.margin.top};\n`;\n\ninterface PageTitleProps {\n  titleText: string;\n  pastCount?: number;\n  futureCount?: number;\n  icon: IImageSrc;\n}\n\nexport const PageTitleComponent: React.FC<PageTitleProps> = ({\n  titleText,\n  pastCount,\n  futureCount,\n  icon\n}) => {\n  const theme: ITheme = React.useContext(ThemeContext);\n\n  return (\n    <PaddedFlexRow data-test=\"page-title-container\">\n      <TitleTextContainer data-test=\"page-title-text-container\">\n        <H1 data-test=\"page-title-text\">{titleText}</H1>\n\n        {!!pastCount && pastCount > 0 && (\n          <PageTitlePrimaryCount data-test=\"page-title-past-count\">\n            {pastCount}\n          </PageTitlePrimaryCount>\n        )}\n        {!!futureCount && futureCount > 0 && (\n          <PageTitleSecondaryCount data-test=\"page-title-future-count\">\n            {futureCount}\n          </PageTitleSecondaryCount>\n        )}\n      </TitleTextContainer>\n\n      <Link data-test=\"page-title-icon-link\" to=\"/\">\n        <SvgContainer>\n          <SvgIcon\n            data-test=\"page-title-icon\"\n            icon={icon}\n            size={theme.page.icon.size}\n          />\n        </SvgContainer>\n      </Link>\n    </PaddedFlexRow>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { PageTitleComponent } from \"../PageTitle\";\n\nconst StyledPageShell = styled.section`\n  padding: ${props => props.theme.page.shell.padding};\n`;\n\ninterface PageShellProps {\n  title: string;\n  icon: IImageSrc;\n  page: IPageData;\n  children: React.ReactNode;\n}\n\nexport const PageShell: React.FC<PageShellProps> = ({\n  title,\n  icon,\n  page,\n  children\n}) => {\n  const { pastCount, futureCount } = page;\n\n  return (\n    <StyledPageShell data-test=\"page-shell\">\n      <PageTitleComponent\n        titleText={title}\n        pastCount={pastCount}\n        futureCount={futureCount}\n        icon={icon}\n      />\n\n      {children}\n    </StyledPageShell>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport { HomePage, PageShell, PageSection } from \"components\";\nimport { Ul } from \"primitives\";\nimport { HOMEPAGE_ROUTE, PAGE_ROUTES } from \"config\";\n\nexport const App: React.FC = () => (\n  <BrowserRouter>\n    <Switch>\n      {PAGE_ROUTES.map(({ icon, title, dest, page }: IRoute, index: number) => (\n        <Route key={index} path={dest}>\n          <PageShell title={title} icon={icon} page={page}>\n            <Ul data-test=\"page-sections\">\n              {page.sections.map((item: IPageSection, index: number) => (\n                <PageSection key={index} {...item} />\n              ))}\n            </Ul>\n          </PageShell>\n        </Route>\n      ))}\n\n      <Route path={HOMEPAGE_ROUTE.dest}>\n        <HomePage />\n      </Route>\n    </Switch>\n  </BrowserRouter>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport { App } from \"app\";\nimport { THEME, GlobalStyle } from \"styles\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={THEME}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}