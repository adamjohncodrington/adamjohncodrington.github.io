{"version":3,"sources":["resources/recipes sync /^/.//.*/.jpg$","resources/recipes/baked_beans.jpg","resources/recipes/banana_cake.jpg","resources/recipes/bolognese.jpg","resources/recipes/brownies.jpg","resources/recipes/carbonara.jpg","resources/recipes/crumble.jpg","resources/recipes/flapjacks.jpg","resources/recipes/kale_crispy.jpg","resources/recipes/lasagne.jpg","resources/recipes/mashed_potato.jpg","resources/recipes/piri_piri.jpg","resources/recipes/ratatouille.jpg","resources/recipes/rogan_josh.jpg","resources/recipes/shepherds_pie.jpg","resources/svg sync /^/.//.*/.svg$","resources/svg/artist.svg","resources/svg/book.svg","resources/svg/brain.svg","resources/svg/cake.svg","resources/svg/camera.svg","resources/svg/city.svg","resources/svg/flag.svg","resources/svg/map_pin.svg","resources/svg/masks.svg","resources/svg/microphone.svg","resources/svg/notepad.svg","resources/svg/palm_tree.svg","resources/svg/peace_sign.svg","resources/svg/people.svg","resources/svg/roller_coaster.svg","resources/svg/stadium.svg","resources/svg/stars.svg","resources/svg/tent.svg","resources/svg/theatre.svg","resources/svg/town_hall.svg","resources/svg/travel.svg","resources/svg/veg_bowl.svg","resources/svg/vinyl.svg","resources/vinyl sync /^/.//.*/.jpg$","resources/vinyl/1975_a-brief-inquiry-into-online-relationships.jpg","resources/vinyl/adele_19.jpg","resources/vinyl/allie-x_super-sunset.jpg","resources/vinyl/amy-winehouse_back-to-black.jpg","resources/vinyl/arctic-monkeys_favourite-worst-nightmare.jpg","resources/vinyl/ariana-grande_thank-u-next.jpg","resources/vinyl/banks_iii.jpg","resources/vinyl/ben-howard_every-kingdom.jpg","resources/vinyl/beyonce_lemonade.jpg","resources/vinyl/caribou_our-love.jpg","resources/vinyl/charli-xcx_how-im-feeling-now.jpg","resources/vinyl/dua-lipa_future-nostalgia.jpg","resources/vinyl/ellie-goulding_halcyon.jpg","resources/vinyl/fka-twigs_magdalene.jpg","resources/vinyl/florence-and-the-machine_lungs.jpg","resources/vinyl/george-fitzgerald_all-that-must-be.jpg","resources/vinyl/grimes_art-angels.jpg","resources/vinyl/haim_women-in-music-pt-iii.jpg","resources/vinyl/jon-hopkins_singularity.jpg","resources/vinyl/kate-nash_made-of-bricks.jpg","resources/vinyl/katy-perry_one-of-the-boys.jpg","resources/vinyl/lady-gaga_born-this-way.jpg","resources/vinyl/lana-del-rey_born-to-die.jpg","resources/vinyl/lane-8_rise.jpg","resources/vinyl/lany_malibu-nights.jpg","resources/vinyl/leon_leon.jpg","resources/vinyl/lissie_catching-a-tiger.jpg","resources/vinyl/lorde_pure-heroine.jpg","resources/vinyl/marina_electra-heart.jpg","resources/vinyl/muna_about-u.jpg","resources/vinyl/panic-at-the-disco_a-fever-you-cant-sweat-out.jpg","resources/vinyl/paramore_riot.jpg","resources/vinyl/pvris_all-we-know-of-heaven-all-we-need-of-hell.jpg","resources/vinyl/rihanna_rated-r.jpg","resources/vinyl/sufjan-stevens_carrie-and-lowell.jpg","resources/vinyl/taylor-swift_1989.jpg","resources/vinyl/tourist_u.jpg","resources/vinyl/troye-sivan_bloom.jpg","primitives/Circle.ts","primitives/Lists.ts","primitives/Flex.ts","primitives/Link.ts","primitives/SquareImage.tsx","styles/css.ts","styles/colors.ts","styles/font-sizes.ts","styles/theme.ts","styles/GlobalStyle.ts","primitives/Text.ts","resources/recipes/index.ts","resources/svg/index.ts","resources/vinyl/index.ts","@constants/actors.ts","@constants/diets.ts","@constants/festivals.ts","@constants/friends.ts","@constants/locations.ts","@constants/measurements.ts","@constants/musicians.ts","@constants/music-venues.ts","@constants/ingredients/baking/flour.ts","@constants/ingredients/baking/sugar.ts","@constants/ingredients/baking/syrups.ts","@constants/ingredients/baking/index.ts","@constants/ingredients/carbs/pasta.ts","@constants/ingredients/carbs/rice.ts","@constants/ingredients/carbs/grains.ts","@constants/ingredients/carbs/index.ts","@constants/ingredients/carbs/bread.ts","@constants/ingredients/dairy/milk.ts","@constants/ingredients/dairy/index.ts","@constants/ingredients/fruit/dried-fruit.ts","@constants/ingredients/fruit/fresh-fruit.ts","@constants/ingredients/fruit/frozen-fruit.ts","@constants/ingredients/fruit/juice.ts","@constants/ingredients/fruit/index.ts","@constants/ingredients/herbs/dried-herbs.ts","@constants/ingredients/herbs/fresh-herbs.ts","@constants/ingredients/herbs/index.ts","@constants/ingredients/protein/beans.ts","@constants/ingredients/protein/seitan.ts","@constants/ingredients/protein/index.ts","@constants/ingredients/seasoning/dried-seasoning.ts","@constants/ingredients/seasoning/oils.ts","@constants/unicode.ts","@constants/ingredients/seasoning/pastes.ts","@constants/ingredients/seasoning/salt.ts","@constants/ingredients/seasoning/sauces.ts","@constants/ingredients/seasoning/vinegars.ts","@constants/ingredients/seasoning/index.ts","@constants/ingredients/nuts-seeds/nuts.ts","@constants/ingredients/nuts-seeds/seeds.ts","@constants/ingredients/nuts-seeds/index.ts","@constants/ingredients/veg/canned-veg.ts","@constants/ingredients/veg/fresh-veg.ts","@constants/ingredients/veg/frozen-veg.ts","@constants/ingredients/veg/index.ts","@constants/ingredients/index.ts","@constants/page-section-titles.ts","@constants/plays.ts","@constants/theatre-venues.ts","@constants/ticket-types.ts","@constants/index.ts","utils/numberToCurrencyString.ts","utils/concatenateQuantityAndMeasurement.ts","utils/calculateIngredientCost.ts","utils/convertIngredientQuantity.ts","utils/calculateRecipeCost.ts","utils/console-logs.ts","utils/generateIngredientListItem.ts","utils/decimalToFractionString.ts","utils/basic/isInFuture.ts","utils/recipeMethodEntries.ts","utils/itemIsFavourited.ts","utils/basic/moveTheSuffixToPrefix.ts","utils/basic/arrayToString.ts","pages/factory.ts","utils/getPageSectionItemCounts.ts","pages/gigs/data/gigs-2006.ts","pages/gigs/data/gigs-2007.ts","pages/gigs/data/gigs-2008.ts","pages/gigs/data/gigs-2009.ts","pages/gigs/data/gigs-2010.ts","pages/gigs/data/gigs-2011.ts","pages/gigs/data/gigs-2012.ts","pages/gigs/data/gigs-2013.ts","pages/gigs/data/gigs-2014.ts","pages/gigs/data/gigs-2015.ts","pages/gigs/data/gigs-2016.ts","pages/gigs/data/gigs-2017.ts","pages/gigs/data/gigs-2018.ts","pages/gigs/data/gigs-2019.ts","pages/gigs/data/gigs-2020.ts","pages/gigs/data/gigs-2021.ts","pages/gigs/data/index.ts","pages/gigs/factory.ts","pages/gigs/sections.ts","pages/gigs/index.ts","pages/recipes/data/mains/bolognese.ts","pages/recipes/data/mains/carbonara.ts","pages/recipes/data/mains/lasagne.ts","pages/recipes/data/mains/risotto.ts","pages/recipes/data/mains/rogan-josh.ts","pages/recipes/data/mains/shepherds-pie.ts","pages/recipes/data/mains/sweet-and-sour.ts","pages/recipes/data/mains/index.ts","pages/recipes/data/sauces/pesto.ts","pages/recipes/data/sauces/piri-piri.ts","pages/recipes/data/sauces/index.ts","pages/recipes/data/sides/baked-beans.ts","pages/recipes/data/sides/bang-bang-cauliflower.ts","pages/recipes/data/sides/crispy-kale.ts","pages/recipes/data/sides/mashed-potato.ts","pages/recipes/data/sides/ratatouille.ts","pages/recipes/data/sides/index.ts","pages/recipes/data/sides/tofu-scramble.ts","pages/recipes/data/sweets/banana-cake.ts","pages/recipes/data/sweets/blueberry-pancakes.ts","pages/recipes/data/sweets/brownies.ts","pages/recipes/data/sweets/cookies.ts","pages/recipes/data/sweets/crumble.ts","pages/recipes/data/sweets/flapjacks.ts","pages/recipes/data/sweets/lemon-drizzle.ts","pages/recipes/data/sweets/scones.ts","pages/recipes/data/index.ts","pages/recipes/data/sweets/index.ts","pages/recipes/data/recipes-coming-soon.ts","pages/recipes/index.ts","pages/theatre/data/theatre-2016.ts","pages/theatre/data/theatre-2017.ts","pages/theatre/data/theatre-2018.ts","pages/theatre/data/theatre-2019.ts","pages/theatre/data/theatre-2020.ts","pages/theatre/data/index.ts","pages/theatre/factory.ts","pages/theatre/sections.ts","pages/theatre/index.ts","pages/travel/data/travel-1997.ts","pages/travel/data/travel-1998.ts","pages/travel/data/travel-1999.ts","pages/travel/data/travel-2000.ts","pages/travel/data/travel-2001.ts","pages/travel/data/travel-2002.ts","pages/travel/data/travel-2003.ts","pages/travel/data/travel-2004.ts","pages/travel/data/travel-2005.ts","pages/travel/data/travel-2006.ts","pages/travel/data/travel-2007.ts","pages/travel/data/travel-2008.ts","pages/travel/data/travel-2009.ts","pages/travel/data/travel-2010.ts","pages/travel/data/travel-2011.ts","pages/travel/data/travel-2012.ts","pages/travel/data/travel-2013.ts","pages/travel/data/travel-2014.ts","pages/travel/data/travel-2015.ts","pages/travel/data/travel-2016.ts","pages/travel/data/travel-2017.ts","pages/travel/data/travel-2018.ts","pages/travel/data/travel-2019.ts","pages/travel/data/travel-2020.ts","pages/travel/data/index.ts","pages/travel/data/travel-bucket-list.ts","pages/travel/factory.ts","pages/travel/sections.ts","pages/travel/index.ts","pages/vinyl/data/index.ts","pages/vinyl/data/vinyl-collection.ts","pages/vinyl/data/vinyl-wish-list.ts","pages/vinyl/sections.ts","pages/index.ts","pages/vinyl/index.ts","config/routes.ts","config/index.ts","components/HomePage/index.tsx","components/CountedItem/index.tsx","components/PageSectionList/index.tsx","components/CountedList/index.tsx","components/Disclosure/styles.ts","components/Disclosure/index.tsx","components/styles.ts","components/EventCard/index.tsx","components/EventCard/utils.ts","utils/basic/datesArrayToString.ts","components/GigCard/index.tsx","components/GigCardList/index.tsx","components/PageSectionHeader/styles.tsx","components/PageSectionHeader/index.tsx","components/CentredOnPhone/index.ts","components/List/index.tsx","components/RecipeCard/factory.ts","components/RecipeCard/styles.ts","components/RecipeCard/index.tsx","utils/getIngredientsHeader.ts","components/RecipeCardList/index.tsx","components/TheatreCard/index.tsx","components/TheatreCardList/index.tsx","components/TravelCard/index.tsx","components/TravelCardList/index.tsx","components/VinylCard/index.tsx","components/VinylCardList/index.tsx","components/PageSection/styles.tsx","components/PageSection/index.tsx","components/PageTitle/index.tsx","components/PageShell/index.tsx","app/index.tsx","utils/basic/replaceSpacesWithDashes.ts","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Circle","styled","div","size","fontSize","theme","css","circleBorder","invert","color","Ul","ul","showBullets","Li","li","FlexSpan","span","FlexRow","FlexRowGrow","FlexColumn","FlexLiGrow","Link","ReactRouterDomLink","StyledImage","img","SquareImage","className","imgSrc","data-test","src","CSS","ZERO_MARGIN_AND_PADDING","COLORS","FONT_SIZES","BORDER_BLACK_THIN","BORDER_GRAY_THIN","THEME_page","count","padding","header","margin","bottom","icon","top","shell","fontFamily","THEME","fadedOpacity","listItemGroupVerticalSpacing","scrollbarSize","textColor","breakpoints","tablet","minWidth","phone","maxWidth","countedList","border","width","vertical","eventCardList","finalEventCardPaddingBottom","recipe","image","dietIcon","title","first","last","homePage","desktop","section","background","borderRadius","boxShadow","rgba","left","horizontal","transition","page","GlobalStyle","createGlobalStyle","normalize","SeventyFivePercentSpan","H1","h1","H2","h2","H3","h3","requireJpeg","photo","require","PHOTOS_RECIPES","BAKED_BEANS","BANANA_CAKE","BOLOGNESE","BROWNIES","CARBONARA","CRUMBLE","FLAPJACKS","KALE_CRISPY","LASAGNE","MASHED_POTATO","PIRI_PIRI","RATATOUILLE","ROGAN_JOSH","SHEPHERDS_PIE","requireSvg","SVG_ICONS","ARTIST","BOOK","BRAIN","CAKE","CAMERA","CITY","FLAG","MAP_PIN","MASKS","MICROPHONE","NOTEPAD","PALM_TREE","PEACE_SIGN","PEOPLE","ROLLER_COASTER","STADIUM","STARS","TENT","THEATRE","TOWN_HALL","TRAVEL","VEG_BOWL","VINYL","requireVinyl","artist","album","PHOTOS_VINYL","A_BRIEF_INQUIRY_INTO_ONLINE_RELATIONSHIPS","ADELE","ALLIE_X","SUPER_SUNSET","AMY_WINEHOUSE","BACK_TO_BLACK","ARCTIC_MONKEYS","FAVOURITE_WORST_NIGHTMARE","ARIANA_GRANDE","THANK_U_NEXT","BANKS","III","BEN_HOWARD","EVERY_KINGDOM","BEYONCE","LEMONADE","CARIBOU","OUR_LOVE","CHARLI_XCX","HOW_IM_FEELING_NOW","DUA_LIPA","FUTURE_NOSTALGIA","ELLIE_GOULDING","HALCYON","FKA_TWIGS","MAGDALENE","FLORENCE_AND_THE_MACHINE","LUNGS","GEORGE_FITZGERALD","ALL_THAT_MUST_BE","GRIMES","ART_ANGELS","HAIM","WOMEN_IN_MUSIC_PT_III","JON_HOPKINS","SINGULARITY","KATE_NASH","MADE_OF_BRICKS","KATY_PERRY","ONE_OF_THE_BOYS","LADY_GAGA","BORN_THIS_WAY","LANA_DEL_REY","BORN_TO_DIE","LANE_8","RISE","LANY","MALIBU_NIGHTS","LEON","LISSIE","CATCHING_A_TIGER","LORDE","PURE_HEROINE","MARINA","ELECTRA_HEART","MUNA","ABOUT_U","PANIC_AT_THE_DISCO","A_FEVER_YOU_CANT_SWEAT_OUT","PARAMORE","RIOT","PVRIS","ALL_WE_KNOW_OF_HEAVEN_ALL_WE_NEED_OF_HELL","RIHANNA","RATED_R","SUFJAN_STEVENS","CARRIE_AND_LOWELL","TAYLOR_SWIFT","TOURIST","U","TROYE_SIVAN","BLOOM","ACTORS","ADAM_JAMES","name","ADI_CHUGH","AIMEE_LOU_WOOD","BENJAMIN_ALUWIHARE","CLAIRE_FOY","favourite","DAVID_MOORST","GWENDOLINE_CHRISITE","HAMMED_ANIMASHAUN","HATTY_JONES","JASON_WATKINS","JOHN_MCCREA","KATHERINE_PARKINSON","LAURIE_KYNASTON","LEE_INGLEBY","MATT_SMITH","MILLY_THOMAS","NINA_SOSANYA","OLIVER_CHRIS","PETER_MCPHERSON","SARA_BAREILLES","SIAN_CLIFFORD","SURANNE_JONES","TIMOTHEE_CHALAMET","DIETS","VEGAN","abbreviation","VEGETARIAN","FESTIVALS","AREA_10_NYE","BESTIVAL","festival","BRIGHTON_PRIDE","CHINGFEST","DECAYDANCE","DEFECTED_BRISTOL","FABRIC_NYE","GLASTONBURY","HOMOBLOC","KALEIDOSCOPE","LOVEBOX","MAD_COOL","MANCHESTER_PRIDE","MIGHTY_HOOPLA","NOTION_SUMMER_PARTY","ON_THE_RUN_II","PARKLIFE","TRANSMISSION","TRIBAL_SESSIONS","V_FESTIVAL","WAREHOUSE_PROJECT","FRIENDS","CFS","initials","JHC","AISHA","ALEX_FAYE","ALICE_R","AMY_B","AMY_C","ANNIE_B","ASH","BECKY","BETH_O","BETH_SH","BETH_SP","BLAINE","CAITY","CAITLIN","gigs","travel","CARMEN","CAMERON","CHELSEA","CHLOE","CHRISTELLE","COBY_B","COURTNEY","DAD","theatre","DARREN","DAN","DOM","ELLE_O","ELINORE_G","ELISE","ELLIE_F","ELLIE_G","ELLIE_P","ELLIE_S","EMMA","FANNY","GEMMA","GEORGE","GRACE","HANNA","HARRIET_B","HARRIET_K","HEATHER_C","JAIMINI","JAMIE","JAZZ","JERRY","JOE","JESS","JUNAID","KATE_B","KIERAN_S","KIRSTEN","KYLE","LAURA","LEAH","LEWIS","LINDSAY_A","LINDSEY_S","LOUISE","LUKE_J","LUKE_S","MARIA","MEGAN","MUM","NATALIE","NAV","OSCAR","PATRICIA","POOJA","POPPY","ROB_G","RYAN","SAM_B","SARAH_WA","SARAH_W","SIAN","SIMAN","SONYA","STEVE_R","THOM","TOM","TONYA","KEY_WEST","LOCATIONS","BARBADOS","island","attractions","HARRISONS_CAVE","BELGIUM","cities","BRUGES","YPRES","BATTLEFIELDS","BELFRY_OF_BRUGES","BRAZIL","RIO_DE_JANEIRO","MODERN_ART_MUSEUM_RIO","foreignName","COPACABANA_BEACH","ROCINHA_FAVELA","CHRIST_THE_REDEEMER","SELARON_STEPS","HANG_GLIDING","highlight","PICO_DO_PAPAGAIO","englishName","islands","ILHA_GRANDE","CANADA","NIAGARA_FALLS","CROATIA","DUBROVNIK","DUBROVNIK_CABLE_CAR","DUBROVNIK_WALLS","CUBA","HAVANA","capital","towns","VARADERO","CYPRUS","PAPHOS","PAPHOS_ARCHAEOLOGICAL_PARK","CZECH_REPUBLIC","PRAGUE","JOHN_LENNON_WALL","VYSEHRAD","DENMARK","COPENHAGEN","LOUISIANA_ART_MUSEUM","ECUADOR","BANOS","GUAYAQUIL","OTAVALO","QUITO","EQUATOR_MONUMENT","OTAVALO_MARKET","TORTOISE_PARK","PAILON_DEL_DIABLO","COTOPAXI","GALAPAGOS","EGYPT","CAIRO","SHARM_EL_SHEIKH","GIZA_PYRAMIDS_SPHINX","FRANCE","MONACO","NICE","PARIS","SACRE_COEUR","LOUVRE","ARC_DE_TRIOMPHE","AIR_SPACE_MUSEUM","SCIENCE_MUSEUM","EIFFEL_TOWER","NOTRE_DAME","DISNEYLAND_PARIS","themePark","PARC_ASTERIX","GERMANY","BERLIN","REICHSTAG","HOLOCAUST_MEMORIAL","BRANDENBURG_GATE","BERLIN_WALL","EAST_SIDE_GALLERY","GREECE","KOS","regions","HALKIDIKI","HUNGARY","BUDAPEST","PARLIAMENT_BUILDING","THERMAL_BATH_SZECHENYI","CITADELLA","IRELAND","ST_STEPHENS_GREEN_PARK","DUBLIN_PRISON","GUINNESS_STOREHOUSE","DUBLIN","ITALY","SICILY","NAPLES","MILAN","ROME","VATICAN","CATANIA","VENICE","POMPEII","JESOLO","SORRENTO","ARCO_DELLA_PACE","SEMPIONE_PARK","MILAN_MALL","COLOSSEUM","TREVI_FOUNTAIN","VESUVIUS","ETNA","LAOS","LUANG_PRABANG","VIENTIANE","KUANG_SI_FALLS","ELEPHANT_VILLAGE","BUDDHA_PARK","NETHERLANDS","AMSTERDAM","GRONINGEN","STEDELIJK_MUSEUM","SEX_MUSEUM","GRONINGEN_MUSEUM","NORWAY","OSLO","HOVEDOYA","PERU","AREQUIPA","CUSCO","LIMA","HUARAZ","COLCA_CANYON","LAGUNA_69","JUNGLE_ZIPLINE","MACHU_PICCHU","HUACACHINA","HUASCARAN_PARK","MANU","RAINBOW_MOUNTAIN","MANCORA","PARACAS","villages","POLAND","KRAKOW","AUSCHWITZ_BIRKENAU","WIELICZKA_SALT_MINE","WIELICZKA","PORTUGAL","LISBON","PORTIMAO","ZOOMARINE","OCENARIO_DE_LISBOA","FERRAGUDO","TAVIRA","VILAMOURA","SPAIN","BARCELONA","MADRID","CIUTADELLA_PARK","PARK_GUELL","PARQUE_WARNER","SIAM_PARK","PORTAVENTURA","TENERIFE","IBIZA","MINORCA","LANZAROTE","THAILAND","BANGKOK","CHIANG_MAI","CHIANG_RAI","KOH_PHI_PHI","KOH_PHANGAN","KOH_TAO","WHITE_TEMPLE","MAYA_BAY","PAI_CANYON","TIGER_KINGDOM","GRAND_PALACE","SKY_BAR","KRABI","PAI","UGANDA","JINJA","RAFTING_NALUBALE","NILE_SOURCE","UAE","DUBAI","AQUAVENTURE","BURJ_KHALIFA","UK","insignificant","ALTON_TOWERS","BLACKPOOL_PLEASURE_BEACH","WINTER_WONDERLAND","THORPE_PARK","EDEN_PROJECT","TATE_BRITAIN","LONDON_EYE","RICHMOND_PARK","SHERWOOD_FOREST","CALKE_ABBEY","BATTERSEA_PARK","CRYSTAL_PALACE_PARK","QUEEN_ELIZABETH_OLYMPIC_PARK","VICTORIA_PARK","GREENWICH_PARK","KEW_GARDENS","EPPING_FOREST","HAMPSTEAD_HEATH","V_A_MUSEUM","TATE_MODERN","NATURAL_HISTORY_MUSEUM","LAKE_DISTRICT","HADRIANS_WALL","ANGLESEY","BATH","BLACKPOOL","BRIGHTON","BRISTOL","BIRMINGHAM","CAMBRIDGE","COVENTRY","DERBY","HULL","LEEDS","LEICESTER","LINCOLN","LONDON","LIVERPOOL","MANCHESTER","NEWCASTLE","NORWICH","NOTTINGHAM","OXFORD","SHEFFIELD","WOLVERHAMPTON","YORK","CORNWALL","DONCASTER","HARROGATE","ILKLEY","MILTON_KEYNES","STRATFORD","MANSFIELD","NEWARK","NEWQUAY","PADSTOW","TENBY","SCARBOROUGH","USA","ALCATRAZ_PRISON","FISHERMANS_WHARF","FARMERS_MARKET","HOLLYWOOD_WALK_OF_FAME","WHITE_HOUSE","CAPITOL_BUILDING","WASHINGTON_MONUMENT","LINCOLN_MEMORIAL","TIMES_SQUARE","BROOKLYN_BRIDGE","WORLD_TRADE_CENTER","GOLDEN_GATE_BRIDGE","CENTRAL_PARK","VENICE_BEACH","DISNEYLAND_CALIFORNIA_ADVENTURE","DISNEY_MGM_STUDIOS","DISNEY_ANIMAL_KINGDOM","DISNEY_EPCOT","WET_N_WILD_ORLANDO","BLIZZARD_BEACH","DISNEY_MAGIC_KINGDOM","UNIVERSAL_STUDIOS_FLORIDA","UNIVERSALS_ISLANDS_OF_ADVENTURE","GRAND_CANYON","KNOTTS_BERRY_FARM","SEAWORLD_ORLANDO","BUSCH_GARDENS_WILLIAMSBURG","BUSCH_GARDENS_TAMPA","SIX_FLAGS_AMERICA","SIX_FLAGS_MAGIC_MOUNTAIN","SIX_FLAGS_NEW_ENGLAND","BOSTON_MASSACHUSETTS","LAS_VEGAS","VIRGINIA_BEACH","LOS_ANGELES","NEW_YORK_CITY","SAN_FRANCISCO","SPRINGFIELD_MASSACHUSETTS","WASHINGTON_DC","ALCATRAZ","MARTHAS_VINEYARD","CAPE_COD","FLORIDA_KEYS","ISLAMORADA","states","FLORIDA","NEW_YORK","MASSACHUSETTS","VIRGINIA","SAINSBURYS_SEASONING_COST","quantity","measurement","price","MEASUREMENTS","MUSICIANS","AURORA","THE_ACADEMY_IS","ALESSIA_CARA","ALEX_CHAPMAN","ALL_AMERICAN_REJECTS","ALL_TIME_LOW","ALMA","AMOS_LEE","passedAway","ANNA_OF_THE_NORTH","ANASTACIA","ANNE_MARIE","AQUILO","AUDITION","BAAUER","BANANARAMA","BASTILLE","BAYNK","BEARS_DEN","BECKY_HILL","BETSY","BETTY_WHO","BICEP","BILLIE_EILISH","BLACK_KIDS","B_O_B","BONDAX","BON_IVER","BONTAN","BORNS","BOYS_LIKE_GIRLS","BLONDE","BREACH","BRIGITTE_APHRODITE","BRITNEY_SPEARS","BROODS","BULOW","CAMILA_CABELLO","CARLY_RAE_JEPSEN","CARL_COX","CAROLINE_POLACHEK","CELESTE","CHARLI_ADAMS","CHARLOTTE_CHURCH","CHELSEA_CUTLER","CHEMICAL_BROTHERS","CHERYL","CHLOE_X_HALLE","CHRISTINE_AND_THE_QUEENS","CHRVCHES","CLAIRO","CLEAN_BANDIT","COBRA_STARSHIP","CODE","CRUEL_YOUTH","CUTE_IS_WHAT_WE_AIM_FOR","CYRIL_HAHN","DANIEL_AVERY","DAUGHTER","DAVID_RODIGAN","DIPLO","DISCLOSURE","DIZZEE_RASCAL","DRUMS","DUKE_DUMONT","DUSKY","DYLAN","EARTHEATER","EATS_EVERYTHING","ELDERBROOK","ELIZA_DOOLITTLE","ELLA_EYRE","EMAROSA","FALL_OUT_BOY","FLEETWOOD_MAC","FLIGHT_FACILITIES","FOREVER_THE_SICKEST_KIDS","FOURS","FOUR_TET","FOXES","FRANCES","FRANCIS_AND_THE_LIGHTS","FRANK_OCEAN","FREYA_RIDINGS","THE_FRIDAY_NIGHT_BOYS","FRIEND_WITHIN","GEORGE_EZRA","GEORGIA","G_FLIP","GLOWIE","GORGON_CITY","GRACEY","GREEN_VELVET","GROOVE_ARMADA","GRYFFIN","GYM_CLASS_HEROES","HALSEY","HANNAH_WANTS","HAUX","HEIDI","HEY_MONDAY","HOLLY_HUMBERSTONE","HORSE_MEAT_DISCO","INCOGNITO","JAMES_BAY","JAMES_BLAKE","JAMIE_JONES","JAMIE_T","JAMIE_XX","JAX_JONES","JAY_Z","JEREMY_ZUCKER","JESS_GLYNNE","JESSIE_WARE","JOE_GODDARD","JOHNNY_MARR","JONAS_BLUE","JONES","JORIS_VOORN","JORJA_SMITH","JOSH_BUTLER","JOY_ORBISON","JOSEF_SALVAT","JULIA_MICHAELS","JULIO_BASHMORE","JUSTIN_BIEBER","JUSTIN_MARTIN","KAH_LO","KANYE_WEST","KAYTRANADA","KESHA","KIASMOS","KIDNAP","KIDS_IN_GLASS_HOUSES","THE_KILLERS","KIM_PETRAS","KOLSCH","KYGO","LADY_STARLIGHT","LA_ROUX","LAUV","L_DEVINE","LELAND","LENNON_STELLA","LILY_ALLEN","LITTLE_COMETS","LITTLE_DRAGON","LONDON_GRAMMAR","LUCY_ROSE","LYKKE_LI","LYVES","MACEO_PLEX","MALLRAT","MAGGIE_ROGERS","THE_MAINE","MAJOR_LAZER","MARY_J_BLIGE","MARTIN_SOLVEIG","MELANIE_MARTINEZ","METRO_STATION","MICHAEL_KIWANUKA","MIDLAND","MIGUEL","MIKE_POSNER","MILEY_CYRUS","MISHA_B","M_0","MK","MNEK","MO","MURA_MASA","NAAZ","NAO","NASTY_CHERRY","NATASHA_BEDINGFIELD","NAVVY","NICKI_MINAJ","NOEL_GALLAGHERS_HIGH_FLYING_BIRDS","OH_ANNIE_OH","OKAYWILL","PALE_WAVES","PALOMA_FAITH","PAUL_WOOLFORD","PET_SHOP_BOYS","PHILIP_GEORGE","PRETENDERS","RAINBOW_KITTEN_SURPRISE","RALEIGH_RITCHIE","RALPH","REDLIGHT","RINA_SAWAYAMA","RITON","RIXTON","ROBINSON","ROBYN","ROMY","ROOSEVELT","ROUTE_94","RYN_WEAVER","RUDIMENTAL","RUFUS_DU_SOL","RYAN_BEATTY","SABRINA_CLAUDIO","SAINT_JHN","SAM_SMITH","SASHA_SLOAN","SBTRKT","SEEB","SEGA_BODEGA","SEINABO_SEY","SEVDALIZA","SIA","SIGRID","SISTER_SLEDGE","SKY_FERREIRA","SLIIMY","SOFI_TUKKER","SOAK","SONIKKU","SOPHIE","SOPHIE_ELLIS_BEXTOR","SOUL_WAX","THE_SMYTHS","THE_SPILL_CANVAS","SKREAM","SUNDAY_GIRL","TENSNAKE","TEN_WALLS","TERROR_JR","TOM_ODELL","TORI_KELLY","TOVE_LO","TULISA","TWENTY_ONE_PILOTS","TWO_FEET","TYGA","VERITE","WE_THE_KINGS","WILL_YOUNG","THE_XX","YEARS_AND_YEARS","YOU_ME_AT_SIX","YOUSEF","ZARA_LARSSON","MUSIC_VENUES","ALEXANDRA_PALACE","ALEXANDRA_PALACE_THEATRE","BRIXTON_ACADEMY","BROCKWELL_PARK","CAMDEN_ASSEMBLY","CORSICA_STUDIOS","COURTYARD_THEATRE","DINGWALLS","THE_GARAGE","EARTH","EGG","ELECTRIC_BRIXTON","ELECTROWERKZ","FABRIC","FINSBURY_PARK","HAMMERSMITH_APOLLO","HEAVEN","HOXTON_HALL","HOXTON_SQUARE_BAR_AND_KITCHEN","ISLINGTON_ASSEMBLY_HALL","KENTISH_TOWN_FORUM","KOKO","LAFAYETTE","LAYLOW","LONDON_STADIUM","MINISTRY_OF_SOUND","MOTH_CLUB","OLD_BLUE_LAST","OMEARA","OSLO_HACKNEY","OVAL_SPACE","THE_O2","PRINTWORKS","QUEEN_OF_HOXTON","RIDGEWAY_PARK","ROUNDHOUSE","ROYAL_ALBERT_HALL","ROYAL_FESTIVAL_HALL","SCALA","SERVANT_JAZZ_QUARTERS","SHEPHERDS_BUSH_EMPIRE","ST_GILES_IN_THE_FIELD","TOTTENHAM_HOTSPUR_STADIUM","TWICKENHAM_STADIUM","TROXY","VILLAGE_UNDERGROUND","WEMBLEY_STADIUM","XOYO","ZIGFRID_VON_UNDERBELLY","ACADEMY_MANCHESTER","ACADEMY_2_MANCHESTER","ALBERT_HALL_MANCHESTER","APOLLO_MANCHESTER","ARENA_MANCHESTER","CASTLEFIELD_BOWL","DEAF_INSTITUTE","GORILLA","HEATON_PARK","MAYFIELD_DEPOT","RITZ_MANCHESTER","RUBY_LOUNGE","SANKEYS","STORE_STREET","BODEGA","ARENA_NOTTINGHAM","RESCUE_ROOMS","ROCK_CITY","TRENT_UNIVERSITY_NOTTINGHAM","ACADEMY_BIRMINGHAM","ACADEMY_2_BIRMINGHAM","ALEXANDRA_THEATRE","BARFLY_BIRMINGHAM","INSTITUTE_BIRMINGHAM","NEC_ARENA_BIRMINGHAM","NIA_ARENA_BIRMINGHAM","COCKPIT_LEEDS","DE_MONTFORT_HALL","ENGINE_SHED","IFEMA_MADRID","LULWORTH_ESTATE","MOTION","PRESTON_PARK","SCHWUZ","SHEFFIELD_ARENA","TRESOR","WESTON_PARK","WOLVERHAMPTON_CIVIC_HALL","WORTHY_FARM","FLOUR","CORNFLOUR","displayText","cost","FLOUR_PLAIN","FLOUR_SELF_RAISING","SUGAR","SUGAR_BROWN","SUGAR_BROWN_DARK","SUGAR_BROWN_LIGHT","SUGAR_CASTER_GOLDEN","SUGAR_DEMERARA","SUGAR_GRANULATED","SUGAR_ICING","SYRUPS","LEMON_EXTRACT","NECTAR_AGAVE","SYRUP_GOLDEN","VANILLA_EXTRACT","BAKING","BAKING_POWDER","BICARBONATE_OF_SODA","CHOCOLATE_DARK","COCOA_POWDER","PASTA","SPAGHETTI","PASTA_LASAGNE_SHEET_DRIED","RICE","RICE_BASMATI","RICE_BROWN","RICE_RISOTTO_ARBORIO","GRAINS","OATS","CARBS","BREAD_GARLIC","BREAD_SOURDOUGH","BREAD_SOURDOUGH_DARK","POPPADOMS","MILK","MILK_COCONUT_CANNED","MILK_ALMOND_UNSWEETENED","MILK_OAT","DAIRY","BUTTER_VEGAN","CREAM_OAT","CHEESE_VEGAN_SLICE","FRUIT_DRIED","APRICOTS_DRIED","BLUEBERRIES_DRIED","CRANBERRIES_DRIED","RAISINS","FRUIT_FRESH","APPLE_BRAMLEY","BANANA","BLACKBERRIES_FRESH","BLUEBERRIES_FRESH","LEMON","LEMON_LARGE","LIME","PINEAPPLE","RASPBERRIES_FRESH","FRUIT_FROZEN","BLACKBERRIES_FROZEN","RASPBERRIES_FROZEN","JUICE","LEMON_JUICE","LEMON_JUICE_FRESH","LIME_JUICE_FRESH","FRUIT","HERBS_DRIED","BASIL_DRIED","HERBS_MIXED_DRIED","OREGANO_DRIED","ROSEMARY_DRIED","THYME_DRIED","HERBS_FRESH","BASIL_FRESH","payFullAmountAlways","CORIANDER_FRESH","PARSLEY_FRESH","SAGE_FRESH","HERBS","BEANS","BEANS_BAKED","BEANS_HARICOT","BEANS_KIDNEY","SEITAN","GLUTEN_WHEAT_VITAL","PROTEIN","CHICKPEAS","EGGS","LENTIL_RED_DRY","TOFU","DRIED_SEASONING","PAPRIKA","ONION_POWDER","GARLIC_GRANULES","PAPRIKA_SMOKED","TURMERIC_GROUND","ALLSPICE_GROUND","CHILLI_POWDER","CINNAMON_GROUND","CHILLI_CRUSHED_DRIED","NUTMEG_GROUND","YEAST_NUTRITIONAL","STOCK_POWDER_VEGAN","OILS","OIL_OLIVE","OIL_SUNFLOWER","UNICODE","PASTES","CURRY_PASTE_MADRAS","CURRY_PASTE_ROGAN_JOSH","TOMATO_PUREE","SALT","SALT_BLACK","SALT_TABLE","SALT_ROCK_FRESH","SAUCES","LIQUID_SMOKE","SOY_SAUCE","KETCHUP_TOMATO","SRIRACHA","SWEET_CHILLI_SAUCE","VINEGARS","VINEGAR_BALSAMIC","VINEGAR_CIDER","VINEGAR_WHITE_WINE","SEASONING","PEPPER_BLACK_FRESH","PEPPER_BLACK_GROUND","WINE_RED","CHILLI_RED_FRESH","CHILLI_BIRD_EYE_FRESH","GINGER_FRESH","NUTMEG_FRESH","NUTS","NUTS_CASHEWS","NUTS_PINE","SEEDS","SEEDS_CHIA","SEEDS_POPPY","SEEDS_FLAX_GROUND","SEEDS_PUMPKIN","SEEDS_SESAME","SEEDS_SUNFLOWER","NUTS_AND_SEEDS","VEG_CANNED","TOMATO_CHOPPED","TOMATO_PASSATA","TOMATO_SUN_DRIED","VEG_FRESH","ASPARAGUS","AUBERGINE","BEANS_GREEN","BROCCOLI","BUTTERNUT_SQUASH","CARROT","CAULIFLOWER_REGULAR","CELERY_STICK","COURGETTE","GARLIC_CLOVE","KALE","LEEK","MUSHROOMS","MUSHROOMS_CHESTNUT","ONION_WHITE_MEDIUM","ONION_RED_MEDIUM","ONION_SPRING","PEPPER_RED","PEPPER_GREEN","PEPPER_ORANGE","PEPPER_MIXED","POTATO_MARIS_PIPER","POTATO_BAKING","POTATO_SWEET","SPINACH","VEG_FROZEN","PETITS_POIS_FROZEN","VEGETABLES_MIXED_FROZEN","VEG","INGREDIENTS","WATER","WATER_BOILING","PAGE_SECTION_TITLES","BUCKET_LIST","UP_NEXT","PLAYS","AFTERGLOW","CONSENT","DUST","EVERYBODYS_TALKING_ABOUT_JAMIE","FERRYMAN","FROZEN","HOME_IM_DARLING","INHERITANCE","KINKY_BOOTS","LEAVE_TO_REMAIN","LOST_UNFOUND","MATILDA","MIDSUMMER_NIGHTS_DREAM","SON","THAT_GIRL","UGLY_LIES_THE_BONE","UNCLE_VANYA","WAITRESS","WICKED","YOUNG_MARX","THEATRE_VENUES","ADELPHI","APOLLO","APOLLO_VICTORIA","BRIDGE","DUKE_OF_YORKS","GIELGUD","HAROLD_PINTER","LYRIC","NATIONAL","NOEL_COWARD","OLD_RED_LION","OLD_VIC","PLAYHOUSE","ROYAL_HAYMARKET","TRAFALGAR_STUDIOS","WATERLOO_EAST","WHITE_BEAR","ROYAL_SHAKESPEARE","TICKET_TYPES","DAYS_OF_THE_WEEK","MONTHS","numberToCurrencyString","number","decimalPrecision","Math","round","toFixed","concatenateQuantityAndMeasurement","displayQuantity","parseInt","calculateIngredientCost","ingredient","ingredientQuantity","ingredientMeasurement","inventory","inventoryQuantity","inventoryMeasurement","inventoryPrice","alert","convertIngredientQuantity","calculateRecipeCost","ingredients","yieldQuantity","recipeTitle","CONSOLE_LOG_RECIPE_COST_CALCULATIONS","logDashedLine","console","log","consoleLogRecipeTitle","runningRecipeCost","forEach","ingredientSection","recipeIngredient","recipeIngredientCost","displayIngredient","outputLine","toString","consoleLogCostedIngredient","unitCost","costDisplayText","unitCostDisplayText","generateIngredientListItem","optional","notes","ingredientText","decimal","decimalToFractionString","slice","length","displayQuantityMeasurementIngredients","isInFuture","dates","valueOf","today","Date","setDate","getDate","yesterday","recipeMethodEntries","FOLD_IN_FLOUR_MIX","LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN","MAKE_FLAX_EGG","bakeForAbout","minutes","skewer","wellRisen","defaultText","additionalText","preheatOven","degreesCelcius","bakingTray","ovenTemperature","transferToLoafTin","sunkenCentre","itemIsFavourited","itemToInspect","favouritedData","dataItem","headline","play","moveTheSuffixToPrefix","string","substring","arrayToString","stringArray","useAmpersandsForPair","item","output","index","mapToCountedList","items","filter","allData","sortByPastAndFutureCount","bucketListMode","formatNames","inputData","Array","isArray","array","outputString","mapToCountedListItem","itemToCount","data","pastCount","futureCount","support","includes","lineup","company","venue","hidden","subtitle","cast","getPageSectionItemCounts","text","countInfoIrrelevant","doNotIncludeInList","star","values","sort","a","b","toLowerCase","localeCompare","generatePropertyArrayFromObject","object","childLevelProperty","topLevelProperty","arrayFilteredByTopLevelProperty","arrayFilteredByChildLevelProperty","concat","apply","GIGS_2006","GIGS_2007","GIGS_2008","GIGS_2009","GIGS_2010","GIGS_2011","GIGS_2012","GIGS_2013","GIGS_2014","GIGS_2015","GIGS_2016","GIGS_2017","GIGS_2018","GIGS_2019","GIGS_2020","ticketType","GIGS_2021","ALL","SPLIT_BY_YEAR","DATA","FAVOURITES","gig","mapToCountedListWrapper","params","musicians","festivals","friends","VENUES","FACTORY","SECTIONS_STATS","countedItems","gigCards","SECTIONS_YEARS","year","getFullYear","sections","PAGE_GIGS","serveWith","method","makes","diet","hide","RISOTTO","SWEET_AND_SOUR","MAINS","category","recipes","PESTO","BANG_BANG_CAULIFLOWER","CRISPY_KALE","SIDES","BLUEBERRY_PANCAKES","COOKIES","LEMON_DRIZZLE","CATEGORISED","COMING_SOON","SECTIONS_RECIPE_GROUPS","recipeCards","isStatic","SECTION_COMING_SOON","PAGE_RECIPES","THEATRE_2016","THEATRE_2017","THEATRE_2018","THEATRE_2019","THEATRE_2020","DATA_FAVOURITES","theatreTrip","actors","plays","theatreCards","theatreVisit","PAGE_THEATRE","TRAVEL_1997","TRAVEL_1998","TRAVEL_1999","TRAVEL_2000","TRAVEL_2001","TRAVEL_2002","TRAVEL_2003","TRAVEL_2004","TRAVEL_2005","notAbroad","TRAVEL_2006","TRAVEL_2007","TRAVEL_2008","TRAVEL_2009","TRAVEL_2010","TRAVEL_2011","TRAVEL_2012","TRAVEL_2013","TRAVEL_2014","TRAVEL_2015","TRAVEL_2016","TRAVEL_2017","TRAVEL_2018","TRAVEL_2019","TRAVEL_2020","countries","themeParks","highlights","bucketList","CITIES","THEME_PARKS","HIGHLIGHTS","ISLANDS","COUNTRIES","starredCount","city","travelCards","trip","PAGE_TRAVEL","COLLECTION","artwork","WISH_LIST","PAGES","GIGS","RECIPES","vinylCards","initiallyExpanded","HOMEPAGE_ROUTE","PAGE_ROUTES","dest","route","FlexContainer","GridContainer","StyledSvg","iconSizeDesktop","iconSizePhone","iconSizePadding","HomePage","key","to","CountedListItemPastCount","CountedListItemFutureCount","props","CountedListItemText","faded","CountedItem","showFutureCount","showPastCount","PageSectionList","isCardList","CountedList","countedListItem","PanelContainer","bodyHeight","ClickableRegion","Disclosure","headerComponent","children","React","useState","panelIsVisible","switchPanelVisibility","panelContainerHeight","setPanelContainerHeight","panel","getPanelContainerClass","ref","element","getBoundingClientRect","height","onClick","CardTitleBold","CardSubtitleBold","ItalicBoldFlexRow","StyledFlexColumn","EventCard","body","disclaimer","daysTilGig","dateDifference","ceil","daysToGo","stringifyDate","date","weekday","getDay","day","month","getMonth","datesArrayToString","getCountdownText","GigCard","GigCardList","gigCard","PageSectionTitle","PageSectionHeaderContainer","PageSectionCount","PageSectionStarredCount","PageSectionHeaderIcon","PageSectionHeader","dataTest","useContext","ThemeContext","CentredOnPhone","StyledLi","addPaddingTop","List","listItems","mapMethodToListItems","mapServeWithToListItems","getServeWithListItem","lineOptions","mapRecipeIngredientsToListItems","ingredientsGroups","ingredientsWithPaddingFlags","ingredientsGroup","INDEX_HIGH","INDEX_LOW","push","RecipeCardTitle","RecipeBody","PaddedFlexColumn","RecipeCard","newRecipe","ingredientsHeader","defaultIngredientsHeader","quantitySpaceMeasurement","quantityAndMeasurement","getIngredientsHeader","RecipeGroupList","RecipeCardList","recipeCard","TheatreCard","TheatreCardList","theatreCard","TravelCard","TITLE","SUBTITLE","TravelCardList","travelCard","VinylArtwork","TextContainer","VinylCard","VinylCardList","vinyl","PageSectionContainer","PageSection","TitleTextContainer","PageTitlePrimaryCount","PageTitleSecondaryCount","PaddedFlexRow","pageTitleMarginBottom","SvgContainer","PageTitle","titleText","StyledPageShell","PageShell","StyledUl","use2columns","App","path","pageSection","replace","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.78a7403c.chunk.js","sourcesContent":["var map = {\n\t\"./baked_beans.jpg\": 40,\n\t\"./banana_cake.jpg\": 41,\n\t\"./bolognese.jpg\": 42,\n\t\"./brownies.jpg\": 43,\n\t\"./carbonara.jpg\": 44,\n\t\"./crumble.jpg\": 45,\n\t\"./flapjacks.jpg\": 46,\n\t\"./kale_crispy.jpg\": 47,\n\t\"./lasagne.jpg\": 48,\n\t\"./mashed_potato.jpg\": 49,\n\t\"./piri_piri.jpg\": 50,\n\t\"./ratatouille.jpg\": 51,\n\t\"./rogan_josh.jpg\": 52,\n\t\"./shepherds_pie.jpg\": 53\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 39;","module.exports = __webpack_public_path__ + \"static/media/baked_beans.b17978e3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banana_cake.ae9fd9b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bolognese.b9573028.jpg\";","module.exports = __webpack_public_path__ + \"static/media/brownies.84692604.jpg\";","module.exports = __webpack_public_path__ + \"static/media/carbonara.9848608a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crumble.263fe8b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flapjacks.0d5f26e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kale_crispy.b5419d7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lasagne.8d8fb594.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mashed_potato.5c438d68.jpg\";","module.exports = __webpack_public_path__ + \"static/media/piri_piri.42719ce5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ratatouille.971440f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rogan_josh.904346f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shepherds_pie.d49c0165.jpg\";","var map = {\n\t\"./artist.svg\": 55,\n\t\"./book.svg\": 56,\n\t\"./brain.svg\": 57,\n\t\"./cake.svg\": 58,\n\t\"./camera.svg\": 59,\n\t\"./city.svg\": 60,\n\t\"./flag.svg\": 61,\n\t\"./map_pin.svg\": 62,\n\t\"./masks.svg\": 63,\n\t\"./microphone.svg\": 64,\n\t\"./notepad.svg\": 65,\n\t\"./palm_tree.svg\": 66,\n\t\"./peace_sign.svg\": 67,\n\t\"./people.svg\": 68,\n\t\"./roller_coaster.svg\": 69,\n\t\"./stadium.svg\": 70,\n\t\"./stars.svg\": 71,\n\t\"./tent.svg\": 72,\n\t\"./theatre.svg\": 73,\n\t\"./town_hall.svg\": 74,\n\t\"./travel.svg\": 75,\n\t\"./veg_bowl.svg\": 76,\n\t\"./vinyl.svg\": 77\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 54;","module.exports = __webpack_public_path__ + \"static/media/artist.7b2f9742.svg\";","module.exports = __webpack_public_path__ + \"static/media/book.76291941.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.09b4a667.svg\";","module.exports = __webpack_public_path__ + \"static/media/cake.fd8c22a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.90fcc14d.svg\";","module.exports = __webpack_public_path__ + \"static/media/city.c6cfa7a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/flag.b4a08446.svg\";","module.exports = __webpack_public_path__ + \"static/media/map_pin.71135c81.svg\";","module.exports = __webpack_public_path__ + \"static/media/masks.d8da85e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/microphone.45f98fc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/notepad.4eca818e.svg\";","module.exports = __webpack_public_path__ + \"static/media/palm_tree.4f07f732.svg\";","module.exports = __webpack_public_path__ + \"static/media/peace_sign.05525562.svg\";","module.exports = __webpack_public_path__ + \"static/media/people.af13270c.svg\";","module.exports = __webpack_public_path__ + \"static/media/roller_coaster.6bcd9568.svg\";","module.exports = __webpack_public_path__ + \"static/media/stadium.5bff58bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/stars.86e33730.svg\";","module.exports = __webpack_public_path__ + \"static/media/tent.2c2dd363.svg\";","module.exports = __webpack_public_path__ + \"static/media/theatre.e5eaee16.svg\";","module.exports = __webpack_public_path__ + \"static/media/town_hall.c00cc7ab.svg\";","module.exports = __webpack_public_path__ + \"static/media/travel.d9baea5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/veg_bowl.ee16e10a.svg\";","module.exports = __webpack_public_path__ + \"static/media/vinyl.69320bab.svg\";","var map = {\n\t\"./1975_a-brief-inquiry-into-online-relationships.jpg\": 79,\n\t\"./adele_19.jpg\": 80,\n\t\"./allie-x_super-sunset.jpg\": 81,\n\t\"./amy-winehouse_back-to-black.jpg\": 82,\n\t\"./arctic-monkeys_favourite-worst-nightmare.jpg\": 83,\n\t\"./ariana-grande_thank-u-next.jpg\": 84,\n\t\"./banks_iii.jpg\": 85,\n\t\"./ben-howard_every-kingdom.jpg\": 86,\n\t\"./beyonce_lemonade.jpg\": 87,\n\t\"./caribou_our-love.jpg\": 88,\n\t\"./charli-xcx_how-im-feeling-now.jpg\": 89,\n\t\"./dua-lipa_future-nostalgia.jpg\": 90,\n\t\"./ellie-goulding_halcyon.jpg\": 91,\n\t\"./fka-twigs_magdalene.jpg\": 92,\n\t\"./florence-and-the-machine_lungs.jpg\": 93,\n\t\"./george-fitzgerald_all-that-must-be.jpg\": 94,\n\t\"./grimes_art-angels.jpg\": 95,\n\t\"./haim_women-in-music-pt-iii.jpg\": 96,\n\t\"./jon-hopkins_singularity.jpg\": 97,\n\t\"./kate-nash_made-of-bricks.jpg\": 98,\n\t\"./katy-perry_one-of-the-boys.jpg\": 99,\n\t\"./lady-gaga_born-this-way.jpg\": 100,\n\t\"./lana-del-rey_born-to-die.jpg\": 101,\n\t\"./lane-8_rise.jpg\": 102,\n\t\"./lany_malibu-nights.jpg\": 103,\n\t\"./leon_leon.jpg\": 104,\n\t\"./lissie_catching-a-tiger.jpg\": 105,\n\t\"./lorde_pure-heroine.jpg\": 106,\n\t\"./marina_electra-heart.jpg\": 107,\n\t\"./muna_about-u.jpg\": 108,\n\t\"./panic-at-the-disco_a-fever-you-cant-sweat-out.jpg\": 109,\n\t\"./paramore_riot.jpg\": 110,\n\t\"./pvris_all-we-know-of-heaven-all-we-need-of-hell.jpg\": 111,\n\t\"./rihanna_rated-r.jpg\": 112,\n\t\"./sufjan-stevens_carrie-and-lowell.jpg\": 113,\n\t\"./taylor-swift_1989.jpg\": 114,\n\t\"./tourist_u.jpg\": 115,\n\t\"./troye-sivan_bloom.jpg\": 116\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 78;","module.exports = __webpack_public_path__ + \"static/media/1975_a-brief-inquiry-into-online-relationships.450622e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/adele_19.e2cf5b85.jpg\";","module.exports = __webpack_public_path__ + \"static/media/allie-x_super-sunset.e4ba903d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amy-winehouse_back-to-black.ecf94e06.jpg\";","module.exports = __webpack_public_path__ + \"static/media/arctic-monkeys_favourite-worst-nightmare.58968a16.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ariana-grande_thank-u-next.da50a9a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banks_iii.b72779a4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ben-howard_every-kingdom.7c15634d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beyonce_lemonade.50a3a82a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/caribou_our-love.c6a86242.jpg\";","module.exports = __webpack_public_path__ + \"static/media/charli-xcx_how-im-feeling-now.189d54fe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dua-lipa_future-nostalgia.58a27cc6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ellie-goulding_halcyon.130bb708.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fka-twigs_magdalene.953f91d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/florence-and-the-machine_lungs.32d27476.jpg\";","module.exports = __webpack_public_path__ + \"static/media/george-fitzgerald_all-that-must-be.7b74b70d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/grimes_art-angels.d701ba28.jpg\";","module.exports = __webpack_public_path__ + \"static/media/haim_women-in-music-pt-iii.40870384.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jon-hopkins_singularity.9b297b88.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kate-nash_made-of-bricks.667a0a03.jpg\";","module.exports = __webpack_public_path__ + \"static/media/katy-perry_one-of-the-boys.b2413afa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lady-gaga_born-this-way.557d8c6f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lana-del-rey_born-to-die.603d1f0a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lane-8_rise.9e86b3c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lany_malibu-nights.c0777d86.jpg\";","module.exports = __webpack_public_path__ + \"static/media/leon_leon.c6cc0d11.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lissie_catching-a-tiger.08a934f8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lorde_pure-heroine.5fb4c008.jpg\";","module.exports = __webpack_public_path__ + \"static/media/marina_electra-heart.158a3826.jpg\";","module.exports = __webpack_public_path__ + \"static/media/muna_about-u.a9a59d8a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/panic-at-the-disco_a-fever-you-cant-sweat-out.6809f186.jpg\";","module.exports = __webpack_public_path__ + \"static/media/paramore_riot.bb10da24.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pvris_all-we-know-of-heaven-all-we-need-of-hell.4a601a47.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rihanna_rated-r.00ea61a4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sufjan-stevens_carrie-and-lowell.e2842b0a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/taylor-swift_1989.68762a13.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tourist_u.43cf73ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/troye-sivan_bloom.fdadad49.jpg\";","import styled, { css } from \"styled-components\";\n\ninterface ICircle extends IThemeProp {\n  className?: string;\n  size: string;\n  fontSize: string;\n  invert: boolean;\n  color: string;\n}\n\nexport const Circle = styled.div`\n  border-radius: 50%;\n  text-align: center;\n\n  ${({ size, fontSize, theme }: ICircle) => css`\n    height: ${size};\n    width: ${size};\n    line-height: ${size};\n    border: ${theme.circleBorder};\n    font-size: ${fontSize};\n  `}\n\n  ${({ invert }: ICircle) =>\n    invert &&\n    css`\n      background: #777777;\n      color: white;\n      border-color: transparent;\n    `}\n\n  ${({ color }: ICircle) =>\n    color &&\n    css`\n      background: ${color};\n      color: white;\n      border-color: transparent;\n    `}\n`;\n","import styled, { css } from \"styled-components\";\n\ninterface StyledUlProps {\n  showBullets?: boolean;\n}\n\nexport const Ul = styled.ul`\n  margin: 0;\n  padding: 0;\n\n  ${({ showBullets }: StyledUlProps) =>\n    showBullets\n      ? css`\n          list-style-type: square;\n          list-style-position: inside;\n        `\n      : css`\n          list-style-type: none;\n        `}\n`;\n\nexport const Li = styled.li``;\n","import styled from \"styled-components\";\n\nimport { Li } from \"./Lists\";\n\nexport const FlexSpan = styled.span`\n  display: flex;\n`;\n\nexport const FlexSpanGrow = styled(FlexSpan)`\n  flex: 1;\n`;\n\nexport const FlexRow = styled.div`\n  display: flex;\n`;\n\nexport const FlexRowGrow = styled(FlexRow)`\n  flex: 1;\n`;\n\nexport const FlexColumn = styled(FlexRow)`\n  flex-direction: column;\n`;\n\nexport const FlexLiGrow = styled(Li)`\n  display: flex;\n  flex: 1;\n`;\n","import { Link as ReactRouterDomLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Link = styled(ReactRouterDomLink)`\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  text-decoration: none;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface IStyledImage {\n  size: string;\n}\nconst StyledImage = styled.img`\n  height: ${({ size }: IStyledImage) => size};\n  width: ${({ size }: IStyledImage) => size};\n  margin: 0;\n`;\n\ninterface ISquareImage {\n  className?: string;\n  imgSrc: string;\n  size: string;\n}\n\nexport const SquareImage = ({ className, imgSrc, size }: ISquareImage) => (\n  <StyledImage\n    className={className}\n    data-test=\"svg-icon\"\n    src={imgSrc}\n    size={size}\n  />\n);\n","import { css } from \"styled-components\";\n\nconst ZERO_MARGIN_AND_PADDING = css`\n  margin: 0;\n  padding: 0;\n`;\n\nexport const CSS = { ZERO_MARGIN_AND_PADDING };\n","export const COLORS: IColors = {\n  gainsboro: \"gainsboro\",\n  darkGreen: \"darkGreen\",\n  green: \"green\",\n  amethystSmoke: \"#a186b0\",\n  baliHai: \"#86a3b0\",\n  gray: \"#808080\",\n  hillary: \"#b0a186\",\n  sprout: \"#b9d1a3\",\n  black: \"#000000\"\n};\n","export const FONT_SIZES: IFontSizes = {\n  XxL: \"4.375rem\",\n  XL: \"2rem\",\n  L: \"1.5rem\",\n  M: \"1rem\",\n  S: \"0.75rem\"\n};\n","import { rgba } from \"polished\";\n\nimport { COLORS } from \"./colors\";\n\nconst countMarginLeft: PxValue = \"5px\";\n\nconst BORDER_BLACK_THIN: IBorder = `1px solid ${COLORS.black}`;\nconst BORDER_GRAY_THIN: IBorder = `1px solid ${COLORS.gray}`;\n\nconst THEME_homePage: ITheme_Homepage = {\n  icon: { padding: \"1.5vmin\", size: { desktop: \"25vmin\", phone: \"42vmin\" } }\n};\n\nconst THEME_page: ITheme_Page = {\n  count: { padding: `12px 0 0 ${countMarginLeft}` },\n  header: { margin: { bottom: \"30px\" } },\n  icon: { margin: { top: \"15px\" }, size: \"60px\" },\n  shell: { padding: \"25px 20px\" }\n};\n\nconst THEME_countedList: ITheme_CountedList = {\n  border: { bottom: BORDER_GRAY_THIN },\n  count: { width: \"25px\" },\n  padding: { vertical: \"5px\" }\n};\n\nconst THEME_eventCardList: ITheme_EventCardList = {\n  padding: { vertical: \"10px\" },\n  finalEventCardPaddingBottom: \"5px\"\n};\n\nconst THEME_pageSection: ITheme_PageSection = {\n  background: COLORS.gainsboro,\n  border: { bottom: BORDER_BLACK_THIN },\n  borderRadius: \"10px\",\n  boxShadow: `0 1px 2px ${rgba(COLORS.gray, 0.5)}`,\n  count: { margin: { left: countMarginLeft } },\n  header: { padding: \"12px 0\" },\n  icon: { padding: { top: \"2px\" }, size: \"34px\" },\n  margin: { bottom: \"20px\" },\n  padding: { horizontal: \"12px\", bottom: \"5px\" },\n  transition: \"all 0.4s ease\"\n};\n\nconst THEME_recipe: ITheme_Recipes = {\n  border: { bottom: BORDER_GRAY_THIN },\n  image: { size: \"300px\" },\n  dietIcon: { margin: { top: \"4px\" }, size: \"24px\" },\n  title: { padding: { vertical: \"15px\" } },\n  first: { padding: { top: \"10px\" } },\n  last: { padding: { bottom: \"20px\" } }\n};\n\nconst THEME_breakpoints: IBreakpoints = {\n  tablet: { minWidth: \"768px\" },\n  phone: { maxWidth: \"480px\" }\n};\n\nexport const fontFamily: IFontFamily = \"-apple-system, Helvetica, sans-serif\";\nexport const scrollbarSize: IScrollbarSize = \"0.7rem\";\n\nexport const THEME: ITheme = {\n  // Surface level\n  circleBorder: BORDER_BLACK_THIN,\n  fadedOpacity: 0.5,\n  fontFamily,\n  listItemGroupVerticalSpacing: \"10px\",\n  scrollbarSize,\n  textColor: COLORS.black,\n\n  // Nested level\n  breakpoints: THEME_breakpoints,\n  countedList: THEME_countedList,\n  eventCardList: THEME_eventCardList,\n  recipe: THEME_recipe,\n  homePage: THEME_homePage,\n  section: THEME_pageSection,\n  page: THEME_page\n};\n","import { createGlobalStyle } from \"styled-components\";\nimport { normalize } from \"polished\";\n\nimport { fontFamily, scrollbarSize } from \"./theme\";\n\nexport const GlobalStyle = createGlobalStyle`\n  ${normalize()}\n  \n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n  \n  ::-webkit-scrollbar {\n    width: ${scrollbarSize};\n    height: ${scrollbarSize};\n  }\n  \n  ::-webkit-scrollbar-track {\n    background: rgba(180, 178, 183, 0.3);\n    border: 1px solid rgba(180, 178, 183, 0.3);\n    border-radius: ${scrollbarSize};\n  }\n  \n  ::-webkit-scrollbar-thumb {\n    cursor: pointer;\n    background: rgba(0, 0, 0, 0.3);\n    border: 1px solid rgba(180, 178, 183, 0.3);\n    border-radius: ${scrollbarSize};\n  }\n  \n  ::-webkit-scrollbar-thumb:hover {\n    background: rgba(0, 0, 0, 0.5);\n    border-color: rgba(180, 178, 183, 0.5);\n  }\n  \n  ::-webkit-scrollbar-corner {\n    background-color: transparent;\n  }\n\n  body {\n    font-family: ${fontFamily};\n\n    margin: 0;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  \n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Old versions of Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none; /* Non-prefixed version, currently supported by Chrome, Opera and Firefox */\n  }\n  \n  body:before {\n    margin: 0;\n    content: \"\";\n    display: block;\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -10;\n    /* background: linear-gradient(white, lightGrey) no-repeat center center; */\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n  }\n  \n`;\n","import styled from \"styled-components\";\n\nimport { FONT_SIZES, CSS } from \"styles\";\n\nexport const SeventyFivePercentSpan = styled.span`\n  font-size: 75%;\n`;\n\nexport const H1 = styled.h1`\n  ${CSS.ZERO_MARGIN_AND_PADDING}\n  font-size: ${FONT_SIZES.XxL};\n`;\n\nexport const H2 = styled.h2`\n  ${CSS.ZERO_MARGIN_AND_PADDING}\n  font-size: ${FONT_SIZES.XL};\n`;\n\nexport const H3 = styled.h3`\n  ${CSS.ZERO_MARGIN_AND_PADDING}\n  font-size: ${FONT_SIZES.L};\n`;\n","export const requireJpeg = (photo: string): IImageSrc =>\n  require(`./${photo}.jpg`);\n\nexport const PHOTOS_RECIPES: RecipePhotosObject = {\n  // B\n  BAKED_BEANS: requireJpeg(\"baked_beans\"),\n  BANANA_CAKE: requireJpeg(\"banana_cake\"),\n  BOLOGNESE: requireJpeg(\"bolognese\"),\n  BROWNIES: requireJpeg(\"brownies\"),\n  // C\n  CARBONARA: requireJpeg(\"carbonara\"),\n  CRUMBLE: requireJpeg(\"crumble\"),\n  // F\n  FLAPJACKS: requireJpeg(\"flapjacks\"),\n  // K\n  KALE_CRISPY: requireJpeg(\"kale_crispy\"),\n  // L\n  LASAGNE: requireJpeg(\"lasagne\"),\n  // M\n  MASHED_POTATO: requireJpeg(\"mashed_potato\"),\n  // P\n  PIRI_PIRI: requireJpeg(\"piri_piri\"),\n  // R\n  RATATOUILLE: requireJpeg(\"ratatouille\"),\n  ROGAN_JOSH: requireJpeg(\"rogan_josh\"),\n  // S\n  SHEPHERDS_PIE: requireJpeg(\"shepherds_pie\")\n};\n","const requireSvg = (icon: string): IImageSrc => require(`./${icon}.svg`);\n\nexport const SVG_ICONS: IconsObject = {\n  // A\n  ARTIST: requireSvg(\"artist\"),\n  // B\n  BOOK: requireSvg(\"book\"),\n  BRAIN: requireSvg(\"brain\"),\n  // C\n  CAKE: requireSvg(\"cake\"),\n  CAMERA: requireSvg(\"camera\"),\n  CITY: requireSvg(\"city\"),\n  // F\n  FLAG: requireSvg(\"flag\"),\n  // M\n  MAP_PIN: requireSvg(\"map_pin\"),\n  MASKS: requireSvg(\"masks\"),\n  MICROPHONE: requireSvg(\"microphone\"),\n  // N\n  NOTEPAD: requireSvg(\"notepad\"),\n  // P\n  PALM_TREE: requireSvg(\"palm_tree\"),\n  PEACE_SIGN: requireSvg(\"peace_sign\"),\n  PEOPLE: requireSvg(\"people\"),\n  // R\n  ROLLER_COASTER: requireSvg(\"roller_coaster\"),\n  // S\n  STADIUM: requireSvg(\"stadium\"),\n  STARS: requireSvg(\"stars\"),\n  // T\n  TENT: requireSvg(\"tent\"),\n  THEATRE: requireSvg(\"theatre\"),\n  TOWN_HALL: requireSvg(\"town_hall\"),\n  TRAVEL: requireSvg(\"travel\"),\n  // V\n  VEG_BOWL: requireSvg(\"veg_bowl\"),\n  VINYL: requireSvg(\"vinyl\")\n};\n","const requireVinyl = (artist: string, album: string): IImageSrc =>\n  require(`./${artist}_${album}.jpg`);\n\nexport const PHOTOS_VINYL: VinylPhotosObject = {\n  // 123\n  \"1975\": {\n    A_BRIEF_INQUIRY_INTO_ONLINE_RELATIONSHIPS: requireVinyl(\n      \"1975\",\n      \"a-brief-inquiry-into-online-relationships\"\n    )\n  },\n  // A\n  ADELE: { \"19\": requireVinyl(\"adele\", \"19\") },\n  ALLIE_X: { SUPER_SUNSET: requireVinyl(\"allie-x\", \"super-sunset\") },\n  AMY_WINEHOUSE: {\n    BACK_TO_BLACK: requireVinyl(\"amy-winehouse\", \"back-to-black\")\n  },\n  ARCTIC_MONKEYS: {\n    FAVOURITE_WORST_NIGHTMARE: requireVinyl(\n      \"arctic-monkeys\",\n      \"favourite-worst-nightmare\"\n    )\n  },\n  ARIANA_GRANDE: {\n    THANK_U_NEXT: requireVinyl(\"ariana-grande\", \"thank-u-next\")\n  },\n  // B\n  BANKS: { III: requireVinyl(\"banks\", \"iii\") },\n  BEN_HOWARD: { EVERY_KINGDOM: requireVinyl(\"ben-howard\", \"every-kingdom\") },\n  BEYONCE: { LEMONADE: requireVinyl(\"beyonce\", \"lemonade\") },\n  // C\n  CARIBOU: { OUR_LOVE: requireVinyl(\"caribou\", \"our-love\") },\n  CHARLI_XCX: {\n    HOW_IM_FEELING_NOW: requireVinyl(\"charli-xcx\", \"how-im-feeling-now\")\n  },\n  // D\n  DUA_LIPA: { FUTURE_NOSTALGIA: requireVinyl(\"dua-lipa\", \"future-nostalgia\") },\n  // E\n  ELLIE_GOULDING: { HALCYON: requireVinyl(\"ellie-goulding\", \"halcyon\") },\n  // F\n  FKA_TWIGS: { MAGDALENE: requireVinyl(\"fka-twigs\", \"magdalene\") },\n  FLORENCE_AND_THE_MACHINE: {\n    LUNGS: requireVinyl(\"florence-and-the-machine\", \"lungs\")\n  },\n  // G\n  GEORGE_FITZGERALD: {\n    ALL_THAT_MUST_BE: requireVinyl(\"george-fitzgerald\", \"all-that-must-be\")\n  },\n  GRIMES: { ART_ANGELS: requireVinyl(\"grimes\", \"art-angels\") },\n  // H\n  HAIM: {\n    WOMEN_IN_MUSIC_PT_III: requireVinyl(\"haim\", \"women-in-music-pt-iii\")\n  },\n  // J\n  JON_HOPKINS: { SINGULARITY: requireVinyl(\"jon-hopkins\", \"singularity\") },\n  // K\n  KATE_NASH: { MADE_OF_BRICKS: requireVinyl(\"kate-nash\", \"made-of-bricks\") },\n  KATY_PERRY: {\n    ONE_OF_THE_BOYS: requireVinyl(\"katy-perry\", \"one-of-the-boys\")\n  },\n  // L\n  LADY_GAGA: { BORN_THIS_WAY: requireVinyl(\"lady-gaga\", \"born-this-way\") },\n  LANA_DEL_REY: { BORN_TO_DIE: requireVinyl(\"lana-del-rey\", \"born-to-die\") },\n  LANE_8: { RISE: requireVinyl(\"lane-8\", \"rise\") },\n  LANY: { MALIBU_NIGHTS: requireVinyl(\"lany\", \"malibu-nights\") },\n  LEON: { LEON: requireVinyl(\"leon\", \"leon\") },\n  LISSIE: { CATCHING_A_TIGER: requireVinyl(\"lissie\", \"catching-a-tiger\") },\n  LORDE: { PURE_HEROINE: requireVinyl(\"lorde\", \"pure-heroine\") },\n  // M\n  MARINA: { ELECTRA_HEART: requireVinyl(\"marina\", \"electra-heart\") },\n  MUNA: { ABOUT_U: requireVinyl(\"muna\", \"about-u\") },\n  // P\n  PANIC_AT_THE_DISCO: {\n    A_FEVER_YOU_CANT_SWEAT_OUT: requireVinyl(\n      \"panic-at-the-disco\",\n      \"a-fever-you-cant-sweat-out\"\n    )\n  },\n  PARAMORE: { RIOT: requireVinyl(\"paramore\", \"riot\") },\n  PVRIS: {\n    ALL_WE_KNOW_OF_HEAVEN_ALL_WE_NEED_OF_HELL: requireVinyl(\n      \"pvris\",\n      \"all-we-know-of-heaven-all-we-need-of-hell\"\n    )\n  },\n  // R\n  RIHANNA: { RATED_R: requireVinyl(\"rihanna\", \"rated-r\") },\n  // S\n  SUFJAN_STEVENS: {\n    CARRIE_AND_LOWELL: requireVinyl(\"sufjan-stevens\", \"carrie-and-lowell\")\n  },\n  // T\n  TAYLOR_SWIFT: { \"1989\": requireVinyl(\"taylor-swift\", \"1989\") },\n  TOURIST: { U: requireVinyl(\"tourist\", \"u\") },\n  TROYE_SIVAN: { BLOOM: requireVinyl(\"troye-sivan\", \"bloom\") }\n};\n","export const ACTORS: IActors = {\n  // A\n  ADAM_JAMES: { name: \"Adam James\" },\n  ADI_CHUGH: { name: \"Adi Chugh\" },\n  AIMEE_LOU_WOOD: { name: \"Aimee Lou Wood\" },\n  // B\n  BENJAMIN_ALUWIHARE: { name: \"Benjamin Aluwihare\" },\n  // C\n  CLAIRE_FOY: { name: \"Claire Foy\", favourite: true },\n  //\n  DAVID_MOORST: { name: \"David Moorst\" },\n  // G\n  GWENDOLINE_CHRISITE: { name: \"Gwendoline Christie\" },\n  // H\n  HAMMED_ANIMASHAUN: { name: \"Hammed Animashaun\" },\n  HATTY_JONES: { name: \"Hatty Jones\" },\n  // J\n  JASON_WATKINS: { name: \"Jason Watkins\" },\n  JOHN_MCCREA: { name: \"John McCrea\" },\n  // K\n  KATHERINE_PARKINSON: { name: \"Katherine Parkinson\", favourite: true },\n  // L\n  LAURIE_KYNASTON: { name: \"Laurie Kynaston\", favourite: true },\n  LEE_INGLEBY: { name: \"Lee Ingleby\" },\n  // M\n  MATT_SMITH: { name: \"Matt Smith\" },\n  MILLY_THOMAS: { name: \"Milly Thomas\" },\n  // N\n  NINA_SOSANYA: { name: \"Nina Sosanya\" },\n  // O\n  OLIVER_CHRIS: { name: \"Oliver Chris\" },\n  // P\n  PETER_MCPHERSON: { name: \"Peter McPherson\" },\n  // S\n  SARA_BAREILLES: { name: \"Sara Bareilles\" },\n  SIAN_CLIFFORD: { name: \"Sian Clifford\", favourite: true },\n  SURANNE_JONES: { name: \"Suranne Jones\", favourite: true },\n  // T\n  TIMOTHEE_CHALAMET: { name: \"Timothée Chalamet\", favourite: true }\n};\n","import { COLORS } from \"styles\";\n\ninterface IDiets {\n  VEGAN: IRecipeDiet;\n  VEGETARIAN: IRecipeDiet;\n}\n\nexport const DIETS: IDiets = {\n  VEGAN: { abbreviation: \"Ve\", color: COLORS.darkGreen },\n  VEGETARIAN: { abbreviation: \"V\", color: COLORS.green }\n};\n","export const FESTIVALS: IFestivals = {\n  // A\n  AREA_10_NYE: { name: \"Area 10 NYE\" },\n  // B\n  BESTIVAL: { name: \"Bestival\", festival: true },\n  BRIGHTON_PRIDE: { name: \"Brighton Pride\", festival: true },\n  // C\n  CHINGFEST: { name: \"Chingfest\" },\n  // D\n  DECAYDANCE: { name: \"Decaydance\", festival: true },\n  DEFECTED_BRISTOL: { name: \"Defected In the House Day & Night Party\" },\n  // F\n  FABRIC_NYE: { name: \"Fabric NYE\" },\n  // G\n  GLASTONBURY: { name: \"Glastonbury\", festival: true, favourite: true },\n  // H\n  HOMOBLOC: { name: \"Homobloc\", festival: true },\n  // K\n  KALEIDOSCOPE: { name: \"Kaleidoscope\", festival: true },\n  // L\n  LOVEBOX: { name: \"Lovebox\", festival: true },\n  // M\n  MAD_COOL: { name: \"Mad Cool\", festival: true },\n  MANCHESTER_PRIDE: { name: \"Manchester Pride\", festival: true },\n  MIGHTY_HOOPLA: { name: \"Mighty Hoopla\", festival: true },\n  // N\n  NOTION_SUMMER_PARTY: { name: \"Notion Summer Party\" },\n  // O\n  ON_THE_RUN_II: { name: \"On the Run II\" },\n  // P\n  PARKLIFE: { name: \"Parklife\", festival: true },\n  // T\n  TRANSMISSION: { name: \"Transmission\", festival: true },\n  TRIBAL_SESSIONS: { name: \"Tribal Sessions\" },\n  // V\n  V_FESTIVAL: { name: \"V Festival\", festival: true },\n  // W\n  WAREHOUSE_PROJECT: {\n    name: \"Warehouse Project\",\n    festival: true,\n    favourite: true\n  }\n};\n","type IFRIENDS = { [name: string]: IFriend };\n\nconst GROUPS: IFRIENDS = {\n  CFS: { name: \"Colonel Frank Seely\", initials: \"CFS\" },\n  JHC: { name: \"JHC\", initials: \"JHC\" }\n};\n\nexport const FRIENDS: IFRIENDS = {\n  ...GROUPS,\n  // A\n  AISHA: { name: \"Aisha Saeed\", initials: \"AS\" },\n  ALEX_FAYE: { name: \"Alex-Faye Grundy\", initials: \"AG\" },\n  ALICE_R: { name: \"Alice Roder\", initials: \"AR\" },\n  AMY_B: { name: \"Amy Bagni\", initials: \"AB\" },\n  AMY_C: { name: \"Amy Calcutt\", initials: \"AC\" },\n  ANNIE_B: { name: \"Annie Butcher\", initials: \"AB\" },\n  ASH: { name: \"Ash Moreton\", initials: \"AM\" },\n  // B\n  BECKY: { name: \"Becky Mills\", initials: \"BM\" },\n  BETH_O: { name: \"Beth Oakes\", initials: \"BO\" },\n  BETH_SH: { name: \"Beth Shears\", initials: \"BS\" },\n  BETH_SP: { name: \"Beth Speller\", initials: \"BS\" },\n  BLAINE: { name: \"Blaine Pearson\", initials: \"BP\" },\n  // C\n  CAITY: { name: \"Caity Dalby\", initials: \"CD\" },\n  CAITLIN: { name: \"Caitlin McCaig\", initials: \"CM\", gigs: true, travel: true },\n  CARMEN: { name: \"Carmen Dalglish\", initials: \"CD\", travel: true },\n  CAMERON: { name: \"Cameron Blackburn\", initials: \"CB\" },\n  CHELSEA: { name: \"Chelsea Cunningham\", initials: \"CC\" },\n  CHLOE: { name: \"Chloé White\", initials: \"CW\" },\n  CHRISTELLE: { name: \"Christelle Mutunda\", initials: \"CM\" },\n  COBY_B: { name: \"Coby Blackburn\", initials: \"CB\" },\n  COURTNEY: { name: \"Courtney Lawson\", initials: \"CL\" },\n  // D\n  DAD: { name: \"Dad\", initials: \"D\", gigs: true, theatre: true, travel: true },\n  DARREN: { name: \"Darren Taylor\", initials: \"DT\", gigs: true, theatre: true },\n  DAN: {\n    name: \"Dan Sparrow\",\n    initials: \"DS\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  DOM: { name: \"Dominic Coyne\", initials: \"DC\", theatre: true },\n  // E\n  ELLE_O: { name: \"Elle Oldroyd\", initials: \"EO\" },\n  ELINORE_G: { name: \"Elinore Gillespie\", initials: \"EG\" },\n  ELISE: { name: \"Elise Morley\", initials: \"EM\" },\n  ELLIE_F: { name: \"Ellie Forman\", initials: \"EF\" },\n  ELLIE_G: { name: \"Ellie Gurkin\", initials: \"EG\", travel: true },\n  ELLIE_P: { name: \"Ellie Pearce\", initials: \"EP\" },\n  ELLIE_S: { name: \"Ellie Spanovic\", initials: \"ES\" },\n  EMMA: {\n    name: \"Emma Codrington\",\n    initials: \"EC\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  // F\n  FANNY: { name: \"Fanny Lindqvist\", initials: \"FL\" },\n  // G\n  GEMMA: { name: \"Gemma Gilderthorp\", initials: \"GG\" },\n  GEORGE: { name: \"George Littlehales\", initials: \"GL\" },\n  GRACE: { name: \"Grace Hulme\", initials: \"GH\", travel: true },\n  // H\n  HANNA: { name: \"Hanna Frogner\", initials: \"HF\" },\n  HARRIET_B: { name: \"Harriet Boyle\", initials: \"HB\" },\n  HARRIET_K: { name: \"Harriet Kesterton\", initials: \"HK\" },\n  HEATHER_C: { name: \"Heather Chiles\", initials: \"HC\" },\n  // J\n  JAIMINI: { name: \"Jaimini Popat\", initials: \"JP\" },\n  JAMIE: {\n    name: \"Jamie Halket\",\n    initials: \"JH\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  JAZZ: { name: \"Jasminder Thind\", initials: \"JT\" },\n  JERRY: { name: \"Jerry Edwards\", initials: \"JE\", gigs: true, theatre: true },\n  JOE: { name: \"Joe Edwards\", initials: \"JE\", theatre: true },\n  JESS: { name: \"Jess Smith\", initials: \"JS\" },\n  JUNAID: { name: \"Junaid Khan\", initials: \"JK\" },\n  // K\n  KATE_B: { name: \"Kate Bowmar\", initials: \"KB\" },\n  KIERAN_S: { name: \"Kieran Sawford\", initials: \"KS\" },\n  KIRSTEN: { name: \"Kirsten Jackson\", initials: \"KJ\" },\n  KYLE: { name: \"Kyle Hough\", initials: \"KH\" },\n  // L\n  LAURA: { name: \"Laura Capece-Galeota\", initials: \"LC\" },\n  LEAH: { name: \"Leah Slater-Radway\", initials: \"LS\" },\n  LEWIS: { name: \"Lewis Steadman\", initials: \"LS\", gigs: true, theatre: true },\n  LINDSAY_A: { name: \"Lindsay Aspinall\", initials: \"LA\" },\n  LINDSEY_S: { name: \"Lindsey Skelton\", initials: \"LS\" },\n  LOUISE: { name: \"Louise Blackburn\", initials: \"LB\" },\n  LUKE_J: { name: \"Luke Jones\", initials: \"LJ\" },\n  LUKE_S: { name: \"Luke Stern\", initials: \"LS\" },\n  // M\n  MARIA: { name: \"Maria Taylor\", initials: \"MT\", theatre: true },\n  MEGAN: { name: \"Megan Blackburn\", initials: \"MB\", gigs: true },\n  MUM: { name: \"Mum\", initials: \"M\", gigs: true, theatre: true, travel: true },\n  // N\n  NATALIE: { name: \"Natalie Lambert\", initials: \"NL\" },\n  NAV: { name: \"Navneet Bhogal\", initials: \"NB\" },\n  // O\n  OSCAR: { name: \"Oscar Murray\", initials: \"OM\" },\n  // P\n  PATRICIA: { name: \"Patricia Diaconescu\", initials: \"PD\" },\n  POOJA: { name: \"Pooja Dhir\", initials: \"PD\", travel: true },\n  POPPY: { name: \"Poppy Smith\", initials: \"PS\", gigs: true },\n  // R\n  ROB_G: { name: \"Robert Gall\", initials: \"RG\" },\n  RYAN: { name: \"Ryan Mills\", initials: \"RM\", gigs: true, travel: true },\n  // S\n  SAM_B: { name: \"Sam Berrie\", initials: \"SB\" },\n  SARAH_WA: { name: \"Sarah Walker\", initials: \"SW\" },\n  SARAH_W: { name: \"Sarah Whitaker\", initials: \"SW\" },\n  SIAN: {\n    name: \"Sian Rodway-Smith\",\n    initials: \"SR\",\n    gigs: true,\n    theatre: true,\n    travel: true\n  },\n  SIMAN: { name: \"Siman Pone\", initials: \"SP\" },\n  SONYA: { name: \"Sonya Pardi\", initials: \"SP\", gigs: true },\n  STEVE_R: { name: \"Steve Richards\", initials: \"SR\" },\n  // T\n  THOM: { name: \"Thom Stephanakis\", initials: \"TS\" },\n  TOM: { name: \"Tom Chinda-Coutts\", initials: \"TC\", gigs: true, travel: true },\n  TONYA: { name: \"Tonya France\", initials: \"TF\", gigs: true, travel: true }\n};\n","const KEY_WEST = { name: \"Key West\" };\n\nexport const LOCATIONS: IAllCountries = {\n  // B\n  BARBADOS: {\n    name: \"Barbados\",\n    island: true,\n    attractions: { HARRISONS_CAVE: { name: \"Harrison's Cave\" } }\n  },\n  BELGIUM: {\n    name: \"Belgium\",\n    cities: { BRUGES: { name: \"Bruges\" }, YPRES: { name: \"Ypres\" } },\n    attractions: {\n      BATTLEFIELDS: { name: \"Battlefields\" },\n      BELFRY_OF_BRUGES: { name: \"Belfry of Bruges\" }\n    }\n  },\n  // BELIZE: {\n  //   name: \"Belize\",\n  //   cities: {\n  //     BELIZE_CITY: { name: \"Belize City\" },\n  //     capital: true\n  //   },\n  //   islands: {\n  //     AMBERGRIS_CAYE: { name: \"Ambergris Caye\" },\n  //     CAYE_CAULKER: { name: \"Caye Caulker\" }\n  //   },\n  //   attractions: {\n  //     BARRIER_REEF: { name: \"Belize Barrier Reef\", highlight: true }\n  //   }\n  // },\n  BRAZIL: {\n    name: \"Brazil\",\n    cities: { RIO_DE_JANEIRO: { name: \"Rio de Janeiro\" } },\n    attractions: {\n      MODERN_ART_MUSEUM_RIO: {\n        name: \"Modern Art Museum Rio\",\n        foreignName: \"Museu de Arte Moderna do Rio de Janeiro\"\n      },\n      COPACABANA_BEACH: { name: \"Copacabana Beach\" },\n      ROCINHA_FAVELA: { name: \"Rocinha Favela\" },\n      CHRIST_THE_REDEEMER: { name: \"Cristo Redentor\" },\n      SELARON_STEPS: {\n        name: \"Selarón Steps\",\n        foreignName: \"Escadaria Selarón\"\n      },\n      HANG_GLIDING: { name: \"São Conrado Hang-Gliding\", highlight: true },\n      PICO_DO_PAPAGAIO: {\n        name: \"Pico do Papagaio\",\n        englishName: \"Parrot's Peak\",\n        foreignName: \"Pico do Papagaio\",\n        highlight: true\n      }\n    },\n    islands: { ILHA_GRANDE: { name: \"Ilha Grande\" } }\n  },\n  // C\n  CANADA: {\n    name: \"Canada\",\n    cities: { NIAGARA_FALLS: { name: \"Niagara Falls\" } },\n    attractions: { NIAGARA_FALLS: { name: \"Niagara Falls\", highlight: true } }\n  },\n  // COSTA_RICA: {\n  //   name: \"Costa Rica\",\n  //   cities: {\n  //     SAN_JOSE: { name: \"San Jose\", capital: true }\n  //   },\n  //   towns: {\n  //     MONTEVERDE: { name: \"Monteverde\" },\n  //     PUERTO_VIEJO: { name: \"Puerto Viejo\" }\n  //   },\n  //   attractions: {\n  //     CORCOVADO: { name: \"Corcovado National Park\", highlight: true },\n  //     JAGUAR_RESCUE_CENTER: { name: \"Jaguar Rescue Center\" }\n  //   }\n  // },\n  CROATIA: {\n    name: \"Croatia\",\n    cities: { DUBROVNIK: { name: \"Dubrovnik\" } },\n    attractions: {\n      DUBROVNIK_CABLE_CAR: { name: \"Dubrovnik Cable Car\" },\n      DUBROVNIK_WALLS: { name: \"Walls of Dubrovnik\", highlight: true }\n    }\n  },\n  CUBA: {\n    name: \"Cuba\",\n    island: true,\n    cities: { HAVANA: { name: \"Havana\", capital: true } },\n    towns: { VARADERO: { name: \"Varadero\" } }\n  },\n  CYPRUS: {\n    name: \"Cyprus\",\n    cities: { PAPHOS: { name: \"Paphos\" } },\n    attractions: {\n      PAPHOS_ARCHAEOLOGICAL_PARK: { name: \"Paphos Archaeological Park\" }\n    }\n  },\n  CZECH_REPUBLIC: {\n    name: \"Czech Republic\",\n    cities: { PRAGUE: { name: \"Prague\", capital: true } },\n    attractions: {\n      JOHN_LENNON_WALL: { name: \"John Lennon Wall\" },\n      VYSEHRAD: { name: \"Vyšehrad\" }\n    }\n  },\n  // D\n  DENMARK: {\n    name: \"Denmark\",\n    cities: { COPENHAGEN: { name: \"Copenhagen\" } },\n    attractions: {\n      LOUISIANA_ART_MUSEUM: { name: \"Louisiana Museum of Modern Art\" }\n    }\n  },\n  // E\n  ECUADOR: {\n    name: \"Ecuador\",\n    cities: {\n      BANOS: { name: \"Baños\" },\n      GUAYAQUIL: { name: \"Guayaquil\" },\n      OTAVALO: { name: \"Otavalo\" },\n      QUITO: { name: \"Quito\", capital: true }\n    },\n    attractions: {\n      EQUATOR_MONUMENT: {\n        name: \"Equator Monument\",\n        foreignName: \"Ciudad Mitad del Mundo\"\n      },\n      OTAVALO_MARKET: { name: \"Otavalo Market\" },\n      TORTOISE_PARK: {\n        name: \"Giant Tortoise Reserve\",\n        foreignName: \"Reserva el Chato\"\n      },\n      PAILON_DEL_DIABLO: { name: \"Pailon del Diablo\", highlight: true },\n      COTOPAXI: { name: \"Cotopaxi Volcano\", highlight: true }\n    },\n    islands: { GALAPAGOS: { name: \"Galápagos Islands\" } }\n  },\n  EGYPT: {\n    name: \"Egypt\",\n    cities: {\n      CAIRO: { name: \"Cairo\", capital: true },\n      SHARM_EL_SHEIKH: { name: \"Sharm El Sheikh\" }\n    },\n    attractions: {\n      GIZA_PYRAMIDS_SPHINX: {\n        name: \"Giza Pyramids & Great Sphinx\",\n        highlight: true\n      }\n    }\n  },\n  // F\n  FRANCE: {\n    name: \"France\",\n    cities: {\n      MONACO: { name: \"Monaco\" },\n      NICE: { name: \"Nice\" },\n      PARIS: { name: \"Paris\", capital: true }\n    },\n    attractions: {\n      SACRE_COEUR: { name: \"Sacré-Cœur\" },\n      LOUVRE: { name: \"Louvre\" },\n      ARC_DE_TRIOMPHE: { name: \"Arc de Triomphe\" },\n      AIR_SPACE_MUSEUM: { name: \"National Air and Space Museum of France\" },\n      SCIENCE_MUSEUM: { name: \"Paris Science Museum\" },\n      EIFFEL_TOWER: { name: \"Eiffel Tower\" },\n      NOTRE_DAME: { name: \"Notre-Dame de Paris\" },\n      DISNEYLAND_PARIS: { name: \"Disneyland Paris\", themePark: true },\n      PARC_ASTERIX: { name: \"Parc Astérix\", themePark: true }\n    }\n  },\n  // G\n  GERMANY: {\n    name: \"Germany\",\n    cities: { BERLIN: { name: \"Berlin\", capital: true } },\n    attractions: {\n      REICHSTAG: { name: \"Reichstag Building\" },\n      HOLOCAUST_MEMORIAL: { name: \"Holocaust Memorial\" },\n      BRANDENBURG_GATE: { name: \"Brandenburg Gate\" },\n      BERLIN_WALL: { name: \"Berlin Wall\" },\n      EAST_SIDE_GALLERY: { name: \"East Side Gallery\" }\n    }\n  },\n  GREECE: {\n    name: \"Greece\",\n    islands: { KOS: { name: \"Kos\" } },\n    regions: { HALKIDIKI: { name: \"Halkidiki\" } }\n  },\n  // H\n  HUNGARY: {\n    name: \"Hungary\",\n    cities: { BUDAPEST: { name: \"Budapest\", capital: true } },\n    attractions: {\n      PARLIAMENT_BUILDING: { name: \"Hungarian Parliament Building\" },\n      THERMAL_BATH_SZECHENYI: { name: \"Széchenyi Thermal Bath\" },\n      CITADELLA: { name: \"Citadella\" }\n    }\n  },\n  // I\n  IRELAND: {\n    name: \"Ireland\",\n    attractions: {\n      ST_STEPHENS_GREEN_PARK: { name: \"St. Stephen's Green Park\" },\n      DUBLIN_PRISON: { name: \"Kilmainham Gaol\" },\n      GUINNESS_STOREHOUSE: { name: \"Guinness Storehouse\" }\n    },\n    cities: { DUBLIN: { name: \"Dublin\", capital: true } }\n  },\n  ITALY: {\n    name: \"Italy\",\n    regions: {\n      SICILY: { name: \"Sicily\" }\n    },\n    cities: {\n      NAPLES: { name: \"Naples\" },\n      MILAN: { name: \"Milan\" },\n      ROME: { name: \"Rome\", capital: true },\n      VATICAN: { name: \"Vatican City\" },\n      CATANIA: { name: \"Catania\" },\n      VENICE: { name: \"Venice\" },\n      POMPEII: { name: \"Pompeii\" }\n    },\n    towns: { JESOLO: { name: \"Jesolo\" }, SORRENTO: { name: \"Sorrento\" } },\n    attractions: {\n      ARCO_DELLA_PACE: { name: \"Arco della Pace\" },\n      SEMPIONE_PARK: { name: \"Sempione Park\" },\n      MILAN_MALL: { name: \"Galleria Vittorio Emanuele II\" },\n      COLOSSEUM: { name: \"Colosseum\" },\n      TREVI_FOUNTAIN: { name: \"Trevi Fountain\" },\n      VESUVIUS: { name: \"Mount Vesuvius\" },\n      ETNA: { name: \"Mount Etna\" }\n    }\n  },\n  // L\n  LAOS: {\n    name: \"Laos\",\n    cities: {\n      LUANG_PRABANG: { name: \"Luang Prabang\" },\n      VIENTIANE: { name: \"Vientiane\", capital: true }\n    },\n    attractions: {\n      KUANG_SI_FALLS: { name: \"Kuang Si Falls\", highlight: true },\n      ELEPHANT_VILLAGE: { name: \"Elephant Village\" },\n      BUDDHA_PARK: { name: \"Buddha Park\" }\n    }\n  },\n  // N\n  NETHERLANDS: {\n    name: \"Netherlands\",\n    cities: {\n      AMSTERDAM: { name: \"Amsterdam\", capital: true },\n      GRONINGEN: { name: \"Groningen\" }\n    },\n    attractions: {\n      STEDELIJK_MUSEUM: { name: \"Stedelijk Museum Amsterdam\" },\n      SEX_MUSEUM: { name: \"Venustempel Sex Museum\" },\n      GRONINGEN_MUSEUM: { name: \"Groninger Museum\" }\n    }\n  },\n  NORWAY: {\n    name: \"Norway\",\n    cities: { OSLO: { name: \"Oslo\", capital: true } },\n    islands: { HOVEDOYA: { name: \"Hovedøya\" } }\n  },\n  // P\n  PERU: {\n    name: \"Peru\",\n    cities: {\n      AREQUIPA: { name: \"Arequipa\" },\n      CUSCO: { name: \"Cusco\" },\n      LIMA: { name: \"Lima\", capital: true },\n      HUARAZ: { name: \"Huaraz\" }\n    },\n    attractions: {\n      COLCA_CANYON: { name: \"Colca Canyon\" },\n      LAGUNA_69: { name: \"Laguna 69\", highlight: true },\n      JUNGLE_ZIPLINE: {\n        name: \"Santa Teresa Vertikal Zipline\",\n        highlight: true\n      },\n      MACHU_PICCHU: { name: \"Machu Picchu\", highlight: true },\n      HUACACHINA: { name: \"Huacachina Sand Dunes\", highlight: true },\n      HUASCARAN_PARK: { name: \"Huascaran National Park\" },\n      MANU: { name: \"Manú National Park\" },\n      RAINBOW_MOUNTAIN: { name: \"Rainbow Mountain\", highlight: true }\n    },\n    towns: { MANCORA: { name: \"Mancora\" }, PARACAS: { name: \"Paracas\" } },\n    villages: { HUACACHINA: { name: \"Huacachina\" } }\n  },\n  POLAND: {\n    name: \"Poland\",\n    cities: { KRAKOW: { name: \"Kraków\" } },\n    attractions: {\n      AUSCHWITZ_BIRKENAU: { name: \"Auschwitz-Birkenau\", highlight: true },\n      WIELICZKA_SALT_MINE: { name: \"Wieliczka Salt Mine\" }\n    },\n    towns: { WIELICZKA: { name: \"Wieliczka\" } }\n  },\n  PORTUGAL: {\n    name: \"Portugal\",\n    cities: {\n      LISBON: { name: \"Lisbon\", capital: true },\n      PORTIMAO: { name: \"Portimão\" }\n    },\n    attractions: {\n      ZOOMARINE: { name: \"Zoomarine Algarve\" },\n      OCENARIO_DE_LISBOA: {\n        name: \"Lisbon Oceanarium\",\n        foreignName: \"Oceanário de Lisboa\"\n      }\n    },\n    towns: {\n      FERRAGUDO: { name: \"Ferragudo\" },\n      TAVIRA: { name: \"Tavira\" },\n      VILAMOURA: { name: \"Vilamoura\" }\n    }\n  },\n  // S\n  SPAIN: {\n    name: \"Spain\",\n    cities: {\n      BARCELONA: { name: \"Barcelona\" },\n      MADRID: { name: \"Madrid\", capital: true }\n    },\n    attractions: {\n      CIUTADELLA_PARK: { name: \"Ciutadella Park\" },\n      PARK_GUELL: { name: \"Park Güell\", highlight: true },\n      PARQUE_WARNER: { name: \"Parque Warner Madrid\", themePark: true },\n      SIAM_PARK: { name: \"Siam Park\", themePark: true },\n      PORTAVENTURA: { name: \"PortAventura\", themePark: true }\n    },\n    islands: {\n      TENERIFE: { name: \"Tenerife\" },\n      IBIZA: { name: \"Ibiza\" },\n      MINORCA: { name: \"Minorca\" },\n      LANZAROTE: { name: \"Lanzarote\" }\n    }\n  },\n  // T\n  THAILAND: {\n    name: \"Thailand\",\n    cities: {\n      BANGKOK: { name: \"Bangkok\", capital: true },\n      CHIANG_MAI: { name: \"Chiang Mai\" },\n      CHIANG_RAI: { name: \"Chiang Rai\" }\n    },\n    islands: {\n      KOH_PHI_PHI: { name: \"Koh Phi Phi\" },\n      KOH_PHANGAN: { name: \"Koh Phangan\" },\n      KOH_TAO: { name: \"Koh Tao\" }\n    },\n    attractions: {\n      WHITE_TEMPLE: { name: \"Wat Rong Khun\" },\n      MAYA_BAY: { name: \"Maya Bay\" },\n      PAI_CANYON: { name: \"Pai Canyon\", highlight: true },\n      TIGER_KINGDOM: { name: \"Tiger Kingdom\" },\n      GRAND_PALACE: { name: \"Grand Palace Bangkok\", highlight: true },\n      SKY_BAR: { name: \"Sky Bar Bangkok\" }\n    },\n    towns: { KRABI: { name: \"Krabi\" }, PAI: { name: \"Pai\" } }\n  },\n  // U\n  UGANDA: {\n    name: \"Uganda\",\n    cities: { JINJA: { name: \"Jinja\" } },\n    attractions: {\n      RAFTING_NALUBALE: {\n        name: \"River Nile Nalubale Rafting\",\n        highlight: true\n      },\n      NILE_SOURCE: { name: \"Source of the Nile\" }\n    }\n  },\n  UAE: {\n    name: \"United Arab Emirates\",\n    cities: { DUBAI: { name: \"Dubai\" } },\n    attractions: {\n      AQUAVENTURE: { name: \"Aquaventure Waterpark\", themePark: true },\n      BURJ_KHALIFA: { name: \"Burj Khalifa\" }\n    }\n  },\n  UK: {\n    name: \"United Kingdom\",\n    insignificant: true,\n    attractions: {\n      ALTON_TOWERS: {\n        name: \"Alton Towers\",\n        insignificant: true,\n        themePark: true\n      },\n      BLACKPOOL_PLEASURE_BEACH: {\n        name: \"Blackpool Pleasure Beach\",\n        insignificant: true,\n        themePark: true\n      },\n      WINTER_WONDERLAND: {\n        name: \"Winter Wonderland\",\n        insignificant: true,\n        themePark: true\n      },\n      THORPE_PARK: {\n        name: \"Thorpe Park\",\n        insignificant: true,\n        themePark: true\n      },\n      EDEN_PROJECT: { name: \"Eden Project\", insignificant: true },\n      TATE_BRITAIN: { name: \"Tate Britain\", insignificant: true },\n      LONDON_EYE: { name: \"London Eye\", insignificant: true },\n      RICHMOND_PARK: { name: \"Richmond Park\", insignificant: true },\n      SHERWOOD_FOREST: { name: \"Sherwood Forest\", insignificant: true },\n      CALKE_ABBEY: { name: \"Calke Abbey\", insignificant: true },\n      BATTERSEA_PARK: { name: \"Battersea Park\", insignificant: true },\n      CRYSTAL_PALACE_PARK: { name: \"Crystal Palace Park\", insignificant: true },\n      QUEEN_ELIZABETH_OLYMPIC_PARK: {\n        name: \"Queen Elizabeth Olympic Park\",\n        insignificant: true\n      },\n      VICTORIA_PARK: { name: \"Victoria Park\", insignificant: true },\n      GREENWICH_PARK: { name: \"Greenwich Park\", insignificant: true },\n      KEW_GARDENS: { name: \"Kew Gardens\", insignificant: true },\n      EPPING_FOREST: { name: \"Epping Forest\", insignificant: true },\n      HAMPSTEAD_HEATH: { name: \"Hampstead Heath\", insignificant: true },\n      V_A_MUSEUM: {\n        name: \"Victoria and Albert Museum\",\n        insignificant: true\n      },\n      SCIENCE_MUSEUM: { name: \"Science Museum\", insignificant: true },\n      TATE_MODERN: { name: \"Tate Modern\", insignificant: true },\n      NATURAL_HISTORY_MUSEUM: {\n        name: \"Natural History Museum London\",\n        insignificant: true\n      },\n      LAKE_DISTRICT: { name: \"Lake District\" },\n      HADRIANS_WALL: { name: \"Hadrian's Wall\", insignificant: true }\n    },\n    islands: {\n      ANGLESEY: { name: \"Anglesey\", insignificant: true }\n    },\n    cities: {\n      BATH: { name: \"Bath\", insignificant: true },\n      BLACKPOOL: { name: \"Blackpool\", insignificant: true },\n      BRIGHTON: { name: \"Brighton\", insignificant: true },\n      BRISTOL: { name: \"Bristol\", insignificant: true },\n      BIRMINGHAM: { name: \"Birmingham\", insignificant: true },\n      CAMBRIDGE: { name: \"Cambridge\", insignificant: true },\n      COVENTRY: { name: \"Coventry\", insignificant: true },\n      DERBY: { name: \"Derby\", insignificant: true },\n      HULL: { name: \"Hull\", insignificant: true },\n      LEEDS: { name: \"Leeds\", insignificant: true },\n      LEICESTER: { name: \"Leicester\", insignificant: true },\n      LINCOLN: { name: \"Lincoln\", insignificant: true },\n      LONDON: { name: \"London\", insignificant: true },\n      LIVERPOOL: { name: \"Liverpool\", insignificant: true },\n      MANCHESTER: { name: \"Manchester\", insignificant: true },\n      NEWCASTLE: { name: \"Newcastle\", insignificant: true },\n      NORWICH: { name: \"Norwich\", insignificant: true },\n      NOTTINGHAM: { name: \"Nottingham\", insignificant: true },\n      OXFORD: { name: \"Oxford\", insignificant: true },\n      SHEFFIELD: { name: \"Sheffield\", insignificant: true },\n      WOLVERHAMPTON: { name: \"Wolverhampton\", insignificant: true },\n      YORK: { name: \"York\", insignificant: true }\n    },\n    regions: { CORNWALL: { name: \"Cornwall\" } },\n    towns: {\n      DONCASTER: { name: \"Doncaster\", insignificant: true },\n      HARROGATE: { name: \"Harrogate\", insignificant: true },\n      ILKLEY: { name: \"Ilkley\", insignificant: true },\n      MILTON_KEYNES: { name: \"Milton Keynes\", insignificant: true },\n      STRATFORD: { name: \"Stratford-upon-Avon\", insignificant: true },\n      MANSFIELD: { name: \"Mansfield\", insignificant: true },\n      NEWARK: { name: \"Newark\", insignificant: true },\n      NEWQUAY: { name: \"Newquay\", insignificant: true },\n      PADSTOW: { name: \"Padstow\", insignificant: true },\n      TENBY: { name: \"Tenby\", insignificant: true },\n      SCARBOROUGH: { name: \"Scarborough\", insignificant: true }\n    }\n  },\n  USA: {\n    name: \"United States\",\n\n    attractions: {\n      ALCATRAZ_PRISON: {\n        name: \"Alcatraz Federal Penitentiary\",\n        highlight: true\n      },\n      FISHERMANS_WHARF: { name: \"Fisherman's Wharf\" },\n      FARMERS_MARKET: { name: \"Farmers Market\" },\n      HOLLYWOOD_WALK_OF_FAME: { name: \"Hollywood Walk of Fame\" },\n      WHITE_HOUSE: { name: \"White House\" },\n      CAPITOL_BUILDING: { name: \"Capitol Building\" },\n      WASHINGTON_MONUMENT: { name: \"Washington Monument\" },\n      LINCOLN_MEMORIAL: { name: \"Lincoln Memorial\" },\n      TIMES_SQUARE: { name: \"Times Square\" },\n      BROOKLYN_BRIDGE: { name: \"Brooklyn Bridge\" },\n      WORLD_TRADE_CENTER: { name: \"World Trade Center\" },\n      GOLDEN_GATE_BRIDGE: { name: \"Golden Gate Bridge\", highlight: true },\n      CENTRAL_PARK: { name: \"Central Park\", highlight: true },\n      // CLEARWATER_BEACH: { name: \"Clearwater Beach\" },\n      VENICE_BEACH: { name: \"Venice Beach\" },\n      DISNEYLAND_CALIFORNIA_ADVENTURE: {\n        name: \"Disneyland California Adventure\",\n        themePark: true\n      },\n      DISNEY_MGM_STUDIOS: { name: \"Disney-MGM Studios\", themePark: true },\n      DISNEY_ANIMAL_KINGDOM: {\n        name: \"Disney's Animal Kingdom\",\n        themePark: true\n      },\n      DISNEY_EPCOT: { name: \"Epcot\", themePark: true },\n      WET_N_WILD_ORLANDO: { name: \"Wet 'n Wild Orlando\", themePark: true },\n      BLIZZARD_BEACH: { name: \"Blizzard Beach Water Park\", themePark: true },\n      DISNEY_MAGIC_KINGDOM: { name: \"Magic Kingdom Park\", themePark: true },\n      UNIVERSAL_STUDIOS_FLORIDA: {\n        name: \"Universal Studios Florida\",\n        themePark: true\n      },\n      UNIVERSALS_ISLANDS_OF_ADVENTURE: {\n        name: \"Universal's Islands of Adventure\",\n        themePark: true\n      },\n      GRAND_CANYON: { name: \"Grand Canyon\", highlight: true },\n      KNOTTS_BERRY_FARM: { name: \"Knott's Berry Farm\", themePark: true },\n      SEAWORLD_ORLANDO: { name: \"SeaWorld Orlando\", themePark: true },\n      BUSCH_GARDENS_WILLIAMSBURG: {\n        name: \"Busch Gardens Williamsburg\",\n        themePark: true\n      },\n      BUSCH_GARDENS_TAMPA: { name: \"Busch Gardens Tampa\", themePark: true },\n      SIX_FLAGS_AMERICA: { name: \"Six Flags America\", themePark: true },\n      SIX_FLAGS_MAGIC_MOUNTAIN: {\n        name: \"Six Flags Magic Mountain\",\n        themePark: true\n      },\n      SIX_FLAGS_NEW_ENGLAND: { name: \"Six Flags New England\", themePark: true }\n    },\n    cities: {\n      BOSTON_MASSACHUSETTS: { name: \"Boston\" },\n      KEY_WEST,\n      LAS_VEGAS: { name: \"Las Vegas\" },\n      VIRGINIA_BEACH: { name: \"Virginia Beach\" },\n      LOS_ANGELES: { name: \"Los Angeles\" },\n      NEW_YORK_CITY: { name: \"New York City\" },\n      SAN_FRANCISCO: { name: \"San Francisco\" },\n      SPRINGFIELD_MASSACHUSETTS: { name: \"Springfield\" },\n      WASHINGTON_DC: { name: \"Washington DC\", capital: true }\n    },\n    islands: {\n      KEY_WEST,\n      ALCATRAZ: { name: \"Alcatraz\" },\n      MARTHAS_VINEYARD: { name: \"Martha's Vineyard\" }\n    },\n    regions: {\n      CAPE_COD: { name: \"Cape Cod\" },\n      FLORIDA_KEYS: { name: \"Florida Keys\" },\n      ISLAMORADA: { name: \"Islamorada\" }\n    },\n    states: {\n      FLORIDA: { name: \"Florida\" },\n      NEW_YORK: { name: \"New York\" },\n      MASSACHUSETTS: { name: \"Massachusetts\" },\n      VIRGINIA: { name: \"Virginia\" }\n    }\n  }\n};\n","const TABLESPOON: string = \"tbsp\";\n\nexport const SAINSBURYS_SEASONING_COST: IIngredientCost = {\n  quantity: 6,\n  measurement: TABLESPOON,\n  price: 1\n};\n\nexport const MEASUREMENTS: IMeasurements = {\n  // WEIGHT\n  GRAM: \"g\",\n  KILOGRAM: \"kg\",\n\n  // SPOONS\n  TEASPOON: \"tsp\",\n  TABLESPOON,\n\n  // CAPACITY\n  MILLILITRE: \"ml\",\n  LITRE: \"L\",\n\n  // LENGTH\n  CENTIMETRE: \"cm\",\n\n  // COLLOQUIAL\n  CAN: \"can\",\n  SPRIG: \"sprig\",\n  SLICE: \"slice\",\n  JAR: \"jar\",\n  PORTION: \"portion\",\n  SERVING: \"serving\",\n  CHUNK: \"chunk\",\n  SEGMENT: \"segment\",\n  PANCAKE: \"pancake\"\n};\n","export const MUSICIANS: IMusicians = {\n  // 123\n  \"1975\": { name: \"1975, The\" },\n  \"100_GECS\": { name: \"100 gecs\" },\n  // A\n  AURORA: { name: \"Aurora\" },\n  THE_ACADEMY_IS: { name: \"Academy Is..., The\" },\n  ALESSIA_CARA: { name: \"Alessia Cara\" },\n  ALEX_CHAPMAN: { name: \"Alex Chapman\" },\n  ALL_AMERICAN_REJECTS: { name: \"All-American Rejects, The\" },\n  ALLIE_X: { name: \"Allie X\" },\n  ALL_TIME_LOW: { name: \"All Time Low\" },\n  ALMA: { name: \"Alma\" },\n  AMOS_LEE: { name: \"Amos Lee\" },\n  AMY_WINEHOUSE: { name: \"Amy Winehouse\", passedAway: true },\n  ANNA_OF_THE_NORTH: { name: \"Anna of the North\" },\n  ADELE: { name: \"Adele\" },\n  ANASTACIA: { name: \"Anastacia\" },\n  ANNE_MARIE: { name: \"Anne-Marie\" },\n  AQUILO: { name: \"Aquilo\" },\n  ARCTIC_MONKEYS: { name: \"Arctic Monkeys\" },\n  ARIANA_GRANDE: { name: \"Ariana Grande\" },\n  AUDITION: { name: \"Audition, The\" },\n  // B\n  BAAUER: { name: \"Baauer\" },\n  BANANARAMA: { name: \"Bananarama\" },\n  BANKS: { name: \"Banks\" },\n  BASTILLE: { name: \"Bastille\" },\n  BAYNK: { name: \"BAYNK\" },\n  BEARS_DEN: { name: \"Bear's Den\" },\n  BECKY_HILL: { name: \"Becky Hill\" },\n  BEN_HOWARD: { name: \"Ben Howard\" },\n  BETSY: { name: \"Betsy\" },\n  BETTY_WHO: { name: \"Betty Who\" },\n  BEYONCE: { name: \"Beyoncé\" },\n  BICEP: { name: \"Bicep\" },\n  BILLIE_EILISH: { name: \"Billie Eilish\" },\n  BLACK_KIDS: { name: \"Black Kids\" },\n  B_O_B: { name: \"B.o.B\" },\n  BONDAX: { name: \"Bondax\" },\n  BON_IVER: { name: \"Bon Iver\" },\n  BONTAN: { name: \"Bontan\" },\n  BORNS: { name: \"BØRNS\" },\n  BOYS_LIKE_GIRLS: { name: \"Boys Like Girls\" },\n  BLONDE: { name: \"Blonde\" },\n  BREACH: { name: \"Breach\" },\n  BRIGITTE_APHRODITE: { name: \"Brigitte Aphrodite\" },\n  BRITNEY_SPEARS: { name: \"Britney Spears\" },\n  BROODS: { name: \"Broods\" },\n  BULOW: { name: \"bülow\" },\n  // C\n  CAMILA_CABELLO: { name: \"Camila Cabello\" },\n  CARIBOU: { name: \"Caribou\" },\n  CARLY_RAE_JEPSEN: { name: \"Carly Rae Jepsen\" },\n  CARL_COX: { name: \"Carl Cox\" },\n  CAROLINE_POLACHEK: { name: \"Caroline Polachek\" },\n  CELESTE: { name: \"Celeste\" },\n  CHARLI_ADAMS: { name: \"Charli Adams\" },\n  CHARLI_XCX: { name: \"Charli XCX\" },\n  CHARLOTTE_CHURCH: { name: \"Charlotte Church\" },\n  CHELSEA_CUTLER: { name: \"Chelsea Cutler\" },\n  CHEMICAL_BROTHERS: { name: \"Chemical Brothers, The\" },\n  CHERYL: { name: \"Cheryl\" },\n  CHLOE_X_HALLE: { name: \"Chloe x Halle\" },\n  CHRISTINE_AND_THE_QUEENS: { name: \"Christine and the Queens\" },\n  CHRVCHES: { name: \"CHVRCHES\" },\n  CLAIRO: { name: \"Clairo\" },\n  CLEAN_BANDIT: { name: \"Clean Bandit\" },\n  COBRA_STARSHIP: { name: \"Cobra Starship\" },\n  CODE: { name: \"Code, The\" },\n  CRUEL_YOUTH: { name: \"Cruel Youth\", favourite: true },\n  CUTE_IS_WHAT_WE_AIM_FOR: { name: \"Cute Is What We Aim for\" },\n  CYRIL_HAHN: { name: \"Cyril Hahn\" },\n  // D\n  DANIEL_AVERY: { name: \"Daniel Avery\" },\n  DAUGHTER: { name: \"Daughter\" },\n  DAVID_RODIGAN: { name: \"David Rodigan\" },\n  DIPLO: { name: \"Diplo\" },\n  DISCLOSURE: { name: \"Disclosure\" },\n  DIZZEE_RASCAL: { name: \"Dizzee Rascal\" },\n  DRUMS: { name: \"Drums, The\" },\n  DUKE_DUMONT: { name: \"Duke Dumont\" },\n  DUA_LIPA: { name: \"Dua Lipa\" },\n  DUSKY: { name: \"Dusky\" },\n  DYLAN: { name: \"Dylan\" },\n  // E\n  EARTHEATER: { name: \"Eartheater\" },\n  EATS_EVERYTHING: { name: \"Eats Everything\" },\n  ELDERBROOK: { name: \"Elderbrook\" },\n  ELIZA_DOOLITTLE: { name: \"Eliza Doolittle\" },\n  ELLA_EYRE: { name: \"Ella Eyre\" },\n  ELLIE_GOULDING: { name: \"Ellie Goulding\" },\n  EMAROSA: { name: \"Emarosa\" },\n  // F\n  FALL_OUT_BOY: { name: \"Fall Out Boy\" },\n  FKA_TWIGS: { name: \"FKA twigs\" },\n  FLEETWOOD_MAC: { name: \"Fleetwood Mac\" },\n  FLIGHT_FACILITIES: { name: \"Flight Facilities\" },\n  FLORENCE_AND_THE_MACHINE: { name: \"Florence + the Machine\" },\n  FOREVER_THE_SICKEST_KIDS: { name: \"Forever the Sickest Kids\" },\n  FOURS: { name: \"Fours\" },\n  FOUR_TET: { name: \"Four Tet\" },\n  FOXES: { name: \"Foxes\" },\n  FRANCES: { name: \"Frances\" },\n  FRANCIS_AND_THE_LIGHTS: { name: \"Francis and the Lights\" },\n  FRANK_OCEAN: { name: \"Frank Ocean\" },\n  FREYA_RIDINGS: { name: \"Freya Ridings\" },\n  THE_FRIDAY_NIGHT_BOYS: { name: \"Friday Night Boys, The\" },\n  FRIEND_WITHIN: { name: \"Friend Within\" },\n  // G\n  GEORGE_EZRA: { name: \"George Ezra\" },\n  GEORGE_FITZGERALD: { name: \"George FitzGerald\" },\n  GEORGIA: { name: \"Georgia\" },\n  G_FLIP: { name: \"G Flip\" },\n  GLOWIE: { name: \"Glowie\" },\n  GORGON_CITY: { name: \"Gorgon City\" },\n  GRACEY: { name: \"GRACEY\" },\n  GREEN_VELVET: { name: \"Green Velvet\" },\n  GRIMES: { name: \"Grimes\" },\n  GROOVE_ARMADA: { name: \"Groove Armada\" },\n  GRYFFIN: { name: \"Gryffin\" },\n  GYM_CLASS_HEROES: { name: \"Gym Class Heroes\" },\n  // H\n  HAIM: { name: \"HAIM\" },\n  HALSEY: { name: \"Halsey\" },\n  HANNAH_WANTS: { name: \"Hannah Wants\" },\n  HAUX: { name: \"Haux\" },\n  HEIDI: { name: \"Heidi\" },\n  HEY_MONDAY: { name: \"Hey Monday\" },\n  HOLLY_HUMBERSTONE: { name: \"Holly Humberstone\" },\n  HORSE_MEAT_DISCO: { name: \"Horse Meat Disco\" },\n  // I\n  INCOGNITO: { name: \"Incognito\" },\n  // J\n  JAMES_BAY: { name: \"James Bay\" },\n  JAMES_BLAKE: { name: \"James Blake\" },\n  JAMIE_JONES: { name: \"Jamie Jones\" },\n  JAMIE_T: { name: \"Jamie T\" },\n  JAMIE_XX: { name: \"Jamie xx\" },\n  JAX_JONES: { name: \"Jax Jones\" },\n  JAY_Z: { name: \"JAY Z\" },\n  JEREMY_ZUCKER: { name: \"Jeremy Zucker\" },\n  JESS_GLYNNE: { name: \"Jess Glynne\" },\n  JESSIE_WARE: { name: \"Jessie Ware\" },\n  JOE_GODDARD: { name: \"Joe Goddard\" },\n  JOHNNY_MARR: { name: \"Johnny Marr\" },\n  JONAS_BLUE: { name: \"Jonas Blue\" },\n  JONES: { name: \"Jones\" },\n  JON_HOPKINS: { name: \"Jon Hopkins\" },\n  JORIS_VOORN: { name: \"Joris Voorn\" },\n  JORJA_SMITH: { name: \"Jorja Smith\" },\n  JOSH_BUTLER: { name: \"Josh Butler\" },\n  JOY_ORBISON: { name: \"Joy Orbison\" },\n  JOSEF_SALVAT: { name: \"Josef Salvat\" },\n  JULIA_MICHAELS: { name: \"Julia Michaels\" },\n  JULIO_BASHMORE: { name: \"Julio Bashmore\" },\n  JUSTIN_BIEBER: { name: \"Justin Bieber\" },\n  JUSTIN_MARTIN: { name: \"Justin Martin\" },\n  // K\n  KAH_LO: { name: \"Kah-Lo\" },\n  KANYE_WEST: { name: \"Kanye West\" },\n  KATE_NASH: { name: \"Kate Nash\" },\n  KATY_PERRY: { name: \"Katy Perry\" },\n  KAYTRANADA: { name: \"Kaytranada\" },\n  KESHA: { name: \"Kesha\" },\n  KIASMOS: { name: \"Kiasmos\" },\n  KIDNAP: { name: \"Kidnap\" },\n  KIDS_IN_GLASS_HOUSES: { name: \"Kids In Glass Houses\" },\n  THE_KILLERS: { name: \"Killers, The\" },\n  KIM_PETRAS: { name: \"Kim Petras\" },\n  KOLSCH: { name: \"Kölsch\" },\n  KYGO: { name: \"Kygo\" },\n  // L\n  LADY_GAGA: { name: \"Lady Gaga\" },\n  LADY_STARLIGHT: { name: \"Lady Starlight\" },\n  LANA_DEL_REY: { name: \"Lana Del Rey\", favourite: true },\n  LANE_8: { name: \"Lane 8\" },\n  LANY: { name: \"LANY\" },\n  LA_ROUX: { name: \"La Roux\" },\n  LAUV: { name: \"Lauv\" },\n  L_DEVINE: { name: \"L Devine\" },\n  LELAND: { name: \"Leland\" },\n  LENNON_STELLA: { name: \"Lennon Stella\" },\n  LEON: { name: \"LÉON\" },\n  LILY_ALLEN: { name: \"Lily Allen\" },\n  LISSIE: { name: \"Lissie\" },\n  LITTLE_COMETS: { name: \"Little Comets\" },\n  LITTLE_DRAGON: { name: \"Little Dragon\" },\n  LONDON_GRAMMAR: { name: \"London Grammar\" },\n  LORDE: { name: \"Lorde\" },\n  LUCY_ROSE: { name: \"Lucy Rose\" },\n  LYKKE_LI: { name: \"Lykke Li\" },\n  LYVES: { name: \"Lyves\" },\n  // M\n  MACEO_PLEX: { name: \"Maceo Plex\" },\n  MALLRAT: { name: \"Mallrat\" },\n  MAGGIE_ROGERS: { name: \"Maggie Rogers\" },\n  THE_MAINE: { name: \"Maine, The\" },\n  MAJOR_LAZER: { name: \"Major Lazer\" },\n  MARY_J_BLIGE: { name: \"Mary J. Blige\" },\n  MARINA: { name: \"MARINA\" },\n  MARTIN_SOLVEIG: { name: \"Martin Solveig\" },\n  MELANIE_MARTINEZ: { name: \"Melanie Martinez\" },\n  METRO_STATION: { name: \"Metro Station\" },\n  MICHAEL_KIWANUKA: { name: \"Michael Kiwanuka\" },\n  MIDLAND: { name: \"Midland\" },\n  MIGUEL: { name: \"Miguel\" },\n  MIKE_POSNER: { name: \"Mike Posner\" },\n  MILEY_CYRUS: { name: \"Miley Cyrus\" },\n  MISHA_B: { name: \"Misha B\" },\n  M_0: { name: \"M.O\" },\n  MK: { name: \"MK\" },\n  MNEK: { name: \"MNEK\" },\n  MO: { name: \"MØ\" },\n  MUNA: { name: \"MUNA\" },\n  MURA_MASA: { name: \"Mura Masa\" },\n  // N\n  NAAZ: { name: \"Naaz\" },\n  NAO: { name: \"Nao\" },\n  NASTY_CHERRY: { name: \"Nasty Cherry\" },\n  NATASHA_BEDINGFIELD: { name: \"Natasha Bedingfield\" },\n  NAVVY: { name: \"Navvy\" },\n  NICKI_MINAJ: { name: \"Nicki Minaj\" },\n  NOEL_GALLAGHERS_HIGH_FLYING_BIRDS: {\n    name: \"Noel Gallagher's High Flying Birds\"\n  },\n  // O\n  OH_ANNIE_OH: { name: \"Oh Annie Oh\" },\n  OKAYWILL: { name: \"okaywill\" },\n  // P\n  PALE_WAVES: { name: \"Pale Waves\" },\n  PALOMA_FAITH: { name: \"Paloma Faith\" },\n  PANIC_AT_THE_DISCO: { name: \"Panic! At the Disco\" },\n  PARAMORE: { name: \"Paramore\" },\n  PAUL_WOOLFORD: { name: \"Paul Woolford\" },\n  PET_SHOP_BOYS: { name: \"Pet Shop Boys\" },\n  PHILIP_GEORGE: { name: \"Philip George\" },\n  PRETENDERS: { name: \"Pretenders\" },\n  PVRIS: { name: \"PVRIS\" },\n  // R\n  RAINBOW_KITTEN_SURPRISE: { name: \"Rainbow Kitten Surprise\" },\n  RALEIGH_RITCHIE: { name: \"Raleigh Ritchie\" },\n  RALPH: { name: \"Ralph\" },\n  REDLIGHT: { name: \"Redlight\" },\n  RIHANNA: { name: \"Rihanna\" },\n  RINA_SAWAYAMA: { name: \"Rina Sawayama\" },\n  RITON: { name: \"Riton\" },\n  RIXTON: { name: \"Rixton\" },\n  ROBINSON: { name: \"Robinson\" },\n  ROBYN: { name: \"Robyn\" },\n  ROMY: { name: \"Romy\" },\n  ROOSEVELT: { name: \"Roosevelt\" },\n  ROUTE_94: { name: \"Route 94\" },\n  RYN_WEAVER: { name: \"Ryn Weaver\", favourite: true },\n  RUDIMENTAL: { name: \"Rudimental\" },\n  RUFUS_DU_SOL: { name: \"RÜFÜS DU SOL\" },\n  RYAN_BEATTY: { name: \"Ryan Beatty\" },\n  // S\n  SABRINA_CLAUDIO: { name: \"Sabrina Claudio\" },\n  SAINT_JHN: { name: \"SAINt JHN\" },\n  SAM_SMITH: { name: \"Sam Smith\" },\n  SASHA_SLOAN: { name: \"Sasha Sloan\" },\n  SBTRKT: { name: \"SBTRKT\" },\n  SEEB: { name: \"Seeb\" },\n  SEGA_BODEGA: { name: \"Sega Bodega\" },\n  SEINABO_SEY: { name: \"Seinabo Sey\" },\n  SEVDALIZA: { name: \"Sevdaliza\" },\n  SIA: { name: \"Sia\" },\n  SIGRID: { name: \"Sigrid\" },\n  SISTER_SLEDGE: { name: \"Sister Sledge\" },\n  SKY_FERREIRA: { name: \"Sky Ferreira\", favourite: true },\n  SLIIMY: { name: \"Sliimy\" },\n  SOFI_TUKKER: { name: \"Sofi Tukker\" },\n  SOAK: { name: \"SOAK\" },\n  SONIKKU: { name: \"SONIKKU\" },\n  SOPHIE: { name: \"SOPHIE\" },\n  SOPHIE_ELLIS_BEXTOR: { name: \"Sophie Ellis-Bextor\" },\n  SOUL_WAX: { name: \"Soul Wax\" },\n  THE_SMYTHS: { name: \"Smyths, The\" },\n  THE_SPILL_CANVAS: { name: \"Spill Canvas, The\" },\n  SKREAM: { name: \"Skream\" },\n  SUFJAN_STEVENS: { name: \"Sufjan Stevens\" },\n  SUNDAY_GIRL: { name: \"Sunday Girl\" },\n  // T\n  TAYLOR_SWIFT: { name: \"Taylor Swift\" },\n  TENSNAKE: { name: \"Tensnake\" },\n  TEN_WALLS: { name: \"Ten Walls\" },\n  TERROR_JR: { name: \"Terror Jr\" },\n  TOM_ODELL: { name: \"Tom Odell\" },\n  TORI_KELLY: { name: \"Tori Kelly\" },\n  TOURIST: { name: \"Tourist\" },\n  TOVE_LO: { name: \"Tove Lo\" },\n  TROYE_SIVAN: { name: \"Troye Sivan\" },\n  TULISA: { name: \"Tulisa\" },\n  TWENTY_ONE_PILOTS: { name: \"Twenty One Pilots\" },\n  TWO_FEET: { name: \"Two Feet\" },\n  TYGA: { name: \"Tyga\" },\n  // V\n  VERITE: { name: \"VÉRITÉ\" },\n  // W\n  WE_THE_KINGS: { name: \"We the Kings\" },\n  WILL_YOUNG: { name: \"Will Young\" },\n  // X\n  THE_XX: { name: \"xx, The\" },\n  // Y\n  YEARS_AND_YEARS: { name: \"Years & Years\" },\n  YOU_ME_AT_SIX: { name: \"You Me At Six\" },\n  YOUSEF: { name: \"Yousef\" },\n  // Z\n  ZARA_LARSSON: { name: \"Zara Larsson\" }\n};\n","const MUSIC_VENUES_LONDON: IMusicVenues = {\n  // A\n  ALEXANDRA_PALACE: { name: \"Alexandra Palace\" },\n  ALEXANDRA_PALACE_THEATRE: {\n    name: \"Alexandra Palace Theatre\",\n    favourite: true\n  },\n  // B\n  BRIXTON_ACADEMY: { name: \"Brixton Academy\", favourite: true },\n  BROCKWELL_PARK: { name: \"Brockwell Park\" },\n  // C\n  CAMDEN_ASSEMBLY: { name: \"Camden Assembly\" },\n  CORSICA_STUDIOS: { name: \"Corsica Studios\" },\n  COURTYARD_THEATRE: { name: \"Courtyard Theatre\" },\n  // D\n  DINGWALLS: { name: \"Dingwalls\" },\n  THE_GARAGE: { name: \"Garage, The\" },\n  // E\n  EARTH: { name: \"EartH\" },\n  EGG: { name: \"Egg\" },\n  ELECTRIC_BRIXTON: { name: \"Electric Brixton\" },\n  ELECTROWERKZ: { name: \"Electrowerkz\" },\n  // F\n  FABRIC: { name: \"Fabric\" },\n  FINSBURY_PARK: { name: \"Finsbury Park\" },\n  // H\n  HAMMERSMITH_APOLLO: { name: \"Hammersmith Apollo\" },\n  HEAVEN: { name: \"Heaven\" },\n  HOXTON_HALL: { name: \"Hoxton Hall\" },\n  HOXTON_SQUARE_BAR_AND_KITCHEN: { name: \"Hoxton Square Bar & Kitchen\" },\n  // I\n  ISLINGTON_ASSEMBLY_HALL: { name: \"Islington Assembly Hall\", favourite: true },\n  // K\n  KENTISH_TOWN_FORUM: { name: \"Kentish Town Forum\" },\n  KOKO: { name: \"Koko\", favourite: true },\n  // L\n  LAFAYETTE: { name: \"Lafayette\" },\n  LAYLOW: { name: \"Laylow\" },\n  LONDON_STADIUM: { name: \"London Stadium\" },\n  // M\n  MINISTRY_OF_SOUND: { name: \"Ministry of Sound\" },\n  MOTH_CLUB: { name: \"Moth Club\", favourite: true },\n  // O\n  OLD_BLUE_LAST: { name: \"Old Blue Last\", favourite: true },\n  OMEARA: { name: \"Omeara\" },\n  OSLO_HACKNEY: { name: \"Oslo Hackney\" },\n  OVAL_SPACE: { name: \"Oval Space\" },\n  THE_O2: { name: \"O2, The\" },\n  // P\n  PRINTWORKS: { name: \"Printworks\", favourite: true },\n  // Q\n  QUEEN_OF_HOXTON: { name: \"Queen of Hoxton\" },\n  // R\n  RIDGEWAY_PARK: { name: \"Ridgeway Park\" },\n  ROUNDHOUSE: { name: \"Roundhouse\", favourite: true },\n  ROYAL_ALBERT_HALL: { name: \"Royal Albert Hall\", favourite: true },\n  ROYAL_FESTIVAL_HALL: { name: \"Royal Festival Hall\", favourite: true },\n  // S\n  SCALA: { name: \"Scala\" },\n  SERVANT_JAZZ_QUARTERS: { name: \"Servant Jazz Quarters\" },\n  SHEPHERDS_BUSH_EMPIRE: { name: \"Shepherd's Bush Empire\" },\n  ST_GILES_IN_THE_FIELD: { name: \"St Giles-in-the-Fields\" },\n  // T\n  TOTTENHAM_HOTSPUR_STADIUM: { name: \"Tottenham Hotspur Stadium\" },\n  TWICKENHAM_STADIUM: { name: \"Twickenham Stadium\" },\n  TROXY: { name: \"Troxy\" },\n  // V\n  VICTORIA_PARK: { name: \"Victoria Park\" },\n  VILLAGE_UNDERGROUND: { name: \"Village Underground\" },\n  // W\n  WEMBLEY_STADIUM: { name: \"Wembley Stadium\" },\n  // X\n  XOYO: { name: \"XOYO\" },\n  // Z\n  ZIGFRID_VON_UNDERBELLY: { name: \"Zigfrid von Underbelly\" }\n};\n\nconst MUSIC_VENUES_BIRMINGHAM: IMusicVenues = {\n  // A\n  ACADEMY_BIRMINGHAM: { name: \"Birmingham Academy\" },\n  ACADEMY_2_BIRMINGHAM: { name: \"Birmingham Academy 2\" },\n  ALEXANDRA_THEATRE: { name: \"Alexandra Theatre\" },\n  // B\n  BARFLY_BIRMINGHAM: { name: \"Birmingham Barfly\" },\n  // I\n  INSTITUTE_BIRMINGHAM: { name: \"Birmingham Institute\" },\n  // N\n  NEC_ARENA_BIRMINGHAM: { name: \"Birmingham NEC Arena\" },\n  NIA_ARENA_BIRMINGHAM: { name: \"Birmingham NIA Arena\" }\n};\n\nconst MUSIC_VENUES_NOTTINGHAM: IMusicVenues = {\n  // B\n  BODEGA: { name: \"Bodega\" },\n  ARENA_NOTTINGHAM: { name: \"Nottingham Arena\" },\n  // R\n  RESCUE_ROOMS: { name: \"Rescue Rooms\" },\n  ROCK_CITY: { name: \"Rock City\" },\n  // T\n  TRENT_UNIVERSITY_NOTTINGHAM: { name: \"Nottingham Trent University\" }\n};\n\nconst MUSIC_VENUES_MANCHESTER: IMusicVenues = {\n  // A\n  ACADEMY_MANCHESTER: { name: \"Manchester Academy\" },\n  ACADEMY_2_MANCHESTER: { name: \"Manchester Academy 2\" },\n  ALBERT_HALL_MANCHESTER: { name: \"Manchester Albert Hall\", favourite: true },\n  APOLLO_MANCHESTER: { name: \"Manchester Apollo\" },\n  ARENA_MANCHESTER: { name: \"Manchester Arena\" },\n  // C\n  CASTLEFIELD_BOWL: { name: \"Castlefield Bowl\" },\n  // D\n  DEAF_INSTITUTE: { name: \"Deaf Institute\" },\n  // G\n  GORILLA: { name: \"Gorilla\" },\n  // H\n  HEATON_PARK: { name: \"Heaton Park\" },\n  // R\n  MAYFIELD_DEPOT: { name: \"Mayfield Depot\" },\n  // R\n  RITZ_MANCHESTER: { name: \"Manchester Ritz\" },\n  RUBY_LOUNGE: { name: \"Ruby Lounge\" },\n  // S\n  SANKEYS: { name: \"Sankeys\" },\n  STORE_STREET: { name: \"Store Street\" }\n};\n\nconst MUSIC_VENUES_ELSEWHERE: IMusicVenues = {\n  // C\n  COCKPIT_LEEDS: { name: \"The Cockpit Leeds\" },\n  // D\n  DE_MONTFORT_HALL: { name: \"Leicester De Montfort Hall\" },\n  // E\n  ENGINE_SHED: { name: \"Lincoln Engine Shed\" },\n  // I\n  IFEMA_MADRID: { name: \"IFEMA\" },\n  // L\n  LULWORTH_ESTATE: { name: \"Lulworth Estate\" },\n  // M\n  MOTION: { name: \"Motion\" },\n  // P\n  PRESTON_PARK: { name: \"Preston Park\" },\n  // S\n  SCHWUZ: { name: \"SchwuZ Berlin\", insignificant: true },\n  SHEFFIELD_ARENA: { name: \"Sheffield Arena\" },\n  // T\n  TRESOR: { name: \"Tresor Berlin\", insignificant: true },\n  // W\n  WESTON_PARK: { name: \"Weston Park\" },\n  WOLVERHAMPTON_CIVIC_HALL: { name: \"Wolverhampton Civic Hall\" },\n  WORTHY_FARM: { name: \"Worthy Farm\", favourite: true }\n};\n\nexport const MUSIC_VENUES: IMusicVenues = {\n  ...MUSIC_VENUES_LONDON,\n  ...MUSIC_VENUES_MANCHESTER,\n  ...MUSIC_VENUES_NOTTINGHAM,\n  ...MUSIC_VENUES_BIRMINGHAM,\n  ...MUSIC_VENUES_ELSEWHERE\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FLOUR: IInventoryIngredients = {\n  CORNFLOUR: {\n    displayText: \"cornflour\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.3 }\n  },\n  FLOUR_PLAIN: {\n    displayText: \"plain flour\",\n    cost: { quantity: 1.5, measurement: MEASUREMENTS.KILOGRAM, price: 0.75 }\n  },\n  FLOUR_SELF_RAISING: {\n    displayText: \"self-raising flour\",\n    cost: { quantity: 1.5, measurement: MEASUREMENTS.KILOGRAM, price: 0.75 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SUGAR: IInventoryIngredients = {\n  SUGAR_BROWN: {\n    displayText: \"brown sugar (light or dark)\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  SUGAR_BROWN_DARK: {\n    displayText: \"dark brown sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  SUGAR_BROWN_LIGHT: {\n    displayText: \"light brown sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  SUGAR_CASTER_GOLDEN: {\n    displayText: \"golden caster sugar\",\n    cost: { quantity: 1000, measurement: MEASUREMENTS.GRAM, price: 1.9 }\n  },\n  SUGAR_DEMERARA: {\n    displayText: \"demerara sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  SUGAR_GRANULATED: {\n    displayText: \"granulated sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.55 }\n  },\n  SUGAR_ICING: {\n    displayText: \"icing sugar\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SYRUPS: IInventoryIngredients = {\n  LEMON_EXTRACT: {\n    displayText: \"lemon extract\",\n    cost: { quantity: 38, measurement: MEASUREMENTS.MILLILITRE, price: 1.5 }\n  },\n  NECTAR_AGAVE: {\n    displayText: \"agave nectar\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.MILLILITRE, price: 4 }\n  },\n  SYRUP_GOLDEN: {\n    displayText: \"golden syrup\",\n    cost: { quantity: 600, measurement: MEASUREMENTS.GRAM, price: 1.9 }\n  },\n  VANILLA_EXTRACT: {\n    displayText: \"vanilla extract\",\n    cost: { quantity: 35, measurement: MEASUREMENTS.MILLILITRE, price: 1.3 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nimport { FLOUR } from \"./flour\";\nimport { SUGAR } from \"./sugar\";\nimport { SYRUPS } from \"./syrups\";\n\nexport const BAKING: IInventoryIngredients = {\n  ...FLOUR,\n  ...SUGAR,\n  ...SYRUPS,\n\n  BAKING_POWDER: {\n    displayText: \"baking powder\",\n    cost: { quantity: 170, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  BICARBONATE_OF_SODA: {\n    displayText: \"bicarbonate of soda\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1.4 }\n  },\n  CHOCOLATE_DARK: {\n    displayText: \"dark chocolate\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 1.7 }\n  },\n  COCOA_POWDER: {\n    displayText: \"cocoa powder\",\n    cost: { quantity: 190, measurement: MEASUREMENTS.GRAM, price: 2.75 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const PASTA: IInventoryIngredients = {\n  SPAGHETTI: {\n    displayText: \"spaghetti\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.6 }\n  },\n  PASTA: { displayText: \"pasta\" },\n  PASTA_LASAGNE_SHEET_DRIED: {\n    displayText: \"dried lasagne sheet\",\n    cost: { quantity: 20, price: 0.7 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const RICE: IInventoryIngredients = {\n  RICE: { displayText: \"rice\" },\n  RICE_BASMATI: {\n    displayText: \"basmati rice\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.1 }\n  },\n  RICE_BROWN: {\n    displayText: \"brown rice\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.85 }\n  },\n  RICE_RISOTTO_ARBORIO: {\n    displayText: \"arborio risotto rice\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.25 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const GRAINS: IInventoryIngredients = {\n  OATS: {\n    displayText: \"oats\",\n    cost: { quantity: 2000, measurement: MEASUREMENTS.GRAM, price: 3 }\n  }\n};\n","import { BREAD } from \"./bread\";\nimport { PASTA } from \"./pasta\";\nimport { RICE } from \"./rice\";\nimport { GRAINS } from \"./grains\";\n\nexport const CARBS: IInventoryIngredients = {\n  ...BREAD,\n  ...PASTA,\n  ...RICE,\n  ...GRAINS,\n\n  POPPADOMS: { displayText: \"poppadoms\" }\n};\n","export const BREAD: IInventoryIngredients = {\n  BREAD_GARLIC: { displayText: \"garlic bread\" },\n  BREAD_SOURDOUGH: { displayText: \"sourdough\" },\n  BREAD_SOURDOUGH_DARK: { displayText: \"dark sourdough\" }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const MILK: IInventoryIngredients = {\n  MILK_COCONUT_CANNED: {\n    displayText: \"coconut milk\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 1 }\n  },\n  MILK_ALMOND_UNSWEETENED: {\n    displayText: \"unsweetened almond milk\",\n    cost: { quantity: 750, measurement: MEASUREMENTS.MILLILITRE, price: 2 }\n  },\n  MILK_OAT: {\n    displayText: \"Oatly\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.LITRE, price: 1.8 }\n  },\n  MILK: {\n    displayText: \"milk\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.LITRE, price: 1 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nimport { MILK } from \"./milk\";\n\nexport const DAIRY: IInventoryIngredients = {\n  ...MILK,\n\n  BUTTER_VEGAN: {\n    displayText: \"dairy-free buttery spread\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  CREAM_OAT: {\n    displayText: \"oat cream\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.MILLILITRE, price: 0.95 }\n  },\n  CHEESE_VEGAN_SLICE: {\n    displayText: \"vegan cheese slices\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 2.6 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FRUIT_DRIED: IInventoryIngredients = {\n  APRICOTS_DRIED: {\n    displayText: \"dried apricots\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 2.7 }\n  },\n  BLUEBERRIES_DRIED: {\n    displayText: \"dried blueberries\",\n    cost: { quantity: 75, measurement: MEASUREMENTS.GRAM, price: 2.25 }\n  },\n  CRANBERRIES_DRIED: {\n    displayText: \"dried cranberries\",\n    cost: { quantity: 75, measurement: MEASUREMENTS.GRAM, price: 1.15 }\n  },\n  RAISINS: {\n    displayText: \"raisins\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.8 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FRUIT_FRESH: IInventoryIngredients = {\n  APPLE_BRAMLEY: {\n    displayText: \"Bramley apple\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.KILOGRAM, price: 2 }\n  },\n  BANANA: {\n    displayText: \"banana\",\n    cost: { quantity: 1, price: 0.2 }\n  },\n  BLACKBERRIES_FRESH: {\n    displayText: \"fresh blackberries\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  },\n  BLUEBERRIES_FRESH: {\n    displayText: \"fresh blueberries\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  LEMON: {\n    displayText: \"lemon\",\n    cost: { quantity: 1, price: 0.3 }\n  },\n  LEMON_LARGE: {\n    displayText: \"large lemon\",\n    cost: { quantity: 1, price: 0.4 }\n  },\n  LIME: {\n    displayText: \"lime\",\n    cost: { quantity: 1, price: 0.3 }\n  },\n  PINEAPPLE: {\n    displayText: \"pineapple\",\n    cost: { quantity: 1, price: 1.1 }\n  },\n  RASPBERRIES_FRESH: {\n    displayText: \"fresh raspberries\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const FRUIT_FROZEN: IInventoryIngredients = {\n  BLACKBERRIES_FROZEN: {\n    displayText: \"frozen blackberries\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  RASPBERRIES_FROZEN: {\n    displayText: \"frozen raspberries\",\n    cost: { quantity: 350, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const JUICE = {\n  LEMON_JUICE: {\n    displayText: \"lemon juice\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.MILLILITRE, price: 0.7 }\n  },\n  LEMON_JUICE_FRESH: {\n    displayText: \"fresh lemon juice\",\n    cost: { quantity: 3, measurement: MEASUREMENTS.TABLESPOON, price: 0.3 }\n  },\n  LIME_JUICE_FRESH: {\n    displayText: \"fresh lime juice\",\n    cost: { quantity: 3, measurement: MEASUREMENTS.TABLESPOON, price: 0.5 }\n  }\n};\n","import { FRUIT_DRIED } from \"./dried-fruit\";\nimport { FRUIT_FRESH } from \"./fresh-fruit\";\nimport { FRUIT_FROZEN } from \"./frozen-fruit\";\nimport { JUICE } from \"./juice\";\n\nexport const FRUIT = {\n  ...FRUIT_DRIED,\n  ...FRUIT_FRESH,\n  ...FRUIT_FROZEN,\n  ...JUICE\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const HERBS_DRIED: IInventoryIngredients = {\n  BASIL_DRIED: {\n    displayText: \"dried basil\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  },\n  HERBS_MIXED_DRIED: {\n    displayText: \"dried mixed herbs\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 0.75 }\n  },\n  OREGANO_DRIED: {\n    displayText: \"dried oregano\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  },\n  ROSEMARY_DRIED: {\n    displayText: \"dried rosemary\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  },\n  THYME_DRIED: {\n    displayText: \"dried thyme\",\n    cost: { quantity: 6, measurement: MEASUREMENTS.TABLESPOON, price: 1 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const HERBS_FRESH: IInventoryIngredients = {\n  BASIL_FRESH: {\n    displayText: \"fresh basil\",\n    cost: {\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM,\n      price: 0.75,\n      payFullAmountAlways: true\n    }\n  },\n  CORIANDER_FRESH: {\n    displayText: \"fresh coriander\",\n    cost: {\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM,\n      price: 0.75,\n      payFullAmountAlways: true\n    }\n  },\n  PARSLEY_FRESH: {\n    displayText: \"fresh parsley\",\n    cost: {\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM,\n      price: 0.75,\n      payFullAmountAlways: true\n    }\n  },\n  SAGE_FRESH: {\n    displayText: \"fresh sage\"\n  }\n};\n","import { HERBS_DRIED } from \"./dried-herbs\";\nimport { HERBS_FRESH } from \"./fresh-herbs\";\n\nexport const HERBS: IInventoryIngredients = { ...HERBS_DRIED, ...HERBS_FRESH };\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const BEANS: IInventoryIngredients = {\n  BEANS_BAKED: { displayText: \"baked beans\" },\n  BEANS_HARICOT: {\n    displayText: \"haricot beans\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 0.55 }\n  },\n  BEANS_KIDNEY: {\n    displayText: \"kidney beans\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 0.55 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SEITAN: IInventoryIngredients = {\n  GLUTEN_WHEAT_VITAL: {\n    displayText: \"vital wheat gluten\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.99 }\n  },\n  SEITAN: { displayText: \"seitan\" }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nimport { BEANS } from \"./beans\";\nimport { SEITAN } from \"./seitan\";\n\nexport const PROTEIN: IInventoryIngredients = {\n  ...BEANS,\n  ...SEITAN,\n\n  CHICKPEAS: {\n    displayText: \"chickpeas\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 1 }\n  },\n  EGGS: { displayText: \"egg\", cost: { quantity: 6, price: 2.1 } },\n  LENTIL_RED_DRY: {\n    displayText: \"dry red lentils\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 1.15 }\n  },\n  TOFU: {\n    displayText: \"tofu\",\n    cost: { quantity: 280, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS, SAINSBURYS_SEASONING_COST } from \"../../measurements\";\n\nexport const DRIED_SEASONING: IInventoryIngredients = {\n  PAPRIKA: {\n    displayText: \"paprika\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  ONION_POWDER: {\n    displayText: \"onion powder\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  GARLIC_GRANULES: {\n    displayText: \"garlic granules\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  PAPRIKA_SMOKED: {\n    displayText: \"smoked paprika\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  TURMERIC_GROUND: {\n    displayText: \"ground turmeric\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  ALLSPICE_GROUND: {\n    displayText: \"ground allspice\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  CHILLI_POWDER: {\n    displayText: \"chilli powder\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  CINNAMON_GROUND: {\n    displayText: \"ground cinnamon\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  CHILLI_CRUSHED_DRIED: {\n    displayText: \"dried crushed chillis\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  NUTMEG_GROUND: {\n    displayText: \"ground nutmeg\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  YEAST_NUTRITIONAL: {\n    displayText: \"nutritional yeast flakes\",\n    cost: { quantity: 125, measurement: MEASUREMENTS.GRAM, price: 3.4 }\n  },\n  STOCK_POWDER_VEGAN: {\n    displayText: \"vegan stock powder\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const OILS: IInventoryIngredients = {\n  OIL_OLIVE: {\n    displayText: \"olive oil\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.MILLILITRE, price: 3 }\n  },\n  OIL_SUNFLOWER: {\n    displayText: \"sunflower oil\",\n    cost: { quantity: 1000, measurement: MEASUREMENTS.MILLILITRE, price: 1.2 }\n  }\n};\n","export const UNICODE: { [character: string]: string } = {\n  // INGREDIENTS\n  JALAPENOS: \"jalape\\u00f1os\",\n  TOMATO_PUREE: \"tomato pur\\u00e9e\",\n\n  // FRACTIONS\n  QUARTER: \"\\u00bc\",\n  THIRD: \"\\u2153\",\n  HALF: \"\\u00bd\",\n  TWO_THIRDS: \"\\u2154\",\n  THREE_QUARTERS: \"\\u00be\",\n\n  // MISC\n  DEGREES_CELCIUS: \"\\u00b0C\"\n};\n","import { MEASUREMENTS } from \"../../measurements\";\nimport { UNICODE } from \"../../unicode\";\n\nexport const PASTES: IInventoryIngredients = {\n  CURRY_PASTE_MADRAS: {\n    displayText: \"Madras curry paste\",\n    cost: { quantity: 283, measurement: MEASUREMENTS.GRAM, price: 2.25 }\n  },\n  CURRY_PASTE_ROGAN_JOSH: {\n    displayText: \"Rogan Josh curry paste\",\n    cost: { quantity: 283, measurement: MEASUREMENTS.GRAM, price: 2.3 }\n  },\n  TOMATO_PUREE: {\n    displayText: UNICODE.TOMATO_PUREE,\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 0.5 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SALT: IInventoryIngredients = {\n  SALT_BLACK: {\n    displayText: \"black salt (kala namak)\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 2.9 }\n  },\n  SALT_TABLE: {\n    displayText: \"table salt\",\n    cost: { price: 0 }\n  },\n  SALT_ROCK_FRESH: {\n    displayText: \"freshly ground rock salt\",\n    cost: { price: 0 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SAUCES: IInventoryIngredients = {\n  LIQUID_SMOKE: {\n    displayText: \"liquid smoke\",\n    cost: { quantity: 475, measurement: MEASUREMENTS.MILLILITRE, price: 6.7 }\n  },\n  SOY_SAUCE: {\n    displayText: \"soy sauce\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.MILLILITRE, price: 0.7 }\n  },\n  KETCHUP_TOMATO: {\n    displayText: \"tomato ketchup\",\n    cost: { quantity: 570, measurement: MEASUREMENTS.GRAM, price: 2 }\n  },\n  SRIRACHA: {\n    displayText: \"sriracha\",\n    cost: { quantity: 455, measurement: MEASUREMENTS.MILLILITRE, price: 3.1 }\n  },\n  SWEET_CHILLI_SAUCE: {\n    displayText: \"sweet chilli sauce\",\n    cost: { quantity: 230, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VINEGARS: IInventoryIngredients = {\n  VINEGAR_BALSAMIC: {\n    displayText: \"balsamic vinegar\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.MILLILITRE, price: 2 }\n  },\n  VINEGAR_CIDER: {\n    displayText: \"cider vinegar\",\n    cost: { quantity: 350, measurement: MEASUREMENTS.MILLILITRE, price: 1.6 }\n  },\n  VINEGAR_WHITE_WINE: {\n    displayText: \"white wine vinegar\",\n    cost: { quantity: 350, measurement: MEASUREMENTS.MILLILITRE, price: 1.6 }\n  }\n};\n","import { MEASUREMENTS, SAINSBURYS_SEASONING_COST } from \"../../measurements\";\n\nimport { DRIED_SEASONING } from \"./dried-seasoning\";\nimport { OILS } from \"./oils\";\nimport { PASTES } from \"./pastes\";\nimport { SALT } from \"./salt\";\nimport { SAUCES } from \"./sauces\";\nimport { VINEGARS } from \"./vinegars\";\n\nexport const SEASONING: IInventoryIngredients = {\n  ...DRIED_SEASONING,\n  ...OILS,\n  ...PASTES,\n  ...SALT,\n  ...SAUCES,\n  ...VINEGARS,\n\n  PEPPER_BLACK_FRESH: {\n    displayText: \"freshly ground black pepper\",\n    cost: { price: 0 }\n  },\n  PEPPER_BLACK_GROUND: {\n    displayText: \"ground black pepper\",\n    cost: SAINSBURYS_SEASONING_COST\n  },\n  WINE_RED: {\n    displayText: \"red wine\",\n    cost: { quantity: 750, measurement: MEASUREMENTS.MILLILITRE, price: 6.5 }\n  },\n  CHILLI_RED_FRESH: {\n    displayText: \"fresh red chilli\",\n    cost: { quantity: 2, price: 0.6 }\n  },\n  CHILLI_BIRD_EYE_FRESH: {\n    displayText: \"bird eye chillies\",\n    cost: { quantity: 20, measurement: MEASUREMENTS.GRAM, price: 0.7 }\n  },\n  GINGER_FRESH: {\n    displayText: \"fresh ginger\",\n    cost: { payFullAmountAlways: true, price: 0.3 }\n  },\n  NUTMEG_FRESH: {\n    displayText: \"freshly grated whole nutmeg\",\n    cost: SAINSBURYS_SEASONING_COST\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const NUTS: IInventoryIngredients = {\n  NUTS_CASHEWS: {\n    displayText: \"cashew nuts\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 3 }\n  },\n  NUTS_PINE: {\n    displayText: \"pine nuts\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 3.6 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const SEEDS: IInventoryIngredients = {\n  SEEDS_CHIA: {\n    displayText: \"chia seeds\",\n    cost: { quantity: 150, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  },\n  SEEDS_POPPY: {\n    displayText: \"poppy seeds\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 0.9 }\n  },\n  SEEDS_FLAX_GROUND: {\n    displayText: \"ground flax seeds\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 4 }\n  },\n  SEEDS_PUMPKIN: {\n    displayText: \"pumpkin seeds\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  SEEDS_SESAME: {\n    displayText: \"sesame seeds\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  SEEDS_SUNFLOWER: {\n    displayText: \"sunflower seeds\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 1 }\n  }\n};\n","import { NUTS } from \"./nuts\";\nimport { SEEDS } from \"./seeds\";\n\nexport const NUTS_AND_SEEDS: IInventoryIngredients = { ...NUTS, ...SEEDS };\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VEG_CANNED: IInventoryIngredients = {\n  TOMATO_CHOPPED: {\n    displayText: \"chopped tomatoes\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.CAN, price: 0.5 }\n  },\n  TOMATO_PASSATA: {\n    displayText: \"passata\",\n    cost: { quantity: 500, measurement: MEASUREMENTS.GRAM, price: 0.45 }\n  },\n  TOMATO_SUN_DRIED: {\n    displayText: \"sun dried tomatoes\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.JAR, price: 2 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VEG_FRESH: IInventoryIngredients = {\n  ASPARAGUS: { displayText: \"asparagus\" },\n  AUBERGINE: { displayText: \"aubergine\", cost: { quantity: 1, price: 0.7 } },\n  BEANS_GREEN: {\n    displayText: \"green beans\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  BROCCOLI: { displayText: \"broccoli\", cost: { quantity: 1, price: 0.7 } },\n  BUTTERNUT_SQUASH: {\n    displayText: \"butternut squash\",\n    cost: { quantity: 1, price: 1.5 }\n  },\n  CARROT: { displayText: \"carrot\", cost: { quantity: 1, price: 0.12 } },\n  CAULIFLOWER_REGULAR: {\n    displayText: \"cauliflower\",\n    cost: { quantity: 1, price: 1 }\n  },\n  CELERY_STICK: {\n    displayText: \"celery stick\",\n    cost: { quantity: 1, price: 0.3 }\n  },\n  COURGETTE: { displayText: \"courgette\", cost: { quantity: 1, price: 0.35 } },\n  GARLIC_CLOVE: {\n    displayText: \"garlic clove\",\n    cost: { quantity: 10, price: 0.3 }\n  },\n  KALE: {\n    displayText: \"kale\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1.05 }\n  },\n  LEEK: { displayText: \"leek\", cost: { quantity: 1, price: 0.7 } },\n  MUSHROOMS: {\n    displayText: \"mushrooms\",\n    cost: { quantity: 250, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  MUSHROOMS_CHESTNUT: {\n    displayText: \"chestnut mushrooms\",\n    cost: { quantity: 300, measurement: MEASUREMENTS.GRAM, price: 1 }\n  },\n  ONION_WHITE_MEDIUM: {\n    displayText: \"white onion\",\n    cost: { quantity: 1, price: 0.2 }\n  },\n  ONION_RED_MEDIUM: {\n    displayText: \"red onion\",\n    cost: { quantity: 1, price: 0.25 }\n  },\n  ONION_SPRING: {\n    displayText: \"spring onion\",\n    cost: { quantity: 100, measurement: MEASUREMENTS.GRAM, price: 0.55 }\n  },\n  PEPPER_RED: { displayText: \"red pepper\", cost: { quantity: 1, price: 0.5 } },\n  PEPPER_GREEN: {\n    displayText: \"green pepper\",\n    cost: { quantity: 1, price: 0.5 }\n  },\n  PEPPER_ORANGE: {\n    displayText: \"orange pepper\",\n    cost: { quantity: 1, price: 0.5 }\n  },\n  PEPPER_MIXED: {\n    displayText: \"mixed pepper\",\n    cost: { quantity: 3, price: 1.3 }\n  },\n  POTATO_MARIS_PIPER: { displayText: \"Maris Piper potatoes\" },\n  POTATO_BAKING: {\n    displayText: \"baking potato\",\n    cost: { quantity: 1, price: 0.4 }\n  },\n  POTATO_SWEET: {\n    displayText: \"sweet potato\",\n    cost: { quantity: 1, price: 0.5 }\n  },\n  SPINACH: {\n    displayText: \"spinach\",\n    cost: { quantity: 200, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  }\n};\n","import { MEASUREMENTS } from \"../../measurements\";\n\nexport const VEG_FROZEN: IInventoryIngredients = {\n  PETITS_POIS_FROZEN: {\n    displayText: \"frozen petits pois\",\n    cost: { quantity: 910, measurement: MEASUREMENTS.GRAM, price: 1.5 }\n  },\n  VEGETABLES_MIXED_FROZEN: {\n    displayText: \"frozen mixed vegetables\",\n    cost: { quantity: 1, measurement: MEASUREMENTS.KILOGRAM, price: 1.3 }\n  }\n};\n","import { VEG_CANNED } from \"./canned-veg\";\nimport { VEG_FRESH } from \"./fresh-veg\";\nimport { VEG_FROZEN } from \"./frozen-veg\";\n\nexport const VEG: IInventoryIngredients = {\n  ...VEG_CANNED,\n  ...VEG_FRESH,\n  ...VEG_FROZEN\n};\n","import { BAKING } from \"./baking\";\nimport { CARBS } from \"./carbs\";\nimport { DAIRY } from \"./dairy\";\nimport { FRUIT } from \"./fruit\";\nimport { HERBS } from \"./herbs\";\nimport { PROTEIN } from \"./protein\";\nimport { SEASONING } from \"./seasoning\";\nimport { NUTS_AND_SEEDS } from \"./nuts-seeds\";\nimport { VEG } from \"./veg\";\n\nexport const INGREDIENTS: IInventoryIngredients = {\n  ...BAKING,\n  ...CARBS,\n  ...DAIRY,\n  ...FRUIT,\n  ...HERBS,\n  ...NUTS_AND_SEEDS,\n  ...PROTEIN,\n  ...SEASONING,\n  ...VEG,\n\n  WATER: { displayText: \"water\", cost: { price: 0 } },\n  WATER_BOILING: { displayText: \"boiling water\", cost: { price: 0 } }\n};\n","export const PAGE_SECTION_TITLES: { [name: string]: string } = {\n  BUCKET_LIST: \"Bucket List\",\n  FRIENDS: \"Friends\",\n  UP_NEXT: \"Up Next\"\n};\n","export const PLAYS: IPlays = {\n  // 123\n  \"1984\": { name: \"1984\" },\n  \"4000_MILES\": { name: \"4000 Miles\" },\n  // A\n  AFTERGLOW: { name: \"Afterglow\" },\n  // C\n  CONSENT: { name: \"Consent\" },\n  // D\n  DUST: { name: \"Dust\" },\n  // E\n  EVERYBODYS_TALKING_ABOUT_JAMIE: { name: \"Everybody's Talking About Jamie\" },\n  // F\n  FERRYMAN: { name: \"Ferryman, The\" },\n  FROZEN: { name: \"Frozen\" },\n  // H\n  HOME_IM_DARLING: { name: \"Home, I'm Darling\" },\n  // I\n  INHERITANCE: { name: \"Inheritance, The\" },\n  // K\n  KINKY_BOOTS: { name: \"Kinky Boots\" },\n  // L\n  LEAVE_TO_REMAIN: { name: \"Leave to Remain\" },\n  LOST_UNFOUND: { name: \"Lost Unfound\" },\n  LUNGS: { name: \"Lungs\" },\n  // M\n  MATILDA: { name: \"Matilda\" },\n  MIDSUMMER_NIGHTS_DREAM: { name: \"A Midsummer Night's Dream\" },\n  // S\n  SON: { name: \"Son, The\" },\n  // T\n  THAT_GIRL: { name: \"That Girl\" },\n  // U\n  UGLY_LIES_THE_BONE: { name: \"Ugly Lies the Bone\" },\n  UNCLE_VANYA: { name: \"Uncle Vanya\" },\n  // W\n  WAITRESS: { name: \"Waitress\" },\n  WICKED: { name: \"Wicked\" },\n  // Y\n  YOUNG_MARX: { name: \"Young Marx\" }\n};\n","const LONDON: ITheatreVenues = {\n  // A\n  ADELPHI: { name: \"Adelphi Theatre\" },\n  APOLLO: { name: \"Apollo Theatre\" },\n  APOLLO_VICTORIA: { name: \"Apollo Victoria Theatre\" },\n  // B\n  BRIDGE: { name: \"Bridge Theatre\" },\n  // C\n  CAMBRIDGE: { name: \"Cambridge Theatre\" },\n  // D\n  DUKE_OF_YORKS: { name: \"Duke of York's Theatre\" },\n  // G\n  GIELGUD: { name: \"Gielgud Theatre\" },\n  // H\n  HAROLD_PINTER: { name: \"Harold Pinter Theatre\" },\n  // L\n  LYRIC: { name: \"Lyric Hammersmith\" },\n  // N\n  NATIONAL: { name: \"National Theatre\" },\n  NOEL_COWARD: { name: \"Noël Coward Theatre\" },\n  // O\n  OLD_RED_LION: { name: \"Old Red Lion Theatre\" },\n  OLD_VIC: { name: \"The Old Vic\" },\n  // P\n  PLAYHOUSE: { name: \"Playhouse Theatre\" },\n  // R\n  ROYAL_HAYMARKET: { name: \"Theatre Royal Haymarket\" },\n  // T\n  TRAFALGAR_STUDIOS: { name: \"Trafalgar Studios\" },\n  // W\n  WATERLOO_EAST: { name: \"Waterloo East Theatre\" },\n  WHITE_BEAR: { name: \"White Bear Theatre\" }\n};\n\nconst STRATFORD: ITheatreVenues = {\n  ROYAL_SHAKESPEARE: { name: \"Royal Shakespeare Theatre\" }\n};\n\nexport const THEATRE_VENUES: ITheatreVenues = {\n  ...LONDON,\n  ...STRATFORD\n};\n","export const TICKET_TYPES: ITicketTypes = {\n  // A\n  AXS_MOBILE_APP: \"AXS app ticket\",\n  // D\n  DICE: \"Dice mobile ticket\",\n  // F\n  FESTICKET_PDF: \"Festicket e-Ticket PDF\",\n  // G\n  GIGS_AND_TOURS_POSTAL: \"Gigs and Tours postal ticket\",\n  // K\n  KABOODLE_ETICKET: \"Kaboodle eTicket\",\n  // S\n  SEE_TICKETS_PRINT_AT_HOME: \"SeeTickets print-at-home\",\n  // T\n  TICKETWEB: `Ticketweb PDF`,\n  TICKETMASTER_ETICKET: \"Ticketmaster eTicket\"\n};\n","export { ACTORS } from \"./actors\";\nexport { DIETS } from \"./diets\";\nexport { FESTIVALS } from \"./festivals\";\nexport { FRIENDS } from \"./friends\";\nexport { LOCATIONS } from \"./locations\";\nexport { MEASUREMENTS, SAINSBURYS_SEASONING_COST } from \"./measurements\";\nexport { MUSICIANS } from \"./musicians\";\nexport { MUSIC_VENUES } from \"./music-venues\";\nexport { INGREDIENTS } from \"./ingredients\";\nexport { PAGE_SECTION_TITLES } from \"./page-section-titles\";\nexport { PLAYS } from \"./plays\";\nexport { THEATRE_VENUES } from \"./theatre-venues\";\nexport { TICKET_TYPES } from \"./ticket-types\";\nexport { UNICODE } from \"./unicode\";\n\nexport const NO_UNIT_COST_FOR_RECIPE_EXISTS: string =\n  \"NO_UNIT_COST_FOR_RECIPE_EXISTS\";\n\nexport const DAYS_OF_THE_WEEK: Array<string> = [\n  \"Sun\",\n  \"Mon\",\n  \"Tue\",\n  \"Wed\",\n  \"Thu\",\n  \"Fri\",\n  \"Sat\"\n];\n\nexport const MONTHS: Array<string> = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\"\n];\n","export const numberToCurrencyString = (\n  number: number,\n  decimalPrecision?: number\n): string => {\n  if (decimalPrecision && decimalPrecision === 1)\n    return `£${(Math.round(number * 10) / 10).toFixed(2)}`;\n\n  // Default to 2dp (£1.89)\n  return `£${(Math.round(number * 100) / 100).toFixed(2)}`;\n};\n","import { MEASUREMENTS } from \"@constants\";\n\nexport const concatenateQuantityAndMeasurement = (\n  displayQuantity: string,\n  measurement: IIngredientMeasurement\n) => {\n  if (\n    measurement === MEASUREMENTS.GRAM ||\n    measurement === MEASUREMENTS.KILOGRAM ||\n    measurement === MEASUREMENTS.MILLILITRE ||\n    measurement === MEASUREMENTS.CENTIMETRE ||\n    measurement === MEASUREMENTS.LITRE\n  ) {\n    // 2 + g = 2g\n    return displayQuantity + measurement;\n  }\n\n  if (\n    measurement === MEASUREMENTS.TEASPOON ||\n    measurement === MEASUREMENTS.TABLESPOON\n  ) {\n    // 2 + tsp = 2 tsp\n    return displayQuantity + \" \" + measurement;\n  }\n\n  if (measurement === MEASUREMENTS.JAR || measurement === MEASUREMENTS.CAN) {\n    if (parseInt(displayQuantity) > 1)\n      return displayQuantity + \" \" + measurement + \"s\";\n    return displayQuantity + \" \" + measurement;\n  }\n\n  return displayQuantity;\n};\n","import { convertIngredientQuantity } from \"./convertIngredientQuantity\";\n\ntype ICalculateIngredientCost = {\n  ingredient: IInventoryIngredient;\n  quantity?: IIngredientQuantity;\n  measurement: IIngredientMeasurement;\n};\n\nexport const calculateIngredientCost = ({\n  ingredient,\n  quantity,\n  measurement\n}: ICalculateIngredientCost): number => {\n  if (!quantity) return 0;\n\n  let [ingredientQuantity, ingredientMeasurement] = [quantity, measurement];\n\n  // Extract the attached inventory cost information\n  const inventory = ingredient.cost;\n  const inventoryQuantity = inventory && inventory.quantity;\n  const inventoryMeasurement = inventory && inventory.measurement;\n  const inventoryPrice = inventory && inventory.price;\n\n  // Charge nothing for zero-cost items or items (water, salt, pepper)\n  if (inventoryPrice === 0 || (!ingredientQuantity && !ingredientMeasurement))\n    return 0;\n\n  // Certain items like fresh herbs will cost the full amount always\n  //@ts-ignore\n  if (inventory && inventory.payFullAmountAlways) return inventoryPrice;\n\n  // If ingredient and inventory MEASUREMENTS don't already match, attempt to make them match\n  if (ingredientMeasurement !== inventoryMeasurement) {\n    ingredientQuantity = convertIngredientQuantity(\n      ingredientQuantity,\n      ingredientMeasurement,\n      inventoryMeasurement\n    );\n\n    ingredientMeasurement = inventoryMeasurement;\n  }\n\n  // Now the ingredient and inventory MEASUREMENTS should match, perform simple proportion calculation\n  if (\n    ingredientMeasurement === inventoryMeasurement ||\n    (!ingredientMeasurement && !inventoryMeasurement)\n  )\n    //@ts-ignore\n    return (ingredientQuantity / inventoryQuantity) * inventoryPrice;\n\n  // If the ingredient and inventory MEASUREMENTS still don't match, throw a deliberate error\n  alert(\"ERROR\");\n  return 0;\n};\n","import { MEASUREMENTS } from \"@constants\";\n\nexport const convertIngredientQuantity = (\n  ingredientQuantity: IIngredientQuantity,\n  ingredientMeasurement: IIngredientMeasurement,\n  inventoryMeasurement: IIngredientMeasurement\n): number => {\n  switch (true) {\n    // 1 tsp = 5.9ml\n    case ingredientMeasurement === MEASUREMENTS.TEASPOON &&\n      inventoryMeasurement === MEASUREMENTS.MILLILITRE:\n      return ingredientQuantity * 5.9;\n\n    // 1 tbsp = 17.8ml\n    case ingredientMeasurement === MEASUREMENTS.TABLESPOON &&\n      inventoryMeasurement === MEASUREMENTS.MILLILITRE:\n      return ingredientQuantity * 17.8;\n\n    // 1000g = 1kg, 1000 ml = 1L\n    case (ingredientMeasurement === MEASUREMENTS.GRAM &&\n      inventoryMeasurement === MEASUREMENTS.KILOGRAM) ||\n      (ingredientMeasurement === MEASUREMENTS.MILLILITRE &&\n        inventoryMeasurement === MEASUREMENTS.LITRE):\n      return ingredientQuantity / 1000;\n\n    // 1kg = 1000g, 1L = 1000ml\n    case (ingredientMeasurement === MEASUREMENTS.KILOGRAM &&\n      inventoryMeasurement === MEASUREMENTS.GRAM) ||\n      (ingredientMeasurement === MEASUREMENTS.LITRE &&\n        inventoryMeasurement === MEASUREMENTS.MILLILITRE):\n      return ingredientQuantity * 1000;\n\n    // 1 tbsp = 3tsp\n    case ingredientMeasurement === MEASUREMENTS.TABLESPOON &&\n      inventoryMeasurement === MEASUREMENTS.TEASPOON:\n      return ingredientQuantity * 3;\n\n    // 3 tsp = 1 tsp\n    case ingredientMeasurement === MEASUREMENTS.TEASPOON &&\n      inventoryMeasurement === MEASUREMENTS.TABLESPOON:\n      return ingredientQuantity / 3;\n\n    // ROUGH ESTIMATE: 1 tbsp = 12g\n    case ingredientMeasurement === MEASUREMENTS.TABLESPOON &&\n      inventoryMeasurement === MEASUREMENTS.GRAM:\n      return ingredientQuantity * 12;\n\n    // ROUGH ESTIMATE: 1 tsp = 4g\n    case ingredientMeasurement === MEASUREMENTS.TEASPOON &&\n      inventoryMeasurement === MEASUREMENTS.GRAM:\n      return ingredientQuantity * 4;\n\n    default:\n      alert(\"ERROR!\");\n      return 0;\n  }\n};\n","import { CONSOLE_LOG_RECIPE_COST_CALCULATIONS } from \"config\";\nimport { NO_UNIT_COST_FOR_RECIPE_EXISTS } from \"@constants\";\n\nimport { numberToCurrencyString } from \"./numberToCurrencyString\";\nimport {\n  consoleLogCostedIngredient,\n  consoleLogRecipeTitle\n} from \"./console-logs\";\nimport { calculateIngredientCost } from \"./calculateIngredientCost\";\n\ninterface ICalculateRecipeCost {\n  ingredients: Array<Array<IRecipeIngredient>>;\n  yieldQuantity?: IIngredientQuantity;\n  recipeTitle: string;\n}\n\nexport const calculateRecipeCost = ({\n  ingredients,\n  yieldQuantity,\n  recipeTitle\n}: ICalculateRecipeCost): {\n  costDisplayText: string;\n  unitCostDisplayText: string;\n} => {\n  if (CONSOLE_LOG_RECIPE_COST_CALCULATIONS) consoleLogRecipeTitle(recipeTitle);\n\n  let runningRecipeCost: number = 5;\n\n  ingredients.forEach(ingredientSection => {\n    ingredientSection.forEach(recipeIngredient => {\n      // @ts-ignore\n      const recipeIngredientCost = calculateIngredientCost(recipeIngredient);\n\n      runningRecipeCost += recipeIngredientCost;\n\n      if (CONSOLE_LOG_RECIPE_COST_CALCULATIONS) {\n        const { quantity, measurement, ingredient } = recipeIngredient;\n        consoleLogCostedIngredient({\n          cost: recipeIngredientCost,\n          //@ts-ignore\n          quantity,\n          measurement,\n          ingredient\n        });\n      }\n    });\n  });\n\n  const unitCost: number | undefined =\n    yieldQuantity && runningRecipeCost / yieldQuantity;\n  const costDisplayText: string = numberToCurrencyString(runningRecipeCost, 1);\n  const unitCostDisplayText: string = unitCost\n    ? numberToCurrencyString(unitCost, 1)\n    : NO_UNIT_COST_FOR_RECIPE_EXISTS;\n\n  return { costDisplayText, unitCostDisplayText };\n};\n","import { numberToCurrencyString } from \"./numberToCurrencyString\";\nimport { concatenateQuantityAndMeasurement } from \"./concatenateQuantityAndMeasurement\";\n\nexport const consoleLogRecipeTitle = (title: string): void => {\n  const logDashedLine = (): void => console.log(\"----------\");\n\n  logDashedLine();\n  console.log(title);\n  logDashedLine();\n};\n\ninterface IConsoleLogCostedIngredient {\n  cost: number;\n  quantity: IIngredientQuantity;\n  measurement: IIngredientMeasurement;\n  ingredient: IInventoryIngredient;\n}\n\nexport const consoleLogCostedIngredient = ({\n  cost,\n  quantity,\n  measurement,\n  ingredient\n}: IConsoleLogCostedIngredient): void => {\n  if (!quantity || cost === 0) return;\n\n  const displayIngredient = ingredient.displayText;\n  const displayPrice: string = numberToCurrencyString(cost);\n  const stringQuantityMeasurement: string = concatenateQuantityAndMeasurement(\n    quantity.toString(),\n    measurement\n  );\n\n  const outputLine: string =\n    displayPrice +\n    \" for \" +\n    stringQuantityMeasurement +\n    \" \" +\n    displayIngredient;\n\n  console.log(outputLine);\n};\n","import { decimalToFractionString } from \"./decimalToFractionString\";\nimport { concatenateQuantityAndMeasurement } from \"./concatenateQuantityAndMeasurement\";\n\nconst POTATO = \"potato\";\n\nexport const generateIngredientListItem = ({\n  quantity,\n  measurement,\n  ingredient,\n  optional,\n  notes\n}: IRecipeIngredient): string => {\n  const ingredientText: string = ingredient.displayText;\n\n  // Can we return the ingredient with no measurement, i.e. \"freshly ground rock salt\"\n  if (!quantity && !measurement) return ingredientText;\n\n  // Do we need to turn a decimal to a more aesthetically-pleasing fraction?\n  //@ts-ignore\n  const displayQuantity: string = decimalToFractionString(quantity);\n\n  // Ensure it says \"2 limes\" instead of \"2 lime\" or \"3 potatoes\" instead of \"3 potato\"\n  const displayIngredient: string =\n    //@ts-ignore\n    quantity > 1 && !measurement\n      ? ingredientText.slice(-POTATO.length) === POTATO\n        ? ingredientText + \"es\"\n        : ingredientText + \"s\"\n      : ingredientText;\n\n  // Establish if there will be a space between the quantity and the unit of measurement\n  const displayQuantityMeasurement = concatenateQuantityAndMeasurement(\n    displayQuantity,\n    measurement\n  );\n\n  // Concatenate the quantity and measurement with the ingredient itself\n  const displayQuantityMeasurementIngredients =\n    displayQuantityMeasurement + \" \" + displayIngredient;\n\n  // Append the ingredient notes or \"optional\" text if required\n  return optional\n    ? displayQuantityMeasurementIngredients + \" (optional)\"\n    : notes\n    ? `${displayQuantityMeasurementIngredients} (${notes})`\n    : displayQuantityMeasurementIngredients;\n};\n","import { UNICODE } from \"@constants\";\n\nexport const decimalToFractionString = (decimal: number): string => {\n  switch (decimal) {\n    case 0.25:\n      return UNICODE.QUARTER;\n    case 0.5:\n      return UNICODE.HALF;\n    case 1.5:\n      return 1 + UNICODE.HALF;\n    case 2.5:\n      return 2 + UNICODE.HALF;\n    case 3.5:\n      return 3 + UNICODE.HALF;\n    default:\n      return decimal.toString();\n  }\n};\n","export const isInFuture = (dates: Array<Date>): boolean => {\n  const yesterday = (): number => {\n    const today: Date = new Date();\n    return today.setDate(today.getDate() - 1);\n  };\n\n  const dateToCompare: number = dates[0].valueOf();\n\n  return dateToCompare > yesterday();\n};\n","import { UNICODE } from \"@constants\";\n\ninterface IBakeForAbout {\n  minutes: number;\n  skewer?: boolean;\n  wellRisen?: boolean;\n}\ninterface IPreheatOven {\n  degreesCelcius: number;\n  bakingTray?: boolean;\n}\ninterface ITransferToLoafTin {\n  sunkenCentre?: boolean;\n}\ninterface IRecipeMethodEntries {\n  FOLD_IN_FLOUR_MIX: string;\n  LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN: string;\n  MAKE_FLAX_EGG: string;\n  bakeForAbout: (params: IBakeForAbout) => string;\n  preheatOven: (params: IPreheatOven) => string;\n  transferToLoafTin: (params: ITransferToLoafTin) => string;\n}\n\nexport const recipeMethodEntries = (): IRecipeMethodEntries => {\n  const FOLD_IN_FLOUR_MIX: string =\n    \"in small batches, sieve the flour mix into the mixture and gently fold in until there are no more flour pockets\";\n  const LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN: string =\n    \"leave to cool before removing from loaf tin\";\n  const MAKE_FLAX_EGG: string =\n    \"make flax egg by stirring ground flax seeds with water and leaving to rest for at least 5 minutes until it thickens\";\n\n  const bakeForAbout = ({\n    minutes,\n    skewer = false,\n    wellRisen = false\n  }: IBakeForAbout): string => {\n    const defaultText = `bake for about ${minutes} minutes`;\n    const additionalText =\n      (skewer && \"just until skewer runs clean\") ||\n      (wellRisen && \"until well-risen and slightly golden\");\n\n    if (!additionalText) return defaultText;\n    return `${defaultText} (${additionalText})`;\n  };\n\n  const preheatOven = ({\n    degreesCelcius,\n    bakingTray = false\n  }: IPreheatOven): string => {\n    const ovenTemperature = degreesCelcius + UNICODE.DEGREES_CELCIUS;\n\n    if (!bakingTray) return \"preheat oven to \" + ovenTemperature;\n    return \"preheat baking tray in oven at \" + ovenTemperature;\n  };\n\n  const transferToLoafTin = ({\n    sunkenCentre = false\n  }: ITransferToLoafTin): string => {\n    const defaultText = \"transfer mixture to non-stick loaf tin\";\n    const additionalText =\n      sunkenCentre &&\n      \"create slightly sunken centre to help the cake rise more evenly\";\n\n    if (!additionalText) return defaultText;\n    return `${defaultText} (${additionalText})`;\n  };\n\n  return {\n    FOLD_IN_FLOUR_MIX,\n    LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN,\n    MAKE_FLAX_EGG,\n    bakeForAbout,\n    preheatOven,\n    transferToLoafTin\n  };\n};\n","interface IItemIsFavourited {\n  itemToInspect: any;\n  favouritedData: Array<any>;\n}\n\nexport const itemIsFavourited = ({\n  itemToInspect,\n  favouritedData\n}: IItemIsFavourited) => {\n  let itemIsFavourited = false;\n\n  favouritedData.forEach((dataItem: any) => {\n    if (itemToInspect === dataItem.headline || itemToInspect === dataItem.play)\n      itemIsFavourited = true;\n  });\n\n  return itemIsFavourited;\n};\n","export const moveTheSuffixToPrefix = (string: string): string => {\n  const THE_SUFFIX = \", The\";\n\n  if (string.slice(-5) === THE_SUFFIX)\n    return `The ${string.substring(0, string.length - THE_SUFFIX.length)}`;\n\n  return string;\n};\n","import { moveTheSuffixToPrefix } from \"./moveTheSuffixToPrefix\";\n\ninterface IArrayToString {\n  stringArray: Array<string>;\n  useAmpersandsForPair?: boolean;\n}\n\nexport const arrayToString = ({\n  stringArray,\n  useAmpersandsForPair\n}: IArrayToString): string => {\n  stringArray.map((item: string): string => moveTheSuffixToPrefix(item));\n\n  if (useAmpersandsForPair && stringArray.length === 2)\n    return `${stringArray[0]} & ${stringArray[1]}`;\n\n  let output: string = \"\";\n  stringArray.forEach(\n    (item: string, index: number) =>\n      (output += index === stringArray.length - 1 ? item : `${item}, `)\n  );\n  return output;\n};\n","import {\n  getPageSectionItemCounts,\n  itemIsFavourited,\n  moveTheSuffixToPrefix\n} from \"utils\";\n\n//TODO: this file is a mess! Rewrite it.\n\ninterface IMapToCountedList {\n  items: Object;\n  filter: IFilter;\n  allData: Array<any>;\n  sortByPastAndFutureCount?: boolean;\n  favouritedData: Array<any>;\n  bucketListMode: boolean;\n}\n\nexport const mapToCountedList = ({\n  items,\n  filter,\n  allData,\n  sortByPastAndFutureCount,\n  favouritedData,\n  bucketListMode\n}: IMapToCountedList): Array<ICountedItem> => {\n  const formatNames = (inputData: any): string => {\n    if (!Array.isArray(inputData))\n      return inputData.name && moveTheSuffixToPrefix(inputData.name);\n\n    const array = inputData.map(\n      item => item.name && moveTheSuffixToPrefix(item.name)\n    );\n\n    let outputString: string = \"\";\n    array.forEach(\n      (name: string, index: number) =>\n        (outputString += index === array.length - 1 ? name : `${name}, `)\n    );\n    return outputString;\n  };\n\n  const mapToCountedListItem = (item: any): ICountedItem => {\n    const { pastCount, futureCount } = getPageSectionItemCounts({\n      itemToCount: item,\n      data: allData\n    });\n\n    return {\n      text: formatNames(item),\n      countInfoIrrelevant: item.insignificant || bucketListMode,\n      pastCount,\n      doNotIncludeInList: item.passedAway,\n      futureCount,\n      favourite:\n        item.favourite ||\n        itemIsFavourited({\n          itemToInspect: item,\n          favouritedData\n        }),\n      star: item.capital\n    };\n  };\n\n  const countedList: Array<ICountedItem> = Object.values(items)\n    .filter(item => (filter ? item[filter] : true))\n    .sort((a, b) =>\n      (a.name ? a.name : a)\n        .toLowerCase()\n        .localeCompare((b.name ? b.name : b).toLowerCase())\n    )\n    .map(item => mapToCountedListItem(item))\n    .filter(item => !item.doNotIncludeInList)\n\n    .filter(({ futureCount, pastCount }) =>\n      bucketListMode ? futureCount === 0 && pastCount === 0 : true\n    )\n    // DO NOT INCLUDE VENUES I'VE NEVER GONE TO ON THE WEBSITE, e.g. \"Lafayette\" venu\n    .filter(\n      ({ futureCount, countInfoIrrelevant, pastCount }) =>\n        countInfoIrrelevant || futureCount !== 0 || pastCount !== 0\n    );\n\n  if (sortByPastAndFutureCount) {\n    countedList\n      .sort((a, b) => (a.futureCount > b.futureCount ? -1 : 1))\n      .sort((a, b) => (a.pastCount > b.pastCount ? -1 : 1));\n  }\n\n  return countedList;\n};\n\ninterface IGeneratePropertyArrayFromObject {\n  object: Object;\n  childLevelProperty: string;\n  topLevelProperty?: string;\n}\n\nexport const generatePropertyArrayFromObject = ({\n  object,\n  childLevelProperty,\n  topLevelProperty\n}: IGeneratePropertyArrayFromObject) => {\n  const array: Array<any> = Object.values(object);\n\n  const arrayFilteredByTopLevelProperty: Array<any> = array.filter(\n    item => topLevelProperty && item[topLevelProperty]\n  );\n\n  const arrayFilteredByChildLevelProperty: Array<any> = [].concat.apply(\n    [],\n    array\n      .filter(item => item[childLevelProperty])\n      .map(item => Object.values(item[childLevelProperty]))\n  );\n\n  return [\n    ...arrayFilteredByTopLevelProperty,\n    ...arrayFilteredByChildLevelProperty\n  ];\n};\n","import { isInFuture } from \"./basic/isInFuture\";\n\ninterface IGetPageSectionItemCounts {\n  itemToCount: any;\n  data: Array<any>;\n}\n\nexport const getPageSectionItemCounts = ({\n  itemToCount,\n  data\n}: IGetPageSectionItemCounts) => {\n  let pastCount: number = 0;\n  let futureCount: number = 0;\n\n  data.forEach((dataItem: any) => {\n    if (\n      // MUSICIAN\n      dataItem.headline === itemToCount ||\n      (dataItem.support && dataItem.support.includes(itemToCount)) ||\n      (dataItem.lineup && dataItem.lineup.includes(itemToCount)) ||\n      // FESTIVAL\n      dataItem.festival === itemToCount ||\n      // FRIEND\n      (dataItem.company && dataItem.company.includes(itemToCount)) ||\n      // MUSIC VENUE\n      dataItem.venue === itemToCount ||\n      // PLAY\n      dataItem.play === itemToCount ||\n      // THEATRE\n      dataItem.theatre === itemToCount ||\n      // LOCATION\n      (dataItem.title && dataItem.title.includes(itemToCount)) ||\n      (dataItem.hidden && dataItem.hidden.includes(itemToCount)) ||\n      (dataItem.subtitle && dataItem.subtitle.includes(itemToCount)) ||\n      // ACTOR\n      (dataItem.cast && dataItem.cast.includes(itemToCount))\n    ) {\n      if (isInFuture(dataItem.dates)) {\n        futureCount += 1;\n      } else {\n        pastCount += 1;\n      }\n    }\n  });\n\n  return { futureCount, pastCount };\n};\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2006: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.ALL_AMERICAN_REJECTS,\n    dates: [new Date(\"2006-09-23\")],\n    venue: MUSIC_VENUES.APOLLO_MANCHESTER,\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2007: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.FALL_OUT_BOY,\n    support: [MUSICIANS.COBRA_STARSHIP],\n    dates: [new Date(\"2007-04-03\")],\n    venue: MUSIC_VENUES.APOLLO_MANCHESTER,\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    festival: FESTIVALS.DECAYDANCE,\n    lineup: [\n      MUSICIANS.COBRA_STARSHIP,\n      MUSICIANS.THE_ACADEMY_IS,\n      MUSICIANS.GYM_CLASS_HEROES,\n      MUSICIANS.PANIC_AT_THE_DISCO,\n      MUSICIANS.FALL_OUT_BOY\n    ],\n    dates: [new Date(\"2007-08-22\")],\n    venue: MUSIC_VENUES.HAMMERSMITH_APOLLO,\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN],\n    favourite: true\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2008: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.KATE_NASH,\n    support: [MUSICIANS.BLACK_KIDS],\n    venue: MUSIC_VENUES.WOLVERHAMPTON_CIVIC_HALL,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2008-03-01\")]\n  },\n  {\n    headline: MUSICIANS.PANIC_AT_THE_DISCO,\n    support: [MUSICIANS.METRO_STATION],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.MEGAN, FRIENDS.MUM, FRIENDS.EMMA],\n    dates: [new Date(\"2008-03-15\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.ADELE,\n    venue: MUSIC_VENUES.ALEXANDRA_THEATRE,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2008-05-04\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BOYS_LIKE_GIRLS,\n    support: [MUSICIANS.WE_THE_KINGS, MUSICIANS.CUTE_IS_WHAT_WE_AIM_FOR],\n    venue: MUSIC_VENUES.ACADEMY_2_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN],\n    dates: [new Date(\"2008-05-31\")]\n  },\n  {\n    headline: MUSICIANS.THE_ACADEMY_IS,\n    support: [MUSICIANS.WE_THE_KINGS, MUSICIANS.THE_MAINE],\n    venue: MUSIC_VENUES.BARFLY_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.MEGAN, FRIENDS.EMMA],\n    dates: [new Date(\"2008-09-20\")]\n  },\n  {\n    headline: MUSICIANS.FALL_OUT_BOY,\n    support: [MUSICIANS.BOYS_LIKE_GIRLS, MUSICIANS.YOU_ME_AT_SIX],\n    venue: MUSIC_VENUES.NEC_ARENA_BIRMINGHAM,\n    dates: [new Date(\"2008-10-19\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2009: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.FALL_OUT_BOY,\n    support: [MUSICIANS.HEY_MONDAY, MUSICIANS.KIDS_IN_GLASS_HOUSES],\n    dates: [new Date(\"2009-03-05\")],\n    company: [FRIENDS.MUM, FRIENDS.MEGAN, FRIENDS.EMMA],\n    venue: MUSIC_VENUES.ARENA_MANCHESTER\n  },\n  {\n    headline: MUSICIANS.YOU_ME_AT_SIX,\n    support: [MUSICIANS.EMAROSA, MUSICIANS.THE_SPILL_CANVAS],\n    dates: [new Date(\"2009-03-07\")],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.MEGAN, FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.KATY_PERRY,\n    support: [MUSICIANS.SLIIMY],\n    favourite: true,\n    dates: [new Date(\"2009-08-25\")],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.LOUISE, FRIENDS.MEGAN, FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    support: [MUSICIANS.THE_XX],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    dates: [new Date(\"2009-09-20\")],\n    favourite: true,\n    company: [FRIENDS.DAD]\n  },\n  {\n    headline: MUSICIANS.ALL_TIME_LOW,\n    support: [MUSICIANS.THE_FRIDAY_NIGHT_BOYS, MUSICIANS.AUDITION],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    dates: [new Date(\"2009-10-02\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.ARCTIC_MONKEYS,\n    dates: [new Date(\"2009-11-22\")],\n    company: [FRIENDS.MUM, FRIENDS.DAD],\n    venue: MUSIC_VENUES.ARENA_NOTTINGHAM\n  },\n  {\n    headline: MUSICIANS.PARAMORE,\n    support: [MUSICIANS.YOU_ME_AT_SIX],\n    venue: MUSIC_VENUES.NIA_ARENA_BIRMINGHAM,\n    dates: [new Date(\"2009-12-11\")],\n    company: [FRIENDS.MEGAN, FRIENDS.EMMA, FRIENDS.MUM]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2010: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.YOU_ME_AT_SIX,\n    support: [MUSICIANS.WE_THE_KINGS, MUSICIANS.FOREVER_THE_SICKEST_KIDS],\n    venue: MUSIC_VENUES.ACADEMY_BIRMINGHAM,\n    dates: [new Date(\"2010-03-09\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    support: [MUSICIANS.DRUMS],\n    venue: MUSIC_VENUES.WOLVERHAMPTON_CIVIC_HALL,\n    company: [FRIENDS.DAD, FRIENDS.EMMA, FRIENDS.MUM],\n    dates: [new Date(\"2010-05-10\")]\n  },\n  {\n    headline: MUSICIANS.PALOMA_FAITH,\n    support: [MUSICIANS.ELIZA_DOOLITTLE],\n    venue: MUSIC_VENUES.DE_MONTFORT_HALL,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2010-11-05\")]\n  },\n  {\n    headline: MUSICIANS.MARINA,\n    venue: MUSIC_VENUES.TRENT_UNIVERSITY_NOTTINGHAM,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2010-11-07\")]\n  },\n  {\n    headline: MUSICIANS.ELLIE_GOULDING,\n    support: [MUSICIANS.SUNDAY_GIRL],\n    venue: MUSIC_VENUES.ENGINE_SHED,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2010-11-08\")]\n  },\n  {\n    headline: MUSICIANS.PARAMORE,\n    support: [MUSICIANS.B_O_B],\n    venue: MUSIC_VENUES.SHEFFIELD_ARENA,\n    company: [FRIENDS.EMMA, FRIENDS.MEGAN, FRIENDS.MUM],\n    dates: [new Date(\"2010-11-11\")]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2011: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.KATE_NASH,\n    support: [MUSICIANS.BRIGITTE_APHRODITE],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.TONYA, FRIENDS.KIRSTEN],\n    dates: [new Date(\"2011-03-22\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.KATY_PERRY,\n    venue: MUSIC_VENUES.ARENA_NOTTINGHAM,\n    company: [FRIENDS.JESS, FRIENDS.BLAINE, FRIENDS.ELLIE_S, FRIENDS.POOJA],\n    dates: [new Date(\"2011-03-30\")]\n  },\n  {\n    headline: MUSICIANS.ADELE,\n    support: [MUSICIANS.MICHAEL_KIWANUKA],\n    venue: MUSIC_VENUES.INSTITUTE_BIRMINGHAM,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2011-04-18\")]\n  },\n  {\n    headline: MUSICIANS.ADELE,\n    support: [MUSICIANS.AMOS_LEE],\n    venue: MUSIC_VENUES.DE_MONTFORT_HALL,\n    company: [FRIENDS.EMMA, FRIENDS.MUM],\n    dates: [new Date(\"2011-09-13\")]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2012: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.SBTRKT,\n    support: [MUSICIANS.DISCLOSURE],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2012-02-28\")]\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    venue: MUSIC_VENUES.NEC_ARENA_BIRMINGHAM,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2012-03-13\")]\n  },\n  {\n    headline: MUSICIANS.LITTLE_COMETS,\n    venue: MUSIC_VENUES.COCKPIT_LEEDS,\n    company: [FRIENDS.EMMA],\n    dates: [new Date(\"2012-04-23\")]\n  },\n  {\n    headline: MUSICIANS.KATE_NASH,\n    venue: MUSIC_VENUES.BODEGA,\n    company: [FRIENDS.TONYA, FRIENDS.SONYA, FRIENDS.KIRSTEN],\n    dates: [new Date(\"2012-06-22\")]\n  },\n  {\n    headline: MUSICIANS.MARINA,\n    venue: MUSIC_VENUES.INSTITUTE_BIRMINGHAM,\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    dates: [new Date(\"2012-06-29\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.LADY_GAGA,\n    venue: MUSIC_VENUES.TWICKENHAM_STADIUM,\n    company: [FRIENDS.EMMA],\n    dates: [new Date(\"2012-09-08\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.NICKI_MINAJ,\n    support: [MUSICIANS.MISHA_B, MUSICIANS.TYGA],\n    venue: MUSIC_VENUES.ARENA_NOTTINGHAM,\n    company: [FRIENDS.ELLIE_S, FRIENDS.BLAINE],\n    dates: [new Date(\"2012-10-21\")]\n  },\n  {\n    headline: MUSICIANS.LITTLE_COMETS,\n    venue: MUSIC_VENUES.RESCUE_ROOMS,\n    company: [FRIENDS.SARAH_W, FRIENDS.BETH_SH],\n    dates: [new Date(\"2012-10-31\")]\n  },\n  {\n    headline: MUSICIANS.THE_KILLERS,\n    venue: MUSIC_VENUES.SHEFFIELD_ARENA,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2012-11-08\")]\n  },\n  {\n    headline: MUSICIANS.BEN_HOWARD,\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.STEVE_R],\n    dates: [new Date(\"2012-11-22\")]\n  },\n  {\n    headline: MUSICIANS.ELLIE_GOULDING,\n    venue: MUSIC_VENUES.ROCK_CITY,\n    favourite: true,\n    company: [FRIENDS.BLAINE, FRIENDS.JESS, FRIENDS.ELLIE_G],\n    dates: [new Date(\"2012-12-11\")]\n  }\n];\n","import { FRIENDS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2013: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.BASTILLE,\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2013-03-21\")]\n  },\n  {\n    headline: MUSICIANS.RIHANNA,\n    venue: MUSIC_VENUES.NEC_ARENA_BIRMINGHAM,\n    company: [FRIENDS.JESS],\n    dates: [new Date(\"2013-07-18\")],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.CHRVCHES,\n    venue: MUSIC_VENUES.RITZ_MANCHESTER,\n    company: [FRIENDS.SIMAN],\n    dates: [new Date(\"2013-10-14\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2014: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.FOXES,\n    venue: MUSIC_VENUES.RUBY_LOUNGE,\n    company: [FRIENDS.SIMAN],\n    dates: [new Date(\"2014-03-08\")]\n  },\n  {\n    headline: MUSICIANS.CLEAN_BANDIT,\n    venue: MUSIC_VENUES.ACADEMY_2_MANCHESTER,\n    company: [FRIENDS.SIAN],\n    dates: [new Date(\"2014-05-07\")]\n  },\n  {\n    headline: MUSICIANS.LORDE,\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2014-06-05\")]\n  },\n  {\n    festival: FESTIVALS.PARKLIFE,\n    lineup: [\n      MUSICIANS.FOXES,\n      MUSICIANS.ROUTE_94,\n      MUSICIANS.REDLIGHT,\n      MUSICIANS.BREACH,\n      MUSICIANS.RUDIMENTAL,\n      MUSICIANS.ELLA_EYRE,\n      MUSICIANS.CLEAN_BANDIT,\n      MUSICIANS.SAM_SMITH,\n      MUSICIANS.LONDON_GRAMMAR,\n      MUSICIANS.BASTILLE,\n      MUSICIANS.DISCLOSURE\n    ],\n    venue: MUSIC_VENUES.HEATON_PARK,\n    company: [FRIENDS.JESS, FRIENDS.POOJA, FRIENDS.TONYA],\n    dates: [new Date(\"2014-06-07\"), new Date(\"2014-06-08\")]\n  },\n  {\n    headline: MUSICIANS.SBTRKT,\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.THOM],\n    dates: [new Date(\"2014-09-30\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [\n      MUSICIANS.JAX_JONES,\n      MUSICIANS.DUKE_DUMONT,\n      MUSICIANS.CYRIL_HAHN,\n      MUSICIANS.FRIEND_WITHIN\n    ],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2014-10-04\")]\n  },\n  {\n    headline: MUSICIANS.CLEAN_BANDIT,\n    support: [MUSICIANS.YEARS_AND_YEARS],\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.SIAN],\n    dates: [new Date(\"2014-10-17\")]\n  },\n  {\n    headline: MUSICIANS.LADY_GAGA,\n    venue: MUSIC_VENUES.ARENA_MANCHESTER,\n    company: [FRIENDS.SIMAN],\n    dates: [new Date(\"2014-10-21\")]\n  },\n  {\n    headline: MUSICIANS.SAM_SMITH,\n    support: [MUSICIANS.TORI_KELLY],\n    venue: MUSIC_VENUES.ROCK_CITY,\n    company: [FRIENDS.MUM],\n    dates: [new Date(\"2014-10-28\")]\n  },\n  {\n    headline: MUSICIANS.CHRVCHES,\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.SIMAN],\n    dates: [new Date(\"2014-11-06\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [\n      MUSICIANS.KIDNAP,\n      MUSICIANS.BONDAX,\n      MUSICIANS.GORGON_CITY,\n      MUSICIANS.REDLIGHT\n    ],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.AMY_B, FRIENDS.ELLE_O],\n    dates: [new Date(\"2014-11-07\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [\n      MUSICIANS.GEORGE_FITZGERALD,\n      MUSICIANS.SKREAM,\n      MUSICIANS.PAUL_WOOLFORD,\n      MUSICIANS.GREEN_VELVET\n    ],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.ALEX_FAYE],\n    dates: [new Date(\"2014-11-15\")]\n  },\n  {\n    headline: MUSICIANS.LA_ROUX,\n    venue: MUSIC_VENUES.RITZ_MANCHESTER,\n    company: [FRIENDS.EMMA],\n    dates: [new Date(\"2014-11-16\")]\n  },\n  {\n    headline: MUSICIANS.LADY_GAGA,\n    support: [MUSICIANS.LADY_STARLIGHT],\n    venue: MUSIC_VENUES.SHEFFIELD_ARENA,\n    company: [FRIENDS.GRACE],\n    dates: [new Date(\"2014-11-20\")]\n  },\n  {\n    headline: MUSICIANS.LILY_ALLEN,\n    venue: MUSIC_VENUES.APOLLO_MANCHESTER,\n    company: [FRIENDS.SIAN],\n    dates: [new Date(\"2014-11-25\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [MUSICIANS.MIDLAND, MUSICIANS.JOY_ORBISON, MUSICIANS.DUSKY],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.EMMA, FRIENDS.BECKY, FRIENDS.NATALIE],\n    dates: [new Date(\"2014-12-06\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2015: Array<IGigCard> = [\n  {\n    festival: FESTIVALS.TRANSMISSION,\n    lineup: [MUSICIANS.TEN_WALLS, MUSICIANS.DUSKY, MUSICIANS.YOUSEF],\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.CHLOE, FRIENDS.AMY_B, FRIENDS.BETH_SP],\n    dates: [new Date(\"2015-02-07\")]\n  },\n  {\n    festival: FESTIVALS.TRIBAL_SESSIONS,\n    lineup: [MUSICIANS.JOSH_BUTLER, MUSICIANS.BONTAN, MUSICIANS.GREEN_VELVET],\n    venue: MUSIC_VENUES.SANKEYS,\n    company: [FRIENDS.TONYA, FRIENDS.ALEX_FAYE],\n    dates: [new Date(\"2015-02-13\")]\n  },\n  {\n    festival: FESTIVALS.TRANSMISSION,\n    lineup: [MUSICIANS.JAX_JONES, MUSICIANS.DUKE_DUMONT, MUSICIANS.BLONDE],\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.BETH_SP],\n    dates: [new Date(\"2015-02-27\")]\n  },\n  {\n    festival: FESTIVALS.TRANSMISSION,\n    lineup: [MUSICIANS.EATS_EVERYTHING, MUSICIANS.CARL_COX],\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.SONYA, FRIENDS.TONYA, FRIENDS.ALEX_FAYE],\n    dates: [new Date(\"2015-04-03\")]\n  },\n  {\n    headline: MUSICIANS.ARIANA_GRANDE,\n    support: [MUSICIANS.RIXTON],\n    venue: MUSIC_VENUES.ARENA_MANCHESTER,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2015-06-04\")]\n  },\n  {\n    festival: FESTIVALS.PARKLIFE,\n    lineup: [\n      MUSICIANS.BONDAX,\n      MUSICIANS.JUSTIN_MARTIN,\n      MUSICIANS.JULIO_BASHMORE,\n      MUSICIANS.TENSNAKE,\n      MUSICIANS.JAMES_BAY,\n      MUSICIANS.MK,\n      MUSICIANS.DANIEL_AVERY,\n      MUSICIANS.BAAUER,\n      MUSICIANS.DUSKY,\n      MUSICIANS.DAVID_RODIGAN,\n      MUSICIANS.GEORGE_FITZGERALD,\n      MUSICIANS.KAYTRANADA,\n      MUSICIANS.TEN_WALLS\n    ],\n    venue: MUSIC_VENUES.HEATON_PARK,\n    company: [\n      FRIENDS.SONYA,\n      FRIENDS.TONYA,\n      FRIENDS.AMY_B,\n      FRIENDS.ELLE_O,\n      FRIENDS.CHLOE\n    ],\n    dates: [new Date(\"2015-06-06\"), new Date(\"2015-06-07\")]\n  },\n  {\n    festival: FESTIVALS.GLASTONBURY,\n    lineup: [\n      MUSICIANS.JAMES_BAY,\n      MUSICIANS.MARY_J_BLIGE,\n      MUSICIANS.SBTRKT,\n      MUSICIANS.CARIBOU,\n      MUSICIANS.FLORENCE_AND_THE_MACHINE,\n      MUSICIANS.MACEO_PLEX,\n      MUSICIANS.DUSKY,\n      MUSICIANS.SKREAM,\n      MUSICIANS.GEORGE_EZRA,\n      MUSICIANS.YEARS_AND_YEARS,\n      MUSICIANS.JESSIE_WARE,\n      MUSICIANS.BEN_HOWARD,\n      MUSICIANS.KANYE_WEST,\n      MUSICIANS.JAMIE_JONES,\n      MUSICIANS.FOUR_TET,\n      MUSICIANS.THE_SMYTHS,\n      MUSICIANS.SOAK,\n      MUSICIANS.SEINABO_SEY,\n      MUSICIANS.CHARLI_XCX,\n      MUSICIANS.GROOVE_ARMADA,\n      MUSICIANS.JAMIE_T,\n      MUSICIANS.CHEMICAL_BROTHERS\n    ],\n    venue: MUSIC_VENUES.WORTHY_FARM,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.GRACE,\n      FRIENDS.ELLIE_G,\n      FRIENDS.EMMA,\n      FRIENDS.THOM,\n      FRIENDS.FANNY,\n      FRIENDS.HANNA\n    ],\n    dates: [new Date(\"2015-06-26\"), new Date(\"2015-06-28\")]\n  },\n  {\n    headline: MUSICIANS.NOEL_GALLAGHERS_HIGH_FLYING_BIRDS,\n    support: [MUSICIANS.JOHNNY_MARR],\n    venue: MUSIC_VENUES.CASTLEFIELD_BOWL,\n    company: [FRIENDS.DAD],\n    dates: [new Date(\"2015-07-11\")]\n  },\n  {\n    headline: MUSICIANS.MIGUEL,\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.SIAN],\n    dates: [new Date(\"2015-10-18\")]\n  },\n  {\n    headline: MUSICIANS.CHRVCHES,\n    venue: MUSIC_VENUES.ALBERT_HALL_MANCHESTER,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2015-11-19\")]\n  },\n  {\n    headline: MUSICIANS.LISSIE,\n    venue: MUSIC_VENUES.ACADEMY_2_MANCHESTER,\n    dates: [new Date(\"2015-12-05\")],\n    company: [],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.FABRIC_NYE,\n    lineup: [MUSICIANS.GEORGE_FITZGERALD, MUSICIANS.EATS_EVERYTHING],\n    venue: MUSIC_VENUES.FABRIC,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.SONYA,\n      FRIENDS.FANNY,\n      FRIENDS.HANNA,\n      FRIENDS.LAURA\n    ],\n    dates: [new Date(\"2015-12-31\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2016: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.HALSEY,\n    support: [MUSICIANS.BORNS],\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2016-02-22\")]\n  },\n  {\n    headline: MUSICIANS.JOSEF_SALVAT,\n    venue: MUSIC_VENUES.GORILLA,\n    favourite: true,\n    company: [],\n    dates: [new Date(\"2016-03-06\")]\n  },\n  {\n    headline: MUSICIANS.TROYE_SIVAN,\n    venue: MUSIC_VENUES.ACADEMY_MANCHESTER,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2016-04-18\")]\n  },\n  {\n    headline: MUSICIANS.TOURIST,\n    venue: MUSIC_VENUES.DEAF_INSTITUTE,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2016-05-10\")]\n  },\n  {\n    festival: FESTIVALS.GLASTONBURY,\n    lineup: [\n      MUSICIANS.NAO,\n      MUSICIANS.CHRISTINE_AND_THE_QUEENS,\n      MUSICIANS.AURORA,\n      MUSICIANS.DAUGHTER,\n      MUSICIANS.DISCLOSURE,\n      MUSICIANS.CARL_COX,\n      MUSICIANS.FOUR_TET,\n      MUSICIANS.MACEO_PLEX,\n      MUSICIANS.ALESSIA_CARA,\n      MUSICIANS.TOM_ODELL,\n      MUSICIANS[1975],\n      MUSICIANS.WILL_YOUNG,\n      MUSICIANS.ADELE,\n      MUSICIANS.RALEIGH_RITCHIE,\n      MUSICIANS.YEARS_AND_YEARS,\n      MUSICIANS.ELLIE_GOULDING,\n      MUSICIANS.GRIMES\n    ],\n    venue: MUSIC_VENUES.WORTHY_FARM,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.ELLIE_G,\n      FRIENDS.GRACE,\n      FRIENDS.CAITLIN,\n      FRIENDS.ELLIE_P,\n      FRIENDS.THOM\n    ],\n    dates: [new Date(\"2016-06-24\"), new Date(\"2016-06-26\")]\n  },\n  {\n    headline: MUSICIANS.BEYONCE,\n    venue: MUSIC_VENUES.WEMBLEY_STADIUM,\n    company: [FRIENDS.EMMA],\n    dates: [new Date(\"2016-07-03\")],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.LOVEBOX,\n    lineup: [\n      MUSICIANS.MO,\n      MUSICIANS.RITON,\n      MUSICIANS.DIPLO,\n      MUSICIANS.PAUL_WOOLFORD,\n      MUSICIANS.HEIDI,\n      MUSICIANS.HANNAH_WANTS,\n      MUSICIANS.JORIS_VOORN,\n      MUSICIANS.MAJOR_LAZER\n    ],\n    venue: MUSIC_VENUES.VICTORIA_PARK,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.LAURA,\n      FRIENDS.LUKE_J,\n      FRIENDS.ALICE_R\n    ],\n    dates: [new Date(\"2016-07-15\")]\n  },\n  {\n    festival: FESTIVALS.DEFECTED_BRISTOL,\n    lineup: [MUSICIANS.MK],\n    venue: MUSIC_VENUES.MOTION,\n    dates: [new Date(\"2016-07-30\")],\n    company: [FRIENDS.CHELSEA, FRIENDS.SARAH_W]\n  },\n  {\n    festival: FESTIVALS.BRIGHTON_PRIDE,\n    lineup: [\n      MUSICIANS.DUA_LIPA,\n      MUSICIANS.CARLY_RAE_JEPSEN,\n      MUSICIANS.SISTER_SLEDGE\n    ],\n    venue: MUSIC_VENUES.PRESTON_PARK,\n    company: [\n      FRIENDS.ELLIE_G,\n      FRIENDS.POOJA,\n      FRIENDS.GRACE,\n      FRIENDS.SIAN,\n      FRIENDS.TONYA,\n      FRIENDS.ALICE_R\n    ],\n    dates: [new Date(\"2016-08-06\")]\n  },\n  {\n    festival: FESTIVALS.V_FESTIVAL,\n    lineup: [\n      MUSICIANS.MIKE_POSNER,\n      MUSICIANS.MNEK,\n      MUSICIANS.ZARA_LARSSON,\n      MUSICIANS.PHILIP_GEORGE,\n      MUSICIANS.JESS_GLYNNE,\n      MUSICIANS.FLIGHT_FACILITIES,\n      MUSICIANS.SIA,\n      MUSICIANS.JUSTIN_BIEBER\n    ],\n    venue: MUSIC_VENUES.WESTON_PARK,\n    company: [FRIENDS.SARAH_W, FRIENDS.CHELSEA],\n    dates: [new Date(\"2016-08-21\")]\n  },\n  {\n    festival: FESTIVALS.WAREHOUSE_PROJECT,\n    lineup: [MUSICIANS.DUSKY, MUSICIANS.DANIEL_AVERY],\n    venue: MUSIC_VENUES.STORE_STREET,\n    company: [FRIENDS.DAN],\n    dates: [new Date(\"2016-09-30\")]\n  },\n  {\n    headline: MUSICIANS.ROOSEVELT,\n    venue: MUSIC_VENUES.XOYO,\n    company: [FRIENDS.TONYA],\n    dates: [new Date(\"2016-11-24\")]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2017: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.JONAS_BLUE,\n    venue: MUSIC_VENUES.MINISTRY_OF_SOUND,\n    dates: [new Date(\"2017-01-28\")],\n    company: [\n      FRIENDS.ALICE_R,\n      FRIENDS.TONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.LAURA\n    ]\n  },\n  {\n    headline: MUSICIANS.LYVES,\n    venue: MUSIC_VENUES.SERVANT_JAZZ_QUARTERS,\n    dates: [new Date(\"2017-02-20\")],\n    company: []\n  },\n  {\n    headline: MUSICIANS.DUSKY,\n    venue: MUSIC_VENUES.ELECTRIC_BRIXTON,\n    dates: [new Date(\"2017-02-24\")],\n    favourite: true,\n    company: [FRIENDS.TONYA, FRIENDS.TOM, FRIENDS.CAITLIN, FRIENDS.RYAN]\n  },\n  {\n    headline: MUSICIANS.MARTIN_SOLVEIG,\n    support: [MUSICIANS.JAX_JONES],\n    dates: [new Date(\"2017-03-10\")],\n    venue: MUSIC_VENUES.EGG,\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.BANKS,\n    dates: [new Date(\"2017-03-13\")],\n    venue: MUSIC_VENUES.ROUNDHOUSE,\n    company: [FRIENDS.BECKY, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.TOVE_LO,\n    support: [MUSICIANS.BROODS],\n    dates: [new Date(\"2017-03-17\")],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    company: [FRIENDS.DAN]\n  },\n  {\n    headline: MUSICIANS.MUNA,\n    dates: [new Date(\"2017-03-28\")],\n    venue: MUSIC_VENUES.HOXTON_SQUARE_BAR_AND_KITCHEN,\n    company: [FRIENDS.LUKE_S],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.JORJA_SMITH,\n    dates: [new Date(\"2017-04-03\")],\n    venue: MUSIC_VENUES.VILLAGE_UNDERGROUND,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.VERITE,\n    dates: [new Date(\"2017-04-06\")],\n    venue: MUSIC_VENUES.ELECTROWERKZ,\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.FRANCES,\n    dates: [new Date(\"2017-04-07\")],\n    venue: MUSIC_VENUES.INSTITUTE_BIRMINGHAM,\n    company: [FRIENDS.EMMA, FRIENDS.MUM]\n  },\n  {\n    headline: MUSICIANS.JONES,\n    dates: [new Date(\"2017-05-03\")],\n    venue: MUSIC_VENUES.HOXTON_HALL,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.BETSY,\n    dates: [new Date(\"2017-05-15\")],\n    venue: MUSIC_VENUES.MOTH_CLUB,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.ALMA,\n    dates: [new Date(\"2017-05-16\")],\n    venue: MUSIC_VENUES.OSLO_HACKNEY,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.BETTY_WHO,\n    dates: [new Date(\"2017-05-17\")],\n    venue: MUSIC_VENUES.ZIGFRID_VON_UNDERBELLY,\n    company: [FRIENDS.SIAN]\n  },\n  {\n    headline: MUSICIANS.PARAMORE,\n    dates: [new Date(\"2017-06-19\")],\n    venue: MUSIC_VENUES.ROYAL_ALBERT_HALL,\n    company: [FRIENDS.LUKE_S],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.LOVEBOX,\n    lineup: [\n      MUSICIANS.JOE_GODDARD,\n      MUSICIANS.RUFUS_DU_SOL,\n      MUSICIANS.BICEP,\n      MUSICIANS.JAMIE_XX,\n      MUSICIANS.EATS_EVERYTHING,\n      MUSICIANS.FRANK_OCEAN\n    ],\n    dates: [new Date(\"2017-07-14\")],\n    venue: MUSIC_VENUES.VICTORIA_PARK,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.CAITLIN,\n      FRIENDS.ALICE_R\n    ]\n  },\n  {\n    festival: FESTIVALS.BRIGHTON_PRIDE,\n    lineup: [MUSICIANS.BECKY_HILL, MUSICIANS.YEARS_AND_YEARS],\n    dates: [new Date(\"2017-08-05\")],\n    venue: MUSIC_VENUES.PRESTON_PARK,\n    company: [\n      FRIENDS.LUKE_S,\n      FRIENDS.TONYA,\n      FRIENDS.SONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.LAURA\n    ]\n  },\n  {\n    festival: FESTIVALS.BESTIVAL,\n    lineup: [\n      MUSICIANS.ALMA,\n      MUSICIANS.LITTLE_DRAGON,\n      MUSICIANS.KOLSCH,\n      MUSICIANS.THE_XX,\n      MUSICIANS.MACEO_PLEX,\n      MUSICIANS.JOE_GODDARD,\n      MUSICIANS.FOURS,\n      MUSICIANS.ANNA_OF_THE_NORTH,\n      MUSICIANS.LUCY_ROSE,\n      MUSICIANS.DIZZEE_RASCAL,\n      MUSICIANS.DUSKY,\n      MUSICIANS.CHARLOTTE_CHURCH,\n      MUSICIANS.SOUL_WAX,\n      MUSICIANS.PET_SHOP_BOYS\n    ],\n    dates: [new Date(\"2017-09-08\"), new Date(\"2017-09-10\")],\n    venue: MUSIC_VENUES.LULWORTH_ESTATE,\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.RYAN,\n      FRIENDS.DAN,\n      FRIENDS.MARIA,\n      FRIENDS.CAITLIN,\n      FRIENDS.CAITY\n    ]\n  },\n  {\n    headline: MUSICIANS.SIGRID,\n    dates: [new Date(\"2017-09-13\")],\n    venue: MUSIC_VENUES.SCALA,\n    company: [FRIENDS.SIAN]\n  },\n  {\n    headline: MUSICIANS.ALLIE_X,\n    dates: [new Date(\"2017-09-18\")],\n    venue: MUSIC_VENUES.OMEARA,\n    company: [FRIENDS.SIAN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.LORDE,\n    dates: [new Date(\"2017-09-27\")],\n    favourite: true,\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE,\n    company: [FRIENDS.LUKE_S, FRIENDS.CAITLIN, FRIENDS.CAITY]\n  },\n  {\n    headline: MUSICIANS.MURA_MASA,\n    dates: [new Date(\"2017-10-19\")],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    company: [FRIENDS.LUKE_S]\n  },\n  {\n    headline: MUSICIANS.FREYA_RIDINGS,\n    dates: [new Date(\"2017-10-26\")],\n    venue: MUSIC_VENUES.ST_GILES_IN_THE_FIELD,\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.PVRIS,\n    dates: [new Date(\"2017-11-30\")],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    company: [FRIENDS.LUKE_S]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2018: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.KYGO,\n    support: [MUSICIANS.GRYFFIN, MUSICIANS.SEEB],\n    venue: MUSIC_VENUES.THE_O2,\n    dates: [new Date(\"2018-02-25\")],\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.CODE,\n    venue: MUSIC_VENUES.CORSICA_STUDIOS,\n    dates: [new Date(\"2018-03-07\")],\n    company: [FRIENDS.JERRY, FRIENDS.JAMIE, FRIENDS.DOM]\n  },\n  {\n    headline: MUSICIANS.GEORGE_FITZGERALD,\n    venue: MUSIC_VENUES.ISLINGTON_ASSEMBLY_HALL,\n    dates: [new Date(\"2018-03-27\")],\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.AQUILO,\n    venue: MUSIC_VENUES.OVAL_SPACE,\n    dates: [new Date(\"2018-04-19\")],\n    company: [FRIENDS.JAMIE]\n  },\n  {\n    headline: MUSICIANS.TWO_FEET,\n    venue: MUSIC_VENUES.ELECTROWERKZ,\n    dates: [new Date(\"2018-05-24\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.KIM_PETRAS,\n    venue: MUSIC_VENUES.COURTYARD_THEATRE,\n    dates: [new Date(\"2018-05-25\")],\n    company: [FRIENDS.JERRY],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.HAIM,\n    support: [MUSICIANS.MAGGIE_ROGERS],\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE,\n    dates: [new Date(\"2018-06-15\")],\n    company: [FRIENDS.EMMA, FRIENDS.BECKY, FRIENDS.CAITLIN]\n  },\n  {\n    festival: FESTIVALS.ON_THE_RUN_II,\n    lineup: [MUSICIANS.JAY_Z, MUSICIANS.BEYONCE],\n    venue: MUSIC_VENUES.LONDON_STADIUM,\n    dates: [new Date(\"2018-06-16\")],\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.TAYLOR_SWIFT,\n    support: [MUSICIANS.CHARLI_XCX, MUSICIANS.CAMILA_CABELLO],\n    venue: MUSIC_VENUES.WEMBLEY_STADIUM,\n    dates: [new Date(\"2018-06-22\")],\n    company: [FRIENDS.DAN],\n    favourite: true\n  },\n  {\n    festival: FESTIVALS.NOTION_SUMMER_PARTY,\n    lineup: [\n      MUSICIANS.M_0,\n      MUSICIANS.BONDAX,\n      MUSICIANS.RITON,\n      MUSICIANS.KAH_LO,\n      MUSICIANS.ANNE_MARIE,\n      MUSICIANS.MO\n    ],\n    venue: MUSIC_VENUES.TROXY,\n    dates: [new Date(\"2018-07-27\")],\n    company: [FRIENDS.LUKE_J]\n  },\n  {\n    festival: FESTIVALS.BRIGHTON_PRIDE,\n    lineup: [MUSICIANS.BRITNEY_SPEARS],\n    venue: MUSIC_VENUES.PRESTON_PARK,\n    dates: [new Date(\"2018-08-04\")],\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.SONYA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.SIAN\n    ]\n  },\n  {\n    headline: MUSICIANS.SOFI_TUKKER,\n    venue: MUSIC_VENUES.KOKO,\n    dates: [new Date(\"2018-09-17\")],\n    company: [FRIENDS.TONYA]\n  },\n  {\n    headline: MUSICIANS.LAUV,\n    venue: MUSIC_VENUES.KOKO,\n    dates: [new Date(\"2018-09-18\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.RALPH,\n    venue: MUSIC_VENUES.OLD_BLUE_LAST,\n    dates: [new Date(\"2018-10-15\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.RAINBOW_KITTEN_SURPRISE,\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2018-10-31\")],\n    company: [FRIENDS.JAMIE]\n  },\n  {\n    headline: MUSICIANS.LYKKE_LI,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2018-11-04\")],\n    company: [FRIENDS.EMMA],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    venue: MUSIC_VENUES.THE_O2,\n    dates: [new Date(\"2018-11-21\")],\n    company: [FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.YOU_ME_AT_SIX,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2018-12-03\")],\n    company: [FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, FESTIVALS, MUSICIANS, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2019: Array<IGigCard> = [\n  {\n    headline: MUSICIANS[1975],\n    venue: MUSIC_VENUES.THE_O2,\n    dates: [new Date(\"2019-01-19\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.MAGGIE_ROGERS,\n    support: [MUSICIANS.MALLRAT],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-02-19\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.TROYE_SIVAN,\n    support: [MUSICIANS.LELAND],\n    venue: MUSIC_VENUES.HAMMERSMITH_APOLLO,\n    dates: [new Date(\"2019-02-28\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.LANY,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-03-12\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.LEON,\n    venue: MUSIC_VENUES.ISLINGTON_ASSEMBLY_HALL,\n    dates: [new Date(\"2019-04-08\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BULOW,\n    venue: MUSIC_VENUES.COURTYARD_THEATRE,\n    dates: [new Date(\"2019-04-11\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.ROBYN,\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE,\n    dates: [new Date(\"2019-04-12\")],\n    company: [FRIENDS.DAN, FRIENDS.RYAN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BEARS_DEN,\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-04-23\")],\n    company: [FRIENDS.JAMIE]\n  },\n  {\n    headline: MUSICIANS.MARINA,\n    venue: MUSIC_VENUES.ROYAL_ALBERT_HALL,\n    dates: [new Date(\"2019-05-03\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.SASHA_SLOAN,\n    venue: MUSIC_VENUES.DINGWALLS,\n    dates: [new Date(\"2019-05-07\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.G_FLIP,\n    venue: MUSIC_VENUES.THE_GARAGE,\n    dates: [new Date(\"2019-05-15\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    headline: MUSICIANS.FKA_TWIGS,\n    venue: MUSIC_VENUES.ALEXANDRA_PALACE_THEATRE,\n    dates: [new Date(\"2019-05-28\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.FLEETWOOD_MAC,\n    support: [MUSICIANS.PRETENDERS],\n    venue: MUSIC_VENUES.WEMBLEY_STADIUM,\n    dates: [new Date(\"2019-06-16\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.SOPHIE,\n    favourite: true,\n    venue: MUSIC_VENUES.ROYAL_FESTIVAL_HALL,\n    dates: [new Date(\"2019-08-10\")],\n    company: [FRIENDS.JERRY]\n  },\n  {\n    festival: FESTIVALS.MANCHESTER_PRIDE,\n    lineup: [\n      MUSICIANS.BECKY_HILL,\n      MUSICIANS.BANANARAMA,\n      MUSICIANS.TULISA,\n      MUSICIANS.CHERYL,\n      MUSICIANS.ARIANA_GRANDE\n    ],\n    venue: MUSIC_VENUES.MAYFIELD_DEPOT,\n    dates: [new Date(\"2019-08-25\")],\n    company: [\n      FRIENDS.DAN,\n      FRIENDS.MARIA,\n      FRIENDS.ASH,\n      FRIENDS.SAM_B,\n      FRIENDS.LINDSAY_A\n    ]\n  },\n  {\n    headline: MUSICIANS.KIM_PETRAS,\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2019-08-27\")],\n    company: [FRIENDS.DARREN, FRIENDS.JERRY]\n  },\n  {\n    festival: FESTIVALS.CHINGFEST,\n    lineup: [MUSICIANS.INCOGNITO, MUSICIANS.NAO],\n    venue: MUSIC_VENUES.RIDGEWAY_PARK,\n    dates: [new Date(\"2019-08-31\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.MUNA,\n    venue: MUSIC_VENUES.VILLAGE_UNDERGROUND,\n    dates: [new Date(\"2019-09-10\")],\n    company: [FRIENDS.EMMA]\n  },\n  {\n    headline: MUSICIANS.JULIA_MICHAELS,\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-09-17\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.ELDERBROOK,\n    venue: MUSIC_VENUES.EARTH,\n    dates: [new Date(\"2019-10-12\")],\n    company: [FRIENDS.TONYA, FRIENDS.SONYA, FRIENDS.LAURA]\n  },\n  {\n    headline: MUSICIANS.CHARLI_XCX,\n    support: [MUSICIANS.RINA_SAWAYAMA],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-10-31\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.BANKS,\n    support: [MUSICIANS.GLOWIE],\n    venue: MUSIC_VENUES.ROUNDHOUSE,\n    dates: [new Date(\"2019-11-04\")],\n    company: [FRIENDS.DARREN],\n    favourite: true\n  },\n  {\n    headline: MUSICIANS.LAUV,\n    support: [MUSICIANS.CHELSEA_CUTLER],\n    venue: MUSIC_VENUES.KENTISH_TOWN_FORUM,\n    dates: [new Date(\"2019-11-05\")],\n    company: [FRIENDS.JERRY, FRIENDS.POPPY]\n  },\n  {\n    festival: FESTIVALS.HOMOBLOC,\n    lineup: [MUSICIANS.ROMY, MUSICIANS.ROBYN, MUSICIANS.HORSE_MEAT_DISCO],\n    venue: MUSIC_VENUES.MAYFIELD_DEPOT,\n    dates: [new Date(\"2019-11-09\")],\n    company: [FRIENDS.DAN, FRIENDS.MARIA]\n  },\n  {\n    headline: MUSICIANS.SABRINA_CLAUDIO,\n    support: [MUSICIANS.OH_ANNIE_OH],\n    venue: MUSIC_VENUES.ELECTRIC_BRIXTON,\n    dates: [new Date(\"2019-11-19\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.ROBINSON,\n    support: [MUSICIANS.NAVVY],\n    venue: MUSIC_VENUES.QUEEN_OF_HOXTON,\n    dates: [new Date(\"2019-11-20\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.FKA_TWIGS,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-11-25\")],\n    company: [FRIENDS.DARREN, FRIENDS.CAITLIN, FRIENDS.EMMA, FRIENDS.MEGAN]\n  },\n  {\n    headline: MUSICIANS.NAAZ,\n    support: [MUSICIANS.DYLAN],\n    venue: MUSIC_VENUES.CAMDEN_ASSEMBLY,\n    dates: [new Date(\"2019-11-27\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.MUNA,\n    support: [MUSICIANS.L_DEVINE],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-12-03\")],\n    company: [FRIENDS.LEWIS, FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.MELANIE_MARTINEZ,\n    support: [MUSICIANS.NAAZ],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2019-12-09\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    festival: FESTIVALS.AREA_10_NYE,\n    lineup: [MUSICIANS.MK],\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2019-12-31\")],\n    company: [FRIENDS.TOM, FRIENDS.TONYA, FRIENDS.SONYA]\n  }\n];\n","import { FRIENDS, MUSICIANS, TICKET_TYPES, MUSIC_VENUES } from \"@constants\";\n\nexport const GIGS_2020: Array<IGigCard> = [\n  {\n    headline: MUSICIANS.GRACEY,\n    venue: MUSIC_VENUES.LAYLOW,\n    dates: [new Date(\"2020-01-28\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.JOSEF_SALVAT,\n    venue: MUSIC_VENUES.MOTH_CLUB,\n    dates: [new Date(\"2020-02-05\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.KIM_PETRAS,\n    support: [MUSICIANS.ALEX_CHAPMAN],\n    venue: MUSIC_VENUES.SHEPHERDS_BUSH_EMPIRE,\n    dates: [new Date(\"2020-02-11\")],\n    company: [FRIENDS.DARREN]\n  },\n  {\n    headline: MUSICIANS.NASTY_CHERRY,\n    venue: MUSIC_VENUES.THE_GARAGE,\n    dates: [new Date(\"2020-03-03\")],\n    company: [FRIENDS.DARREN, FRIENDS.MEGAN],\n    ticketType: TICKET_TYPES.SEE_TICKETS_PRINT_AT_HOME\n  },\n  {\n    headline: MUSICIANS.CHRISTINE_AND_THE_QUEENS,\n    venue: MUSIC_VENUES.MOTH_CLUB,\n    dates: [new Date(\"2020-03-07\")],\n    favourite: true,\n    company: [FRIENDS.DARREN],\n    ticketType: TICKET_TYPES.GIGS_AND_TOURS_POSTAL\n  },\n  {\n    headline: MUSICIANS.CAROLINE_POLACHEK,\n    support: [MUSICIANS.SEGA_BODEGA],\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2020-03-11\")],\n    company: [FRIENDS.DARREN],\n    ticketType: TICKET_TYPES.DICE\n  },\n  {\n    headline: MUSICIANS.GEORGIA,\n    venue: MUSIC_VENUES.HEAVEN,\n    dates: [new Date(\"2020-03-12\")],\n    company: [FRIENDS.DARREN],\n    ticketType: TICKET_TYPES.DICE\n  },\n  // {\n  //   headline: MUSICIANS.ALLIE_X,\n  //   venue: MUSIC_VENUES.HEAVEN,\n  //   dates: [new Date(\"2020-06-04\"),\n  //   company: FRIENDS.DARREN,\n  //   ticketType: TICKET_TYPES.DICE,\n  // },\n  // {\n  //   festival: FESTIVALS.MAD_COOL,\n  //   lineup: [MUSICIANS.TWENTY_ONE_PILOTS],\n  //   venue: MUSIC_VENUES.IFEMA_MADRID,\n  //   dates: [new Date(\"2020-07-08\")],\n  //   company: [FRIENDS.DAN],\n  //   ticketType: TICKET_TYPES.FESTICKET_PDF\n  // },\n  // {\n  //   headline: MUSICIANS.LADY_GAGA,\n  //   venue: MUSIC_VENUES.TOTTENHAM_HOTSPUR_STADIUM,\n  //   dates: [new Date(\"2020-07-30\")],\n  //   company: [FRIENDS.RYAN, FRIENDS.DAN, FRIENDS.TOM]\n  // },\n  {\n    headline: MUSICIANS.CARIBOU,\n    venue: MUSIC_VENUES.BRIXTON_ACADEMY,\n    dates: [new Date(\"2020-09-13\")],\n    company: [FRIENDS.DARREN],\n    ticketType: TICKET_TYPES.TICKETMASTER_ETICKET\n  },\n  {\n    headline: MUSICIANS.SOPHIE,\n    support: [MUSICIANS.EARTHEATER],\n    venue: MUSIC_VENUES.OVAL_SPACE,\n    dates: [new Date(\"2020-10-17\")],\n    company: [FRIENDS.LEWIS, FRIENDS.JERRY],\n    ticketType: TICKET_TYPES.DICE\n  },\n  {\n    headline: MUSICIANS.LANE_8,\n    venue: MUSIC_VENUES.PRINTWORKS,\n    dates: [new Date(\"2020-10-25\")],\n    company: [FRIENDS.TONYA],\n    ticketType: TICKET_TYPES.DICE\n  },\n  {\n    headline: MUSICIANS.JON_HOPKINS,\n    venue: MUSIC_VENUES.ROYAL_ALBERT_HALL,\n    dates: [new Date(\"2020-12-04\")],\n    company: [FRIENDS.TONYA]\n  }\n];\n","import {\n  FRIENDS,\n  FESTIVALS,\n  MUSICIANS,\n  TICKET_TYPES,\n  MUSIC_VENUES\n} from \"@constants\";\n\nexport const GIGS_2021: Array<IGigCard> = [\n  {\n    festival: FESTIVALS.MIGHTY_HOOPLA,\n    venue: MUSIC_VENUES.BROCKWELL_PARK,\n    dates: [new Date(\"2021-06-05\")],\n    company: [\n      FRIENDS.TONYA,\n      FRIENDS.MARIA,\n      FRIENDS.TOM,\n      FRIENDS.RYAN,\n      FRIENDS.DARREN,\n      FRIENDS.SIAN,\n      FRIENDS.CAITLIN,\n      FRIENDS.DAN\n    ],\n    ticketType: TICKET_TYPES.KABOODLE_ETICKET\n  },\n  {\n    headline: MUSICIANS[1975],\n    venue: MUSIC_VENUES.FINSBURY_PARK,\n    dates: [new Date(\"2021-07-10\")],\n    company: [\n      FRIENDS.DAN,\n      FRIENDS.LEWIS,\n      FRIENDS.JERRY,\n      FRIENDS.CAITLIN,\n      FRIENDS.COBY_B\n    ],\n    ticketType: TICKET_TYPES.TICKETMASTER_ETICKET\n  }\n];\n","import { GIGS_2006 } from \"./gigs-2006\";\nimport { GIGS_2007 } from \"./gigs-2007\";\nimport { GIGS_2008 } from \"./gigs-2008\";\nimport { GIGS_2009 } from \"./gigs-2009\";\nimport { GIGS_2010 } from \"./gigs-2010\";\nimport { GIGS_2011 } from \"./gigs-2011\";\nimport { GIGS_2012 } from \"./gigs-2012\";\nimport { GIGS_2013 } from \"./gigs-2013\";\nimport { GIGS_2014 } from \"./gigs-2014\";\nimport { GIGS_2015 } from \"./gigs-2015\";\nimport { GIGS_2016 } from \"./gigs-2016\";\nimport { GIGS_2017 } from \"./gigs-2017\";\nimport { GIGS_2018 } from \"./gigs-2018\";\nimport { GIGS_2019 } from \"./gigs-2019\";\nimport { GIGS_2020 } from \"./gigs-2020\";\nimport { GIGS_2021 } from \"./gigs-2021\";\n\nconst ALL: Array<IGigCard> = [\n  ...GIGS_2006,\n  ...GIGS_2007,\n  ...GIGS_2008,\n  ...GIGS_2009,\n  ...GIGS_2010,\n  ...GIGS_2011,\n  ...GIGS_2012,\n  ...GIGS_2013,\n  ...GIGS_2014,\n  ...GIGS_2015,\n  ...GIGS_2016,\n  ...GIGS_2017,\n  ...GIGS_2018,\n  ...GIGS_2019,\n  ...GIGS_2020,\n  ...GIGS_2021\n];\n\nconst SPLIT_BY_YEAR: Array<Array<IGigCard>> = [\n  GIGS_2006,\n  GIGS_2007,\n  GIGS_2008,\n  GIGS_2009,\n  GIGS_2010,\n  GIGS_2011,\n  GIGS_2012,\n  GIGS_2013,\n  GIGS_2014,\n  GIGS_2015,\n  GIGS_2016,\n  GIGS_2017,\n  GIGS_2018,\n  GIGS_2019,\n  GIGS_2020,\n  GIGS_2021\n];\n\nexport const DATA = { ALL, SPLIT_BY_YEAR };\n","import {\n  MUSIC_VENUES,\n  FRIENDS as friends,\n  MUSICIANS as musicians,\n  FESTIVALS as festivals\n} from \"@constants\";\nimport { isInFuture } from \"utils\";\n\nimport { mapToCountedList } from \"../factory\";\nimport { DATA } from \"./data\";\n\nconst { ALL } = DATA;\n\nconst FAVOURITES: Array<IGigCard> = ALL.filter(item => item.favourite);\nconst UP_NEXT: Array<IGigCard> = ALL.filter((gig: IGigCard) =>\n  isInFuture(gig.dates)\n);\n\nexport const futureCount: number = UP_NEXT.length;\nexport const pastCount: number = ALL.length - futureCount;\n\nconst mapToCountedListWrapper = (params: any) =>\n  mapToCountedList({\n    ...params,\n    allData: ALL,\n    favouritedData: FAVOURITES\n  });\n\nconst BUCKET_LIST: Array<ICountedItem> = mapToCountedListWrapper({\n  bucketListMode: true,\n  items: musicians\n});\n\nconst FESTIVALS: Array<ICountedItem> = mapToCountedListWrapper({\n  items: festivals,\n  filter: \"festival\"\n});\n\nconst FRIENDS: Array<ICountedItem> = mapToCountedListWrapper({\n  items: friends,\n  filter: \"gigs\",\n  sortByPastAndFutureCount: true\n});\n\nconst MUSICIANS: Array<ICountedItem> = mapToCountedListWrapper({\n  items: musicians\n});\n\nconst VENUES: Array<ICountedItem> = mapToCountedListWrapper({\n  items: MUSIC_VENUES\n});\n\nexport const FACTORY = {\n  BUCKET_LIST,\n  MUSICIANS,\n  FESTIVALS,\n  FRIENDS,\n  UP_NEXT,\n  VENUES\n};\n","import { PAGE_SECTION_TITLES } from \"@constants\";\nimport { SVG_ICONS } from \"resources\";\n\nimport { FACTORY } from \"./factory\";\nimport { DATA } from \"./data\";\nimport { isInFuture } from \"utils\";\n\nconst { BUCKET_LIST, FESTIVALS, FRIENDS, MUSICIANS, UP_NEXT, VENUES } = FACTORY;\n\nconst SECTIONS_STATS: Array<IPageSection> = [\n  {\n    title: PAGE_SECTION_TITLES.BUCKET_LIST,\n    icon: SVG_ICONS.STARS,\n    data: { countedItems: BUCKET_LIST }\n  },\n  {\n    title: \"Festivals\",\n    icon: SVG_ICONS.PEACE_SIGN,\n    data: { countedItems: FESTIVALS }\n  },\n  {\n    title: \"Artists\",\n    icon: SVG_ICONS.ARTIST,\n    data: { countedItems: MUSICIANS },\n    count: MUSICIANS.length\n  },\n  {\n    title: PAGE_SECTION_TITLES.FRIENDS,\n    icon: SVG_ICONS.PEOPLE,\n    data: { countedItems: FRIENDS }\n  },\n  {\n    title: PAGE_SECTION_TITLES.UP_NEXT,\n    icon: SVG_ICONS.NOTEPAD,\n    data: { gigCards: UP_NEXT },\n    count: UP_NEXT.length\n  },\n  {\n    title: \"Venues\",\n    icon: SVG_ICONS.STADIUM,\n    data: { countedItems: VENUES },\n    count: VENUES.length\n  }\n].sort((a: IPageSection, b: IPageSection) => (a.title > b.title ? 1 : -1));\n\nconst SECTIONS_YEARS: Array<IPageSection> = DATA.SPLIT_BY_YEAR.map(\n  (year: Array<IGigCard>) => ({\n    title: year[0].dates[0].getFullYear().toString(),\n    count: year.length,\n    data: {\n      gigCards: year.filter((item: IGigCard) => !isInFuture(item.dates))\n    }\n  })\n);\n\nexport const sections: Array<IPageSection> = [\n  ...SECTIONS_STATS,\n  ...SECTIONS_YEARS\n];\n","import { pastCount, futureCount } from \"./factory\";\nimport { sections } from \"./sections\";\n\nexport const PAGE_GIGS: IPage = { pastCount, futureCount, sections };\n","import { INGREDIENTS, MEASUREMENTS, UNICODE, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.CHILLI_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.LIQUID_SMOKE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOFU,\n      quantity: 280,\n      measurement: MEASUREMENTS.GRAM\n    },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.CARROT, quantity: 4 },\n    { ingredient: INGREDIENTS.CELERY_STICK, quantity: 4 },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BASIL_FRESH,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OREGANO_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PUREE,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [\n    { ingredient: INGREDIENTS.SPAGHETTI },\n    { ingredient: INGREDIENTS.RICE_BROWN }\n  ],\n  [{ ingredient: INGREDIENTS.BREAD_GARLIC }]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 180 }),\n  \"make paste from yeast, soy, oil, crushed garlic, chilli powder, liquid smoke\",\n  \"drain tofu, use both fingers to crumble into small pieces\",\n  \"mix tofu with smokey paste until evenly covered\",\n  \"bake for 40 minutes in a non-stick loaf tin (stir tofu twice throughout, do not let it burn)\",\n  \"set tofu aside\",\n  \"fry onion in water so it never sticks or burns\",\n  \"when the onion has softened and the water has reduced, pour over some olive oil\",\n  \"add grated carrot, grated celery and finely diced mushrooms to frying pan\",\n  `meanwhile, blend basil with stock, ${UNICODE.TOMATO_PUREE}, black pepper, oregano and some water`,\n  \"pour blend over the frying vegetables, fry for about 10 minutes until water reduces\",\n  \"pour over chopped tomatoes\",\n  \"cover, simmer for around 30 minutes (stirring regularly)\",\n  \"stir in tofu, remove from heat\"\n];\n\nconst title: IRecipeTitle = \"bolognese\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst image: IImageSrc = PHOTOS_RECIPES.BOLOGNESE;\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const BOLOGNESE: IRecipeCard = {\n  title,\n  ingredients,\n  favourite: true,\n  makes,\n  serveWith,\n  diet,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.TOMATO_SUN_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.JAR\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.LIQUID_SMOKE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 750,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.SPINACH,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.NUTS_CASHEWS,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_BLACK,\n      quantity: 1.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.SPAGHETTI,\n      quantity: 400,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.ONION_WHITE_MEDIUM,\n      quantity: 2\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 7\n    },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS_CHESTNUT,\n      quantity: 300,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"thoroughly drain sun dried tomatoes from oil\",\n  \"chop tomatoes into many smaller pieces\",\n  \"marinade tomatoes in soy sauce and liquid smoke\",\n  \"chop the onion, mushroom and garlic\",\n  `blend almond milk with spinach, cashews, yeast, cornflour, salt and pepper`,\n  \"fry diced onion, crushed garlic, sliced mushrooms and thyme in butter (and some water) until softened\",\n  \"cook spaghetti as per packet instructions, drain and set aside\",\n  \"pour green sauce over frying vegetables, stirring until it thickens\",\n  \"remove from heat and stir in spaghetti and tomatoes until evenly covered\"\n];\n\nconst title: IRecipeTitle = \"carbonara\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.CARBONARA;\n\nexport const CARBONARA: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  method,\n  hide: true,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, UNICODE, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.PEPPER_MIXED, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS_CHESTNUT,\n      quantity: 300,\n      measurement: MEASUREMENTS.GRAM\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 5 },\n    {\n      ingredient: INGREDIENTS.BASIL_FRESH,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.HERBS_MIXED_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_BALSAMIC,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PUREE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.SPINACH,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.LENTIL_RED_DRY,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 5,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 1,\n      measurement: MEASUREMENTS.LITRE\n    },\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ],\n  [\n    { ingredient: INGREDIENTS.PASTA_LASAGNE_SHEET_DRIED, quantity: 10 },\n    { ingredient: INGREDIENTS.COURGETTE, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.CHEESE_VEGAN_SLICE,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.BREAD_GARLIC }]\n];\n\nconst method: IRecipeMethod = [\n  \"fry diced onion in oil and water for at least 5 minutes\",\n  \"add diced peppers, mushrooms, crushed garlic and fry for at least 10 minutes (replenishing the water to prevent burning)\",\n  `blend basil with stock powder, dried herbs, soy sauce, black pepper, balsamic vinegar, ${UNICODE.TOMATO_PUREE}, sugar and some water`,\n  \"pour basil blend into fried vegetables and stir throughly\",\n  \"add spinach and allow it to reduce\",\n  \"stir in chopped tomatoes and lentils\",\n  \"reduce heat, cover and simmer for at least 30 minutes\",\n  \"soak lasagne sheets in cold water\",\n  \"stir flour into medium hot olive oil\",\n  \"pour in the milk and whisk until it thickens (never give up, great arm workout)\",\n  \"remove from heat, season with salt and pepper\",\n  preheatOven({ degreesCelcius: 190 }),\n  `spoon ${UNICODE.THIRD} of each into an oven-proof dish (in the following order): ragu, lasagne sheets, white sauce, sliced raw courgettes`,\n  \"repeat previous step twice\",\n  \"seal the dish with vegan cheese slices\",\n  \"bake for 35 minutes\"\n];\nconst title: IRecipeTitle = \"lasagne\";\nconst makes: IRecipeMakes = { quantity: 6, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.LASAGNE;\n\nexport const LASAGNE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  diet,\n  serveWith,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.BUTTERNUT_SQUASH,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.ONION_WHITE_MEDIUM,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.LEEK,\n      quantity: 2\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 5\n    },\n    {\n      ingredient: INGREDIENTS.RICE_RISOTTO_ARBORIO,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 1,\n      measurement: MEASUREMENTS.LITRE\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BEANS_GREEN,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.SALT_ROCK_FRESH }],\n  [{ ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }],\n  [{ ingredient: INGREDIENTS.SAGE_FRESH, notes: \"crispy\" }]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 200 }),\n  \"roast evenly-cubed squash for 40 minutes (in some olive oil, salt and pepper)\",\n  \"fry diced onion and leek with crushed garlic in half the butter (and some water) for about 10 minutes until soft\",\n  \"toss in uncooked rice and stir for 2 minutes\",\n  \"boil water, then add 200ml at a time, replenishing as soon as the rice becomes almost dry\",\n  \"stir constantly and be patient\",\n  \"add finely sliced green beans shortly into the rice cooking\",\n  \"remove from heat, stir in squash, yeast, salt, pepper, remaining butter\"\n];\nconst title: IRecipeTitle = \"risotto\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const RISOTTO: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  method\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.ONION_RED_MEDIUM, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.CURRY_PASTE_ROGAN_JOSH,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.GINGER_FRESH,\n      quantity: 3,\n      measurement: MEASUREMENTS.CENTIMETRE\n    },\n    {\n      ingredient: INGREDIENTS.CORIANDER_FRESH,\n      quantity: 30,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.POTATO_SWEET,\n      quantity: 1,\n      notes: \"large\"\n    },\n    {\n      ingredient: INGREDIENTS.CHICKPEAS,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.PETITS_POIS_FROZEN,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK_COCONUT_CANNED,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.SPINACH,\n      quantity: 260,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.RICE }],\n  [{ ingredient: INGREDIENTS.KALE }, { ingredient: INGREDIENTS.POPPADOMS }]\n];\n\nconst method: IRecipeMethod = [\n  \"fry diced onion in oil, curry paste and some water on a medium heat for at least 10 minutes\",\n  \"meanwhile, blend coriander with some water\",\n  \"add grated ginger, diced sweet potato, drained chickpeas and blended coriander to frying pan\",\n  \"fry for about 20 minutes, regularly replenishing the water\",\n  \"add chopped tomatoes, bring to the boil\",\n  \"reduce heat and simmer for at least 30 minutes\",\n  \"stir in petit pois, coconut milk and spinach\"\n];\nconst title: IRecipeTitle = \"rogan josh\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.ROGAN_JOSH;\n\nexport const ROGAN_JOSH: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, UNICODE, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven, bakeForAbout } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.POTATO_BAKING, quantity: 3 },\n    { ingredient: INGREDIENTS.POTATO_SWEET, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 100,\n      measurement: MEASUREMENTS.MILLILITRE\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 5 },\n    { ingredient: INGREDIENTS.CARROT, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.MUSHROOMS_CHESTNUT,\n      quantity: 300,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.ROSEMARY_DRIED,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PUREE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.WINE_RED,\n      quantity: 250,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.PETITS_POIS_FROZEN,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON,\n      optional: true\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.ASPARAGUS, notes: \"pan-fried\" }]\n];\n\nconst method: IRecipeMethod = [\n  \"peel and chop potato into smallish chunks (it cooks quicker and makes it easier to mash)\",\n  \"boil potatoes for about 25 minutes until soft and easily mashable\",\n  \"mash potato, then stir in butter, salt, pepper and some water to loosen it\",\n  \"elsewhere, fry diced onion with crushed garlic, sliced mushrooms and diced carrot all together in the oil and some water\",\n  \"shower vegetables in salt, pepper and dried herbs\",\n  \"keep replenishing the vegetables with splashes of water so they never or stick to the saucepan\",\n  `add ${UNICODE.TOMATO_PUREE} and stock powder`,\n  // \"once softened, add red wine (and lentils)\",\n  \"once softened, stir in red wine\",\n  // \"stir continuously whilst simmering for at least 30 minutes, adding water where necessary\",\n  \"simmer for at least 30 minutes, adding water where necessary\",\n  preheatOven({ degreesCelcius: 180 }),\n  \"remove from heat, stir in cornflour, yeast flakes and peas\",\n  \"transfer filling to oven-proof dish, cover with mashed potato and fork lines onto the topping\",\n  bakeForAbout({ minutes: 40 })\n];\n\nconst title: IRecipeTitle = \"shepherd's pie\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.SHEPHERDS_PIE;\nconst makes: IRecipeMakes = { quantity: 7, measurement: MEASUREMENTS.PORTION };\n\nexport const SHEPHERDS_PIE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  hide: true,\n  method,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 5 },\n    {\n      ingredient: INGREDIENTS.GINGER_FRESH,\n      quantity: 3,\n      measurement: MEASUREMENTS.CENTIMETRE\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_WHITE_WINE,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 4,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.KETCHUP_TOMATO,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.CHILLI_CRUSHED_DRIED,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 300,\n      measurement: MEASUREMENTS.MILLILITRE\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.CORNFLOUR,\n      quantity: 1.5,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TOFU,\n      quantity: 280,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    { ingredient: INGREDIENTS.CARROT, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_RED, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_GREEN, quantity: 1 },\n    { ingredient: INGREDIENTS.PINEAPPLE, quantity: 1 }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.RICE_BASMATI }]\n];\n\nconst method: IRecipeMethod = [\n  \"mix cornflour with water, set solution aside\",\n  \"fry crushed garlic and grated ginger in a small saucepan for 1 minute\",\n  \"pour over soy, vinegar, ketchup, crushed chillis and water\",\n  \"add cornflour solution, stir for about 10 minutes until the sauce thickens, remove from heat\",\n  \"drain the tofu, chop into bite-sized chunks\",\n  \"mix cornflour with salt, pepper and oil\",\n  \"coat sides of tofu chunks in cornflour paste\",\n  \"fry tofu on medium-high heat for 5 minutes, set aside\",\n  \"chop pineapple, pepper and onion chunkily but slice carrot very thinly\",\n  \"fry vegetables in oil and some water until charred\",\n  \"toss in the pineapple, tofu and pour over the sauce\",\n  \"simmer for at least 5 minutes to let the flavours infuse, serve\"\n];\nconst title: IRecipeTitle = \"sweet and sour\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const SWEET_AND_SOUR: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  diet,\n  method\n};\n","import { BOLOGNESE } from \"./bolognese\";\nimport { CARBONARA } from \"./carbonara\";\nimport { LASAGNE } from \"./lasagne\";\nimport { RISOTTO } from \"./risotto\";\nimport { ROGAN_JOSH } from \"./rogan-josh\";\nimport { SHEPHERDS_PIE } from \"./shepherds-pie\";\nimport { SWEET_AND_SOUR } from \"./sweet-and-sour\";\n\nexport const MAINS: IRecipeGroup = {\n  category: \"mains\",\n  recipes: [\n    BOLOGNESE,\n    CARBONARA,\n    LASAGNE,\n    RISOTTO,\n    ROGAN_JOSH,\n    SHEPHERDS_PIE,\n    SWEET_AND_SOUR\n  ]\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.BASIL_FRESH,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.NUTS_PINE,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 4,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 3\n    },\n    {\n      ingredient: INGREDIENTS.LEMON_JUICE_FRESH,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_CIDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 50,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 25,\n      measurement: MEASUREMENTS.MILLILITRE\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"transfer all ingredients to blender\",\n  \"blend until smooth\",\n  \"store in refrigerator for up to 1 week\"\n];\n\nconst title: IRecipeTitle = \"pesto\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst makes: IRecipeMakes = { quantity: 100, measurement: MEASUREMENTS.GRAM };\n\nexport const PESTO: IRecipeCard = {\n  title,\n  ingredients,\n  diet,\n  makes,\n  method\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.PEPPER_RED, quantity: 1 },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 1 },\n\n    {\n      ingredient: INGREDIENTS.CHILLI_BIRD_EYE_FRESH,\n      quantity: 20,\n      measurement: MEASUREMENTS.GRAM,\n      notes: \"stalk removed\"\n    },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.VINEGAR_WHITE_WINE,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 10 },\n    { ingredient: INGREDIENTS.LEMON, quantity: 1, notes: \"zest and juice\" },\n    {\n      ingredient: INGREDIENTS.PAPRIKA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.OREGANO_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"transfer all ingredients to blender and blitz until smooth\",\n  \"transfer to a saucepan and heat on low for about 20 minutes\",\n  \"remove from heat, leave to cool\",\n  \"keep refrigerated in a jar for up to 2 weeks\"\n];\n\nconst title: IRecipeTitle = \"piri piri\";\nconst makes: IRecipeMakes = { quantity: 475, measurement: MEASUREMENTS.GRAM };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.PIRI_PIRI;\n\nexport const PIRI_PIRI: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { PESTO } from \"./pesto\";\nimport { PIRI_PIRI } from \"./piri-piri\";\n\nexport const SAUCES: IRecipeGroup = {\n  category: \"sauces\",\n  recipes: [PESTO, PIRI_PIRI]\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.ONION_WHITE_MEDIUM,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.GARLIC_CLOVE,\n      quantity: 3\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_RED,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.BEANS_HARICOT,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.TOMATO_PASSATA,\n      quantity: 500,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 1,\n      optional: true,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.STOCK_POWDER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 2,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA_SMOKED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.ALLSPICE_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"fry diced onion, garlic and pepper in oil (and some water if need be) for 5-10 minutes\",\n  \"transfer to slow cooker along with drained beans, passata and seasoning\",\n  \"cook on low for 8 hours or medium for 5 hours\"\n];\n\nconst title: IRecipeTitle = \"baked beans\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.BAKED_BEANS;\n\nexport const BAKED_BEANS: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.CAULIFLOWER_REGULAR, quantity: 1 },\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 200,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.TURMERIC_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.SWEET_CHILLI_SAUCE,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SOY_SAUCE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.LIME_JUICE_FRESH,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SRIRACHA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 2 },\n    { ingredient: INGREDIENTS.ONION_SPRING },\n    { ingredient: INGREDIENTS.SEEDS_SESAME }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 200 }),\n  \"mix flour, almond milk, salt, pepper, turmeric, paprika in large bowl to make batter\",\n  \"remove all leaves from cauliflower, cut vertically around the stem to release florets\",\n  \"cover all florets in the batter\",\n  \"use tongs to transfer each floret to baking tray\",\n  \"roast the cauliflower for 25 minutes\",\n  \"make bang bang sauce by mixing sweet chilli, soy, lime juice, sriracha, crushed garlic\",\n  \"toss sauce over cauliflower in a heated wok\",\n  \"pour over fried spring onion and sesame seeds\"\n];\n\nconst title: IRecipeTitle = \"bang bang cauliflower\";\nconst makes: IRecipeMakes = { quantity: 2, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const BANG_BANG_CAULIFLOWER: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.KALE,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA_SMOKED,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.CHILLI_POWDER,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 100 }),\n  \"wash and dry kale thoroughly, discard large stems, transfer to large mixing bowl\",\n  \"mix oil with seasoning in a small jug\",\n  \"pour seasoning over kale, toss thoroughly until evenly distributed\",\n  \"transfer seasoned kale to 2 baking trays\",\n  \"bake for 20 minutes, one tray on top of the other\",\n  \"switch tray positions, bake for further 15 minutes\",\n  \"remove from oven, leave to cool\"\n];\n\nconst title: IRecipeTitle = \"crispy kale\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.KALE_CRISPY;\nconst makes: IRecipeMakes = { quantity: 2, measurement: MEASUREMENTS.SERVING };\n\nexport const CRISPY_KALE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  image,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.POTATO_BAKING, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"peel potatoes and chop into small-ish chunks (to speed up the boiling process)\",\n  \"submerge potato chunks in boiling water for at least 25 minutes (until soft enough to easily mash)\",\n  \"drain the boiling water, then use a masher to break down the potato\",\n  \"dissolve salt in the water, then stir into the potato\",\n  \"stir in the butter, then season with black pepper\"\n];\n\nconst title: IRecipeTitle = \"mashed potato\";\nconst makes: IRecipeMakes = { quantity: 2, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.MASHED_POTATO;\n\nexport const MASHED_POTATO: IRecipeCard = {\n  ingredients,\n  title,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.AUBERGINE, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_RED, quantity: 1 },\n    { ingredient: INGREDIENTS.PEPPER_ORANGE, quantity: 1 },\n    { ingredient: INGREDIENTS.COURGETTE, quantity: 2 },\n    { ingredient: INGREDIENTS.ONION_WHITE_MEDIUM, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    { ingredient: INGREDIENTS.SALT_ROCK_FRESH },\n    { ingredient: INGREDIENTS.PEPPER_BLACK_FRESH }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.OIL_OLIVE,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    { ingredient: INGREDIENTS.GARLIC_CLOVE, quantity: 3 },\n    {\n      ingredient: INGREDIENTS.TOMATO_CHOPPED,\n      quantity: 2,\n      measurement: MEASUREMENTS.CAN\n    },\n    {\n      ingredient: INGREDIENTS.OREGANO_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.LEMON_JUICE,\n      quantity: 2,\n      optional: true,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 1,\n      optional: true,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 180 }),\n  \"chunkily chop the aubergine, courgette, peppers and onions and distribute evenly across 2 baking trays\",\n  \"drizzle the vegetables in oil, ensuring they are evenly coated, plus season with salt and pepper\",\n  \"roast the vegetables for 1 hour, shaking the veg half way through and switching the position of the trays in the oven\",\n  \"heat oil, lightly fry garlic in a sauceapan for 1 minute\",\n  \"add chopped tomatoes and dried herbs\",\n  \"cover and simmer for 45 minutes\",\n  \"remove sauce from heat, stir in lemon juice, sugar, salt and pepper\",\n  \"transfer all roasted veg to the deeper of the 2 baking trays, pour tomato sauce all over and ensure it is evenly coated\",\n  \"bake for a final 10 minutes\"\n];\n\nconst title: IRecipeTitle = \"ratatouille\";\nconst makes: IRecipeMakes = { quantity: 5, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.RATATOUILLE;\n\nexport const RATATOUILLE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image,\n  favourite: true\n};\n","import { BAKED_BEANS } from \"./baked-beans\";\nimport { BANG_BANG_CAULIFLOWER } from \"./bang-bang-cauliflower\";\nimport { CRISPY_KALE } from \"./crispy-kale\";\nimport { MASHED_POTATO } from \"./mashed-potato\";\nimport { RATATOUILLE } from \"./ratatouille\";\nimport { TOFU_SCRAMBLE } from \"./tofu-scramble\";\n\nexport const SIDES: IRecipeGroup = {\n  category: \"sides\",\n  recipes: [\n    BAKED_BEANS,\n    BANG_BANG_CAULIFLOWER,\n    CRISPY_KALE,\n    MASHED_POTATO,\n    RATATOUILLE,\n    TOFU_SCRAMBLE\n  ]\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.TOFU,\n      quantity: 280,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.YEAST_NUTRITIONAL,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.TURMERIC_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PAPRIKA_SMOKED,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_BLACK,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.PEPPER_BLACK_GROUND,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.THYME_DRIED,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 3,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  \"drain tofu, crumble into small pieces (using both fingers) into a large mixing bowl\",\n  \"in a small jug, make paste from yeast, turmeric, paprika, salt, pepper, thyme, water and oil\",\n  \"pour the paste over the crumbled tofu and stir until evenly covered\",\n  \"heat the butter over a medium heat in a small saucepan\",\n  \"fry tofu until heated through\"\n];\n\nconst title: IRecipeTitle = \"tofu scramble\";\nconst makes: IRecipeMakes = { quantity: 4, measurement: MEASUREMENTS.PORTION };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const TOFU_SCRAMBLE: IRecipeCard = {\n  ingredients,\n  makes,\n  method,\n  title,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst {\n  LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN,\n  FOLD_IN_FLOUR_MIX,\n  preheatOven,\n  bakeForAbout,\n  transferToLoafTin\n} = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    { ingredient: INGREDIENTS.BANANA, quantity: 4, notes: \"very ripe\" },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 75,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.FLOUR_SELF_RAISING,\n      quantity: 225,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BICARBONATE_OF_SODA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.CINNAMON_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.NUTMEG_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_ICING,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"blend (peeled) bananas with butter, sugar, oil and vanilla\",\n  \"in a small mixing bowl, weigh flour and stir in the baking powder, bicarbonate of soda, cinnamon and nutmeg\",\n  FOLD_IN_FLOUR_MIX,\n  transferToLoafTin({ sunkenCentre: true }),\n  bakeForAbout({ minutes: 40, skewer: true }),\n  LEAVE_TO_COOL_BEFORE_REMOVING_FROM_LOAF_TIN,\n  \"make butter icing by whisking butter with icing sugar and water\",\n  \"evenly spread icing over the cake\"\n];\n\nconst title: IRecipeTitle = \"banana cake\";\nconst makes: IRecipeMakes = { quantity: 10, measurement: MEASUREMENTS.SLICE };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.BANANA_CAKE;\n\nexport const BANANA_CAKE: IRecipeCard = {\n  title,\n  favourite: true,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.EGGS,\n      quantity: 1\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_SELF_RAISING,\n      quantity: 175,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK,\n      quantity: 200,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.BLUEBERRIES_FRESH,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.BANANA }],\n  [{ ingredient: INGREDIENTS.RASPBERRIES_FRESH }],\n  [\n    { ingredient: INGREDIENTS.NECTAR_AGAVE },\n    { ingredient: INGREDIENTS.SYRUP_GOLDEN }\n  ],\n  [{ ingredient: INGREDIENTS.SUGAR_ICING }],\n  [{ ingredient: INGREDIENTS.CINNAMON_GROUND }]\n];\n\nconst method: IRecipeMethod = [\n  \"whisk all ingredients except blueberries\",\n  \"fold blueberries into pancake batter\",\n  \"brush frying pan with sunflower oil and heat\",\n  \"drop dessertspoonfuls of batter onto frying pan\",\n  \"flip pancakes once bases are golden brown\",\n  \"remove from heat and serve\"\n];\n\nconst title: IRecipeTitle = \"blueberry pancakes\";\nconst diet: IRecipeDiet = DIETS.VEGETARIAN;\n\nexport const BLUEBERRY_PANCAKES: IRecipeCard = {\n  title,\n  ingredients,\n  serveWith,\n  method,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven, FOLD_IN_FLOUR_MIX, bakeForAbout } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.CHOCOLATE_DARK,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 75,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.COCOA_POWDER,\n      quantity: 2,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.MILK_ALMOND_UNSWEETENED,\n      quantity: 200,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.RASPBERRIES_FRESH,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"in a large mixing bowl, add chocolate (broken into chunks), oil and butter\",\n  \"rest the large mixing bowl over a small saucepan of hot (not boiling) water and stir until melted, then remove from heat\",\n  \"in a small mixing bowl, weigh flour and combine with sugar and cocoa powder\",\n  \"stir in almond milk and vanilla to the melted chocolate\",\n  FOLD_IN_FLOUR_MIX,\n  \"gently introduce the raspberries to the mixture\",\n  \"transfer to a non-stick baking tin\",\n  bakeForAbout({ minutes: 40, skewer: true }),\n  \"transfer to fridge for 1 hour to speed up cooling and increase fudginess\",\n  \"store in airtight container\"\n];\n\nconst title: IRecipeTitle = \"brownies\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.BROWNIES;\n\nexport const BROWNIES: IRecipeCard = {\n  ingredients,\n  method,\n  diet,\n  image,\n  title,\n  hide: true\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 125,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.CINNAMON_GROUND,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BICARBONATE_OF_SODA,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 115,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN_LIGHT,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    { ingredient: INGREDIENTS.EGGS, quantity: 1 },\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.OATS,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.RAISINS,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst title: IRecipeTitle = \"cookies\";\nconst makes: IRecipeMakes = { quantity: 20, measurement: \"cookie\" };\nconst diet: IRecipeDiet = DIETS.VEGETARIAN;\n\nexport const COOKIES: IRecipeCard = {\n  ingredients,\n  title,\n  makes,\n  favourite: true,\n  diet\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 350,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 175,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 175,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ],\n  [\n    {\n      ingredient: INGREDIENTS.APPLE_BRAMLEY,\n      quantity: 1,\n      measurement: MEASUREMENTS.KILOGRAM,\n      notes: \"weighs nearer 700g after peeling and coring\"\n    },\n    {\n      ingredient: INGREDIENTS.WATER,\n      quantity: 350,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.RASPBERRIES_FROZEN,\n      quantity: 350,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BLACKBERRIES_FROZEN,\n      quantity: 500,\n      measurement: MEASUREMENTS.GRAM\n    },\n\n    {\n      ingredient: INGREDIENTS.CINNAMON_GROUND,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_DEMERARA,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst serveWith: Array<Array<IServeWithItem>> = [\n  [{ ingredient: INGREDIENTS.CREAM_OAT }]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 160 }),\n  \"mix sieved flour and sieved caster sugar\",\n  \"introduce chunks of butter, use fingertips to form light crumble but don't overwork\",\n  \"blind bake the crumble topping for 40 minutes (shaking half way through)\",\n  \"peel, core and chop the apples into medium chunks\",\n  \"stew apple in the water until softened, remove from heat\",\n  \"stir in demerara sugar, raspberries, blackberries and cinnamon\",\n  \"transfer fruit to oven dish and cover with the crumble topping\",\n  \"bake for 20 minutes\",\n  \"remove from oven, leave to cool for at least 5 minutes before serving\"\n];\n\nconst makes: IRecipeMakes = { quantity: 8, measurement: MEASUREMENTS.PORTION };\nconst title: IRecipeTitle = \"crumble\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.CRUMBLE;\n\nexport const CRUMBLE: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  serveWith,\n  favourite: true,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\nimport { PHOTOS_RECIPES } from \"resources\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.APRICOTS_DRIED,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BLUEBERRIES_DRIED,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.CRANBERRIES_DRIED,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OATS,\n      quantity: 200,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.5,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 140,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SYRUP_GOLDEN,\n      quantity: 90,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_BROWN,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"in a large mixing bowl, stir finely chopped fruit and salt into the oats\",\n  \"melt butter in a saucepan with golden syrup and sugar\",\n  \"add melted butter mix to oat mix and stir thoroughly\",\n  \"transfer mixture to non-stick loaf tin, flatten to cover the whole base\",\n  \"bake for 15-20 minutes (depending how gooey you like it, remembering it will solidify more overnight)\",\n  \"leave to cool before cutting into suitably-sized chunks\"\n];\n\nconst title: IRecipeTitle = \"flapjacks\";\nconst makes: IRecipeMakes = { quantity: 12, measurement: MEASUREMENTS.CHUNK };\nconst diet: IRecipeDiet = DIETS.VEGAN;\nconst image: IImageSrc = PHOTOS_RECIPES.FLAPJACKS;\n\nexport const FLAPJACKS: IRecipeCard = {\n  title,\n  ingredients,\n  makes,\n  method,\n  diet,\n  image\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst {\n  preheatOven,\n  FOLD_IN_FLOUR_MIX,\n  transferToLoafTin,\n  bakeForAbout\n} = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.MILK_COCONUT_CANNED,\n      quantity: 1,\n      measurement: MEASUREMENTS.CAN\n    },\n\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 150,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.OIL_SUNFLOWER,\n      quantity: 100,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    { ingredient: INGREDIENTS.LEMON_LARGE, quantity: 2 },\n    {\n      ingredient: INGREDIENTS.LEMON_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON,\n      optional: true\n    },\n    {\n      ingredient: INGREDIENTS.VANILLA_EXTRACT,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.FLOUR_SELF_RAISING,\n      quantity: 250,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BICARBONATE_OF_SODA,\n      quantity: 1,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    }\n  ],\n  [\n    { ingredient: INGREDIENTS.LEMON_LARGE, quantity: 1 },\n    {\n      ingredient: INGREDIENTS.SUGAR_GRANULATED,\n      quantity: 100,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 150 }),\n  \"in a large mixing bowl, whisk the coconut milk with the sugar, oil and lemon juice for at least 3 minutes\",\n  \"stir in the lemon zest, vanilla extract and lemon extract\",\n  \"in a small mixing bowl, weigh flour and combine with baking powder, bicarbonate of soda and salt\",\n  FOLD_IN_FLOUR_MIX,\n  transferToLoafTin({}),\n  bakeForAbout({ minutes: 40, skewer: true }),\n  \"make drizzle topping from zest and juice of lemon plus sugar\",\n  \"leave cake to cool for at least 30 minutes, prod a few holes in the cake\",\n  \"evenly coat drizzle topping\"\n];\n\nconst title: IRecipeTitle = \"lemon drizzle\";\nconst makes: IRecipeMakes = { quantity: 10, measurement: MEASUREMENTS.SLICE };\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const LEMON_DRIZZLE: IRecipeCard = {\n  title,\n  ingredients,\n  diet,\n  makes,\n  method,\n  hide: true\n};\n","import { INGREDIENTS, MEASUREMENTS, DIETS } from \"@constants\";\n\nimport { recipeMethodEntries } from \"utils\";\n\nconst { preheatOven, bakeForAbout } = recipeMethodEntries();\n\nconst ingredients: Array<Array<IRecipeIngredient>> = [\n  [\n    {\n      ingredient: INGREDIENTS.FLOUR_PLAIN,\n      quantity: 165,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.BAKING_POWDER,\n      quantity: 1,\n      measurement: MEASUREMENTS.TABLESPOON\n    },\n    {\n      ingredient: INGREDIENTS.SUGAR_CASTER_GOLDEN,\n      quantity: 25,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.SALT_TABLE,\n      quantity: 0.25,\n      measurement: MEASUREMENTS.TEASPOON\n    },\n    {\n      ingredient: INGREDIENTS.BUTTER_VEGAN,\n      quantity: 40,\n      measurement: MEASUREMENTS.GRAM\n    },\n    {\n      ingredient: INGREDIENTS.MILK_OAT,\n      quantity: 85,\n      measurement: MEASUREMENTS.MILLILITRE\n    },\n    {\n      ingredient: INGREDIENTS.RAISINS,\n      quantity: 50,\n      measurement: MEASUREMENTS.GRAM\n    }\n  ]\n];\n\nconst method: IRecipeMethod = [\n  preheatOven({ degreesCelcius: 200, bakingTray: true }),\n  \"sieve flour and baking powder, combine with sugar and salt\",\n  \"add butter, use fingertips to form fine crumbs\",\n  \"dust the kitchen worktop with flour\",\n  \"slightly warm the milk and pour into the flour mix, use a knife to combine the ingredients\",\n  \"fold in the the raisins\",\n  \"roll out the dough on the worktop to a suitable thickness\",\n  \"cut out scone shapes and place on a baking tray\",\n  bakeForAbout({ minutes: 10, wellRisen: true })\n];\n\nconst title: IRecipeTitle = \"scones\";\nconst diet: IRecipeDiet = DIETS.VEGAN;\n\nexport const SCONES: IRecipeCard = {\n  ingredients,\n  method,\n  diet,\n  title\n};\n","import { MAINS } from \"./mains\";\nimport { SAUCES } from \"./sauces\";\nimport { SIDES } from \"./sides\";\nimport { SWEETS } from \"./sweets\";\nimport { RECIPES_COMING_SOON as COMING_SOON } from \"./recipes-coming-soon\";\n\nconst CATEGORISED: Array<IRecipeGroup> = [MAINS, SIDES, SAUCES, SWEETS];\n\nexport const DATA = { CATEGORISED, COMING_SOON };\n","import { BANANA_CAKE } from \"./banana-cake\";\nimport { BLUEBERRY_PANCAKES } from \"./blueberry-pancakes\";\nimport { BROWNIES } from \"./brownies\";\nimport { COOKIES } from \"./cookies\";\nimport { CRUMBLE } from \"./crumble\";\nimport { FLAPJACKS } from \"./flapjacks\";\nimport { LEMON_DRIZZLE } from \"./lemon-drizzle\";\nimport { SCONES } from \"./scones\";\n\nexport const SWEETS: IRecipeGroup = {\n  category: \"sweets\",\n  recipes: [\n    BANANA_CAKE,\n    BLUEBERRY_PANCAKES,\n    BROWNIES,\n    COOKIES,\n    CRUMBLE,\n    FLAPJACKS,\n    LEMON_DRIZZLE,\n    SCONES\n  ]\n};\n","const recipesComingSoon: Array<string> = [\n  \"gingerbread\",\n  \"spinach sweet potato hash\",\n  \"shortbread\",\n  \"courgette rösti fritters\",\n  \"key lime pie\",\n  \"meatball tagine\",\n  \"aubergine teriyaki\",\n  \"loaded potato skins\",\n  \"mushroom stroganoff\",\n  \"carrot and ginger cake\",\n  \"jackfruit mac\",\n  \"lemon meringue pie\",\n  \"chilli sin carne\",\n  \"passionfruit cheesecake\",\n  \"victoria sponge\",\n  \"thai green curry\",\n  \"dahl\"\n];\n\nexport const RECIPES_COMING_SOON: Array<ICountedItem> = recipesComingSoon\n  .sort((a, b) => (a > b ? 1 : -1))\n  .map(item => ({\n    text: item,\n    countInfoIrrelevant: true,\n    futureCount: 0,\n    pastCount: 0\n  }));\n","import { DATA } from \"./data\";\n\nconst SECTIONS_RECIPE_GROUPS: Array<IPageSection> = DATA.CATEGORISED.map(\n  ({ category, recipes }: IRecipeGroup) => ({\n    title: category,\n    data: { recipeCards: recipes },\n    isStatic: true\n  })\n);\n\nconst SECTION_COMING_SOON: IPageSection = {\n  title: \"Coming Soon\",\n  data: { countedItems: DATA.COMING_SOON }\n};\n\nconst sections: Array<IPageSection> = [\n  ...SECTIONS_RECIPE_GROUPS,\n  SECTION_COMING_SOON\n];\n\nexport const PAGE_RECIPES: IPage = { sections };\n","import { PLAYS, THEATRE_VENUES, FRIENDS } from \"@constants\";\n\nexport const THEATRE_2016: Array<ITheatreCard> = [\n  {\n    play: PLAYS.MIDSUMMER_NIGHTS_DREAM,\n    theatre: THEATRE_VENUES.ROYAL_SHAKESPEARE,\n    dates: [new Date(\"2016-06-17\")],\n    company: [FRIENDS.SIAN]\n  },\n  {\n    play: PLAYS[1984],\n    theatre: THEATRE_VENUES.PLAYHOUSE,\n    dates: [new Date(\"2016-08-13\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    favourite: true\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS } from \"@constants\";\n\nexport const THEATRE_2017: Array<ITheatreCard> = [\n  {\n    play: PLAYS.UGLY_LIES_THE_BONE,\n    theatre: THEATRE_VENUES.NATIONAL,\n    dates: [new Date(\"2017-03-25\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    play: PLAYS.KINKY_BOOTS,\n    theatre: THEATRE_VENUES.ADELPHI,\n    dates: [new Date(\"2017-05-23\")],\n    company: [FRIENDS.SIAN]\n  },\n  {\n    play: PLAYS.MATILDA,\n    theatre: THEATRE_VENUES.CAMBRIDGE,\n    dates: [new Date(\"2017-06-07\")],\n    company: [FRIENDS.SIAN, FRIENDS.LUKE_S]\n  },\n  {\n    play: PLAYS.YOUNG_MARX,\n    theatre: THEATRE_VENUES.BRIDGE,\n    dates: [new Date(\"2017-10-24\")],\n    company: [FRIENDS.JHC, FRIENDS.JOE, FRIENDS.JAMIE, FRIENDS.AISHA]\n  },\n  {\n    play: PLAYS.FERRYMAN,\n    favourite: true,\n    theatre: THEATRE_VENUES.GIELGUD,\n    dates: [new Date(\"2017-11-26\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS, ACTORS } from \"@constants\";\n\nexport const THEATRE_2018: Array<ITheatreCard> = [\n  {\n    play: PLAYS.FROZEN,\n    theatre: THEATRE_VENUES.ROYAL_HAYMARKET,\n    dates: [new Date(\"2018-04-14\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    cast: [ACTORS.SURANNE_JONES, ACTORS.NINA_SOSANYA, ACTORS.JASON_WATKINS]\n  },\n  {\n    play: PLAYS.EVERYBODYS_TALKING_ABOUT_JAMIE,\n    cast: [ACTORS.JOHN_MCCREA],\n    theatre: THEATRE_VENUES.APOLLO,\n    dates: [new Date(\"2018-05-12\")],\n    company: [FRIENDS.SIAN]\n  },\n  {\n    play: PLAYS.CONSENT,\n    cast: [ACTORS.SIAN_CLIFFORD, ACTORS.ADAM_JAMES, ACTORS.LEE_INGLEBY],\n    theatre: THEATRE_VENUES.HAROLD_PINTER,\n    dates: [new Date(\"2018-06-30\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    play: PLAYS.THAT_GIRL,\n    cast: [ACTORS.HATTY_JONES],\n    theatre: THEATRE_VENUES.OLD_RED_LION,\n    dates: [new Date(\"2018-09-05\")],\n    company: [\n      FRIENDS.JHC,\n      FRIENDS.JOE,\n      FRIENDS.JAMIE,\n      FRIENDS.LEWIS,\n      FRIENDS.DOM\n    ]\n  },\n  {\n    play: PLAYS.DUST,\n    theatre: THEATRE_VENUES.TRAFALGAR_STUDIOS,\n    cast: [ACTORS.MILLY_THOMAS],\n    dates: [new Date(\"2018-10-08\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    favourite: true\n  },\n  {\n    play: PLAYS.INHERITANCE,\n    theatre: THEATRE_VENUES.NOEL_COWARD,\n    dates: [new Date(\"2018-10-27\")],\n    company: [FRIENDS.MUM],\n    favourite: true\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS, ACTORS } from \"@constants\";\n\nexport const THEATRE_2019: Array<ITheatreCard> = [\n  {\n    play: PLAYS.WICKED,\n    theatre: THEATRE_VENUES.APOLLO_VICTORIA,\n    dates: [new Date(\"2019-01-12\")],\n    company: [FRIENDS.DAN, FRIENDS.MARIA]\n  },\n  {\n    play: PLAYS.LEAVE_TO_REMAIN,\n    theatre: THEATRE_VENUES.LYRIC,\n    dates: [new Date(\"2019-01-22\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    play: PLAYS.HOME_IM_DARLING,\n    cast: [ACTORS.KATHERINE_PARKINSON],\n    theatre: THEATRE_VENUES.DUKE_OF_YORKS,\n    dates: [new Date(\"2019-03-04\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    play: PLAYS.MIDSUMMER_NIGHTS_DREAM,\n    cast: [\n      ACTORS.GWENDOLINE_CHRISITE,\n      ACTORS.DAVID_MOORST,\n      ACTORS.OLIVER_CHRIS,\n      ACTORS.HAMMED_ANIMASHAUN\n    ],\n    theatre: THEATRE_VENUES.BRIDGE,\n    dates: [new Date(\"2019-08-08\")],\n    company: [FRIENDS.JHC, FRIENDS.JERRY, FRIENDS.JOE, FRIENDS.LEWIS]\n  },\n  {\n    play: PLAYS.SON,\n    cast: [ACTORS.LAURIE_KYNASTON],\n    theatre: THEATRE_VENUES.DUKE_OF_YORKS,\n    dates: [new Date(\"2019-09-28\")],\n    company: [FRIENDS.MUM]\n  },\n  {\n    play: PLAYS.LOST_UNFOUND,\n    theatre: THEATRE_VENUES.WHITE_BEAR,\n    dates: [new Date(\"2019-10-09\")],\n    company: [FRIENDS.JERRY, FRIENDS.LEWIS, FRIENDS.DOM, FRIENDS.JAMIE]\n  },\n\n  {\n    play: PLAYS.LUNGS,\n    theatre: THEATRE_VENUES.OLD_VIC,\n    cast: [ACTORS.CLAIRE_FOY, ACTORS.MATT_SMITH],\n    dates: [new Date(\"2019-10-26\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    favourite: true\n  },\n  {\n    play: PLAYS.AFTERGLOW,\n    cast: [ACTORS.PETER_MCPHERSON, ACTORS.ADI_CHUGH, ACTORS.BENJAMIN_ALUWIHARE],\n    theatre: THEATRE_VENUES.WATERLOO_EAST,\n    dates: [new Date(\"2019-11-30\")],\n    company: [FRIENDS.DAN]\n  }\n];\n","import { PLAYS, THEATRE_VENUES, FRIENDS, ACTORS } from \"@constants\";\n\nexport const THEATRE_2020: Array<ITheatreCard> = [\n  {\n    play: PLAYS.WAITRESS,\n    theatre: THEATRE_VENUES.ADELPHI,\n    dates: [new Date(\"2020-02-18\")],\n    company: [FRIENDS.DARREN],\n    cast: [ACTORS.SARA_BAREILLES]\n  },\n  {\n    play: PLAYS.UNCLE_VANYA,\n    theatre: THEATRE_VENUES.HAROLD_PINTER,\n    dates: [new Date(\"2020-02-19\")],\n    cast: [ACTORS.AIMEE_LOU_WOOD],\n    company: [FRIENDS.MUM]\n  }\n  // {\n  //   play: PLAYS[\"4000_MILES\"],\n  //   theatre: THEATRE_VENUES.OLD_VIC,\n  //   dates: [new Date(\"2020-05-09\"),\n  //   cast: ACTORS.TIMOTHEE_CHALAMET,\n  //   company: [FRIENDS.MUM, FRIENDS.EMMA]\n  // }\n];\n","import { THEATRE_2016 } from \"./theatre-2016\";\nimport { THEATRE_2017 } from \"./theatre-2017\";\nimport { THEATRE_2018 } from \"./theatre-2018\";\nimport { THEATRE_2019 } from \"./theatre-2019\";\nimport { THEATRE_2020 } from \"./theatre-2020\";\n\nconst ALL: Array<ITheatreCard> = [\n  ...THEATRE_2016,\n  ...THEATRE_2017,\n  ...THEATRE_2018,\n  ...THEATRE_2019,\n  ...THEATRE_2020\n];\n\nconst SPLIT_BY_YEAR: Array<Array<ITheatreCard>> = [\n  THEATRE_2016,\n  THEATRE_2017,\n  THEATRE_2018,\n  THEATRE_2019,\n  THEATRE_2020\n];\n\nexport const DATA = { ALL, SPLIT_BY_YEAR };\n","import {\n  ACTORS as actors,\n  FRIENDS as friends,\n  PLAYS as plays,\n  THEATRE_VENUES\n} from \"@constants\";\nimport { isInFuture } from \"utils\";\n\nimport { mapToCountedList } from \"../factory\";\nimport { DATA } from \"./data\";\n\nconst { ALL } = DATA;\n\nconst DATA_FAVOURITES: Array<ITheatreCard> = ALL.filter(item => item.favourite);\nconst UP_NEXT: Array<ITheatreCard> = ALL.filter(theatreTrip =>\n  isInFuture(theatreTrip.dates)\n);\n\nconst mapToCountedListWrapper = (params: any) =>\n  mapToCountedList({\n    ...params,\n    allData: ALL,\n    favouritedData: DATA_FAVOURITES\n  });\n\nconst ACTORS: Array<ICountedItem> = mapToCountedListWrapper({\n  items: actors\n});\n\nconst FRIENDS: Array<ICountedItem> = mapToCountedListWrapper({\n  items: friends,\n  filter: \"theatre\",\n  sortByPastAndFutureCount: true\n});\n\nconst PLAYS: Array<ICountedItem> = mapToCountedListWrapper({\n  items: plays\n});\n\nconst VENUES: Array<ICountedItem> = mapToCountedListWrapper({\n  items: THEATRE_VENUES\n});\n\nexport const FACTORY = { ACTORS, FRIENDS, PLAYS, VENUES, UP_NEXT };\n","import { PAGE_SECTION_TITLES } from \"@constants\";\nimport { SVG_ICONS } from \"resources\";\nimport { isInFuture } from \"utils\";\n\nimport { FACTORY } from \"./factory\";\nimport { DATA } from \"./data\";\n\nconst { ACTORS, FRIENDS, PLAYS, VENUES, UP_NEXT } = FACTORY;\n\nconst SECTIONS_STATS: Array<IPageSection> = [\n  {\n    title: \"Actors\",\n    icon: SVG_ICONS.ARTIST,\n    data: { countedItems: ACTORS }\n  },\n  {\n    title: PAGE_SECTION_TITLES.FRIENDS,\n    icon: SVG_ICONS.PEOPLE,\n    data: { countedItems: FRIENDS }\n  },\n  {\n    title: \"Plays\",\n    icon: SVG_ICONS.BOOK,\n    data: { countedItems: PLAYS },\n    count: PLAYS.length\n  },\n  {\n    title: \"Theatres\",\n    icon: SVG_ICONS.THEATRE,\n    data: { countedItems: VENUES },\n    count: VENUES.length\n  },\n  {\n    title: PAGE_SECTION_TITLES.UP_NEXT,\n    icon: SVG_ICONS.NOTEPAD,\n    data: { theatreCards: UP_NEXT }\n  }\n];\n\nconst SECTIONS_YEARS: Array<IPageSection> = DATA.SPLIT_BY_YEAR.map(\n  (year: Array<ITheatreCard>) => ({\n    title: year[0].dates[0].getFullYear().toString(),\n    count: year.length,\n    data: {\n      theatreCards: year.filter(\n        (theatreVisit: ITheatreCard) => !isInFuture(theatreVisit.dates)\n      )\n    }\n  })\n);\n\nexport const sections: Array<IPageSection> = [\n  ...SECTIONS_STATS,\n  ...SECTIONS_YEARS\n];\n","import { sections } from \"./sections\";\n\nexport const PAGE_THEATRE: IPage = { sections };\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_1997: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.SPAIN.islands.TENERIFE],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"1997-02-05\"), new Date(\"1997-02-12\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_1998: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.SPAIN.islands.LANZAROTE],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"1998-02-01\"), new Date(\"1998-02-14\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_1999: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.FRANCE.attractions.DISNEYLAND_PARIS],\n    subtitle: [LOCATIONS.FRANCE],\n    dates: [new Date(\"1999-05-27\"), new Date(\"1999-05-30\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.SPAIN.islands.MINORCA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"1999-07-23\"), new Date(\"1999-08-06\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2000: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.SPAIN.islands.MINORCA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2000-07-28\"), new Date(\"2000-08-11\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2001: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.SPAIN.islands.IBIZA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2001-08-20\"), new Date(\"2001-09-03\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2002: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.USA.states.FLORIDA],\n    subtitle: [LOCATIONS.USA],\n    hidden: [\n      LOCATIONS.USA.attractions.BUSCH_GARDENS_TAMPA,\n      LOCATIONS.USA.attractions.DISNEY_EPCOT,\n      LOCATIONS.USA.attractions.UNIVERSALS_ISLANDS_OF_ADVENTURE,\n      LOCATIONS.USA.attractions.UNIVERSAL_STUDIOS_FLORIDA,\n      LOCATIONS.USA.attractions.DISNEY_ANIMAL_KINGDOM,\n      LOCATIONS.USA.attractions.DISNEY_MGM_STUDIOS,\n      LOCATIONS.USA.attractions.DISNEY_MAGIC_KINGDOM,\n      LOCATIONS.USA.attractions.BLIZZARD_BEACH,\n      LOCATIONS.USA.attractions.SEAWORLD_ORLANDO\n    ],\n    dates: [new Date(\"2002-05-23\"), new Date(\"2002-06-12\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2003: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.PORTUGAL],\n    hidden: [LOCATIONS.PORTUGAL.attractions.ZOOMARINE],\n    dates: [new Date(\"2003-07-31\"), new Date(\"2003-08-14\")],\n    company: [FRIENDS.DAD, FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2004: Array<ITravelCard> = [\n  {\n    title: [\n      LOCATIONS.USA.states.NEW_YORK,\n      LOCATIONS.CANADA.cities.NIAGARA_FALLS,\n      LOCATIONS.USA.states.MASSACHUSETTS\n    ],\n    subtitle: [\n      LOCATIONS.USA.cities.NEW_YORK_CITY,\n      LOCATIONS.CANADA.cities.NIAGARA_FALLS,\n      LOCATIONS.USA.cities.BOSTON_MASSACHUSETTS,\n      LOCATIONS.USA.cities.SPRINGFIELD_MASSACHUSETTS,\n      LOCATIONS.USA.regions.CAPE_COD,\n      LOCATIONS.USA.islands.MARTHAS_VINEYARD\n    ],\n    hidden: [\n      LOCATIONS.USA,\n      LOCATIONS.USA.attractions.CENTRAL_PARK,\n      LOCATIONS.USA.attractions.TIMES_SQUARE,\n      LOCATIONS.USA.attractions.BROOKLYN_BRIDGE,\n      LOCATIONS.USA.attractions.WORLD_TRADE_CENTER,\n      LOCATIONS.CANADA,\n      LOCATIONS.CANADA.attractions.NIAGARA_FALLS,\n      LOCATIONS.USA.attractions.SIX_FLAGS_NEW_ENGLAND\n    ],\n    dates: [new Date(\"2004-07-30\"), new Date(\"2004-08-17\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA, FRIENDS.DAD]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2005: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.SPAIN.attractions.PORTAVENTURA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2005-07-26\"), new Date(\"2005-08-02\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.GREECE.regions.HALKIDIKI],\n    subtitle: [LOCATIONS.GREECE],\n    dates: [new Date(\"2005-08-18\"), new Date(\"2005-08-23\")],\n    company: [\n      FRIENDS.EMMA,\n      FRIENDS.LOUISE,\n      FRIENDS.MEGAN,\n      FRIENDS.MUM,\n      FRIENDS.CAMERON\n    ]\n  },\n  {\n    title: [LOCATIONS.UK.attractions.LAKE_DISTRICT],\n    notAbroad: true,\n    subtitle: [LOCATIONS.UK],\n    dates: [new Date(\"2005-10-22\"), new Date(\"2005-10-24\")],\n    company: [FRIENDS.EMMA, FRIENDS.MUM]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2006: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.USA.states.FLORIDA],\n    subtitle: [LOCATIONS.USA],\n    hidden: [\n      LOCATIONS.USA.attractions.BUSCH_GARDENS_TAMPA,\n      LOCATIONS.USA.attractions.VENICE_BEACH,\n      LOCATIONS.USA.attractions.UNIVERSALS_ISLANDS_OF_ADVENTURE,\n      LOCATIONS.USA.attractions.SEAWORLD_ORLANDO,\n      LOCATIONS.USA.attractions.DISNEY_MGM_STUDIOS,\n      LOCATIONS.USA.attractions.WET_N_WILD_ORLANDO\n    ],\n    dates: [new Date(\"2006-07-25\"), new Date(\"2006-08-05\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.ITALY.towns.SORRENTO, LOCATIONS.ITALY.cities.POMPEII],\n    subtitle: [LOCATIONS.ITALY],\n    hidden: [\n      LOCATIONS.ITALY.attractions.VESUVIUS,\n      LOCATIONS.ITALY.cities.NAPLES\n    ],\n    dates: [new Date(\"2006-08-18\"), new Date(\"2006-08-25\")],\n    company: [\n      FRIENDS.MUM,\n      FRIENDS.EMMA,\n      FRIENDS.LOUISE,\n      FRIENDS.MEGAN,\n      FRIENDS.CAMERON\n    ]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2007: Array<ITravelCard> = [\n  {\n    title: [\n      LOCATIONS.USA.cities.SAN_FRANCISCO,\n      LOCATIONS.USA.cities.LOS_ANGELES\n    ],\n    subtitle: [LOCATIONS.USA],\n    hidden: [\n      LOCATIONS.USA.attractions.GOLDEN_GATE_BRIDGE,\n      LOCATIONS.USA.attractions.FISHERMANS_WHARF,\n      LOCATIONS.USA.attractions.ALCATRAZ_PRISON,\n      LOCATIONS.USA.attractions.KNOTTS_BERRY_FARM,\n      LOCATIONS.USA.attractions.HOLLYWOOD_WALK_OF_FAME,\n      LOCATIONS.USA.islands.ALCATRAZ,\n      LOCATIONS.USA.attractions.DISNEYLAND_CALIFORNIA_ADVENTURE\n    ],\n    dates: [new Date(\"2007-07-24\"), new Date(\"2007-08-05\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.UK.regions.CORNWALL],\n    notAbroad: true,\n    subtitle: [LOCATIONS.UK],\n    dates: [new Date(\"2007-08-11\"), new Date(\"2007-08-18\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2008: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.ITALY.cities.ROME, LOCATIONS.ITALY.cities.VATICAN],\n    subtitle: [LOCATIONS.ITALY],\n    hidden: [\n      LOCATIONS.ITALY.attractions.COLOSSEUM,\n      LOCATIONS.ITALY.attractions.TREVI_FOUNTAIN\n    ],\n    dates: [new Date(\"2008-02-08\"), new Date(\"2008-02-10\")],\n    company: [FRIENDS.EMMA, FRIENDS.DAD]\n  },\n  {\n    title: [LOCATIONS.FRANCE.cities.PARIS],\n    subtitle: [LOCATIONS.FRANCE],\n    hidden: [\n      LOCATIONS.FRANCE.attractions.AIR_SPACE_MUSEUM,\n      LOCATIONS.FRANCE.attractions.ARC_DE_TRIOMPHE,\n      LOCATIONS.FRANCE.attractions.EIFFEL_TOWER,\n      LOCATIONS.FRANCE.attractions.LOUVRE,\n      LOCATIONS.FRANCE.attractions.SCIENCE_MUSEUM,\n      LOCATIONS.FRANCE.attractions.SACRE_COEUR,\n      LOCATIONS.FRANCE.attractions.PARC_ASTERIX,\n      LOCATIONS.FRANCE.attractions.AIR_SPACE_MUSEUM\n    ],\n    dates: [new Date(\"2008-04-15\"), new Date(\"2008-04-19\")],\n    company: [\n      FRIENDS.CFS,\n      FRIENDS.BLAINE,\n      FRIENDS.ELLIE_S,\n      FRIENDS.NAV,\n      FRIENDS.ANNIE_B,\n      FRIENDS.JUNAID,\n      FRIENDS.GEMMA,\n      FRIENDS.SARAH_W\n    ]\n  },\n  {\n    title: [LOCATIONS.USA.cities.WASHINGTON_DC, LOCATIONS.USA.states.VIRGINIA],\n    subtitle: [LOCATIONS.USA],\n    hidden: [\n      LOCATIONS.USA.cities.VIRGINIA_BEACH,\n      LOCATIONS.USA.attractions.WASHINGTON_MONUMENT,\n      LOCATIONS.USA.attractions.SIX_FLAGS_AMERICA,\n      LOCATIONS.USA.attractions.LINCOLN_MEMORIAL,\n      LOCATIONS.USA.attractions.CAPITOL_BUILDING,\n      LOCATIONS.USA.attractions.WHITE_HOUSE,\n      LOCATIONS.USA.attractions.BUSCH_GARDENS_WILLIAMSBURG\n    ],\n    dates: [new Date(\"2008-07-13\"), new Date(\"2008-07-24\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.PORTUGAL.towns.VILAMOURA],\n    subtitle: [LOCATIONS.PORTUGAL],\n    dates: [new Date(\"2008-08-07\"), new Date(\"2008-08-14\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2009: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.BELGIUM.attractions.BATTLEFIELDS],\n    subtitle: [LOCATIONS.BELGIUM],\n    hidden: [LOCATIONS.BELGIUM.cities.YPRES],\n    dates: [new Date(\"2009-06-12\"), new Date(\"2009-06-15\")],\n    company: [\n      FRIENDS.CFS,\n      FRIENDS.ELLIE_S,\n      FRIENDS.GRACE,\n      FRIENDS.BLAINE,\n      FRIENDS.POOJA,\n      FRIENDS.ELLIE_G,\n      FRIENDS.GEORGE,\n      FRIENDS.KIERAN_S\n    ]\n  },\n  {\n    title: [\n      LOCATIONS.USA.cities.LAS_VEGAS,\n      LOCATIONS.USA.attractions.GRAND_CANYON,\n      LOCATIONS.USA.cities.LOS_ANGELES\n    ],\n    hidden: [\n      LOCATIONS.USA.attractions.HOLLYWOOD_WALK_OF_FAME,\n      LOCATIONS.USA.attractions.SIX_FLAGS_MAGIC_MOUNTAIN,\n      LOCATIONS.USA.attractions.FARMERS_MARKET\n    ],\n    subtitle: [LOCATIONS.USA],\n    dates: [new Date(\"2009-07-21\"), new Date(\"2009-07-31\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.GREECE.islands.KOS],\n    subtitle: [LOCATIONS.GREECE],\n    dates: [new Date(\"2009-08-12\"), new Date(\"2009-08-19\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2010: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.UAE.cities.DUBAI],\n    subtitle: [LOCATIONS.UAE],\n    hidden: [\n      LOCATIONS.UAE.attractions.AQUAVENTURE,\n      LOCATIONS.UAE.attractions.BURJ_KHALIFA\n    ],\n    dates: [new Date(\"2010-07-26\"), new Date(\"2010-08-03\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.PORTUGAL.towns.FERRAGUDO],\n    subtitle: [LOCATIONS.PORTUGAL],\n    dates: [new Date(\"2010-08-13\"), new Date(\"2010-08-18\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA],\n    hidden: [LOCATIONS.PORTUGAL.cities.PORTIMAO]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2011: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.UK.regions.CORNWALL],\n    notAbroad: true,\n    subtitle: [LOCATIONS.UK],\n    dates: [new Date(\"2011-07-01\"), new Date(\"2011-07-04\")],\n    company: [\n      FRIENDS.BLAINE,\n      FRIENDS.GRACE,\n      FRIENDS.POOJA,\n      FRIENDS.JESS,\n      FRIENDS.ELLIE_G,\n      FRIENDS.CARMEN,\n      FRIENDS.KYLE\n    ]\n  },\n  {\n    title: [LOCATIONS.USA.regions.FLORIDA_KEYS],\n    subtitle: [LOCATIONS.USA.regions.ISLAMORADA, LOCATIONS.USA.cities.KEY_WEST],\n    dates: [new Date(\"2011-08-02\"), new Date(\"2011-08-10\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA],\n    hidden: [LOCATIONS.USA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2012: Array<ITravelCard> = [\n  {\n    title: [\n      LOCATIONS.EGYPT.cities.SHARM_EL_SHEIKH,\n      LOCATIONS.EGYPT.cities.CAIRO\n    ],\n    subtitle: [LOCATIONS.EGYPT],\n    hidden: [LOCATIONS.EGYPT.attractions.GIZA_PYRAMIDS_SPHINX],\n    dates: [new Date(\"2012-07-22\"), new Date(\"2012-07-29\")],\n    company: [FRIENDS.DAD]\n  },\n  {\n    title: [LOCATIONS.ITALY.towns.JESOLO, LOCATIONS.ITALY.cities.VENICE],\n    subtitle: [LOCATIONS.ITALY],\n    dates: [new Date(\"2012-08-20\"), new Date(\"2012-08-26\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2013: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.CUBA],\n    subtitle: [LOCATIONS.CUBA.cities.HAVANA, LOCATIONS.CUBA.towns.VARADERO],\n    dates: [new Date(\"2013-08-16\"), new Date(\"2013-08-26\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2014: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.BARBADOS],\n    dates: [new Date(\"2014-06-16\"), new Date(\"2014-06-24\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA],\n    hidden: [LOCATIONS.BARBADOS.attractions.HARRISONS_CAVE]\n  },\n  {\n    title: [LOCATIONS.THAILAND, LOCATIONS.LAOS],\n    subtitle: [\n      LOCATIONS.THAILAND.cities.BANGKOK,\n      LOCATIONS.THAILAND.islands.KOH_PHANGAN,\n      LOCATIONS.THAILAND.islands.KOH_TAO,\n      LOCATIONS.THAILAND.islands.KOH_PHI_PHI,\n      LOCATIONS.THAILAND.cities.CHIANG_MAI,\n      LOCATIONS.THAILAND.towns.PAI,\n      LOCATIONS.LAOS.cities.LUANG_PRABANG,\n      LOCATIONS.LAOS.cities.VIENTIANE\n    ],\n    hidden: [\n      LOCATIONS.THAILAND.attractions.SKY_BAR,\n      LOCATIONS.THAILAND.attractions.GRAND_PALACE,\n      LOCATIONS.THAILAND.attractions.TIGER_KINGDOM,\n      LOCATIONS.THAILAND.attractions.WHITE_TEMPLE,\n      LOCATIONS.LAOS.attractions.BUDDHA_PARK,\n      LOCATIONS.LAOS.attractions.ELEPHANT_VILLAGE,\n      LOCATIONS.THAILAND.attractions.MAYA_BAY,\n      LOCATIONS.THAILAND.towns.KRABI,\n      LOCATIONS.THAILAND.attractions.PAI_CANYON,\n      LOCATIONS.THAILAND.cities.CHIANG_RAI,\n      LOCATIONS.LAOS.attractions.KUANG_SI_FALLS\n    ],\n    dates: [new Date(\"2014-07-07\"), new Date(\"2014-08-04\")],\n    company: [FRIENDS.TONYA]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2015: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.FRANCE.cities.PARIS],\n    subtitle: [LOCATIONS.FRANCE],\n    hidden: [\n      LOCATIONS.FRANCE.attractions.SACRE_COEUR,\n      LOCATIONS.FRANCE.attractions.LOUVRE,\n      LOCATIONS.FRANCE.attractions.ARC_DE_TRIOMPHE,\n      LOCATIONS.FRANCE.attractions.NOTRE_DAME,\n      LOCATIONS.FRANCE.attractions.EIFFEL_TOWER,\n      LOCATIONS.FRANCE.attractions.NOTRE_DAME\n    ],\n    dates: [new Date(\"2015-03-21\"), new Date(\"2015-03-24\")],\n    company: [\n      FRIENDS.POOJA,\n      FRIENDS.SONYA,\n      FRIENDS.CARMEN,\n      FRIENDS.TONYA,\n      FRIENDS.GRACE,\n      FRIENDS.ELLIE_G\n    ]\n  },\n  {\n    title: [LOCATIONS.UGANDA],\n    subtitle: [LOCATIONS.UGANDA.cities.JINJA],\n    hidden: [\n      LOCATIONS.UGANDA.attractions.NILE_SOURCE,\n      LOCATIONS.UGANDA.attractions.RAFTING_NALUBALE\n    ],\n    dates: [new Date(\"2015-08-04\"), new Date(\"2015-09-05\")],\n    company: [\n      FRIENDS.AMY_C,\n      FRIENDS.HEATHER_C,\n      FRIENDS.OSCAR,\n      FRIENDS.LEAH,\n      FRIENDS.ELINORE_G,\n      FRIENDS.ELISE,\n      FRIENDS.SARAH_WA,\n      FRIENDS.HEATHER_C,\n      FRIENDS.LEAH,\n      FRIENDS.ROB_G,\n      FRIENDS.KATE_B,\n      FRIENDS.COURTNEY\n    ]\n  },\n  {\n    title: [{ name: \"interrailing\" }],\n    subtitle: [\n      LOCATIONS.GERMANY.cities.BERLIN,\n      LOCATIONS.CZECH_REPUBLIC.cities.PRAGUE,\n      LOCATIONS.POLAND.cities.KRAKOW,\n      LOCATIONS.HUNGARY.cities.BUDAPEST\n    ],\n    hidden: [\n      LOCATIONS.GERMANY,\n      LOCATIONS.GERMANY.attractions.BERLIN_WALL,\n      LOCATIONS.GERMANY.attractions.BRANDENBURG_GATE,\n      LOCATIONS.GERMANY.attractions.EAST_SIDE_GALLERY,\n      LOCATIONS.GERMANY.attractions.HOLOCAUST_MEMORIAL,\n      LOCATIONS.GERMANY.attractions.REICHSTAG,\n      LOCATIONS.CZECH_REPUBLIC,\n      LOCATIONS.CZECH_REPUBLIC.attractions.JOHN_LENNON_WALL,\n      LOCATIONS.CZECH_REPUBLIC.attractions.VYSEHRAD,\n      LOCATIONS.POLAND,\n      LOCATIONS.POLAND.towns.WIELICZKA,\n      LOCATIONS.POLAND.attractions.WIELICZKA_SALT_MINE,\n      LOCATIONS.POLAND.attractions.AUSCHWITZ_BIRKENAU,\n      LOCATIONS.HUNGARY,\n      LOCATIONS.HUNGARY.attractions.CITADELLA,\n      LOCATIONS.HUNGARY.attractions.PARLIAMENT_BUILDING,\n      LOCATIONS.HUNGARY.attractions.THERMAL_BATH_SZECHENYI\n    ],\n    dates: [new Date(\"2015-09-10\"), new Date(\"2015-09-24\")],\n    company: [FRIENDS.SIAN]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2016: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.IRELAND.cities.DUBLIN],\n    subtitle: [LOCATIONS.IRELAND],\n    dates: [new Date(\"2016-02-05\"), new Date(\"2016-02-07\")],\n    company: [FRIENDS.SIAN],\n    hidden: [\n      LOCATIONS.IRELAND.attractions.DUBLIN_PRISON,\n      LOCATIONS.IRELAND.attractions.ST_STEPHENS_GREEN_PARK,\n      LOCATIONS.IRELAND.attractions.GUINNESS_STOREHOUSE\n    ]\n  },\n  {\n    title: [LOCATIONS.PORTUGAL.towns.TAVIRA],\n    subtitle: [LOCATIONS.PORTUGAL],\n    dates: [new Date(\"2016-06-09\"), new Date(\"2016-06-16\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.ECUADOR, LOCATIONS.PERU],\n    subtitle: [\n      LOCATIONS.ECUADOR.cities.QUITO,\n      LOCATIONS.ECUADOR.cities.OTAVALO,\n      LOCATIONS.ECUADOR.attractions.COTOPAXI,\n      LOCATIONS.ECUADOR.cities.BANOS,\n      LOCATIONS.ECUADOR.islands.GALAPAGOS,\n      LOCATIONS.PERU.towns.MANCORA,\n      LOCATIONS.PERU.cities.HUARAZ,\n      LOCATIONS.PERU.cities.LIMA,\n      LOCATIONS.PERU.towns.PARACAS,\n      LOCATIONS.PERU.villages.HUACACHINA,\n      LOCATIONS.PERU.cities.AREQUIPA,\n      LOCATIONS.PERU.attractions.COLCA_CANYON,\n      LOCATIONS.PERU.cities.CUSCO,\n      LOCATIONS.PERU.attractions.MANU,\n      LOCATIONS.PERU.attractions.RAINBOW_MOUNTAIN,\n      LOCATIONS.PERU.attractions.MACHU_PICCHU\n    ],\n    hidden: [\n      LOCATIONS.ECUADOR.attractions.EQUATOR_MONUMENT,\n      LOCATIONS.ECUADOR.attractions.OTAVALO_MARKET,\n      LOCATIONS.ECUADOR.attractions.PAILON_DEL_DIABLO,\n      LOCATIONS.ECUADOR.cities.GUAYAQUIL,\n      LOCATIONS.ECUADOR.attractions.TORTOISE_PARK,\n      LOCATIONS.PERU.attractions.HUASCARAN_PARK,\n      LOCATIONS.PERU.attractions.LAGUNA_69,\n      LOCATIONS.PERU.attractions.HUACACHINA,\n      LOCATIONS.PERU.attractions.JUNGLE_ZIPLINE\n    ],\n    dates: [new Date(\"2016-10-03\"), new Date(\"2016-11-10\")],\n    company: [FRIENDS.SARAH_W, FRIENDS.SIAN]\n  },\n  {\n    title: [\n      LOCATIONS.BRAZIL.cities.RIO_DE_JANEIRO,\n      LOCATIONS.BRAZIL.islands.ILHA_GRANDE\n    ],\n    hidden: [\n      LOCATIONS.BRAZIL.attractions.HANG_GLIDING,\n      LOCATIONS.BRAZIL.attractions.MODERN_ART_MUSEUM_RIO,\n      LOCATIONS.BRAZIL.attractions.COPACABANA_BEACH,\n      LOCATIONS.BRAZIL.attractions.ROCINHA_FAVELA,\n      LOCATIONS.BRAZIL.attractions.PICO_DO_PAPAGAIO,\n      LOCATIONS.BRAZIL.attractions.SELARON_STEPS,\n      LOCATIONS.BRAZIL.attractions.CHRIST_THE_REDEEMER\n    ],\n    subtitle: [LOCATIONS.BRAZIL],\n    dates: [new Date(\"2016-12-01\"), new Date(\"2016-12-11\")],\n    company: [FRIENDS.SIAN]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2017: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.ITALY.cities.MILAN],\n    subtitle: [LOCATIONS.ITALY],\n    dates: [new Date(\"2017-05-12\"), new Date(\"2017-05-14\")],\n    company: [\n      FRIENDS.AISHA,\n      FRIENDS.JOE,\n      FRIENDS.JAMIE,\n      FRIENDS.PATRICIA,\n      FRIENDS.JAZZ,\n      FRIENDS.JHC\n    ],\n    hidden: [\n      LOCATIONS.ITALY.attractions.MILAN_MALL,\n      LOCATIONS.ITALY.attractions.SEMPIONE_PARK,\n      LOCATIONS.ITALY.attractions.ARCO_DELLA_PACE\n    ]\n  },\n  {\n    title: [LOCATIONS.SPAIN.cities.BARCELONA],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2017-06-15\"), new Date(\"2017-06-18\")],\n    company: [\n      FRIENDS.SIAN,\n      FRIENDS.LINDSEY_S,\n      FRIENDS.BETH_O,\n      FRIENDS.ELLIE_F,\n      FRIENDS.HARRIET_K\n    ],\n    hidden: [\n      LOCATIONS.SPAIN.attractions.PARK_GUELL,\n      LOCATIONS.SPAIN.attractions.CIUTADELLA_PARK\n    ]\n  },\n  {\n    title: [LOCATIONS.SPAIN.islands.TENERIFE],\n    subtitle: [LOCATIONS.SPAIN],\n    dates: [new Date(\"2017-06-15\"), new Date(\"2017-06-18\")],\n    company: [FRIENDS.LUKE_S],\n    hidden: [LOCATIONS.SPAIN.attractions.SIAM_PARK]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2018: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.DENMARK.cities.COPENHAGEN],\n    subtitle: [LOCATIONS.DENMARK],\n    dates: [new Date(\"2018-01-19\"), new Date(\"2018-01-22\")],\n    company: [FRIENDS.LUKE_S],\n    hidden: [LOCATIONS.DENMARK.attractions.LOUISIANA_ART_MUSEUM]\n  },\n  {\n    title: [LOCATIONS.CYPRUS.cities.PAPHOS],\n    subtitle: [LOCATIONS.CYPRUS],\n    dates: [new Date(\"2018-05-17\"), new Date(\"2018-05-21\")],\n    company: [FRIENDS.SIAN],\n    hidden: [LOCATIONS.CYPRUS.attractions.PAPHOS_ARCHAEOLOGICAL_PARK]\n  },\n  {\n    title: [LOCATIONS.CROATIA.cities.DUBROVNIK],\n    subtitle: [LOCATIONS.CROATIA],\n    dates: [new Date(\"2018-06-02\"), new Date(\"2018-06-09\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA],\n    hidden: [\n      LOCATIONS.CROATIA.attractions.DUBROVNIK_WALLS,\n      LOCATIONS.CROATIA.attractions.DUBROVNIK_CABLE_CAR\n    ]\n  },\n  {\n    title: [LOCATIONS.NETHERLANDS.cities.GRONINGEN],\n    subtitle: [LOCATIONS.NETHERLANDS],\n    hidden: [LOCATIONS.NETHERLANDS.attractions.GRONINGEN_MUSEUM],\n    dates: [new Date(\"2018-07-14\"), new Date(\"2018-07-16\")],\n    company: [FRIENDS.CARMEN]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2019: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.NETHERLANDS.cities.AMSTERDAM],\n    subtitle: [LOCATIONS.NETHERLANDS],\n    hidden: [\n      LOCATIONS.NETHERLANDS.attractions.SEX_MUSEUM,\n      LOCATIONS.NETHERLANDS.attractions.STEDELIJK_MUSEUM\n    ],\n    dates: [new Date(\"2019-02-01\"), new Date(\"2019-02-04\")],\n    company: [FRIENDS.CAITLIN, FRIENDS.TONYA, FRIENDS.RYAN, FRIENDS.TOM]\n  },\n  {\n    title: [LOCATIONS.PORTUGAL.cities.LISBON],\n    subtitle: [LOCATIONS.PORTUGAL],\n    hidden: [LOCATIONS.PORTUGAL.attractions.OCENARIO_DE_LISBOA],\n    dates: [new Date(\"2019-02-08\"), new Date(\"2019-02-10\")],\n    company: [FRIENDS.MUM, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.BELGIUM.cities.BRUGES],\n    subtitle: [LOCATIONS.BELGIUM],\n    hidden: [LOCATIONS.BELGIUM.attractions.BELFRY_OF_BRUGES],\n    dates: [new Date(\"2019-05-17\"), new Date(\"2019-05-19\")],\n    company: [FRIENDS.JAMIE]\n  },\n  {\n    title: [LOCATIONS.ITALY.cities.CATANIA],\n    subtitle: [LOCATIONS.ITALY.regions.SICILY],\n    hidden: [LOCATIONS.ITALY, LOCATIONS.ITALY.attractions.ETNA],\n    dates: [new Date(\"2019-07-10\"), new Date(\"2019-07-15\")],\n    company: [FRIENDS.DAD, FRIENDS.EMMA]\n  },\n  {\n    title: [LOCATIONS.FRANCE.cities.NICE],\n    subtitle: [LOCATIONS.FRANCE],\n    hidden: [LOCATIONS.FRANCE.cities.MONACO],\n    dates: [new Date(\"2019-06-08\"), new Date(\"2019-06-14\")],\n    company: [FRIENDS.SIAN]\n  }\n];\n","import { FRIENDS, LOCATIONS } from \"@constants\";\n\nexport const TRAVEL_2020: Array<ITravelCard> = [\n  {\n    title: [LOCATIONS.NORWAY.cities.OSLO],\n    subtitle: [LOCATIONS.NORWAY],\n    hidden: [LOCATIONS.NORWAY.islands.HOVEDOYA],\n    dates: [new Date(\"2020-02-27\"), new Date(\"2020-03-01\")],\n    company: [FRIENDS.RYAN, FRIENDS.CAITLIN, FRIENDS.TOM, FRIENDS.TONYA]\n  }\n  // {\n  //   title: [LOCATIONS.BELIZE, LOCATIONS.COSTA_RICA],\n  //   subtitle: [\n  //     LOCATIONS.BELIZE.islands.CAYE_CAULKER,\n  //     LOCATIONS.BELIZE.attractions.BARRIER_REEF,\n  //     LOCATIONS.COSTA_RICA.attractions.CORCOVADO,\n  //     LOCATIONS.COSTA_RICA.towns.MONTEVERDE,\n  //     LOCATIONS.COSTA_RICA.towns.PUERTO_VIEJO\n  //   ],\n  //   hidden: [\n  //     LOCATIONS.BELIZE.cities.BELIZE_CITY,\n  //     LOCATIONS.BELIZE.islands.AMBERGRIS_CAYE,\n  //     LOCATIONS.COSTA_RICA.cities.SAN_JOSE,\n  //     LOCATIONS.COSTA_RICA.attractions.JAGUAR_RESCUE_CENTER\n  //   ],\n  //   dates: [new Date(\"2020-05-14\"), new Date(\"2020-06-01\")],\n  //   company: FRIENDS.SIAN\n  // },\n  // {\n  //   title: LOCATIONS.SPAIN.cities.MADRID,\n  //   subtitle: LOCATIONS.SPAIN,\n  //   hidden: [LOCATIONS.SPAIN.attractions.PARQUE_WARNER],\n  //   dates: [new Date(\"2020-07-07\"), new Date(\"2020-07-10\")],\n  //   company: FRIENDS.DAN\n  // }\n];\n","import { TRAVEL_1997 } from \"./travel-1997\";\nimport { TRAVEL_1998 } from \"./travel-1998\";\nimport { TRAVEL_1999 } from \"./travel-1999\";\nimport { TRAVEL_2000 } from \"./travel-2000\";\nimport { TRAVEL_2001 } from \"./travel-2001\";\nimport { TRAVEL_2002 } from \"./travel-2002\";\nimport { TRAVEL_2003 } from \"./travel-2003\";\nimport { TRAVEL_2004 } from \"./travel-2004\";\nimport { TRAVEL_2005 } from \"./travel-2005\";\nimport { TRAVEL_2006 } from \"./travel-2006\";\nimport { TRAVEL_2007 } from \"./travel-2007\";\nimport { TRAVEL_2008 } from \"./travel-2008\";\nimport { TRAVEL_2009 } from \"./travel-2009\";\nimport { TRAVEL_2010 } from \"./travel-2010\";\nimport { TRAVEL_2011 } from \"./travel-2011\";\nimport { TRAVEL_2012 } from \"./travel-2012\";\nimport { TRAVEL_2013 } from \"./travel-2013\";\nimport { TRAVEL_2014 } from \"./travel-2014\";\nimport { TRAVEL_2015 } from \"./travel-2015\";\nimport { TRAVEL_2016 } from \"./travel-2016\";\nimport { TRAVEL_2017 } from \"./travel-2017\";\nimport { TRAVEL_2018 } from \"./travel-2018\";\nimport { TRAVEL_2019 } from \"./travel-2019\";\nimport { TRAVEL_2020 } from \"./travel-2020\";\nimport { TRAVEL_BUCKET_LIST as BUCKET_LIST } from \"./travel-bucket-list\";\n\nconst ALL: Array<ITravelCard> = [\n  ...TRAVEL_1997,\n  ...TRAVEL_1998,\n  ...TRAVEL_1999,\n  ...TRAVEL_2000,\n  ...TRAVEL_2001,\n  ...TRAVEL_2002,\n  ...TRAVEL_2003,\n  ...TRAVEL_2004,\n  ...TRAVEL_2005,\n  ...TRAVEL_2006,\n  ...TRAVEL_2007,\n  ...TRAVEL_2008,\n  ...TRAVEL_2009,\n  ...TRAVEL_2010,\n  ...TRAVEL_2011,\n  ...TRAVEL_2012,\n  ...TRAVEL_2013,\n  ...TRAVEL_2014,\n  ...TRAVEL_2015,\n  ...TRAVEL_2016,\n  ...TRAVEL_2017,\n  ...TRAVEL_2018,\n  ...TRAVEL_2019,\n  ...TRAVEL_2020\n];\n\nconst SPLIT_BY_YEAR: Array<Array<ITravelCard>> = [\n  TRAVEL_1997,\n  TRAVEL_1998,\n  TRAVEL_1999,\n  TRAVEL_2000,\n  TRAVEL_2001,\n  TRAVEL_2002,\n  TRAVEL_2003,\n  TRAVEL_2004,\n  TRAVEL_2005,\n  TRAVEL_2006,\n  TRAVEL_2007,\n  TRAVEL_2008,\n  TRAVEL_2009,\n  TRAVEL_2010,\n  TRAVEL_2011,\n  TRAVEL_2012,\n  TRAVEL_2013,\n  TRAVEL_2014,\n  TRAVEL_2015,\n  TRAVEL_2016,\n  TRAVEL_2017,\n  TRAVEL_2018,\n  TRAVEL_2019,\n  TRAVEL_2020\n];\n\nexport const DATA = { ALL, SPLIT_BY_YEAR, BUCKET_LIST };\n","export const TRAVEL_BUCKET_LIST: Array<INameFavourite> = [\n  // ATTRACTIONS\n  { name: \"Victoria Falls\" },\n\n  // CITIES\n  { name: \"Buenos Aires\", favourite: true },\n  { name: \"Edinburgh\", favourite: true },\n  { name: \"Stockholm\" },\n  { name: \"Porto\" },\n  { name: \"Florence\" },\n  { name: \"Valencia\" },\n  { name: \"Vienna\" },\n\n  // COUNTIRES\n  { name: \"Australia\" },\n  { name: \"Bolivia\" },\n  { name: \"Colombia\" },\n  { name: \"Indonesia\" },\n  { name: \"Japan\", favourite: true },\n  { name: \"Mexico\" },\n  { name: \"New Zealand\" },\n  { name: \"Philippines\", favourite: true },\n  { name: \"Tanzania\" }\n];\n","import { FRIENDS as friends, LOCATIONS } from \"@constants\";\nimport { isInFuture } from \"utils\";\n\nimport { mapToCountedList, generatePropertyArrayFromObject } from \"../factory\";\nimport { DATA } from \"./data\";\n\nconst { ALL, BUCKET_LIST } = DATA;\n\nconst FAVOURITES: Array<ITravelCard> = ALL.filter(item => item.favourite);\nconst UP_NEXT: Array<ITravelCard> = ALL.filter(item => isInFuture(item.dates));\n\nexport const futureCount: number = UP_NEXT.length;\nexport const pastCount: number =\n  ALL.filter(item => !item.notAbroad).length - futureCount;\n\nconst countries: Array<any> = Object.values(LOCATIONS);\n\nconst cities: Array<ICity> = generatePropertyArrayFromObject({\n  object: LOCATIONS,\n  childLevelProperty: \"cities\"\n});\n\nconst islands: Array<IIsland> = generatePropertyArrayFromObject({\n  object: LOCATIONS,\n  childLevelProperty: \"islands\",\n  topLevelProperty: \"island\"\n});\n\nconst attractions: Array<IAttraction> = generatePropertyArrayFromObject({\n  object: LOCATIONS,\n  childLevelProperty: \"attractions\"\n});\n\nconst themeParks: Array<IAttraction> = attractions.filter(\n  item => item.themePark\n);\nconst highlights: Array<IAttraction> = attractions.filter(\n  item => item.highlight\n);\n\nconst mapToCountedListWrapper = (params: any): Array<ICountedItem> =>\n  mapToCountedList({\n    ...params,\n    allData: ALL,\n    favouritedData: FAVOURITES\n  });\n\nconst bucketList: Array<ICountedItem> = mapToCountedListWrapper({\n  bucketListMode: true,\n  items: BUCKET_LIST\n});\n\nconst CITIES: Array<ICountedItem> = mapToCountedListWrapper({\n  items: cities\n});\n\nconst THEME_PARKS: Array<ICountedItem> = mapToCountedListWrapper({\n  items: themeParks\n});\n\nconst HIGHLIGHTS: Array<ICountedItem> = mapToCountedListWrapper({\n  items: highlights\n});\n\nconst ISLANDS: Array<ICountedItem> = mapToCountedListWrapper({\n  items: islands\n});\n\nconst COUNTRIES: Array<ICountedItem> = mapToCountedListWrapper({\n  items: countries\n});\n\nconst FRIENDS: Array<ICountedItem> = mapToCountedListWrapper({\n  items: friends,\n  sortByPastAndFutureCount: true,\n  filter: \"travel\"\n});\n\nexport const FACTORY = {\n  BUCKET_LIST: bucketList,\n  HIGHLIGHTS,\n  ISLANDS,\n  COUNTRIES,\n  FRIENDS,\n  UP_NEXT,\n  THEME_PARKS,\n  CITIES\n};\n","import { PAGE_SECTION_TITLES } from \"@constants\";\nimport { SVG_ICONS } from \"resources\";\nimport { isInFuture } from \"utils\";\n\nimport { DATA } from \"./data\";\nimport { FACTORY } from \"./factory\";\n\nconst {\n  BUCKET_LIST,\n  CITIES,\n  COUNTRIES,\n  FRIENDS,\n  HIGHLIGHTS,\n  ISLANDS,\n  THEME_PARKS,\n  UP_NEXT\n} = FACTORY;\n\nconst SECTIONS_STATS: Array<IPageSection> = [\n  {\n    title: PAGE_SECTION_TITLES.BUCKET_LIST,\n    icon: SVG_ICONS.STARS,\n    data: { countedItems: BUCKET_LIST }\n  },\n  {\n    title: \"Cities\",\n    icon: SVG_ICONS.CITY,\n    data: { countedItems: CITIES },\n    count: CITIES.length,\n    starredCount: CITIES.filter(city => city.star).length\n  },\n  {\n    title: \"Countries\",\n    icon: SVG_ICONS.FLAG,\n    data: { countedItems: COUNTRIES },\n    count: COUNTRIES.length\n  },\n  {\n    title: PAGE_SECTION_TITLES.FRIENDS,\n    icon: SVG_ICONS.PEOPLE,\n    data: { countedItems: FRIENDS }\n  },\n  {\n    title: \"Highlights\",\n    icon: SVG_ICONS.MAP_PIN,\n    data: { countedItems: HIGHLIGHTS }\n  },\n  {\n    title: \"Islands\",\n    icon: SVG_ICONS.PALM_TREE,\n    data: { countedItems: ISLANDS }\n  },\n  {\n    title: \"Theme Parks\",\n    icon: SVG_ICONS.ROLLER_COASTER,\n    data: { countedItems: THEME_PARKS },\n    count: THEME_PARKS.length\n  },\n  {\n    title: PAGE_SECTION_TITLES.UP_NEXT,\n    icon: SVG_ICONS.NOTEPAD,\n    data: { travelCards: UP_NEXT }\n  }\n].sort((a: IPageSection, b: IPageSection) => (a.title > b.title ? 1 : -1));\n\nconst SECTIONS_YEARS: Array<IPageSection> = DATA.SPLIT_BY_YEAR.map(\n  (year: Array<ITravelCard>) => ({\n    title: year[0].dates[0].getFullYear().toString(),\n    count: year.length,\n    data: {\n      travelCards: year.filter((trip: ITravelCard) => !isInFuture(trip.dates))\n    }\n  })\n);\n\nexport const sections: Array<IPageSection> = [\n  ...SECTIONS_STATS,\n  ...SECTIONS_YEARS\n];\n","import { pastCount, futureCount } from \"./factory\";\nimport { sections } from \"./sections\";\n\nexport const PAGE_TRAVEL: IPage = { pastCount, futureCount, sections };\n","import { VINYL_COLLECTION as COLLECTION } from \"./vinyl-collection\";\nimport { VINYL_WISH_LIST as WISH_LIST } from \"./vinyl-wish-list\";\n\nexport const DATA = { COLLECTION, WISH_LIST };\n","import { MUSICIANS } from \"@constants\";\nimport { PHOTOS_VINYL } from \"resources\";\n\nexport const VINYL_COLLECTION: Array<IVinylCard> = [\n  {\n    artist: MUSICIANS.TAYLOR_SWIFT,\n    title: \"1989\",\n    year: 2014,\n    artwork: PHOTOS_VINYL.TAYLOR_SWIFT[\"1989\"]\n  },\n  {\n    artist: MUSICIANS.AMY_WINEHOUSE,\n    title: \"Back to Black\",\n    artwork: PHOTOS_VINYL.AMY_WINEHOUSE.BACK_TO_BLACK,\n    year: 2006\n  },\n  {\n    artist: MUSICIANS.FKA_TWIGS,\n    title: \"Magdalene\",\n    artwork: PHOTOS_VINYL.FKA_TWIGS.MAGDALENE,\n    year: 2019\n  },\n  {\n    artist: MUSICIANS.FLORENCE_AND_THE_MACHINE,\n    title: \"Lungs\",\n    artwork: PHOTOS_VINYL.FLORENCE_AND_THE_MACHINE.LUNGS,\n    year: 2009\n  },\n  {\n    artist: MUSICIANS.BANKS,\n    artwork: PHOTOS_VINYL.BANKS.III,\n    title: \"III\",\n    year: 2019\n  },\n  {\n    artist: MUSICIANS.LORDE,\n    title: \"Pure Heroine\",\n    year: 2013,\n    artwork: PHOTOS_VINYL.LORDE.PURE_HEROINE\n  },\n  {\n    artist: MUSICIANS.ALLIE_X,\n    title: \"Super Sunset\",\n    artwork: PHOTOS_VINYL.ALLIE_X.SUPER_SUNSET,\n    year: 2018\n  },\n  {\n    artist: MUSICIANS.ADELE,\n    artwork: PHOTOS_VINYL.ADELE[\"19\"],\n    title: \"19\",\n    year: 2008\n  },\n\n  {\n    artist: MUSICIANS.KATE_NASH,\n    title: \"Made of Bricks\",\n    artwork: PHOTOS_VINYL.KATE_NASH.MADE_OF_BRICKS,\n    year: 2007\n  },\n  {\n    artist: MUSICIANS.ARCTIC_MONKEYS,\n    title: \"Favourite Worst Nightmare\",\n    artwork: PHOTOS_VINYL.ARCTIC_MONKEYS.FAVOURITE_WORST_NIGHTMARE,\n    year: 2018\n  },\n  {\n    artist: MUSICIANS.LANA_DEL_REY,\n    title: \"Born to Die\",\n    artwork: PHOTOS_VINYL.LANA_DEL_REY.BORN_TO_DIE,\n    year: 2012\n  },\n  {\n    artist: MUSICIANS.MUNA,\n    title: \"About U\",\n    year: 2013,\n    artwork: PHOTOS_VINYL.MUNA.ABOUT_U\n  },\n  {\n    artist: MUSICIANS.HAIM,\n    artwork: PHOTOS_VINYL.HAIM.WOMEN_IN_MUSIC_PT_III,\n    title: \"Women In Music Pt. III\",\n    year: 2020\n  },\n  {\n    artist: MUSICIANS[\"1975\"],\n    title: \"A Brief Inquiry Into Online Relationships\",\n    artwork: PHOTOS_VINYL[\"1975\"].A_BRIEF_INQUIRY_INTO_ONLINE_RELATIONSHIPS,\n    year: 2018\n  },\n  {\n    artist: MUSICIANS.LEON,\n    artwork: PHOTOS_VINYL.LEON.LEON,\n    title: MUSICIANS.LEON.name,\n    year: 2019\n  }\n]\n  .sort((a: IVinylCard, b: IVinylCard) =>\n    a.artist.name < b.artist.name ? 1 : -1\n  )\n  .sort((a: IVinylCard, b: IVinylCard) => (a.year < b.year ? 1 : -1));\n","import { MUSICIANS } from \"@constants\";\nimport { PHOTOS_VINYL } from \"resources\";\n\nexport const VINYL_WISH_LIST: Array<IVinylCard> = [\n  {\n    artist: MUSICIANS.ARIANA_GRANDE,\n    title: \"thank u, next\",\n    year: 2019,\n    artwork: PHOTOS_VINYL.ARIANA_GRANDE.THANK_U_NEXT\n  },\n  {\n    artist: MUSICIANS.CHARLI_XCX,\n    title: \"how i'm feeling now\",\n    year: 2020,\n    artwork: PHOTOS_VINYL.CHARLI_XCX.HOW_IM_FEELING_NOW\n  },\n  {\n    artist: MUSICIANS.DUA_LIPA,\n    title: \"Future Nostalgia\",\n    year: 2020,\n    artwork: PHOTOS_VINYL.DUA_LIPA.FUTURE_NOSTALGIA\n  },\n  {\n    artist: MUSICIANS.MARINA,\n    title: \"Electra Heart\",\n    year: 2012,\n    artwork: PHOTOS_VINYL.MARINA.ELECTRA_HEART\n  },\n  {\n    artist: MUSICIANS.BEYONCE,\n    title: \"Lemonade\",\n    artwork: PHOTOS_VINYL.BEYONCE.LEMONADE,\n    year: 2016\n  },\n  {\n    artist: MUSICIANS.JON_HOPKINS,\n    title: \"Singularity\",\n    year: 2018,\n    artwork: PHOTOS_VINYL.JON_HOPKINS.SINGULARITY\n  },\n  {\n    artist: MUSICIANS.TOURIST,\n    title: \"U\",\n    artwork: PHOTOS_VINYL.TOURIST.U,\n    year: 2016\n  },\n  {\n    artist: MUSICIANS.GEORGE_FITZGERALD,\n    title: \"All That Must Be\",\n    year: 2018,\n    artwork: PHOTOS_VINYL.GEORGE_FITZGERALD.ALL_THAT_MUST_BE\n  },\n  {\n    artist: MUSICIANS.LANE_8,\n    title: \"Rise\",\n    year: 2015,\n    artwork: PHOTOS_VINYL.LANE_8.RISE\n  },\n  {\n    artist: MUSICIANS.CARIBOU,\n    artwork: PHOTOS_VINYL.CARIBOU.OUR_LOVE,\n    title: \"Our Love\",\n    year: 2014\n  },\n  {\n    artist: MUSICIANS.ELLIE_GOULDING,\n    title: \"Halcyon\",\n    artwork: PHOTOS_VINYL.ELLIE_GOULDING.HALCYON,\n    year: 2012\n  },\n  {\n    artist: MUSICIANS.LANY,\n    title: \"Malibu Nights\",\n    year: 2018,\n    artwork: PHOTOS_VINYL.LANY.MALIBU_NIGHTS\n  },\n  {\n    artist: MUSICIANS.PANIC_AT_THE_DISCO,\n    title: \"A Fever You Can't Sweat Out\",\n    artwork: PHOTOS_VINYL.PANIC_AT_THE_DISCO.A_FEVER_YOU_CANT_SWEAT_OUT,\n    year: 2005\n  },\n  {\n    artist: MUSICIANS.LADY_GAGA,\n    title: \"Born This Way\",\n    artwork: PHOTOS_VINYL.LADY_GAGA.BORN_THIS_WAY,\n    year: 2011\n  },\n  {\n    artist: MUSICIANS.KATY_PERRY,\n    title: \"One of the Boys\",\n    artwork: PHOTOS_VINYL.KATY_PERRY.ONE_OF_THE_BOYS,\n    year: 2008\n  },\n  {\n    artist: MUSICIANS.PARAMORE,\n    title: \"Riot!\",\n    artwork: PHOTOS_VINYL.PARAMORE.RIOT,\n    year: 2007\n  },\n  {\n    artist: MUSICIANS.RIHANNA,\n    title: \"Rated R\",\n    artwork: PHOTOS_VINYL.RIHANNA.RATED_R,\n    year: 2009\n  },\n  {\n    artist: MUSICIANS.LISSIE,\n    artwork: PHOTOS_VINYL.LISSIE.CATCHING_A_TIGER,\n    title: \"Catching a Tiger\",\n    year: 2010\n  },\n  {\n    artist: MUSICIANS.TROYE_SIVAN,\n    title: \"Bloom\",\n    year: 2018,\n    artwork: PHOTOS_VINYL.TROYE_SIVAN.BLOOM\n  },\n  {\n    artist: MUSICIANS.BEN_HOWARD,\n    artwork: PHOTOS_VINYL.BEN_HOWARD.EVERY_KINGDOM,\n    title: \"Every Kingdom\",\n    year: 2011\n  },\n  {\n    artist: MUSICIANS.GRIMES,\n    title: \"Art Angels\",\n    artwork: PHOTOS_VINYL.GRIMES.ART_ANGELS,\n    year: 2015\n  },\n  {\n    artist: MUSICIANS.SUFJAN_STEVENS,\n    artwork: PHOTOS_VINYL.SUFJAN_STEVENS.CARRIE_AND_LOWELL,\n    title: \"Carrie & Lowell\",\n    year: 2015\n  },\n  {\n    artist: MUSICIANS.PVRIS,\n    title: \"All We Know of Heaven, All We Need of Hell\",\n    artwork: PHOTOS_VINYL.PVRIS.ALL_WE_KNOW_OF_HEAVEN_ALL_WE_NEED_OF_HELL,\n    year: 2017\n  }\n]\n  .sort((a: IVinylCard, b: IVinylCard) =>\n    a.artist.name < b.artist.name ? 1 : -1\n  )\n  .sort((a: IVinylCard, b: IVinylCard) => (a.year < b.year ? 1 : -1));\n","import { DATA } from \"./data\";\n\nconst { WISH_LIST, COLLECTION } = DATA;\n\nexport const sections: Array<IPageSection> = [\n  {\n    title: \"collection\",\n    data: { vinylCards: COLLECTION },\n    count: COLLECTION.length,\n    initiallyExpanded: true\n  },\n  {\n    title: \"wish list\",\n    data: { vinylCards: WISH_LIST },\n    count: WISH_LIST.length\n  }\n];\n","import { PAGE_GIGS as GIGS } from \"./gigs\";\nimport { PAGE_RECIPES as RECIPES } from \"./recipes\";\nimport { PAGE_THEATRE as THEATRE } from \"./theatre\";\nimport { PAGE_TRAVEL as TRAVEL } from \"./travel\";\nimport { PAGE_VINYL as VINYL } from \"./vinyl\";\n\nexport const PAGES = { GIGS, RECIPES, THEATRE, TRAVEL, VINYL };\n","import { sections } from \"./sections\";\n\nexport const PAGE_VINYL: IPage = { sections };\n","import { SVG_ICONS } from \"resources\";\nimport { PAGES } from \"pages\";\n\nconst { GIGS, RECIPES, THEATRE, TRAVEL, VINYL } = PAGES;\n\nexport const HOMEPAGE_ROUTE: IHomepageRoute = {\n  title: \"Home\",\n  dest: \"/\"\n};\n\nexport const PAGE_ROUTES: Array<IRoute> = [\n  {\n    dest: \"/gigs\",\n    icon: SVG_ICONS.MICROPHONE,\n    title: \"Gigs\",\n    page: GIGS\n  },\n  {\n    dest: \"/recipes\",\n    icon: SVG_ICONS.VEG_BOWL,\n    title: \"Recipes\",\n    page: RECIPES\n  },\n  {\n    dest: \"/theatre\",\n    icon: SVG_ICONS.MASKS,\n    title: \"Theatre\",\n    page: THEATRE\n  },\n  {\n    dest: \"/travel\",\n    icon: SVG_ICONS.TRAVEL,\n    title: \"Travel\",\n    page: TRAVEL\n  },\n  {\n    dest: \"/vinyl\",\n    icon: SVG_ICONS.VINYL,\n    title: \"Vinyl\",\n    page: VINYL\n  }\n].filter((route: IRoute) => !route.hide);\n","export { HOMEPAGE_ROUTE, PAGE_ROUTES } from \"./routes\";\n\nexport const CONSOLE_LOG_RECIPE_COST_CALCULATIONS: boolean = false;\n\nexport const DISPLAY_PAGE_SECTION_IN_2_COLUMNS_ON_DESKTOP: boolean = false;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { Link } from \"primitives\";\nimport { PAGE_ROUTES } from \"config\";\n\nconst FlexContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-areas: \"col1 col2\";\n`;\n\nconst StyledSvg = styled.img(({ theme }: IThemeProp) => {\n  const iconSizeDesktop = theme.homePage.icon.size.desktop;\n  const iconSizePhone = theme.homePage.icon.size.phone;\n  const iconSizePadding = theme.homePage.icon.padding;\n\n  return css`\n    padding: ${iconSizePadding};\n    width: ${iconSizeDesktop};\n    height: ${iconSizeDesktop};\n\n    @media (max-width: ${theme.breakpoints.phone.maxWidth}) {\n      width: ${iconSizePhone};\n      height: ${iconSizePhone};\n    }\n  `;\n});\n\nexport const HomePage: React.FC = () => (\n  <FlexContainer>\n    <GridContainer>\n      {PAGE_ROUTES.map(({ icon, dest }: IRoute, index: number) => (\n        <Link key={index} to={dest}>\n          <StyledSvg src={icon} />\n        </Link>\n      ))}\n    </GridContainer>\n  </FlexContainer>\n);\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { FlexLiGrow } from \"primitives\";\n\nconst CountedListItemPastCount = styled.span`\n  ${({\n    theme: {\n      countedList: {\n        count: { width }\n      }\n    }\n  }: IThemeProp) => css`\n    font-weight: bold;\n    text-align: right;\n    width: ${width};\n    margin-left: 5px;\n  `}\n`;\n\nconst CountedListItemFutureCount = styled(CountedListItemPastCount)`\n  opacity: ${(props: IThemeProp) => props.theme.fadedOpacity};\n`;\n\ninterface CountedListItemTextProps extends IThemeProp {\n  favourite?: boolean;\n  star?: boolean;\n  faded: boolean;\n}\n\nconst CountedListItemText = styled.span`\n  ${(props: CountedListItemTextProps) =>\n    props.favourite &&\n    css`\n      ::before {\n        content: \"♥ \";\n      }\n    `}\n\n  ${(props: CountedListItemTextProps) =>\n    props.star &&\n    css`\n      ::before {\n        content: \"★ \";\n      }\n    `}\n\n  flex: 1;\n  ${(props: CountedListItemTextProps) =>\n    props.faded && `opacity: ${props.theme.fadedOpacity};`}\n`;\n\nexport const CountedItem: React.FC<ICountedItem> = ({\n  text,\n  favourite,\n  star,\n  futureCount,\n  pastCount,\n  countInfoIrrelevant\n}) => {\n  const showFutureCount: boolean = futureCount > 0 && pastCount > 0;\n  const showPastCount: boolean =\n    pastCount > 1 || (futureCount > 0 && pastCount > 0);\n\n  return (\n    <FlexLiGrow>\n      <CountedListItemText\n        faded={!countInfoIrrelevant && pastCount === 0}\n        favourite={favourite}\n        star={star}\n      >\n        {text}\n      </CountedListItemText>\n\n      {!countInfoIrrelevant && showFutureCount && (\n        <CountedListItemFutureCount>{futureCount}</CountedListItemFutureCount>\n      )}\n\n      {!countInfoIrrelevant && showPastCount && (\n        <CountedListItemPastCount>{pastCount}</CountedListItemPastCount>\n      )}\n    </FlexLiGrow>\n  );\n};\n","import styled, { css } from \"styled-components\";\n\nimport { Ul } from \"primitives\";\n\ninterface IPageSectionList extends IThemeProp {\n  isCardList?: boolean;\n  isVinylCards?: boolean;\n}\n\nexport const PageSectionList = styled(Ul)`\n  ${({\n    isCardList,\n    theme: {\n      countedList,\n      eventCardList,\n      section: { padding }\n    }\n  }: IPageSectionList) => css`\n    padding-bottom: ${padding.bottom};\n\n    > * {\n      border-bottom: ${countedList.border.bottom};\n      padding: ${isCardList\n        ? `${eventCardList.padding.vertical} 0`\n        : `${countedList.padding.vertical} 0`};\n    }\n\n    > *:last-child {\n      ${isCardList &&\n      `padding-bottom: ${eventCardList.finalEventCardPaddingBottom};`}\n      border-bottom: 0;\n    }\n\n    ${isCardList &&\n    css`\n      > *:first-child {\n        padding-top: 0;\n      }\n    `}\n  `}\n`;\n","import React from \"react\";\n\nimport { CountedItem } from \"../CountedItem\";\nimport { PageSectionList } from \"../PageSectionList\";\n\ninterface ICountedList {\n  countedItems: Array<ICountedItem>;\n}\n\nexport const CountedList: React.FC<ICountedList> = ({ countedItems }) => (\n  <PageSectionList>\n    {countedItems.map((countedListItem: ICountedItem, index: number) => (\n      <CountedItem key={index} {...countedListItem} />\n    ))}\n  </PageSectionList>\n);\n","import styled, { css } from \"styled-components\";\n\nimport { IBodyHeight } from \"./\";\n\ninterface PanelContainerProps extends IThemeProp {\n  bodyHeight: IBodyHeight;\n}\nexport const PanelContainer = styled.div`\n  &.initial-state {\n    max-height: unset;\n  }\n\n  ${({\n    theme: {\n      section: { transition }\n    }\n  }: PanelContainerProps) =>\n    css`\n      transition: ${transition};\n    `}\n\n  overflow: hidden;\n  max-height: 0;\n\n  &.panel-visible {\n    max-height: ${(props: PanelContainerProps) => props.bodyHeight}px;\n  }\n`;\n\ninterface ClickableRegionProps {\n  initiallyExpanded?: boolean;\n}\nexport const ClickableRegion = styled.div`\n  ${(props: ClickableRegionProps) =>\n    !props.initiallyExpanded &&\n    css`\n      cursor: pointer;\n    `}\n`;\n","import React from \"react\";\n\nimport { PanelContainer, ClickableRegion } from \"./styles\";\n\nexport type IBodyHeight = number | null;\n\ninterface DisclosureProps {\n  initiallyExpanded?: boolean;\n  isStatic?: boolean;\n  headerComponent: React.ReactNode;\n  children: React.ReactNode;\n}\n\nexport const Disclosure: React.FC<DisclosureProps> = ({\n  initiallyExpanded = false,\n  headerComponent,\n  isStatic = false,\n  children\n}) => {\n  const [panelIsVisible, switchPanelVisibility] = React.useState<boolean>(\n    !!(initiallyExpanded || isStatic)\n  );\n  const [panelContainerHeight, setPanelContainerHeight] = React.useState<\n    IBodyHeight\n  >(null);\n\n  const refCallback = (element: HTMLDivElement): void => {\n    if (element && !panelContainerHeight)\n      setPanelContainerHeight(element.getBoundingClientRect().height);\n  };\n\n  const getPanelContainerClass = (\n    bodyHeight: number | null,\n    panelIsVisible: boolean\n  ): string =>\n    !bodyHeight\n      ? \"initial-state\"\n      : panelIsVisible\n      ? \"panel-visible\"\n      : \"panel-invisible\";\n\n  const panel = (\n    <PanelContainer\n      data-test=\"disclosure-panel\"\n      className={getPanelContainerClass(panelContainerHeight, panelIsVisible)}\n      bodyHeight={panelContainerHeight}\n      ref={refCallback}\n    >\n      {children}\n    </PanelContainer>\n  );\n\n  return isStatic ? (\n    <>\n      {headerComponent}\n      {children}\n    </>\n  ) : (\n    <ClickableRegion\n      data-test=\"disclosure-container\"\n      onClick={() => switchPanelVisibility(!panelIsVisible)}\n    >\n      {headerComponent}\n      {panel}\n    </ClickableRegion>\n  );\n};\n","import styled, { css } from \"styled-components\";\n\nimport { H3 } from \"primitives\";\n\ninterface ICardTitleBold {\n  favourite?: boolean;\n}\n\nexport const CardTitleBold = styled(H3)`\n  ${({ favourite }: ICardTitleBold) =>\n    favourite &&\n    css`\n      ::before {\n        content: \"♥ \";\n      }\n    `}\n\n  font-weight: bold;\n  text-transform: uppercase;\n`;\n\nexport const CardSubtitleBold = styled.div`\n  font-weight: bold;\n  text-transform: uppercase;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FlexColumn, FlexRow, SeventyFivePercentSpan } from \"primitives\";\nimport { datesArrayToString } from \"utils\";\n\nimport { CardTitleBold, CardSubtitleBold } from \"../styles\";\nimport { getCountdownText, daysToGo } from \"./utils\";\n\nconst ItalicBoldFlexRow = styled(FlexRow)`\n  font-style: italic;\n\n  > *:not(:first-child) {\n    margin-top: 3px;\n    margin-left: 5px;\n  }\n`;\n\nconst verticalSpaceBetweenEventCardRows: PxValue = \"3px\";\nconst StyledFlexColumn = styled(FlexColumn)`\n  > *:not(:first-child) {\n    padding-top: ${verticalSpaceBetweenEventCardRows};\n  }\n`;\n\nexport const EventCard: React.FC<IEventCard> = ({\n  title,\n  subtitle,\n  favourite,\n  body,\n  dates,\n  disclaimer\n}) => {\n  const daysTilGig: number = daysToGo(dates);\n\n  return (\n    <StyledFlexColumn data-test=\"event-card-container\">\n      <div data-test=\"event-card-title-and-subtitle\">\n        <CardTitleBold data-test=\"event-card-title\" favourite={favourite}>\n          {title}\n        </CardTitleBold>\n\n        {subtitle && (\n          <CardSubtitleBold data-test=\"event-card-subtitle\">\n            {subtitle}\n          </CardSubtitleBold>\n        )}\n      </div>\n\n      {body && <span data-test=\"event-card-body\">{body}</span>}\n\n      <SeventyFivePercentSpan data-test=\"event-card-date\">\n        {datesArrayToString(dates)}\n      </SeventyFivePercentSpan>\n\n      {daysTilGig >= 0 && (\n        <ItalicBoldFlexRow>\n          <strong>{getCountdownText(daysTilGig)}</strong>\n\n          {disclaimer && (\n            <SeventyFivePercentSpan>({disclaimer})</SeventyFivePercentSpan>\n          )}\n        </ItalicBoldFlexRow>\n      )}\n    </StyledFlexColumn>\n  );\n};\n","export const getCountdownText = (daysToGo: number): string => {\n  if (daysToGo === 0) return \"TODAY\";\n  if (daysToGo === 1) return daysToGo + \" DAY TO GO\";\n  return daysToGo + \" DAYS TO GO\";\n};\n\nexport const daysToGo = (dates: Array<Date>): number => {\n  const secondsInADay: number = 24 * 60 * 60;\n  const dateDifference: number = dates[0].valueOf() - new Date().valueOf();\n\n  return Math.ceil(dateDifference / (secondsInADay * 1000));\n};\n","import { DAYS_OF_THE_WEEK, MONTHS } from \"@constants\";\n\nexport const datesArrayToString = (dates: Array<Date>): string => {\n  const stringifyDate = (date: Date): string => {\n    const weekday: number = date.getDay();\n    const day: number = date.getDate();\n    const month: number = date.getMonth();\n    const year: number = date.getFullYear();\n\n    return `${DAYS_OF_THE_WEEK[weekday]} ${day} ${MONTHS[month]} ${year}`;\n  };\n\n  return dates.length > 1\n    ? `${stringifyDate(dates[0])} to ${stringifyDate(dates[1])}`\n    : stringifyDate(dates[0]);\n};\n","import React from \"react\";\n\nimport { arrayToString, moveTheSuffixToPrefix } from \"utils\";\n\nimport { EventCard } from \"../EventCard\";\n\nexport const GigCard: React.FC<IGigCard> = ({\n  headline,\n  festival,\n  support,\n  lineup,\n  venue,\n  favourite,\n  company,\n  ticketType,\n  dates\n}) => {\n  const title: string = headline\n    ? moveTheSuffixToPrefix(headline.name)\n    : festival\n    ? festival.name\n    : \"GIG CARD TITLE MISSING\";\n\n  const subtitle: string | undefined = support\n    ? arrayToString({\n        stringArray: support.map(({ name }: IMusician): string =>\n          moveTheSuffixToPrefix(name)\n        )\n      })\n    : lineup &&\n      arrayToString({\n        stringArray: lineup.map(({ name }: IMusician): string =>\n          moveTheSuffixToPrefix(name)\n        )\n      });\n\n  const body: string = venue.name;\n\n  return (\n    <EventCard\n      title={title}\n      subtitle={subtitle}\n      body={body}\n      favourite={favourite}\n      company={company}\n      dates={dates}\n      disclaimer={ticketType}\n    />\n  );\n};\n","import React from \"react\";\n\nimport { Li } from \"primitives\";\n\nimport { GigCard } from \"../GigCard\";\nimport { PageSectionList } from \"../PageSectionList\";\n\ninterface IGigCards {\n  gigCards: Array<IGigCard>;\n}\n\nexport const GigCardList: React.FC<IGigCards> = ({ gigCards }) => (\n  <PageSectionList isCardList>\n    {gigCards.map((gigCard: IGigCard, index: number) => (\n      <Li key={index}>\n        <GigCard {...gigCard} />\n      </Li>\n    ))}\n  </PageSectionList>\n);\n","import styled, { css } from \"styled-components\";\n\nimport { SquareImage, FlexRow, H2 } from \"primitives\";\n\nexport const PageSectionTitle = styled(H2)`\n  text-transform: lowercase;\n`;\n\nexport const PageSectionContainer = styled.section`\n  ${({\n    theme: {\n      section: { background, boxShadow, borderRadius, padding, margin }\n    }\n  }) => css`\n    background: ${background};\n    box-shadow: ${boxShadow};\n    border-radius: ${borderRadius};\n    padding: 0 ${padding.horizontal};\n    margin-bottom: ${margin.bottom};\n  `}\n`;\n\nexport const PageSectionHeaderContainer = styled(FlexRow)`\n  padding: ${({\n    theme: {\n      section: { header }\n    }\n  }: IThemeProp) => header.padding};\n`;\n\nexport const PageSectionCount = styled.span`\n  margin-left: ${({\n    theme: {\n      section: {\n        count: { margin }\n      }\n    }\n  }: IThemeProp) => margin.left};\n`;\n\nexport const PageSectionStarredCount = styled(PageSectionCount)`\n  opacity: ${({ theme: { fadedOpacity } }: IThemeProp) => fadedOpacity};\n`;\n\nexport const PageSectionHeaderIcon = styled(SquareImage)`\n  padding-top: ${({\n    theme: {\n      section: {\n        icon: { padding }\n      }\n    }\n  }: IThemeProp) => padding.top};\n`;\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"styled-components\";\n\nimport { FlexRowGrow } from \"primitives\";\n\nimport {\n  PageSectionHeaderContainer,\n  PageSectionHeaderIcon,\n  PageSectionTitle,\n  PageSectionCount,\n  PageSectionStarredCount\n} from \"./styles\";\n\ntype PageSectionHeaderProps = {\n  text: string;\n  icon?: IImageSrc;\n  count?: number;\n  starredCount?: number;\n  dataTest: string;\n};\n\nexport const PageSectionHeader: React.FC<PageSectionHeaderProps> = ({\n  text,\n  icon,\n  count,\n  starredCount,\n  dataTest\n}) => {\n  const theme: ITheme = useContext(ThemeContext);\n\n  return (\n    <PageSectionHeaderContainer data-test={dataTest}>\n      <FlexRowGrow data-test=\"section-header-title-and-counts\">\n        <PageSectionTitle data-test=\"section-header-title\">\n          {text}\n        </PageSectionTitle>\n\n        {count && count > 1 && (\n          <PageSectionCount data-test=\"section-header-count\">\n            {count}\n          </PageSectionCount>\n        )}\n\n        {starredCount && starredCount > 0 && (\n          <PageSectionStarredCount data-test=\"section-header-starred-count\">\n            {starredCount}\n          </PageSectionStarredCount>\n        )}\n      </FlexRowGrow>\n\n      {icon && (\n        <PageSectionHeaderIcon\n          data-test=\"section-header-icon\"\n          imgSrc={icon}\n          size={theme.section.icon.size}\n        />\n      )}\n    </PageSectionHeaderContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nimport { FlexRow } from \"primitives\";\n\nexport const CentredOnPhone = styled(FlexRow)`\n  @media (max-width: ${props => props.theme.breakpoints.phone.maxWidth}) {\n    justify-content: center;\n    text-align: center;\n  }\n`;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { Ul, Li } from \"primitives\";\n\ninterface StyledLiProps extends IThemeProp {\n  addPaddingTop: boolean;\n}\n\nconst StyledLi = styled(Li)`\n  ${({\n    addPaddingTop,\n    theme: { listItemGroupVerticalSpacing }\n  }: StyledLiProps) =>\n    addPaddingTop &&\n    css`\n      padding-top: ${listItemGroupVerticalSpacing};\n    `}\n`;\n\ninterface ListProps {\n  title: string;\n  listItems: Array<IListItemWithPaddingTopFlag>;\n  showBullets?: boolean;\n}\n\nexport const List: React.FC<ListProps> = ({\n  title,\n  listItems,\n  showBullets = false\n}) => (\n  <Ul showBullets={showBullets}>\n    <strong>{title}</strong>\n\n    {listItems.map(\n      (\n        { text, addPaddingTop = false }: IListItemWithPaddingTopFlag,\n        index: number\n      ) => (\n        <StyledLi key={index} addPaddingTop={addPaddingTop}>\n          <span>{text}</span>\n        </StyledLi>\n      )\n    )}\n  </Ul>\n);\n","import { generateIngredientListItem } from \"utils\";\n\nexport const mapMethodToListItems = (\n  method: IRecipeMethod\n): Array<IListItemWithPaddingTopFlag> =>\n  method.map(\n    (item: string): IListItemWithPaddingTopFlag => ({\n      text: item,\n      addPaddingTop: false\n    })\n  );\n\nexport const mapServeWithToListItems = (\n  serveWith: Array<Array<IRecipeIngredient>>\n): Array<IListItemWithPaddingTopFlag> => {\n  const getServeWithListItem = (\n    lineOptions: Array<IRecipeIngredient>\n  ): string => {\n    let output: string = \"\";\n\n    lineOptions.forEach(\n      ({ ingredient: { displayText } }: IRecipeIngredient, index: number) =>\n        (output +=\n          index === 0\n            ? displayText\n            : index === lineOptions.length - 1\n            ? ` or ${displayText}`\n            : `, ${displayText}`)\n    );\n\n    return output;\n  };\n\n  return serveWith.map(\n    (lineOptions: Array<IRecipeIngredient>): IListItemWithPaddingTopFlag => ({\n      text: getServeWithListItem(lineOptions),\n      addPaddingTop: false\n    })\n  );\n};\n\nexport const mapRecipeIngredientsToListItems = (\n  ingredientsGroups: Array<Array<IRecipeIngredient>>\n): Array<IListItemWithPaddingTopFlag> => {\n  let ingredientsWithPaddingFlags: Array<IListItemWithPaddingTopFlag> = [];\n\n  ingredientsGroups.forEach(\n    (ingredientsGroup: Array<IRecipeIngredient>, INDEX_HIGH: number) => {\n      ingredientsGroup.forEach(\n        (ingredient: IRecipeIngredient, INDEX_LOW: number) => {\n          ingredientsWithPaddingFlags.push({\n            text: generateIngredientListItem(ingredient),\n            addPaddingTop: INDEX_HIGH !== 0 && INDEX_LOW === 0\n          });\n        }\n      );\n    }\n  );\n\n  return ingredientsWithPaddingFlags;\n};\n","import styled, { css } from \"styled-components\";\n\nimport { H3, FlexColumn } from \"primitives\";\n\ninterface IRecipeCardTitle {\n  favourite?: boolean;\n}\nexport const RecipeCardTitle = styled(H3)`\n  font-weight: 300;\n  flex: 1;\n\n  ${(props: IRecipeCardTitle) =>\n    props.favourite &&\n    css`\n      ::before {\n        content: \"♥ \";\n      }\n    `}\n`;\n\nexport const RecipeBody = styled.div`\n  padding-top: 5px;\n\n  > * {\n    padding: 10px 0 5px;\n  }\n`;\n\nexport const PaddedFlexColumn = styled(FlexColumn)`\n  > *:not(:first-child) {\n    padding-top: 4px;\n  }\n`;\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"styled-components\";\n\nimport { MEASUREMENTS, NO_UNIT_COST_FOR_RECIPE_EXISTS } from \"@constants\";\nimport {\n  Circle,\n  FlexRow,\n  SeventyFivePercentSpan,\n  SquareImage\n} from \"primitives\";\nimport { calculateRecipeCost, getIngredientsHeader } from \"utils\";\n\nimport { CentredOnPhone } from \"../CentredOnPhone\";\nimport { Disclosure } from \"../Disclosure\";\nimport { List } from \"../List\";\n\nimport {\n  mapMethodToListItems,\n  mapServeWithToListItems,\n  mapRecipeIngredientsToListItems\n} from \"./factory\";\nimport { RecipeCardTitle, RecipeBody, PaddedFlexColumn } from \"./styles\";\n\nexport const RecipeCard: React.FC<IRecipeCard> = ({\n  title,\n  makes,\n  ingredients,\n  method,\n  favourite,\n  serveWith,\n  newRecipe,\n  diet,\n  image\n}) => {\n  const theme: ITheme = useContext(ThemeContext);\n\n  const { costDisplayText, unitCostDisplayText } = calculateRecipeCost({\n    ingredients,\n    yieldQuantity: makes && makes.quantity,\n    recipeTitle: title\n  });\n\n  const defaultIngredientsHeader: string = \"ingredients\";\n  const ingredientsHeader: string = makes\n    ? getIngredientsHeader({ makes, defaultIngredientsHeader })\n    : defaultIngredientsHeader;\n\n  return (\n    <Disclosure\n      initiallyExpanded={newRecipe}\n      headerComponent={\n        <FlexRow>\n          <RecipeCardTitle favourite={favourite}>{title}</RecipeCardTitle>\n\n          <Circle fontSize=\"13.5px\" size=\"27px\" invert color={diet.color}>\n            {diet.abbreviation}\n          </Circle>\n        </FlexRow>\n      }\n    >\n      <RecipeBody>\n        <List\n          title={ingredientsHeader}\n          listItems={mapRecipeIngredientsToListItems(ingredients)}\n        />\n\n        {serveWith && (\n          <List\n            title=\"serve with\"\n            listItems={mapServeWithToListItems(serveWith)}\n          />\n        )}\n\n        {method && (\n          <List\n            title=\"method\"\n            listItems={mapMethodToListItems(method)}\n            showBullets\n          />\n        )}\n\n        {image && (\n          <CentredOnPhone>\n            <SquareImage imgSrc={image} size={theme.recipe.image.size} />\n          </CentredOnPhone>\n        )}\n\n        <CentredOnPhone>\n          <PaddedFlexColumn>\n            <span>\n              approx. <strong>{costDisplayText}</strong> to make\n            </span>\n\n            {unitCostDisplayText !== NO_UNIT_COST_FOR_RECIPE_EXISTS &&\n              makes &&\n              makes.measurement &&\n              makes.quantity > 1 &&\n              makes.measurement !== MEASUREMENTS.GRAM && (\n                <SeventyFivePercentSpan>\n                  <strong>{unitCostDisplayText}</strong> per {makes.measurement}\n                </SeventyFivePercentSpan>\n              )}\n          </PaddedFlexColumn>\n        </CentredOnPhone>\n      </RecipeBody>\n    </Disclosure>\n  );\n};\n","import { MEASUREMENTS } from \"@constants\";\n\nimport { concatenateQuantityAndMeasurement } from \"./concatenateQuantityAndMeasurement\";\n\ninterface IGetIngredientsHeader {\n  defaultIngredientsHeader: string;\n  makes: IRecipeMakes;\n}\n\nexport const getIngredientsHeader = ({\n  makes,\n  defaultIngredientsHeader\n}: IGetIngredientsHeader): string => {\n  const { quantity, measurement } = makes;\n\n  const quantitySpaceMeasurement: string =\n    quantity.toString() + \" \" + measurement;\n\n  const quantityAndMeasurement: string =\n    measurement === MEASUREMENTS.GRAM || measurement === MEASUREMENTS.MILLILITRE\n      ? concatenateQuantityAndMeasurement(quantity.toString(), measurement)\n      : quantity === 1\n      ? quantitySpaceMeasurement\n      : quantitySpaceMeasurement + \"s\";\n\n  return `${defaultIngredientsHeader} (makes ${quantityAndMeasurement})`;\n};\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport { Ul, Li } from \"primitives\";\n\nimport { RecipeCard } from \"../RecipeCard\";\n\nconst RecipeGroupList = styled(Ul)`\n  ${({\n    theme: {\n      recipe: { border, title, first, last }\n    }\n  }: IThemeProp) => css`\n    > * {\n      border-bottom: ${border.bottom};\n      padding: ${title.padding.vertical} 0;\n    }\n\n    > *:first-child {\n      padding-top: ${first.padding.top};\n    }\n\n    > *:last-child {\n      border-bottom: 0;\n      padding-bottom: ${last.padding.bottom};\n    }\n  `}\n`;\n\ninterface IRecipeCards {\n  recipeCards: Array<IRecipeCard>;\n}\n\nexport const RecipeCardList: React.FC<IRecipeCards> = ({ recipeCards }) => (\n  <RecipeGroupList>\n    {recipeCards.map(\n      (recipeCard: IRecipeCard, index: number) =>\n        !recipeCard.hide && (\n          <Li key={index}>\n            <RecipeCard key={index} {...recipeCard} />\n          </Li>\n        )\n    )}\n  </RecipeGroupList>\n);\n","import React from \"react\";\n\nimport { arrayToString, moveTheSuffixToPrefix } from \"utils\";\n\nimport { EventCard } from \"../EventCard\";\n\nexport const TheatreCard: React.FC<ITheatreCard> = ({\n  play,\n  cast,\n  favourite,\n  company,\n  theatre,\n  dates\n}) => {\n  const title: string = moveTheSuffixToPrefix(play.name);\n\n  const subtitle: string | undefined =\n    cast &&\n    arrayToString({\n      stringArray: cast.map(({ name }: IActor): string =>\n        moveTheSuffixToPrefix(name)\n      )\n    });\n\n  const body: string = theatre.name;\n\n  return (\n    <EventCard\n      title={title}\n      subtitle={subtitle}\n      body={body}\n      favourite={favourite}\n      company={company}\n      dates={dates}\n    />\n  );\n};\n","import React from \"react\";\n\nimport { Li } from \"primitives\";\n\nimport { TheatreCard } from \"../TheatreCard\";\nimport { PageSectionList } from \"../PageSectionList\";\n\ninterface ITheatreCards {\n  theatreCards: Array<ITheatreCard>;\n}\n\nexport const TheatreCardList: React.FC<ITheatreCards> = ({ theatreCards }) => (\n  <PageSectionList isCardList>\n    {theatreCards.map((theatreCard: ITheatreCard, index: number) => (\n      <Li key={index}>\n        <TheatreCard {...theatreCard} />\n      </Li>\n    ))}\n  </PageSectionList>\n);\n","import React from \"react\";\n\nimport { arrayToString } from \"utils\";\n\nimport { EventCard } from \"../EventCard\";\n\nexport const TravelCard: React.FC<ITravelCard> = ({\n  title,\n  subtitle,\n  favourite,\n  company,\n  dates\n}) => {\n  const TITLE: string = arrayToString({\n    stringArray: title.map(({ name }: ILocation) => name),\n    useAmpersandsForPair: true\n  });\n\n  const SUBTITLE: string | undefined =\n    subtitle &&\n    arrayToString({\n      stringArray: subtitle.map(({ name }: ILocation) => name)\n    });\n\n  return (\n    <EventCard\n      title={TITLE}\n      subtitle={SUBTITLE}\n      favourite={favourite}\n      company={company}\n      dates={dates}\n    />\n  );\n};\n","import React from \"react\";\n\nimport { Li } from \"primitives\";\n\nimport { TravelCard } from \"../TravelCard\";\nimport { PageSectionList } from \"../PageSectionList\";\n\ninterface ITravelCards {\n  travelCards: Array<ITravelCard>;\n}\n\nexport const TravelCardList: React.FC<ITravelCards> = ({ travelCards }) => (\n  <PageSectionList isCardList>\n    {travelCards.map((travelCard: ITravelCard, index: number) => (\n      <Li key={index}>\n        <TravelCard {...travelCard} />\n      </Li>\n    ))}\n  </PageSectionList>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FlexRow, SquareImage } from \"primitives\";\nimport { moveTheSuffixToPrefix } from \"utils\";\n\nimport { CardTitleBold, CardSubtitleBold } from \"../styles\";\n\n//TODO: move to theme\nconst VinylArtwork = styled(SquareImage)`\n  margin-right: 15px;\n`;\n\nconst TextContainer = styled.div`\n  flex: 1;\n\n  > *:not(:last-child) {\n    padding-bottom: 5px;\n  }\n`;\n\nexport const VinylCard: React.FC<IVinylCard> = ({\n  artist: { name },\n  title,\n  year,\n  artwork\n}) => {\n  const artist: string = moveTheSuffixToPrefix(name);\n\n  return (\n    <FlexRow data-test=\"vinyl-card\">\n      <VinylArtwork size=\"100px\" imgSrc={artwork} />\n\n      <TextContainer>\n        <CardTitleBold>{title}</CardTitleBold>\n        <CardSubtitleBold>{artist}</CardSubtitleBold>\n\n        <div>{year}</div>\n      </TextContainer>\n    </FlexRow>\n  );\n};\n","import React from \"react\";\n\nimport { Li } from \"primitives\";\n\nimport { PageSectionList } from \"../PageSectionList\";\nimport { VinylCard } from \"../VinylCard\";\n\ninterface IVinylCards {\n  vinylCards: Array<IVinylCard>;\n}\n\nexport const VinylCardList: React.FC<IVinylCards> = ({ vinylCards }) => (\n  <PageSectionList isCardList>\n    {vinylCards.map((vinyl: IVinylCard, index: number) => (\n      <Li key={index}>\n        <VinylCard {...vinyl} />\n      </Li>\n    ))}\n  </PageSectionList>\n);\n","import styled, { css } from \"styled-components\";\n\nexport const PageSectionContainer = styled.section`\n  ${({\n    theme: {\n      section: { background, boxShadow, borderRadius, padding, margin }\n    }\n  }) => css`\n    background: ${background};\n    box-shadow: ${boxShadow};\n    border-radius: ${borderRadius};\n    padding: 0 ${padding.horizontal};\n    margin-bottom: ${margin.bottom};\n  `}\n`;\n","import React from \"react\";\n\nimport { CountedList } from \"../CountedList\";\nimport { Disclosure } from \"../Disclosure\";\nimport { GigCardList } from \"../GigCardList\";\nimport { PageSectionHeader } from \"../PageSectionHeader\";\nimport { RecipeCardList } from \"../RecipeCardList\";\nimport { TheatreCardList } from \"../TheatreCardList\";\nimport { TravelCardList } from \"../TravelCardList\";\nimport { VinylCardList } from \"../VinylCardList\";\n\nimport { PageSectionContainer } from \"./styles\";\n\nexport const PageSection: React.FC<IPageSection> = ({\n  title,\n  icon,\n  data: {\n    countedItems,\n    gigCards,\n    recipeCards,\n    theatreCards,\n    travelCards,\n    vinylCards\n  },\n  count,\n  starredCount,\n  isStatic = false,\n  initiallyExpanded = false\n}) => {\n  const noData: boolean =\n    !!(countedItems && countedItems.length === 0) ||\n    !!(gigCards && gigCards.length === 0) ||\n    !!(recipeCards && recipeCards.filter(item => !item.hide).length === 0) ||\n    !!(theatreCards && theatreCards.length === 0) ||\n    !!(travelCards && travelCards.length === 0) ||\n    !!(vinylCards && vinylCards.length === 0);\n\n  if (noData) return null;\n\n  return (\n    <PageSectionContainer>\n      <Disclosure\n        isStatic={isStatic}\n        initiallyExpanded={initiallyExpanded}\n        headerComponent={\n          <PageSectionHeader\n            text={title}\n            count={count}\n            starredCount={starredCount}\n            icon={icon}\n            dataTest=\"disclosure-header\"\n          />\n        }\n      >\n        <section data-test=\"page-section-body\">\n          {countedItems && <CountedList countedItems={countedItems} />}\n          {gigCards && <GigCardList gigCards={gigCards} />}\n          {recipeCards && <RecipeCardList recipeCards={recipeCards} />}\n          {theatreCards && <TheatreCardList theatreCards={theatreCards} />}\n          {travelCards && <TravelCardList travelCards={travelCards} />}\n          {vinylCards && <VinylCardList vinylCards={vinylCards} />}\n        </section>\n      </Disclosure>\n    </PageSectionContainer>\n  );\n};\n","import React from \"react\";\nimport styled, { ThemeContext } from \"styled-components\";\n\nimport { FlexRow, H1, SquareImage, Link } from \"primitives\";\n\nconst TitleTextContainer = styled.div`\n  display: flex;\n  flex: 1;\n  text-transform: lowercase;\n  margin-bottom: ${props => props.theme.page.header.margin.bottom};\n`;\n\nconst PageTitlePrimaryCount = styled.span`\n  padding: ${props => props.theme.page.count.padding};\n`;\n\nconst PageTitleSecondaryCount = styled(PageTitlePrimaryCount)`\n  opacity: ${props => props.theme.fadedOpacity};\n`;\n\nconst PaddedFlexRow = styled(FlexRow)`\n  padding-bottom: ${props => props.theme.pageTitleMarginBottom};\n`;\n\nconst SvgContainer = styled.div`\n  margin-top: ${props => props.theme.page.icon.margin.top};\n`;\n\ninterface PageTitleProps {\n  titleText: string;\n  pastCount?: number;\n  futureCount?: number;\n  icon: IImageSrc;\n}\n\nexport const PageTitle: React.FC<PageTitleProps> = ({\n  titleText,\n  pastCount,\n  futureCount,\n  icon\n}) => {\n  const theme: ITheme = React.useContext(ThemeContext);\n\n  return (\n    <PaddedFlexRow data-test=\"page-title-container\">\n      <TitleTextContainer data-test=\"page-title-text-container\">\n        <H1 data-test=\"page-title-text\">{titleText}</H1>\n\n        {!!pastCount && pastCount > 0 && (\n          <PageTitlePrimaryCount data-test=\"page-title-past-count\">\n            {pastCount}\n          </PageTitlePrimaryCount>\n        )}\n        {!!futureCount && futureCount > 0 && (\n          <PageTitleSecondaryCount data-test=\"page-title-future-count\">\n            {futureCount}\n          </PageTitleSecondaryCount>\n        )}\n      </TitleTextContainer>\n\n      <Link data-test=\"page-title-icon-link\" to=\"/\">\n        <SvgContainer>\n          <SquareImage\n            data-test=\"page-title-icon\"\n            imgSrc={icon}\n            size={theme.page.icon.size}\n          />\n        </SvgContainer>\n      </Link>\n    </PaddedFlexRow>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { PageTitle } from \"../PageTitle\";\n\nconst StyledPageShell = styled.section`\n  padding: ${props => props.theme.page.shell.padding};\n`;\n\ninterface PageShellProps {\n  title: string;\n  icon: IImageSrc;\n  page: IPage;\n  children: React.ReactNode;\n}\n\nexport const PageShell: React.FC<PageShellProps> = ({\n  title,\n  icon,\n  page,\n  children\n}) => {\n  const { pastCount, futureCount } = page;\n\n  return (\n    <StyledPageShell data-test=\"page-shell\">\n      <PageTitle\n        titleText={title}\n        pastCount={pastCount}\n        futureCount={futureCount}\n        icon={icon}\n      />\n\n      {children}\n    </StyledPageShell>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport styled, { css } from \"styled-components\";\n\nimport { HomePage, PageShell, PageSection } from \"components\";\nimport {\n  HOMEPAGE_ROUTE,\n  PAGE_ROUTES,\n  DISPLAY_PAGE_SECTION_IN_2_COLUMNS_ON_DESKTOP\n} from \"config\";\nimport { Ul, Li } from \"primitives\";\nimport { replaceSpacesWithDashes } from \"utils\";\n\ninterface IUse2Columns extends IThemeProp {\n  use2columns: boolean;\n}\n\nconst StyledUl = styled(Ul)`\n  ${({ use2columns, theme }: IUse2Columns) =>\n    use2columns &&\n    css`\n      @media (min-width: ${theme.breakpoints.tablet.minWidth}) {\n        column-count: 2;\n      }\n    `}\n`;\n\nconst StyledLi = styled(Li)`\n  ${({ use2columns }: IUse2Columns) =>\n    use2columns &&\n    css`\n      display: inline-block;\n      width: 100%;\n    `}\n`;\n\nexport const App: React.FC = () => {\n  const use2columns: boolean = DISPLAY_PAGE_SECTION_IN_2_COLUMNS_ON_DESKTOP;\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        {PAGE_ROUTES.map(\n          ({ icon, title, dest, page }: IRoute, index: number) => (\n            <Route key={index} path={dest}>\n              <PageShell title={title} icon={icon} page={page}>\n                <StyledUl use2columns={use2columns} data-test=\"page-sections\">\n                  {page.sections.map(\n                    (pageSection: IPageSection, index: number) => {\n                      const dataTest: string =\n                        \"section-\" + replaceSpacesWithDashes(pageSection.title);\n                      return (\n                        <StyledLi\n                          use2columns={use2columns}\n                          key={index}\n                          data-test={dataTest}\n                        >\n                          <PageSection {...pageSection} />\n                        </StyledLi>\n                      );\n                    }\n                  )}\n                </StyledUl>\n              </PageShell>\n            </Route>\n          )\n        )}\n\n        <Route path={HOMEPAGE_ROUTE.dest}>\n          <HomePage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n","export const replaceSpacesWithDashes = (stringWithSpaces: string): string =>\n  stringWithSpaces.replace(/\\s+/g, \"-\").toLowerCase();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport { App } from \"app\";\nimport { THEME, GlobalStyle } from \"styles\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={THEME}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}